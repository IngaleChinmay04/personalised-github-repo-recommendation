name,full_name,stars,languages,topics,readme,issues
Firefox-Mod-Blur,datguypiko/Firefox-Mod-Blur,1053,['CSS'],"['css', 'userchrome', 'firefox', 'theme', 'firefox-theme']","Firefox Mod Blur - Modular :wrench: Version 3.0 - Working on functionality overhaul. Responsive oneliner, toggling extra mods through about:config and other adjustments.(some time in the future, when I have time to finish it) ## macOS style buttons ## Light and Dark theme support ## Updated context menu design ## Clean compact search with hidden buttons ## Show if pinned on hover ## More compact and responsive homepage ## Wallpaper style themes style_1-wallpaper-edition.css style_2-wallpaper-edition.css style_3-wallpaper-edition.css Select and add extra styles and functions Min-max-close buttons style :gear: Select one min-max-close_buttons.css Left side MacOS style Right side MacOS style Right side OS Left side OS Theme default Bookmarks bar modifications :gear: popout_bookmarks_bar_on_hover.css remove_folder_icons_from_bookmarks.css bookmarks_bar_same_color_as_toolbar.css transparent_bookmarks_bar.css Search bar modifications :gear: no_search_engines_in_url_bar.css Privacy mods :gear: privacy_blur_email_in_main_menu.css privacy_blur_email_in_sync_menu.css privacy_blur_tabs_content.css privacy_change_email_text.css Extension menu changes :gear: Style 1 - cleaner_extensions_menu.css Style 2 - cleaner_extensions_menu.css Icon changes :gear: firefox_view_icon_change.css white_github_icon_in_bookmarks.css ublock-icon-change.css Active tab has static width :gear: selected_tabs_static_width.css Colored sound playing tab :gear: colored_soundplaying_tab.css Hide List all tabs button :gear: hide_list-all-tabs_button.css [Shows when tabs overflow] Restore icons in main menu :gear: icons_in_main_menu.css (source) Remove title text from homepage shortcuts :gear: remove_homepage_shortcut_title_text.css Circular homepage shortcuts :gear: circular_homepage_shortcuts.css Spill style theme :hammer: spill-style-part1-file.css and spill-style-part2-file.css Acrylic MicaForEveryone :hammer: acrylic_micaforeveryone.css ###### and [more]( :wrench: Installation > [!IMPORTANT] > ##### 1. In `about:config` set `toolkit.legacyUserProfileCustomizations.stylesheets` to ""True"" for your custom themes to work. > ##### 2. Download latest or your preferred firefox version [.zip file]( > ##### 3. You can find your profile folder by writing `about:support` in URL bar and using `Open folder` in `Profile folder` section. > ##### 4. Put `userChrome.css`, `userContent.css`, `ASSETS` in chrome folder (create `chrome` folder inside your main profile folder if it doesnt exist). > ##### 5. Put any selected extra `.css` modification files (not folders) from `EXTRA MODS` to inside of your `chrome` folder. > ##### 6. File Structure (required files/folders marked with *): > > :open_file_folder: `...` `/` `your profile` `/` `chrome` `/` `userChrome.css *` > > :open_file_folder: `...` `/` `your profile` `/` `chrome` `/` `userContent.css *` > > :open_file_folder: `...` `/` `your profile` `/` `chrome` `/` `ASSETS *` `/` > > :open_file_folder: `...` `/` `your profile` `/` `chrome` `/` `[extra modification file].css` > [!TIP] > How to Toggle between Light and Dark theme: > There are two settings to change in firefox (pictures below). > > - Setting both to auto makes it adapt to your operating system theme. > - Setting Theme(2) to Light or Dark will force it no matter of Operating System colors. > - Best to leave Website Appearance(1) settings set to auto and just Change to preferred Theme(2). > > 1. Website appearance (changes new tab and websites colors) > > 2. Theme (changes toolbar and browser text colors, also sets text colors to new tab page). > > > I use firefox integrated Flexible space for spacing: > > > :wrench: Easy Installation Script by Alan-Kuan Download Installation Instructions :wrench: MicaForEveryone Installation > [!Warning] > ##### DEPRECATED WITH FIREFOX v117 and up > ##### To continue using MicaForEveryone you can use Firefox v115 ESR - Extended Support Release version which will be supported and have security updates for at least a year. You can install ESR version to separate folder so you are able continue using both versions. I haven't tested that version so there could be some minor issues. I recommend using my older version files. [Maybe something like v115.x - v117.x should work fine.]( 1. Download the portable or installation file from [github.com/MicaForEveryone]( 2. Install the extra files it asks you to install. And run the program. 3. At the bottom left corner press `Add Rule` -> `Add Process Rule`, type `firefox` -> `add`. 4. On the left panel select and open `firefox` section. Change Mica to `Acrylic` for better blur effect. 5. Dont forget to download my css file `acrylic_micaforeveryone.css` from `EXTRA THEMES` and put it inside `Chrome` folder (and base files from Installation guide above). 6. Remove and dont use any other min-max-close window button files. 7. Expermental:warning: In MicaForEveryone settings `firefox` section enable `Blur Behind` so when the window is not active it will still be blurred. :shield: Last Updates `v2.7.4` - `22/12/2023` - Tested on Firefox v121.0 - Fix Linux context menu buttons (recent). - Context menu back and forward buttons now dimmed when not active (recent). `v2.7.3` - `22/12/2023` - Tested on Firefox v121.0 - Fix min/max/close buttons for Firefox beta, nightly (recent). - Fix buttons size in context menu. Issue since Firefox v121 update (recent). - Change/fix background color of active search link (recent). - Updated ""icons_in_main_menu.css"" mod (Nov 2, 2023). - Remove/Fix border from ""Spill Theme"" mod (fixed on Nov 19, 2023). - Added support for ""privacy_change_email_text.css"" mod to work with Icons in main menu (Dec 4, 2023). `v2.7.2` - `24/10/2023` - Tested on Firefox v119.0 - Fix Tabs Background color for Firefox v119.0 update. - New extra mod added - [show_searchbar_dots_only_on_hover.css]( - Search box Dots position fix when translation button is active. - Extra Mods folder restructure. `v2.7.1` - `07/09/2023` - Tested on Firefox v117.0 - Made Back and Forward icons a bit smaller to be more inline with other buttons. - New extra mod added - [align search text to the left side]( `searchbox_text_align_left.css`. - New extra mod added - [tabs take full bar width]( `tabs_take_full_bar_width.css`. `v2.7` `30/08/2023` Tested on Firefox v117.0.0 - Fix button icon colors for Firefox v117.x - Fix window control buttons positioning for Firefox v117.x - Added [new extra modification file]( `Tabs Separator`. Can be used with transparent tabs background mod. - MicaForEveryone no longer works with Firefox v117 and above. [Read for more information]( - Color changes to Customize Toolbar window: `v2.6.6` `19/08/2023` Tested on Firefox v116.0.3 - Some minor changes to tabs. Disabled selected tab width increase in specific condition because of weird transition animation. Still works in overflow and normally when tabs aren't taking full toolbar. - Updated the [static tab extra mod]( `selected_tabs_static_width.css` to work with latest changes. `v2.6.5` `13/08/2023` Tested on Firefox v116.0.2 - Context menu fixes for Linux white theme. - Fix context menu duplicated separators for Linux. `v2.6.4` `07/08/2023` Tested on Firefox v116.0.1 - Selected tabs increase width by default now (use static mod file to disable it). - Added new modification file `transparent_tabs_bg_color.css`. - Added new modification file `reversed_tabs_bg_color.css`. - Added new modification file `selected_tabs_static_width.css`. - Shadow for tabs now showed correctly. - Change tab color for micaforeveryone theme. ### Tested on Firefox v116.0.1 `v2.6.3` `07/08/2023` - Fix context menu for firefox v116.x `v2.6.2` `06/08/2023` - Show security button in URL box correctly when website isn't secure. - Sidebar background color change. - Fix space between pinned tabs and non-pinned tabs for Firefox 116.x - Add support for extra mod file ""[pinned_tabs_no_bg_color.css]( No copy pasting code required anymore. - Keyboard navigation fixes when selecting shortcuts in new-tab/homepage. ### Tested on Firefox v115.0.2 `v2.6.1` `28/07/2023` - Change search bar border on Light Theme. - Fix New Tab (home) page colors for Light Wallpaper Style Theme. - Fix Breakout search from moving up when opened. `v2.6` `27/07/2023` - Added extra mod file to change menu icon to firefox logo. [menu_icon_change_to_firefox.css]( - Permission Notification icon in url bar now showed correctly and isnt hidden until you block or allow specified permissions. - Light theme support added. Read installation how to toggle between dark and light. - Added Light theme support to MicaForEveryone theme. - Search, Menu and Private window button icon changed. ### Tested on Firefox v115.0.1 `v2.5.1` `13/07/2023` - Fix Search Bar dots positioning on linux. - Changed design of dots specifically for linux. - Changed opening animation of url bar buttons. - Some code clean up and restructure. ### Tested on Firefox v115.0.1 `v2.5` `11/07/2023` - CTRL+F Search bar color changes. - Bottom left URL status panel color and border radius changes. - Decreased pinned tabs Padding. - Added new mod to remove background color from pinned tabs. - Revamped URL search bar buttons behavior. -- All buttons are now hidden. -- Added dots for visual representation. Left on by default for touch screen devices, have no way to test it. -- Changed animations for how buttons close. -- Hidden on new tab/homepage. -- Almost all Permissions are hidden by default visually. Just Press on permissions button to show blocked and allowed ones. -- Now less space wasted and more compact with long links and when resizing window. -- Will add extra modification later that makes dots hidden until search bar is hovered. `08/07/2023` `-` `v2.4.3` `Firefox v115.0.1` - New firefox update broke extensions menu again. Fixed padding and size for both extra mod styles. Only need to replace the cleaner_extensions_menu.css file if you are using the extra modification. `06/06/2023` `-` `v2.4.2` `Firefox v114.0` - New update changed extensi... [TRUNCATED]","49, Code, Issues, Pull requests, Actions, Security, Insights, soon, enhancement, wontfix, v117, question, invalid, help wanted, good first issue, duplicate, documentation, bug, Unfixable, One day, MicaForEveryone, Manual edit required, MacOS, Linux, Fixing, Fixed, Firefox Nightly Issue"
obsidian-minimal,kepano/obsidian-minimal,3398,"['CSS', 'SCSS', 'JavaScript']","['obsidian', 'obsidian-md', 'obsidian-theme', 'theme', 'light-theme']","Find detailed documentation at [minimal.guide]( Minimal is an [Obsidian]( theme for desktop, mobile and tablet. Customize colors, fonts and more with the companion plugins [Minimal Theme Settings]( and [Hider]( Winner of Obsidian's official [Best Theme award]( **Support development:** [follow me]( or [buy me a coffee]( ## About Minimal - [Screenshots](#screenshots) - [Installation](#installation) - [Companion plugins](#companion-plugins) - [Settings](#settings) - [Color schemes](#color-schemes) - [Plugin support](#plugin-support) - [Helper classes](#helper-filters-and-classes) - [Alternate checkboxes](#alternate-checkboxes) - [Hotkeys](#hotkeys) - [Contributing](#contributing) - [Developers](#developers) - [License](#license) - [Disclaimer](#disclaimer) ## Screenshots **Background styles** include low contrast, high contrast, and a true black option ideal for OLED devices **Helper classes** for tables and card layouts allow you to create powerful workflows Combining **focus mode** with **image grid** and **image width** options allows you to immerse yourself in visual projects Minimal includes support for dozens of popular plugins like **Calendar**, **Kanban**, **Dataview**, **Outliner**, **Excalidraw**, [and more](#plugin-support) ## Installation To install the theme - Open Obsidian Settings - Go to `Appearance` and click `Manage` - Under community themes search for ""Minimal"" and click `Use` To install the companion plugin - Go to `Community plugins` and turn off `Restricted mode` - Under community plugins search for ""Minimal Theme Settings"" and click `Install`, then `Enable` Have a question? Join the [Minimal channel]( on the official [Obsidian Discord]( ## Companion plugins - [Minimal Theme Settings plugin]( allows you to customize color schemes, fonts, [hotkeys](#hotkeys), and access the main feature toggles. This plugin is highly recommended for all users of Minimal. - [Hider plugin]( is recommended to hide Obsidian UI elements such as window frame, scrollbars, tooltips, etc. When using Hider to turn off the main toolbar (AKA app ribbon), it can be accessed by hovering over the bottom left edge of the window. - [Style Settings plugin]( allows you to create a custom color scheme. This plugin is optional. ## Settings The following settings can be accessed using [Minimal Theme Settings]( plugin. Many of these settings below can be toggled with [hotkeys](#hotkeys). ### Interface colors and fonts - [Background contrast]( includes true black dark mode for OLED devices - [Color scheme]( includes Catppuccin, Dracula, Everforest, Gruvbox, macOS, Nord, Solarized, [and more](#color-schemes) - [Line width]( set normal line width and maximum width within a pane You can also use the Style Settings plugin for even deeper customization ### Features - [Text labels for primary navigation]( adds text labels the top left navigation, note that a translation snippet is necessary for languages other than English [more on localization](#localization) - [Focus mode]( hides title bar and status bar - [Colorful frame]( use accent color for the top area of the app window - [Colorful headings]( use different colors for each heading - Hide workspace borders removes dividing lines for a more minimal appearance - Trim filenames file names are trimmed to a single line ### Layout options Controls images, tables and iframes. These settings can also be enabled on a per-file basis using [helper classes](#helper-filters-and-classes). - [Image grids]( turns consecutive images into columns. To make a new row, add an extra line break between images. - [Block widths]( controls the width of elements by type. ## Color schemes ### Preset color schemes Minimal offers color schemes that can be separately selected for light and dark mode using the [Minimal Theme Settings]( plugin. Color schemes include Dracula, Everforest, Gruvbox, macOS, Nord, Notion, Solarized, and Things. ### Custom color schemes You can use the Style Settings plugin to customize your color scheme. To see your changes more easily, open Style Settings in a new pane by using the command palette (`CMD + P` by default). Using Style Settings you can customize Minimal's colors, font sizes, font styles, and many more details. ## Plugin support Most plugins work well with Minimal, but the following plugins have received special love and attention: - [Calendar]( - [Charts]( - [Checklist]( - [Dataview]( - [Dictionary]( - [Excalidraw]( - [Git]( - [Hider]( - [Kanban]( - [Leaflet]( for maps - [Outliner]( - [QuickAdd]( ## Helper filters and classes ## Image filters Image filters can be added to create the following effects. Use them by adding the filter name at the end of the image link, e.g. `![[image.jpeg#invert]]` | Filter | Description | | :--------- | :--------------------------------------------------------------------------------- | | `#invert` | Invert images in dark mode ideal for charts and handwriting on light backgrounds | | `#invertW` | Invert images in light mode ideal for charts and handwriting on dark backgrounds | | `#circle` | Crop image to a circle | | `#outline` | Add outline around image | ## CSS helper classes CSS helper classes can be added on a per-file basis using the `cssClasses` [YAML front matter key]( These classes are composable, so you can include more than one to combine effects. For example, use the following code at the top of your file to enable cards layout: ``` --- cssClasses: cards --- ``` ### Image grids Turns consecutive images into columns. To make a new row, add an extra line break between images. [Learn more.]( | Class | Description | | :------------- | :-------------------------------------------------- | | `img-grid` | Activate image grids | ### Line width control for tables, images and iframes Controls the width of elements by type. [Learn more.]( | Class | Description | | :-------------------------------------- | :------------------------------------ | | `table-100`, `img-100`, `iframe-100` | Fill 100% of the pane width | | `table-max`, `img-max`, `iframe-max` | Fill the max line width (default 88%) | | `table-wide`, `img-wide`, `iframe-wide` | Fill the wide line width | ### Cards Using `cards` transforms Dataview tables into cards. Compatible with table width classes. Note that `cards` must be present for the other classes to work. [Learn more.]([url]( | Class | Description | | :-------------------- | :----------------------------------------------- | | `cards` (required) | Set all Dataview tables to card layout | | `cards-align-bottom` | Align the last element of a card to the bottom | | `cards-cover` | Images are resized to fill the defined space | | `cards-16-9` | Fit images in cards to 16:9 ratio | | `cards-1-1` | Fit images in cards to 1:1 ratio (square) | | `cards-2-1` | Fit images in cards to 2:1 ratio | | `cards-2-3` | Fit images in cards to 2:3 ratio | | `cards-cols-1` to `8` | Force a specific number of columns (from 1 to 8) | ### Tables and Dataview Controls the row and column styling for tables. [Learn more.]( | Class | Description | | :-------------- | :-------------------------------------------------- | | `table-nowrap` | Disable line wrapping in table cells | | `table-wrap` | Force line wrapping in table cells | | `table-numbers` | Add row numbers to tables | | `table-tabular` | Use tabular figures in tables | | `table-small` | Use small font size in tables | | `table-tiny` | Use tiny font size in tables | | `table-lines` | Add borders around all table cells | | `row-lines` | Add borders between table rows | | `col-lines` | Add borders between table columns | | `row-alt` | Add striped background to alternating table rows | | `col-alt` | Add striped background to alternating table columns | ### Embeds and transclusions | Class | Description | | :------------- | :-------------------------------------------------- | | `embed-strict` | Transclusions appear seamlessly in the flow of text | ## Alternate checkboxes Minimal supports a wide number of checkbox styles. These allow you to call out tasks that are incomplete, canceled, rescheduled, etc. [See screenshots and details]( | Syntax | Description | | -------- | ----------- | | `- [ ]` | to-do | | `- [/]` | incomplete | | `- [x]` | done | | `- [-]` | canceled | | `- [>]` | forwarded | | `- [<]` | scheduling | | `- [?]` | question | | `- [!]` | important | | `- [*]` | star | | `- [""]` | quote | | `- [l]` | location | | `- [b]` | bookmark | | `- [i]` | information | | `- [S]` | savings | | `- [I]` | idea | | `- [p]` | pros | | `- [c]` | cons | | `- [f]` | fire | | `- [k]` | key | | `- [w]` | win | | `- [u]` | up | | `- [d]` | down | ## Hotkeys Hotkeys are only available when using the Minimal Theme Settings plugin. ### Background and borders - Switch between light and dark mode - Cycle between light mode styles - Cycle between dark mode styles - Toggle sidebar borders ### Layout control - Toggle image grids - Cycle between image width options - Cycle between table width options - Cycle between iframe width options ### Misc - Toggle focus mode - Toggle colorful headings - Increase and decrease body font size ## Contributing If you would like add support for a plugin, or have found a bug you'd like to help fix, don't hesitate to open a pull request. Have a question? Join the [Minimal channel]( on the official [Obsidian Discord]( ### Plugin support Plugin authors and developers can add support for Minimal theme by submitting a pull request. See the [src/scss/plugins]( folder with examples of snippets for plugins that are currently supported. ## Developers ### Build instructions **Set up** ``` sudo gem install sass npm install -g grunt-cli npm install ``` **Define local path** To build directly into your Obsidian vault rename `.env.example` to `.env` and update `OBSIDIAN_PATH` to the local path of your Obsidian theme folder. **To run** ``` npx grunt ``` This builds two files, the `obsidian.css` distribution file (for the community themes store) which is minified and also copied to your vault f... [TRUNCATED]","185, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, bug, enhancement, help wanted, external-dependency, cannot reproduce, wontfix, eink, question, plugins, old version, invalid, good first issue, duplicate, documentation"
kado,septiandwica/kado,246,"['CSS', 'SCSS', 'HTML']",[],# Kado -Flower code from: # Description Flower code tiktok trend Responsive Web -- bisa langsung disesuikan di file css --> style.css # Author - Flower Code : Md Usman Ansari (@MdUsmanAnsari) - Index Code : Septian Dwi Cahyo (@Septiandwica) Thanks to codepan and mdusmanansari,"497, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
firefox-gnome-theme,rafaelmardojai/firefox-gnome-theme,3248,"['CSS', 'Shell', 'JavaScript']","['gnome', 'theme', 'firefox', 'userchrome', 'css']","# Firefox GNOME theme []( []( []( **A GNOME theme for Firefox** This theme follows latest GNOME Adwaita style. > [!WARNING] > ### Disclaimer: > Be aware that this theme might do things that are not supported by upstream Firefox. If you face an issue while using this theme, report it here first or test if it is reproducible in vanilla Firefox. > > If you are a software distribution maintainer, please do not ship this changes by default to your users unless you made extremely clear that they are using a modified version of Firefox UI. ## Description This is a bunch of CSS code to make Firefox look closer to GNOME's native apps. ### Getting in Touch Matrix room: [#firefox-gnome-theme:matrix.org]( ### Firefox versions support The `master` branch of this repo supports the current Firefox stable release `126`. Theme versions compatible with older Firefox releases are preserved as git tags. We also have the `beta` and `nightly` branches for fixes only applicable to the current Firefox beta and nightly versions. # Installation ## Package managers ### Arch Linux 1. Install the [AUR package]( `firefox-gnome-theme` 2. Follow the instructions at `cat /usr/share/doc/firefox-gnome-theme/INSTALL.md` ## One command install with curl To install this theme, you can run this command, which uses *curl* to download a script that will also download the latest released version of the theme (not the master version) and run the **auto-install** script for you. > **Warning**: Always be careful when running scripts from the Internet. ```sh curl -s -o- | bash ``` ## Installation scripts If you want to use other version of the theme than the stable one you can manually download the theme and run its install scripts. First you need to grab a fresh copy of the theme repository by cloning it with git. 1. Clone this repo and enter folder: ```sh git clone cd firefox-gnome-theme ``` 2. Checkout a git branch or tag if needed, otherwise use `master` and ignore this step. ```sh git checkout beta # Set beta branch git checkout v78.1 # Set v78.1 tag ``` This theme provides two installation scripts in addition to the curled one. ### Auto install script This script will look for Firefox profiles from various known locations (`~/.mozilla/firefox/`, Flatpak, Snap, etc) and install the theme in each one. It will also enable a color variant for your GTK theme if it exists. You can execute it by running: ```sh ./scripts/auto-install.sh ``` ### Manual install script This script will only install the theme into the profiles found in the default Firefox folder `~/.mozilla/firefox/`. The script accepts various flags to change its behavior. Here are some examples of how to use it: ```sh ./scripts/install.sh # Standard ./scripts/install.sh -p pc8577yz.default-release # Only install in a profile named pc8577yz.default-release ./scripts/install.sh -f ~/.var/app/org.mozilla.firefox/.mozilla/firefox # Flatpak ./scripts/install.sh -f ~/snap/firefox/common/.mozilla/firefox #Snap ``` #### Script options - `-f ` *optional* - Set custom Firefox folder path, for example `~/.mozilla/icecat/`. - Default: `~/.mozilla/firefox/` - `-p ` *optional* - Set custom profile name, for example `e0j6yb0p.default-nightly`. - Default: All the profiles found in the firefox folder - `-t ` *optional* - Set the colors used in the theme. - Default: Adwaita. - Options: `adwaita`, `maia`. Advanced notes ### Advanced notes If you want to checkout the theme version tag matching you Firefox version you can run: ```sh git checkout v$(firefox --version | cut -d ' ' -f 3 | cut -d '.' -f 1) # Using Firefox version ``` Manual installation ## Manual installation 1. Go to `about:support` in Firefox. 2. Application Basics > Profile Directory > Open Directory. 3. Open directory in a terminal. 4. Create a `chrome` directory if it doesn't exist: ```sh mkdir -p chrome cd chrome ``` 5. Clone this repo to a subdirectory: ```sh git clone ``` 6. Create single-line user CSS files if non-existent or empty (at least one line is needed for `sed`): ```sh [[ -s userChrome.css ]] || echo >> userChrome.css [[ -s userContent.css ]] || echo >> userContent.css ``` 7. Import this theme at the beginning of the CSS files (all `@import`s must come before any existing `@namespace` declarations): ```sh sed -i '1s/^/@import ""firefox-gnome-theme\/userChrome.css"";\n/' userChrome.css sed -i '1s/^/@import ""firefox-gnome-theme\/userContent.css"";\n/' userContent.css ``` 8. Symlink preferences file: ```sh cd .. # Go back to the profile directory ln -fs chrome/firefox-gnome-theme/configuration/user.js user.js ``` 9. Restart Firefox. 10. Open Firefox customization panel and move the new tab button to headerbar. 11. Be happy with your new gnomish Firefox. ## Required Firefox preferences We provide a **user.js** configuration file in `configuration/user.js` that enable some preferences required by this theme to work. You should already have this file installed if you followed one of the installation methods, but in any case be sure this preferences are enabled under `about:config`: - `toolkit.legacyUserProfileCustomizations.stylesheets` This preference is required to load the custom CSS in Firefox, otherwise the theme wouldn't work. - `svg.context-properties.content.enabled` This preference is required to recolor the icons, otherwise you will get black icons everywhere. > For other non essential preferences checkout `configuration/user.js`. ## Updating You can follow the installation script steps again to update the theme. ## Uninstalling 1. Go to your profile folder. (Go to `about:support` in Firefox > Application Basics > Profile Directory > Open Directory) 2. Remove `chrome` folder. 3. Remove the unwanted preferences from your `user.js` inside your profile folder. The install script append the needed prefs in that file, you can check what preferences does it append by checking `configuration/user.js` in this repo. ## Enabling optional features Optional features can be enabled by creating new `boolean` preferences in `about:config`. 1. Go to the `about:config` page 2. Type the key of the feature you want to enable 3. Set it as a `boolean` and click on the add button 4. Restart Firefox ### Features - **Hide single tab** `gnomeTheme.hideSingleTab` Hide the tab bar when only one tab is open. > **Note:** You should move the new tab button out of the tabbar or it will be hidden when there is only one tab. You can rearrange the toolbars doing a right-click on any toolbar and selecting ""Customize Toolbar"". > **Note 2:** This feature doesn't work when tabs are hidden, like when using the Simple Tab Groups extension. In this case, there's no way to tell from CSS that there's only one visible tab. - **Normal width tabs** `gnomeTheme.normalWidthTabs` Use normal width tabs as default Firefox. - **Swap tab close button position** `gnomeTheme.swapTabClose` By default the tab close buttons follows the position of the window controls, this preference reverts that behavior. - **Bookmarks toolbar under tabs** `gnomeTheme.bookmarksToolbarUnderTabs` Move Bookmarks toolbar under tabs. - **Active tab contrast** `gnomeTheme.activeTabContrast` Add more contrast to the active tab. - **Close only selected tabs** `gnomeTheme.closeOnlySelectedTabs` Show the close button on the selected tab only. - **System icons** `gnomeTheme.systemIcons` Use system theme icons instead of Adwaita icons included by theme. > **Note:** This feature has a [known color bug](#icons-color-broken-with-system-icons). - **Symbolic tab icons** `gnomeTheme.symbolicTabIcons` Make all tab icons look kinda like symbolic icons. - **Hide WebRTC indicator** `gnomeTheme.hideWebrtcIndicator` Hide redundant WebRTC indicator since GNOME provides their own privacy icons in the top right. - **Hide unified extensions button** `gnomeTheme.hideUnifiedExtensions` Hide unified extensions button from the navbar, you can also use `extensions.unifiedExtensions.enabled` instead, which is only going to work till Firefox 111. - **Drag window from headerbar buttons** `gnomeTheme.dragWindowHeaderbarButtons` Allow dragging the window from headerbar buttons. > **Note:** This feature is BUGGED. It can activate the button with unpleasant behavior. - **Tabs as headerbar** `gnomeTheme.tabsAsHeaderbar` Place the tabs on the top of the window, and use the tabs bar to hold the window controls, like Firefox's standard tab bar. > **Note:** Enabling with `gnomeTheme.hideSingleTab` will replace the single tab with a title bar. ### Extensions support We also have optional features to enable support for some Firefox extensions. > **Be aware that extensions support are maintained by the community, so requests to support new extensions are not allowed and the included ones could get broken until someone shows up to fix them.** - **Tab center reborn support** `gnomeTheme.extensions.tabCenterReborn` Enable the vertical tab trough the extension : [Tab Center Reborn]( > **Note:** You also need to copy the contents of the file `configuration/extensions/tab-center-reborn.css` into the settings page of Tabcenter-reborn..\ > **Note2:** You can also maintain the vertical tab always open with `gnomeTheme.extensions.tabCenterReborn.alwaysOpen` > **Note2:** You can disable animation by disabling animation into the extension and adding the flags `gnomeTheme.extensions.tabCenterReborn.animationDisabled` ## Known bugs ### CSD have sharp corners See upstream [bug]( #### Wayland fix: 1. Go to the `about:config` page 2. Search for the `layers.acceleration.force-enabled` preference and set it to true. 3. Now restart Firefox, and it should look good! #### X11 fix: 1. Go to the `about:config` page 2. Type `mozilla.widget.use-argb-visuals` 3. Set it as a `boolean` and click on the add button 4. Now restart Firefox, and it should look good! ### Icons color broken with System icons Icons might appear black where they should be white on some systems. I have no idea why, but you can adjust them directly in the `system-icons.css` file, look for `--gnome-icons-ha... [TRUNCATED]","148, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, bug, enhancement, help wanted, upstream, unconfirmed, low priority, good first issue, wontfix, wayland, stale, question, out of scope, nightly/beta, invalid, important, duplicate, documentation, cantfix"
AnuPpuccin,AnubisNekhet/AnuPpuccin,1845,"['CSS', 'SCSS', 'Makefile']","['obsidian', 'obsidian-md', 'theme']","AnuPpuccin Personal theme for Obsidian :3 Voted Best Theme in Gems of the Year 2022 awards Notice AnuPpuccin is currently on hiatus!I have been busy with endsems and projects, thus I haven't been able to dedicate time to fix bugs and issues and I'm really sorry for that . Thank you for your understanding! ## Preface Please do note that I've made this theme for myself, and it may not fit your use cases. However, I've made most of the configuration completely optional so that the experience remains as close to vanilla if you choose to do so. Most of the in-application variables are recolored so that your custom snippets can be used easily with the theme. This theme makes heavy use of the style settings plugin, which controls most of the features in the theme. The theme is perfectly usable even without style settings, but it's only a fraction of what it actually is with the plugin. I will respond to feature/code removal only if there is substantial evidence of it being a direct copy of the original code and not just a simple imitation. (Please keep this point in mind before accusing me of being a low-effort theme developer.) ### If you like my theme: I've made this theme primarily for my own purposes and it's completely free, but if you do like it enough to consider throwing a few coins in my hat, here's a link. ## License AnuPpuccin is licensed under the GPL-3.0 license which allows you to modify the code freely, however the Copyright and license notices must be preserved in your CSS. If you redistribute a part of my code, please credit my theme in your CSS file, and specify which code you are using. **Please keep my Buy Me a Coffee link in your README if you do so.** Installation Normal Installation Go to your theme folder (.obsidian/themes) and run: git clone Updating Go to your AnuPuccin folder (.obsidian/themes/Anuppuccin) and run: git pull Building Clone the github repo and run sass src/base.scss theme.css in the root folder. ## Community Contributions AnuPpuccin has a [Discussions]( page dedicated to snippets that add a personal touch to your obsidian setup. If you want to share your customizations, feel free to do so! ## Features ### Custom palette The theme supports various palettes (5 in the base theme and even more if you use the extended colorschemes snippet) which include many popular colorschemes such as Catppuccin and Dracula. These are heavily integrated into the theme as they are directly used to stylize various UI elements. ### Layouts Anuppuccin currently supports 2 layout variants. ### Rainbow folders The theme comes with a toggleable rainbow folder snippet which color-codes your folders as per their order in the filesystem. It's great if you need to easily distinguish between folders or if you want to make your vault look a bit prettier (Both in my case :P) #### Full rainbow theme This snippet makes the rainbow theme apply to the first layer of the root directory, aka only direct children. You can choose if it applies to root files as well and customise the indentation border color. #### Simple rainbow theme This snippet makes the rainbow theme apply to every folder in your filesystem, and the order is determined by the children's place in the parent folder. You can toggle if the recolor applies to the title, the collapse border, the collapse icon and you can append a small icon to the folder title as well. ### Alternate tabs ### Customisable Decorations Bold and italic colors can be toggled on and off and can be customised according to the palette as well. ### Callouts The theme comes with many custom callout styles (which can be toggled so they won't interfere with your own callout snippet). The snippet also includes support for using the colors of your selected palette which means that the callouts don't ever look out of place :) If you use the admonition plugin/have custom callout colors, they won't be affected by the recolor as it only targets vanilla callouts. However, you can make them use AnuPpuccin's palette to support dynamic per-palette theming. ### Custom checkboxes & Speech bubbles Anuppuccin's custom checkboxes try to mimic the original checkbox design as much as possible, while still being optional incase you want to use your own checkbox snippet. Speech bubbles have been provided which are useful for language learners and RPG vault users alike.Custom checkboxes have been designed to match those provided by the Primary theme for ease of migration and consistency. | Syntax | Description | | ------- | --------------- | | `- [ ]` | Unchecked | | `- [x]` | Checked | | `- [>]` | Rescheduled | | `- [<]` | Scheduled | | `- [!]` | Important | | `- [-]` | Cancelled | | `- [/]` | In Progress | | `- [?]` | Question | | `- [*]` | Star | | `- [n]` | Note | | `- [l]` | Location | | `- [i]` | Information | | `- [I]` | Idea | | `- [S]` | Amount | | `- [p]` | Pro | | `- [c]` | Con | | `- [b]` | Bookmark | | `- [""]` | Quote | | `- [u]` | Up | | `- [d]` | Down | | `- [w]` | Win | | `- [k]` | Key | | `- [f]` | Fire | | `- [0]` | Speech bubble 0 | | `- [1]` | Speech bubble 1 | | `- [2]` | Speech bubble 2 | | `- [3]` | Speech bubble 3 | | `- [4]` | Speech bubble 4 | | `- [5]` | Speech bubble 5 | | `- [6]` | Speech bubble 6 | | `- [7]` | Speech bubble 7 | | `- [8]` | Speech bubble 8 | | `- [9]` | Speech bubble 9 | ### Colorful Frames Adapted from Kepano's Minimal theme, colorful frames add some pop to your vault by displaying your accent color on the top-most bar. ### Simplified markdown embeds Markdown embeds have an alternate styling with an animated variant which can be toggled globally using style settings or individually using alt names for embeds, for example: `![[embed|alt-name]]` | Embed style | Alt name | | ----------- | -------- | | Seamless | seamless | ## Colorschemes used **Note**: Colorschemes that aren't in the base theme can be used through the [extended colorschemes]( snippet. **Important**: Some colorschemes have been been modified to fit the Catppuccin color value style, which means there will be some changes made to make the theme feel more natural. | Theme | Light Mode | Dark Mode | Extra Notes | | --------------------------------------------------------- | ---------- | --------- | --------------------------------------------------------------------------------------------------------------------------- | | [Atom]( | Yes | Yes | Accent value is hardcoded into the theme. | | [Catppuccin]( | Yes | Yes | There are 4 variants of the dark theme, namely: Frappe, Macchiato, Mocha and Mocha Old.The light theme is called Latte. | | Coffee | No | Yes | Custom colorscheme | | [Biscuit]( | Yes | Yes | - | | [Everforest]( | Yes | Yes | - | | [Dracula]( | No | Yes | - | | [Gruvbox]( | Yes | Yes | - | | [Nord]( | Yes | Yes | A custom darker variant of the dark theme is included as well. Accent value is hardcoded into the theme. | | Notion | Yes | Yes | - | | [Kanagawa]( | No | Yes | - | | [Ros Pine]( | Yes | Yes | The second variant of the dark theme, namely Ros Pine dawn hasn't been implemented yet. | | [Rosebox]( | No | Yes | Accent value is hardcoded into the theme. | | [Royal Velvet]( | No | Yes | - | | Sandy Beaches | Yes | No | Provided by [melnhh]( | | [Solarized]( | Yes | Yes | - | | [thorns]( | No | Yes | - | Previews Atom Catppuccin Latte Frappe Macchiato Mocha Mocha Old Generic Dark AMOLED Dark Coffee Biscuit Everforest Dracula Gruvbox Nord Nord Light Nord Dark Nord Darker (Custom Palette) Notion Kanagawa Rosebox Ros Pine Ros Pine Dawn Ros Pine Royal Velvet Sandy Beaches Solarized Note: Themes are toggled via style settings, the default themes are **Latte** for light mode and **Mocha** for dark mode. ### Custom CSS Classes Inserting these css classes into your note frontmatter will style your notes individually. | CSS Class | Function | | --------------------------- | ------------------------------------------------------------- | | `heading-normal-toggle` | Disables color in headings | | `decorations-normal-toggle` | Disables color in text decorations like **bold** and _italic_ | | `hide-metadata` | Hides metadata | | `metadata-button` | Enables custom metadata button | ### Integrations - Excalidraw - Kanban - Style Settings #### Minimal Features AnuPpuccin does not come with any code provided by [Minimal]( however it does contain styling and style settings support for certain features that can be compiled via CSS. You can buy Kepano a coffee here: ### Recommended Fonts - **Interface**: [Overpass]( - **Text**: [Rubik]( - **Headings**: [Noto Serif]( ### Special thanks to: - [Paul Ryley]( for countless contributions to the theme and amazing sense of design in general. - [Chuck Harmston]( for his amazing alternate tabs snippet. - [melnhh]( and Lunairee for their amazing colorschemes. - [EdualcLaiv]( for porting Royal Velvet to AnuPpuccin. - [xotea]( for theming framework tweaks. - [raisabelatrix]( for [rainbow tags]( variables. ## Credits and Acknowledgements - [@kepano's]( [Minimal]( for the inspiration for [colorful frames]( and partial inspiration for style settings menus design, as well as style settings for the Minimal Cards snippet - [@ceciliamay's]( [Primary]( for inspiration for [custom checkboxes]( and [floating vault title]( - [@SlRvb]( for [ITS]( frontmatter styling inspiration. - [@Akifyss]( for their [border theme]( layout design.","162, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, enhancement, bug, wontfix, question, invalid, help wanted, good first issue, duplicate, documentation, Feature Removal"
simple-contribution,amyyalex/simple-contribution,56,"['CSS', 'JavaScript', 'HTML']","['begineers', 'beginner-project', 'contributions', 'css', 'github-desktop']","# simple-contribution # [Contribute To This Project]( **Click on the [link]( to see the live site!** ## Introduction Hey there! Welcome to the Simple Contribution repo. This is a very simple web project to help first-time contributors easily participate and contribute to open source projects and also get more comfortable in using GitHub. Who knows - our ""simple"" contribution may become something amazing! ### Who can contribute? **This project is for both developers and non-developers.** Anyone can contribute to this project, developer or otherwise, as long as you want to contribute to an open source project. This is intended for complete beginners and also for those with a little more experience who want to make their first open source contribution and gain more experience. ### How and what do I contribute? It's simple, open up the **cardDetails.json** file and add your details to it, you can easily copy any one of the JSON objects and customize it with your own information. To contribute, read the [Contribution guide](contribution.md) to get an explicit guide on the whole process of contributing starting from setting up Github to creating a pull request. If you're an advanced developer and you want to take it up a notch, read the [Advanced Contribution guide](advanced-contribution.md) to get started. Once your pull request is merged, the changes will be live on [simple-contribution]( If you appreciate this amazing project, kindly leave a by clicking on the star button on the top right. Thank you! Contributors Thanks goes to these wonderful people:","171, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, help wanted, good first issue, enhancement, wontfix, question, invalid, duplicate, documentation, bug"
nerd-fonts,ryanoasis/nerd-fonts,51891,"['CSS', 'Shell', 'Python']","['fonts', 'patched-fonts', 'powerline', 'shell', 'statusline']","[Releases][release]|[Fonts](#patched-fonts)|[Font Patcher](#font-patcher)|[Wiki Documentation][wiki]|[Stickers][stickers]|[VimDevIcons][vim-devicons] [![GitHub release][img-version-badge]][repo] [![Gitter][img-gitter-badge]][gitter] [![Code of Conduct][coc-badge]][coc] [![PRs Welcome][prs-badge]][prs] **Nerd Fonts** is a project that patches developer targeted fonts with a high number of glyphs (icons). Specifically to add a high number of extra glyphs from popular 'iconic fonts' such as [Font Awesome][font-awesome], [Devicons][vorillaz-devicons], [Octicons][octicons], and [others](#glyph-sets). The following flow diagram shows the current glyph sets included: Diagram created using @SankeyMATIC ## Important Notices * `master` branch file paths are **not** considered stable. [Verify your repository URI references](#unstable-file-paths) * cloning this repository is **not** recommended ([due to Repo size](#option-7-clone-the-repo)) unless you are going to be [contributing to development](#contributing) ## Table of Contents [**TL;DR**](#tldr) [**Installation Options**](#font-installation) * [**1 - Release Archive Download**](#option-1-release-archive-download) * [**2 - Homebrew Fonts (macOS (OS X))**](#option-2-homebrew-fonts) * [**3 - Chocolatey or Scoop (Windows)**](#option-3-unofficial-chocolatey-or-scoop-repositories) * [**4 - Arch Linux Repository (Extra, AUR)**](#option-4-arch-extra-repository) * [**5 - Ad Hoc Curl Download**](#option-5-ad-hoc-curl-download) * [**6 - Install Script**](#option-6-install-script) * [**7 - Clone Repo**](#option-7-clone-the-repo) * [**8 - Patch Your Own Font**](#option-8-patch-your-own-font) [**Features**](#features) * [**Glyph/Icon sets**](#glyph-sets) * [**Patched Fonts**](#patched-fonts) * [**Variations**](#variations) * [**Font Patcher**](#font-patcher) [**Developer / Contributor**](#font-patcher) * [**Font Patcher**](#font-patcher) * [**Gotta Patch 'em All Font Patcher!**](#gotta-patch-em-all) * [**Other Good Fonts to Patch**](#other-good-fonts-to-patch) * [**Contributing**](#contributing) [**Project Motivation**](#project-motivation) **Additional Info** * [**Unstable file paths on master**](#unstable-file-paths) * [**Changelog**](#changelog) * [**License**](#license) ## TL;DR Nerd Fonts takes popular programming fonts and adds a bunch of Glyphs. There is also a [font patcher](#font-patcher) available if your desired font isn't already patched. For more high level information see the [wiki][wiki]. If you are looking for the Vim plugin see [VimDevIcons ][vim-devicons]. ### Various Download Options for Fonts _If you..._ * `Option 1.` want to download a **font family** package of variations (bold, italic, etc.) see [download an archive](#option-1-release-archive-download) * `Option 2.` are on **macOS** and want to use **Homebrew** see [Homebrew Fonts](#option-2-homebrew-fonts) * `Option 3.` are on **Windows** and want to use **Chocolatey** or **Scoop** see [Unofficial Chocolatey or Scoop Repositories](#option-3-unofficial-chocolatey-or-scoop-repositories) * `Option 4.` are on **Arch Linux** and want to use **Extra packages** see [Arch Extra Repositories](#option-4-arch-extra-repository) * `Option 5.` want to use the **`curl` command** or use in **scripts** see [Ad Hoc Curl Download](#option-5-ad-hoc-curl-download) * `Option 6.` want to **automate** installing or use in **scripts** see the [Install Script](#option-6-install-script) * `Option 7.` want **complete control** then see [cloning the repo](#option-7-clone-the-repo) * `Option 8.` want to patch your own font see the [Font Patcher](#option-8-patch-your-own-font) ## Features * A [FontForge Python script](#font-patcher) to patch any font * Includes an option to create **Monospaced (fixed-pitch, fixed-width)** _or_ **double-width (non-monospaced)** glyphs * For more details see the [**Font Patcher**](#font-patcher) section * **`67`** already [patched font families](#patched-fonts) * Over **`10,000`** glyphs/icons combined [(more details)](#combinations) * Current glyph sets include: [Powerline with Extra Symbols][ryanoasis-powerline-extra-symbols], [Font Awesome][font-awesome], [Material Design Icons][font-material-design-icons], [Weather][font-weather], [Devicons][vorillaz-devicons], [Octicons][octicons], [Font Logos][font-logos] (Formerly Font Linux), [Pomicons][gabrielelana-pomicons], [Codeicons][codicons] * **Monospaced (fixed-pitch, fixed-width)** _or_ **double-width (non-monospaced)** _or_ **proportional** glyphs version of each font * This refers to the Nerd Font glyphs themselves not necessarily the Font as a whole * A Developer/Contributor provided [bash script](#gotta-patch-em-all) to re-patch all the fonts ## Glyph Sets :mag: :mag: You can search for glyphs easily on [NerdFonts.com][Cheat Sheet] via the [Cheat Sheet][] See [Wiki: Glyph Sets and Codepoints for more details][wiki-glyph-sets-codepoints] ### Icon names in shell See [Wiki: Icon names in shell][wiki-icon-names-in-shell] ## Patched Fonts A preview of all fonts can be found [here]( | Font Name | Original Font Name and Repository | ver |\*RFN | |:--------------------------------------------------|:---------------------------------------|:-----------|:-----| | [0xProto Nerd Font][p-0xProto] | [0xProto][f-0xProto] | 1.603 | NO | | [3270 Nerd Font][p-3270] | [3270][f-3270] | 3.0.1 | NO | | [Agave Nerd Font][p-agave] | [Agave][f-agave] | 37 | NO | | [AnonymicePro Nerd Font][p-anonymous-pro] | [Anonymous Pro][f-a-pro] | 1.002 | YES | | [Arimo Nerd Font][p-arimo] | [Arimo][f-arimo] | 1.33 | NO | | [AurulentSansMono Nerd Font][p-aurulent] | Aurulent Sans Mono (Stephen G. Hartke) | | NO | | [BigBlueTerminal Nerd Font][p-bigblueterm] | BigBlueTerminal (VileR) | | NO | | [BitstromWera Nerd Font][p-bitstream] | Vera Sans Mono (Bitstream Inc) | 1.1 | YES | | [BlexMono Nerd Font][p-blex] | [IBM Plex Mono][f-ibm-plex] | 2.004 | YES | | [CaskaydiaCove Nerd Font][p-cascadia] | [Cascadia Code][f-cascadia] | 2111.01 | YES | | [CaskaydiaMono Nerd Font][p-cascadia-mono] | [Cascadia Mono][f-cascadia] | 2111.01 | YES | | [CodeNewRoman Nerd Font][p-code-nr] | Code New Roman (Sam Radian) | 2.0 | NO | | [ComicShannsMono Nerd Font][p-comic] | [Comic Shanns Mono][f-comic] | 1.3.1 | NO | | [CommitMono Nerd Font][p-commit] | [Commit Mono][f-commit] | 1.143 | NO | | [Cousine Nerd Font][p-cousine] | [Cousine][f-cousine] | 1.211 | NO | | [D2Coding Nerd Font][p-d2coding] | [D2Coding][f-d2coding] | 1.3.2 | NO | | [DaddyTimeMono Nerd Font][p-daddytimemono] | [DaddyTimeMono][f-daddytimemono] | 1.2.3 | NO | | [DejaVuSansMono Nerd Font][p-dejavu] | [DejaVu][f-dejavu] | 2.37 | NO | | [DroidSansMono Nerd Font][p-droid] | Droid Sans Mono (Ascender Corp) | 1.00-113 | NO | | [EnvyCodeR Nerd Font][p-envy] | [Envy Code R][f-envy] | 0.79 | YES | | [FantasqueSansMono Nerd Font][p-fantasque] | [Fantasque Sans Mono][f-fant] | 1.8.0 | NO | | [FiraCode Nerd Font][p-fira-code] | [Fira Code][f-fira-code] | 6.2 | NO | | [FiraMono Nerd Font][p-fira-mono] | [Fira Mono][f-fira-mono] | 3.206 | NO | | [GeistMono Nerd Font][p-geist-mono] | [Geist Mono][f-geist-mono] | 1.200 | NO | | [GoMono Nerd Font][p-go-mono] | [Go-Mono][f-go-mono] | 2.010 | NO | | [Gohu Nerd Font][p-gohu] | [Gohu TTF][f-gohu2], [Gohu][f-gohu] | 2.0 | NO | | [Hack Nerd Font][p-hack] | [Hack][f-hack] | 3.003 | NO | | [Hasklug Nerd Font][p-hasklig] | [Hasklig][f-hasklig] | 1.2 | YES | | [HeavyDataMono Nerd Font][p-heavy-data] | HeavyData (Vic Fieger) | 1 | NO | | [Hurmit Nerd Font][p-hermit] | [Hermit][f-hermit] | 2.0 | YES | | [iM-Writing Nerd Font][p-im-writing] | [iA-Writer][f-ia-writer] | Dec 2018 | YES | | [Inconsolata Nerd Font][p-inconsolata] | [Inconsolata][f-inconsolata] | 3.000 | NO | | [InconsolataGo Nerd Font][p-inconsolata-go] | [InconsolataGo][f-inconsolatago] | 1.013 | NO | | [Inconsolata LGC Nerd Font][p-inconsolata-lgc] | [Inconsolata LGC][f-inconsolatalgc] | 1.5.2 | NO | | [IntoneMono Nerd Font][p-intel-one-mono] | [Intel One Mono][f-intel-one-mono] | 1.3.0 | YES | | [Iosevka Nerd Font][p-iosevka] | [Iosevka][f-iosevka] | 29.0.4 | NO | | [IosevkaTerm Nerd Font][p-iosevka-term] | [Iosevka Term][f-iosevka] | 29.0.4 | NO | | [IosevkaTermSlab Nerd Font][p-iosevka-term-slab] | [Iosevka Term Slab][f-iosevka] | 29.0.4 | NO | | [JetBrainsMono Nerd Font][p-jetbrains-mono] | [JetBrains Mono][f-jetbrains-mono] | 2.304 | NO | | [Lekton Nerd Font][p-lekton] | [Lekton][f-lekton] | 34 | NO | | [Literation Nerd Font][p-liberation] | [Liberation][f-liberation] | 2.1.5 | YES | | [Lilex Nerd Font][p-lilex] | [Lilex][f-lilex] | 2.400 | NO | | [MartianMono Nerd Font][p-martian] | [MartianMono][f-martian] | 1.0.0 | NO | | [Meslo Nerd Font][p-meslo] | [Meslo][f-meslo] | 1.21 | NO | | [Monaspice Nerd Font][p-monaspace] | [Monaspace][f-monaspace] | 1.0.0 | YES | | [Monofur Nerd Font][p-monofur] | Monofur (Tobias B Koehler) | 1.0 | NO | | [Monoid Nerd Font][p-monoid] | [Monoid][f-monoid] | 0.61 | NO | | [Mononoki Nerd Font][p-mononoki] | [Mononoki][f-mononoki] | 1.6 | YES | | [M+ Nerd Font][p-mplus] | [MPlus Fonts][f-mplus] | 2023/09 | NO | | [Noto Nerd Font][p-noto] | [Noto][f-noto] | div | NO | | [OpenDyslexic Nerd Font][p-opendyslexic] | [OpenDyslexic][f-opendyslexic] | 2.001 | NO | | [Overpass Nerd Font][p-overpass] | [Overpass][f-overpass] | 3.0.5 | NO | | [ProFont Nerd Font][p-profont] | [ProFont][f-profont] | 2.3, 2.2 | NO | | [ProggyClean Nerd Font][p-proggy-clean] | ProggyClean (Tristan Grimmer) | 2004/04/15 | NO | | [RecMono Nerd Font][p-recursive] | [Recursive Mono][f-recursive] | 1.085 | NO | | [RobotoMono Nerd Font][p-roboto] | [Roboto Mono][f-roboto] | 3.0 | NO | | [SauceCodePro Nerd Font][p-source-code-pro] | [Source Code Pro][f-source] | 2.042 | YES | | [ShureTechMono Nerd Font][p-share-tech-mono] | [Share Tech Mono][f-share] | 1.003 | YES | | [SpaceMono Nerd Font][p-space-mono] | [Space Mono][f-space] | 1.001 | NO | | [Terminess Nerd Font][p-terminus] | [Terminus TTF][f-terminus] | 4.49.3 | YES | | [Tinos Nerd Font][p-tinos] | [Tinos][f-t... [TRUNCATED]","3.6k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, confirmed, ✏️ documentation, ❲⚖❳glyph sizing, ✨ enhancement, ☕ discussion, unreproducible, Ready ⛱, CI ⚙, ❲Aa❳ update font version bump, wontfix, 🌐 web pages, waiting for information, up-for-grabs, not-a-bug, help wanted, ❲+❳ add glyph to core set, Status: Awaiting Response, Hacktoberfest, ❲Aa❳ new font, your-first-pr, { ; } update glyph set, ✋ question, ⏳ pending rebuild ..., os:windows, os:osx, not ready, { ; } new glyph set, keep_unlocked, ☒ invalid, ✎ in progress ..."
spicetify-themes,spicetify/spicetify-themes,4747,"['CSS', 'JavaScript', 'PowerShell']","['spicetify', 'spotify', 'spicetify-themes', 'unixporn', 'customization']","# spicetify community themes This is a collection of themes for [spicetify]( a command-line tool to customize Spotify. You can add your own theme simply by opening a Pull Request (more info in [CONTRIBUTING.md](./CONTRIBUTING.md)). ### **You can find a preview of all the themes in [THEMES.md](./THEMES.md).** ## Notes: * **These themes require that you have the latest version of Spotify and Spicetify.** * **To install Dribbblish and Turntable themes, follow the instructions in their READMEs**. * **Spotify ad-blocked version is not supported.** ## Installation and usage (If you use Arch Linux you can find this project on the [AUR]( 1. Clone this repository. Make sure [git]( is installed and run: ```bash git clone --depth=1 ``` 2. Copy the files into the [Spicetify Themes folder]( Run: **Linux** ```bash cd spicetify-themes cp -r * ~/.config/spicetify/Themes ``` **MacOS** ```bash cd spicetify-themes cp -r * ~/.config/spicetify/Themes ``` **Windows** ```powershell cd spicetify-themes cp * ""$(spicetify -c | Split-Path)\Themes\"" -Recurse ``` 3. Choose which theme to apply just by running: ```bash spicetify config current_theme THEME_NAME ``` Some themes have 2 or more different color schemes. After selecting the theme you can switch between them with: ```bash spicetify config color_scheme SCHEME_NAME ``` ### Extra The `_Extra` folder contains additional resources for tweaking the look of Spotify. More info in its [README](./\_Extra/README.md). ## Contributions We've set up a separate document for our [contribution guidelines](./CONTRIBUTING.md). ## Troubleshooting Do not open issues for general support questions as we want to keep GitHub issues for bug reports and feature requests. If you find problems when using or installing these themes, or you need help in modifying a theme then ask for suggestions on the [subreddit]( or on the [Discord Server]( Use GitHub issues ONLY for bugs and requesting new features. If you are unsure about which channel to use, go for Reddit or Discord. ## Useful resources * [Spicetify theme without free version UI elements (e.g. ""Upgrade"" button)]( * [DribbblishDynamic theme for v2](","1.3k, Code, Issues, Pull requests, Actions, Security, Insights, ☠️ unmaintained, 🗑 wontfix, 🪟 windows, ➕ theme addition, ❓ question, ♻️ legacy, ❌ invalid, 🙋 help wanted, 🐥 good first issue, ✨ enhancement, 🖇 duplicate, 📝 documentation, 🔴 custom app, 🐛 bug, 👾 CSS Mapping"
minimal-light,yaoyao-liu/minimal-light,508,"['CSS', 'SCSS', 'HTML']","['jekyll', 'jekyll-theme', 'academic-website', 'homepage-generator', 'static-site-generator']","# The Minimal Light Theme []( \[[Demo the theme]( \[[]( | []( | [Deutsche]( *This is the source code of my homepage. I build this website based on [minimal]( *Feel free to use and share the source code anywhere you like.* The latest version of my homepage is available here: [[link]( A template for Max Planck Institute for Informatics is available here: [[link]( ## Features - Simple and elegant personal homepage theme - Jekyll theme, automatically deployed by GitHub Pages - Basic search engine optimization - Mobile friendly - Supporting Markdown - Supporting dark mode ## Project Architecture ``` . _data | publications.yml # the YAML file for publications _includes | publications.md # the Markdown file for publications | services.md # the Markdown file for services _layouts | homepage.html # the html template for the homepage _sass | minimal-light.scss # this file will be compiled into a CSS file to control the style of the page | minimal-light-no-dark-mode.scss # this file is similar to minimal-light.scss with the dark mode disabled assets # some files html_source_file # compiled HTML files .gitignore # this file specifies intentionally untracked files that Git should ignore CNAME # the custom domain, will be used by GitHub page sevice Gemfile # a RubyGems related file LICENSE # the license file README.md # the readme file (English) README_de.md # the readme file (German) README_zh_Hans.md # the readme file (Simplified Chinese) README_zh_Hant.md # the readme file (Traditional Chinese) _config.yml # the Jekyll configuration file, including some options of the page index.md # the content of the index page, using Markdown ``` ## Getting Started This template can be used in the following two ways: - **Using with the GitHub Pages Service.** GitHub will provide you with a server to generate and host web pages. - **Using locally with Jekyll.** You may install Jekyll on your own computer and generate static web pages (i.e., HTML files) with this template. After that, you may upload the HTML files to your server. The detailed instructions are available below. ### Using with the GitHub Pages Service There are two ways to use this template on GitHub: #### Fork this repository - Fork this repository (or [use this repository as a template]( and change the name to `your-username.github.io`. - Enable the GitHub pages for that repository following the steps [here]( #### Using this repository as a remote theme To use this theme, add the following to your repository's `_config.yml`: ```yaml remote_theme: yaoyao-liu/minimal-light ``` Please note that adding the above line will directly apply all the default settings in this repository to yours. If you hope to edit any files (e.g., `index.md`), you still need to copy them to your repository. ### Using Locally with Jekyll First, install [Ruby]( and [Jekyll]( The install instructions can be found here: Then, clone this repository: ```bash git clone cd minimal-light ``` Install and run: ```bash bundle install bundle add webrick bundle exec jekyll server ``` View the live page using `localhost`: . You can get the HTML files in `_site` folder. ### Using the HTML version The compiled HTML files are available in the `html_source_file` folder. If you don't like Jekyll, you may directly edit and use the HTML version. ## Customizing ### Configuration variables The Minimal Light theme will respect the following variables, if set in your site's `_config.yml`: ```yaml # Basic Information title: Your Name position: Ph.D. Student affiliation: Your Affiliation email: yourname (at) example.edu # Search Engine Optimization (SEO) # The following information is used to improve the website traffic from search engines, e.g., Google. keywords: minimal light description: The Minimal Light is a simple and elegant jekyll theme for academic personal homepage. canonical: # Links # If you don't need one of them, you may delete the corresponding line. google_scholar: cv_link: assets/files/curriculum_vitae.pdf github_link: linkedin: twitter: # Images (e.g., your profile picture and your website's favicon) # ""favicon"" and ""favicon_dark"" are used for the light and dark modes, respectively. avatar: ./assets/img/avatar.png favicon: ./assets/img/favicon.png favicon_dark: ./assets/img/favicon-dark.png # Footnote # You may use the option to disable the footnote, ""Powered by Jekyll and Minimal Light theme."" enable_footnote: true # Auto Dark Mode # You may use the option to disable the automatic dark theme auto_dark_mode: true # Font # You can use this option to choose between Serif or Sans Serif fonts. font: ""Serif"" # or ""Sans Serif"" # Google Analytics ID # Please remove this if you don't use Google Analytics google_analytics: UA-111540567-4 ``` ### Edit `index.md` Create `index.md` and add your personal information. It supports **Markdown** and **HTML** syntax. ### Edit included files There are two markdown files included in `index.md`. They are `_includes/publications.md` and `_includes/service.md`, respectively. These two files also support **Markdown** and **HTML** syntax. If you don't hope to include these two files, you may remove the following lines in `index.md`: If you hope to edit the publication list without changing the format, you may edit `_data/publications.yml`: ### Stylesheet If you'd like to add your own custom styles, you may edit `_sass/minimal-light.scss`. ### Layouts If you'd like to change the theme's HTML layout, you may edit `_layout/homepage.html`. ## License This work is licensed under a [Creative Commons Zero v1.0 Universal]( License. ## Acknowledgements Our project uses the source code from the following repositories: * [pages-themes/minimal]( * [orderedlist/minimal]( * [al-folio](","407, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
GuangLun2000.github.io,GuangLun2000/GuangLun2000.github.io,419,"['CSS', 'Less', 'JavaScript']","['academic-website', 'personal-website', 'website-theme', 'minimalism', 'github-pages']","# GuangLun means Nimbus in Chinese Here is **Hanlin Cai (Lance, )**. This is my personal web repo. If you like it, please star it! ## Update and News - **Jan 2024:** This Github Page has reached 300+ Stars Thank you! - **May 2023:** [Jekyll website building videos]( have been uploaded to Bilibili () - **April 2023:** [Website building tutorials]( have been post on my blog () - **Dec. 2022:** My personal website have been implemented in [caihanlin.com]( - **Oct. 2022:** This Github Page have been built based on [Jason Ansel's site]( ## Star History []( ## Statement 2024 Hanlin Cai. Published with [GitHub Pages]( powered by [Jekyll]( based on the [Minimal Mistakes]( theme and [Jason Ansel's site]( Source code for this website can be found [here](","588, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
ferdium-recipes,ferdium/ferdium-recipes,70,"['CSS', 'JavaScript', 'Dockerfile']","['hacktoberfest', 'hacktoberfest-accepted']","# Recipes > Recipes encapsulate your favourite apps into Ferdium for unified notifications handling and more Recipes are small scripts that are responsible for providing the connection between your services (e.g. WhatsApp, Gmail or Slack) and Ferdium. It provides Ferdium information like the number of current notifications, handles enabling dark mode and may otherwise improve your experience with the service. ## Creating, adding, and editing recipes **Important:** Please make sure to run `pnpm validate` before submitting. * [Overview / How to create a Ferdium integration](docs/integration.md) * [How to update/change recipes](docs/updating.md) * [Configuration (package.json)](docs/configuration.md) * [Frontend API (webview.js)](docs/frontend_api.md) * [Backend API (index.js)](docs/backend_api.md) ## Contributors Thanks goes to these wonderful people ([emoji key]( This project follows the [all-contributors]( specification. Contributions of any kind welcome!","172, Code, Issues, Pull requests, Actions, Security, Insights, question ❓, wontfix, recipe request ✨, recipe 📑, invalid, help wanted, hacktoberfest, good first issue 🔢, github_actions, enhancement ✨, duplicate, documentation 📝, dependencies, bug 🪲"
spectrum-css,adobe/spectrum-css,1158,"['CSS', 'JavaScript', 'MDX']","['css', 'design-system']","Spectrum CSS A CSS-implementation of the Spectrum design language ## Features * **Robust documentation**: Spectrum CSS is designed to be used in partnership with [Spectrum's detailed usage guidelines]( * **Flexible**: Our CSS is customizable, powerful, and designed to work with any JavaScript framework. * **Rigorously tested**: These individually-versioned components have been vetted to be accessible and inclusive of global audiences. * **Multi-platform support**: We support [evergreen browsers]( for scalability and flexibility. []( []( ## Using Spectrum CSS The preferred method of using Spectrum CSS relies on custom properties to swap out variables for different themes and contexts. This results in the lowest bundle sizes and is one of the simpler approaches. Want to get a component up and running as soon as possible? Check out the [quick start guide]( ### Functionality Spectrum CSS is CSS-only, implementing only the interactivity that can be done with pure CSS. We do include some lightweight JS-based interaction for demonstration purposes only in our [Storybook]( Spectrum CSS should only be used by implementations of Spectrum, or very simple applications that only need things like typography, checkboxes, text fields, etc. Adobe maintains separate libraries written with [web components]( and [React]( that work in partnership with Spectrum CSS to create fully interactive Spectrum components. The [Spectrum Web Components]() library directly imports Spectrum CSS and optimizes it for use with web components. ### Installing components Each component is released on npm as a separate, individually versioned package inside of the [@spectrum-css]( org. To incorporate Spectrum CSS into your project, you install the components you need along with any peer dependencies you need for your implementation. Most peer dependencies are optional and can bring additional features when installed along with a component. For example a button can be rendered with or without an icon; so if your use-case leverages an icon with your button, you'll want to install icon as a peer dependency. ```shell yarn add -DW @spectrum-css/tokens @spectrum-css/typography @spectrum-css/page @spectrum-css/icon @spectrum-css/button ``` Installed components will be available in the `node_modules/@spectrum-css/` folder of your project. All components in this library have a peer dependency on [`@spectrum-css/tokens`](tokens), which is a local package that serves up the [Spectrum design tokens]( as CSS custom properties (via [Style dictionary]( These custom properties are leveraged in all components to create a cohesive visual language and to allow for easy theming. If you choose not to use the provided `@spectrum-css/tokens` package, you must define your own custom properties or your components will render with a significant number of missing styles. When overriding certain styles is necessary, modifying styles is supported through the use of component-specific `--mod` prefixed properties. [More on this below]( ### Using components in your project Spectrum CSS components have build output that is designed to be used in a variety of ways: * `index.css` - _Preferred and most commonly used to incorporate Spectrum CSS into a project_. This file includes the component's styles and variable definitions. In this version, token-driven CSS properties[1](#token-footnote) are mapped to empty `--mod` prefixed variables (for customization) with a fallback to variables prefixed with `--spectrum` (sourced from the design tokens). * This file loads both the `.spectrum` and `.spectrum--express` contexts which are used to toggle components between two different [visual styles]( The `.spectrum` context is the default. * `index-vars.css` - _Deprecated_. This file is identical to `index.css`. It is provided as a fallback for older implementations that may have been using it and will be removed. It is recommended to use `index.css` instead. * `index-base.css`: This file mimics the `index.css` output, but does not include the `.spectrum` or `.spectrum--express` contexts. * If your product only requires the `.spectrum` context, you can use `index-base.css` plus `themes/spectrum.css` from the `themes` directory to render the default Spectrum visual language. * The `.spectrum--express` context, on the other hand, is dependent on/expands on the default `.spectrum` context. This means if you only want to use the Express context, you still need to include `themes/spectrum.css`. In this case, we recommend using `index.css` instead since it includes both contexts by default. * This approach can also be used when you have defined and written your own visual language and only need the base component styles from Spectrum CSS. To wire up your own visual language, you would need to define your own custom properties that match those defined in the `themes/*.css` assets. * `index-theme.css`: This file provides only the visual language for a component. It is used in conjunction with `index-base.css` and when loaded together, provides the same result as using `index.css` by itself. 1: Token-driven CSS properties are properties whose values are mapped to a value in the `@spectrum-css/tokens` package. These values represent design-language and are meant to be used across platforms. In contrast, properties specific to web-based implementations will not have a token value assigned, so not all CSS properties will use custom properties. #### Including assets Start by including the base set of variables: ```css /* Include tokens */ @import ""node_modules/@spectrum-css/tokens/dist/index.css""; /* For components with no other contexts available, load the index.css file from the component's package. These are components that do not have a spectrum or express context available. */ @import ""node_modules/@spectrum-css/page/dist/index.css""; @import ""node_modules/@spectrum-css/typography/dist/index.css""; @import ""node_modules/@spectrum-css/icon/dist/index.css""; /* Recommended: For components with multiple contexts available, if you want access to all contexts, load the index.css file, which includes all contexts and component variables. */ @import ""node_modules/@spectrum-css/button/dist/index.css""; /* If you only need the spectrum visual context: For components with multiple contexts available, load only the spectrum context by sourcing index-base.css and the spectrum theme from the themes directory. */ @import ""node_modules/@spectrum-css/button/dist/index-base.css""; @import ""node_modules/@spectrum-css/button/dist/themes/spectrum.css""; ``` Tokens values are mapped to context-specific classes which can be applied to the `` element or any place in your DOM where you wish to encapsulate or alter the visual language of your Spectrum components. All contexts you want to use must be defined in order to load all the appropriate custom properties for the components you are using. #### Global variables ##### Visual language * `.spectrum` - The default visual language for Spectrum CSS * `.spectrum--express` - A variant of the standard visual language. _This visual language will be deprecated in Spectrum 2_. ##### Scales Scales represent the browsing context of the user. They are used to adjust the size of components to improve readability and usability on different devices. * `.spectrum--medium` - The default scale for Spectrum CSS, used for desktop and tablet devices * `.spectrum--large` - A larger scale for Spectrum CSS, used for mobile devices and other small screens to create a more touch-friendly experience ##### Themes (colorstops) Themes represent the color scheme of the user's browsing context. They are used to adjust the color of components to improve readability and usability in different environments. * `.spectrum--light` - The default theme for Spectrum CSS, used for light mode * `.spectrum--dark` - A darker theme for Spectrum CSS, used for dark mode Other themes are available but are in the process of being deprecated and should not be used in new projects. #### Context example Put together, we would define the context for our application in the following way: ```html ``` To switch to Express, **add** the `.spectrum--express` class to the `` element: ```html ``` Note the `spectrum--express` class is added to the existing classes; `spectrum` should always be present to ensure the correct visual language is loaded. Because CSS custom properties honor the cascading nature of CSS, you can infinitely nest different contexts. For example, you could have a `.spectrum--dark` context inside of a `.spectrum--light` context, and components will honor the innermost context. ### Modifying components You can override variables and modify Spectrum CSS' look and feel by re-defining the custom properties in context. Look for the **Custom Property API** section in each component to determine which custom properties you can override. See [Action Button for a complete example]( ### Importing UI icons Some components require certain ""UI icons"" to render. These icons are released within the [`@spectrum-css/ui-icons`]( package and are used by components like `@spectrum-css/icon` and `@spectrum-css/actionbutton`. Based on [which scales]( you'll be using, you can choose to load different files: * `spectrum-css-icons.svg` - Both medium and large icons for responsive UIs that support both `.spectrum--medium` and `.spectrum--large` * `spectrum-css-icons-medium.svg` - Medium icons only, supports `.spectrum--medium` only * `spectrum-css-icons-large.svg` - Large icons only, supports `.spectrum--large` only **Note:** If you're using `spectrum-css-icons.svg`, be sure to add `.spectrum--medium` or `.spectrum--large` to the `` element, or you'll see both medium and large icons at once. ### Importing workflow icons If your app has any level of complexity, you'll need ""workflow"" icons to indicate actions. These icons are not required to render the base components, and instead are used within buttons or menu items for actions like share, play, ju... [TRUNCATED]","194, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, bug, skip_vrt, enhancement, sync to jira, ready-for-review, a11y, run_vrt, jira ticket created, documentation, do not merge, dependencies, S2, wip, ready-to-merge, question, ask design, triage, testing, size-8 XL, size-3 M, research, low priority, build, breaking change, blocked, wontfix, tokens, tech debt, sync from jira, storybook"
cc-chat,Concept-Collective/cc-chat,65,"['CSS', 'Lua']","['fivem', 'redm']","CC Chat - Chat Theme CC Chat is a chat theme that includes a custom message template for FiveM's default chat resource. Discord - Documentation - Report Bug - Request Feature ### Showcase Screenshots ### Important Notice **If CC Chat is a dependency for another resource you can ignore this notice.** Please note that this resource **does not include** any pre-written commands or chat messages; you will need to **create them yourself**. It is designed for people who have some experience with scripting. Only those who have some idea of what they're doing will be given support. ### Features - Custom text input box - Custom suggestions box - A ready-to-use chat template - Anti-spam system - [Font Awesome]( icons (v6.2.1) - Completely customisable - Free Forever ### Installation Official guide to installing **CC Chat**. **Dependencies** - [Chat]( **Download** - Download the [latest releases]( of cc-chat. **Install** - Create a new folder in your resources folder named ``cc-chat`` - Extract the archive's contents to your ``cc-chat`` folder. - ensure ``cc-chat`` anywhere after the default ``chat`` resource in your ``server.cfg``. ### Support - [Discord]( -------- ### License For an updated license, check the ``License`` file. That file will always overrule anything mentioned in the ``readme.md`` cc-chat - Concept Collective Copyright 2024 Concept Collective. All rights reserved. You can use and edit this code to your liking as long as you don't ever claim it to be your own code and always provide proper credit. You're not allowed to sell cc-chat or any code you take from it. If you want to release your own version of cc-chat, you have to link the original GitHub repo, or release it via a Forked repo.","39, Code, Issues, Pull requests, Actions, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
obsidian-modular-css-layout,efemkay/obsidian-modular-css-layout,799,['CSS'],"['css', 'markdown']","# Modular CSS Layout for Obsidian This is a repository for modular CSS layout hack for use with [Obsidian.md]( It's meant to complement/assist Community Theme, focusing solely on providing alternative layout to standard width and standard top-bottom block view. I mainly do casual test on select popular themes like ITS, Primary, Shimmering Focus, Prism, and Minimal. Need your help to let me know if there's anything not working right. Do log in [MCL GH Issue]( if you find anything not working properly. ### Table of Content - [Install/Download](#installation--download-and-enable) - [Wide Views](#wide-views) - [Multi Column](#multi-column) - [Gallery Cards](#gallery-cards) - [Support Me](#support-me) ## Installation / Download and Enable This is actually just a CSS code snippets collection. So it isn't an installation per se, but rather download and enable in Obsidian. The best way is to use Mara Li's [Snippet Downloader]( plugin as I have plans to update this snippets from time to time ## Wide Views > CSS snippet: `MCL Wide Views.css` > This section only briefly explains Wide Views snippet. Please go through the documentation site [Wide Views - Modular CSS Layout]( for more details. This snippet provides you the following features: - Full width page or blocks (dataview, table and backlinks) per page/note basis by specifying custom `cssClass` at the frontmatter (YAML) - `wide-page` - `wide-dataview` - `wide-table` - `wide-callout` - `wide-backlinks` - vault-wide toggle for each of the above - Narrow width page per page/note basis for vault with RLL disabled by specifying custom `cssClass` at the frontmatter (YAML) - `narrow-page` - Adjustable RLL (custom css class toggle) applicable to entire vault - Disabled by default. Enable it via Style Settings plugin > [!TIP] > Thanks to Obsidian updated Electron base to V21, I have managed to avoid using Contextual Typography plugin to support wide blocks with the release of [v0.9.6]( #### Example ```markdown --- cssClass: wide-page --- ``` ## Multi Column > CSS snippet: `MCL Multi Column.css` > > This section only briefly explains Multi Column snippet. Please go through the documentation site [Multi Column - Modular CSS Layout]( for more details. This snippet provides you the following features: - Multi Column layout using Callout i.e. `> [!multi-column]` - List Column/Grid/Card layout using (Unordered) list by either (a) using tag, (b) using Markdown Attributes plugin, or (c) specifying in the frontmatter (YAML) - Float (Aside) Callout using callout metadata e.g. `> [!info|right-medium]` ### Multi Column Callout Multi Column Callout layout take advantage of Obsidian Callout - leveraging it as parent div to house the sub callout (including Dataview results block). You can nest as many sub-callouts within it. The sub-callout will expand if [!multi-column] callout has extra space or overflow to next row if it doesnt. #### Example of Multi Column Callout > *Example below is for the three callouts side-by-side in the picture above* > [!multi-column] > >> [!note]+ Use Case >> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. >> ##### User Case Background >> Vitae nunc sed velit dignissim sodales. In cursus turpis massa tincidunt dui ut ornare lectus. > >> [!warning]+ Resources >> #### Requirement >> - Lorem ipsum dolor sit amet >> - Vitae nunc sed velit dignissim sodales. >> - In cursus turpis massa tincidunt dui ut ornare lectus. > >> [!todo]+ >> - [x] Define Use Case >> - [ ] Craft User Story >> - [ ] Develop draft sketches > note that when you insert callout within callout, the line separating the callouts should only use single angle bracket ("">"") ### List Column/Grid/Card This layout take advantage of markdown unordered list (i.e. `- list item`) to create multi column (and multi row for List Grid/Card) layout by matching with an identifier i.e. either `#mcl` tag, Markdown Attributes plugin syntax, or `cssclass:` key at frontmatter. Here are quick reference on the syntax for List Column/Grid/Card | Type | Using Tag | MD Attr plugin | Frontmatter | |---|---|---|---| | LCol |`#mcl/list-column`|`two-column-list-block` `three-column-list-block` `four-column-list-block` `multi-column-list-block`|`two-column-list` `three-column-list` `four-column-list` `multi-column-list`| | LGrd |`#mcl/list-grid` `#mcl/list-grid-wide`|-|`two-column-grid-list` `three-column-grid-list`| | LCrd |`#mcl/list-card` `#mcl/list-card-wide`|-|-| > Note: LCol = List Column // LGrd = List Grid // LCrd = List Card #### Example of List Grid *Example below is for the ""Goals and Objectives"" in the picture above* ```markdown ## List Grid Example - Goals and Objectives - #### Core Work #mcl/list-grid - [[00 Home|Main Goal 1]] - [[00 Home|Main Goal 2]] - [[00 Home|Main Goal 3]] - Collaboration with Jane - [[00 Home|Main Goal 4]] - #### Learning & System - [[00 Home|Learning Goal 1]] - [[00 Home|Initiative 1]] - [[00 Home|Initiative 2]] - #### Personal - [[00 Home|Personal Goal 1]] - [[00 Home|Personal Goal 2]] ``` ### Float Callout Float Callout will allow you to position side note or info box either to the left or right of the main note with other content wrapping around it. It uses callout-metadata to specify which side to float to and the size of the callout You can apply to any callout as the identifier is done on the callout-metadata i.e. after the `|` in `[!|]`. Table below gives some understanding of the syntax structure. |Apply in LP? | Which Side? | Preset FC Size | Example | |---|---|---|---| |`` `float`|`left``right`|`small` `medium` `large`| `[!info\|float-right-medium]` `[!blank\|right-small]`| ## Gallery Cards > CSS snippet: `MCL Gallery Cards.css` > > This section only briefly explains Gallery Cards snippet. Please go through the documentation site [Gallery Cards - Modular CSS Layout]( for more details. This snippet provides you the following features: - Image gallery using callout by specifying the callout-metadata `gallery` e.g. `> [!NOTE|gallery]` - Image gallery using YAML/frontmatter .`cssClass: image-gallery` - Float Image using image alt-text - Image and Mermaid Diagram Controls - Dimension control for images in bullet list - Image Zoom - Mermaid Scale and Zoom ### Float Image Float Image is similar to Float Callout but apply directly to the images (doesnt require you to wrap it in a callout). Currently it uses image caption to identify how you want to float it, but in the future I intend to make it work with anchor tag `#` as well. You can apply to any image as the identifier is done on the alt-text i.e. after the `|` in `[[path/to/image.jpg|alt-text]]` or the text inside `[]` in `[alt-text](path/to/image.jpg)`. Table below gives some understanding of the syntax structure. |Apply in LP? | Which Side? | Preset FC Size | Example | |---|---|---|---| |`` `float`|`left``right`|`small` `medium` `large`| `[[image.jpg\|float-right-medium]]` `[right-small](image.jpg)`| ## Support Me I do this on my free time for personal joy. However, a cup of coffee or two would motivate me further! If you like what I do, and want to contribute back, you can support me via Ko-fi","72, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, enhancement, wontfix, question, invalid, help wanted, good first issue, duplicate, documentation, bug"
sakai-vue,primefaces/sakai-vue,436,"['CSS', 'Vue', 'JavaScript']",[],This template should help get you started developing with Vue 3 in Vite. ## Customize configuration See [Vite Configuration Reference]( ## Project Setup ```sh npm install ``` ### Compile and Hot-Reload for Development ```sh npm run dev ``` ### Compile and Minify for Production ```sh npm run build ``` ### Lint with [ESLint]( ```sh npm run lint ```,"238, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
KernelSU,tiann/KernelSU,8544,"['Kotlin', 'C', 'Rust']","['android', 'kernel', 'root', 'su', 'kernelsu']","**English** | [Espaol](README_ES.md) | [](README_CN.md) | [](README_TW.md) | [](README_JP.md) | [](README_KR.md) | [Polski](README_PL.md) | [Portugus (Brasil)](README_PT-BR.md) | [Trke](README_TR.md) | [](README_RU.md) | [Ting Vit](README_VI.md) | [Indonesia](README_ID.md) | [](README_IW.md) | [](README_IN.md) # KernelSU A Kernel-based root solution for Android devices. []( []( []( []( [](/LICENSE) ## Features 1. Kernel-based `su` and root access management. 2. Module system based on [OverlayFS]( 3. [App Profile]( Lock up the root power in a cage. ## Compatibility State KernelSU officially supports Android GKI 2.0 devices (kernel 5.10+). Older kernels (4.14+) are also compatible, but the kernel will have to be built manually. With this, WSA, ChromeOS, and container-based Android are all supported. Currently, only `arm64-v8a` and `x86_64` are supported. ## Usage - [Installation Instruction]( - [How to build?]( - [Official Website]( ## Translation To help translate KernelSU or improve existing translations, please use [Weblate]( PR of Manager's translation is no longer accepted, because it will conflict with Weblate. ## Discussion - Telegram: [@KernelSU]( ## Security For information on reporting security vulnerabilities in KernelSU, see [SECURITY.md](/SECURITY.md). ## License - Files under the `kernel` directory are [GPL-2.0-only]( - All other parts except the `kernel` directory are [GPL-3.0-or-later]( ## Credits - [kernel-assisted-superuser]( the KernelSU idea. - [Magisk]( the powerful root tool. - [genuine]( apk v2 signature validation. - [Diamorphine]( some rootkit skills.","1.4k, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, enhancement, wontfix, upstream, rust, question, javascript, java, invalid, help wanted, good first issue, github_actions, duplicate, documentation, dependencies, bug, add-device"
nowinandroid,android/nowinandroid,15571,"['Kotlin', 'Shell']","['android', 'jetpack-compose', 'kotlin']","Now in Android App ================== **Learn how this app was designed and built in the [design case study]( [architecture learning journey](docs/ArchitectureLearningJourney.md) and [modularization learning journey](docs/ModularizationLearningJourney.md).** This is the repository for the [Now in Android]( app. It is a **work in progress** . **Now in Android** is a fully functional Android app built entirely with Kotlin and Jetpack Compose. It follows Android design and development best practices and is intended to be a useful reference for developers. As a running app, it's intended to help developers keep up-to-date with the world of Android development by providing regular news updates. The app is currently in development. The `prodRelease` variant is [available on the Play Store]( # Features **Now in Android** displays content from the [Now in Android]( series. Users can browse for links to recent videos, articles and other content. Users can also follow topics they are interested in, and be notified when new content is published which matches interests they are following. ## Screenshots # Development Environment **Now in Android** uses the Gradle build system and can be imported directly into Android Studio (make sure you are using the latest stable version available [here]( Change the run configuration to `app`. The `demoDebug` and `demoRelease` build variants can be built and run (the `prod` variants use a backend server which is not currently publicly available). Once you're up and running, you can refer to the learning journeys below to get a better understanding of which libraries and tools are being used, the reasoning behind the approaches to UI, testing, architecture and more, and how all of these different pieces of the project fit together to create a complete app. # Architecture The **Now in Android** app follows the [official architecture guidance]( and is described in detail in the [architecture learning journey](docs/ArchitectureLearningJourney.md). # Modularization The **Now in Android** app has been fully modularized and you can find the detailed guidance and description of the modularization strategy used in [modularization learning journey](docs/ModularizationLearningJourney.md). # Build The app contains the usual `debug` and `release` build variants. In addition, the `benchmark` variant of `app` is used to test startup performance and generate a baseline profile (see below for more information). `app-nia-catalog` is a standalone app that displays the list of components that are stylized for **Now in Android**. The app also uses [product flavors]( to control where content for the app should be loaded from. The `demo` flavor uses static local data to allow immediate building and exploring of the UI. The `prod` flavor makes real network calls to a backend server, providing up-to-date content. At this time, there is not a public backend available. For normal development use the `demoDebug` variant. For UI performance testing use the `demoRelease` variant. # Testing To facilitate testing of components, **Now in Android** uses dependency injection with [Hilt]( Most data layer components are defined as interfaces. Then, concrete implementations (with various dependencies) are bound to provide those interfaces to other components in the app. In tests, **Now in Android** notably does _not_ use any mocking libraries. Instead, the production implementations can be replaced with test doubles using Hilt's testing APIs (or via manual constructor injection for `ViewModel` tests). These test doubles implement the same interface as the production implementations and generally provide a simplified (but still realistic) implementation with additional testing hooks. This results in less brittle tests that may exercise more production code, instead of just verifying specific calls against mocks. Examples: - In instrumentation tests, a temporary folder is used to store the user's preferences, which is wiped after each test. This allows using the real `DataStore` and exercising all related code, instead of mocking the flow of data updates. - There are `Test` implementations of each repository, which implement the normal, full repository interface and also provide test-only hooks. `ViewModel` tests use these `Test` repositories, and thus can use the test-only hooks to manipulate the state of the `Test` repository and verify the resulting behavior, instead of checking that specific repository methods were called. To run the tests execute the following gradle tasks: - `testDemoDebug` run all local tests against the `demoDebug` variant. - `connectedDemoDebugAndroidTest` run all instrumented tests against the `demoDebug` variant. **Note:** You should not run `./gradlew test` or `./gradlew connectedAndroidTest` as this will execute tests against _all_ build variants which is both unecessary and will result in failures as only the `demoDebug` variant is supported. No other variants have any tests (although this might change in future). ## Screenshot tests A screenshot test takes a screenshot of a screen or a UI component within the app, and compares it with a previously recorded screenshot which is known to be rendered correctly. For example, Now in Android has [screenshot tests]( to verify that the navigation is displayed correctly on different screen sizes ([known correct screenshots]( Now In Android uses [Roborazzi]( to run screenshot tests of certain screens and UI components. When working with screenshot tests the following gradle tasks are useful: - `verifyRoborazziDemoDebug` run all screenshot tests, verifying the screenshots against the known correct screenshots. - `recordRoborazziDemoDebug` record new ""known correct"" screenshots. Use this command when you have made changes to the UI and manually verified that they are rendered correctly. Screenshots will be stored in `modulename/src/test/screenshots`. - `compareRoborazziDemoDebug` create comparison images between failed tests and the known correct images. These can also be found in `modulename/src/test/screenshots`. **Note:** The known correct screenshots stored in this repository are recorded on CI using Linux. Other platforms may (and probably will) generate slightly different images, making the screenshot tests fail. When working on a non-Linux platform, a workaround to this is to run `recordRoborazziDemoDebug` on the `main` branch before starting work. After making changes, `verifyRoborazziDemoDebug` will identify only legitimate changes. For more information about screenshot testing [check out this talk]( # UI The app was designed using [Material 3 guidelines]( Learn more about the design process and obtain the design files in the [Now in Android Material 3 Case Study]( (design assets [also available as a PDF](docs/Now-In-Android-Design-File.pdf)). The Screens and UI elements are built entirely using [Jetpack Compose]( The app has two themes: - Dynamic color - uses colors based on the [user's current color theme]( (if supported) - Default theme - uses predefined colors when dynamic color is not supported Each theme also supports dark mode. The app uses adaptive layouts to [support different screen sizes]( Find out more about the [UI architecture here](docs/ArchitectureLearningJourney.md#ui-layer). # Performance ## Benchmarks Find all tests written using [`Macrobenchmark`]( in the `benchmarks` module. This module also contains the test to generate the Baseline profile. ## Baseline profiles The baseline profile for this app is located at [`app/src/main/baseline-prof.txt`](app/src/main/baseline-prof.txt). It contains rules that enable AOT compilation of the critical user path taken during app launch. For more information on baseline profiles, read [this document]( > [!NOTE] > The baseline profile needs to be re-generated for release builds that touch code which changes app startup. To generate the baseline profile, select the `benchmark` build variant and run the `BaselineProfileGenerator` benchmark test on an AOSP Android Emulator. Then copy the resulting baseline profile from the emulator to [`app/src/main/baseline-prof.txt`](app/src/main/baseline-prof.txt). ## Compose compiler metrics Run the following command to get and analyse compose compiler metrics: ```bash ./gradlew assembleRelease -PenableComposeCompilerMetrics=true -PenableComposeCompilerReports=true ``` The reports files will be added to [build/compose-reports](build/compose-reports). The metrics files will also be added to [build/compose-metrics](build/compose-metrics). For more information on Compose compiler metrics, see [this blog post]( # License **Now in Android** is distributed under the terms of the Apache License (Version 2.0). See the [license](LICENSE) for more information.","2.7k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, bug, enhancement, testing, version update, p1, documentation, p2, waiting, refactor, p0, help wanted, good first issue, feature, continuous-integration, wontfix, up for grabs, question, invalid, github_actions, flaky-ci, duplicate, do-not-merge, discuss, dependencies, bugfix"
Unciv,yairm210/Unciv,7820,"['Kotlin', 'Dockerfile', 'Shell']","['civilization-v', 'android', 'libgdx', 'civilization', 'game']","# Unciv - Civ V remake for Android & Desktop []( []( []( []( []( []( []( []( []( ## What is this? An open source, moddability-focused Android and Desktop remake of Civ V, made with LibGDX ## Is this any good? Depends what you're looking for. If you're in the market for high-res graphics, amazing soundtracks, animations etc, I highly recommend Firaxis's Civ-V-like game, ""Civilization V"". If you want a small, fast, moddable, FOSS, in-depth 4X that can still run on a potato, you've come to the right place :) ## What's the roadmap? In this order: * Polish! As you may have noticed, Unciv is fully functional but rough around the edges. This means: * UI+UX improvements ([suggestions welcome!]( * Better automation, AI etc. in-game * G&K mechanics - espionage, small other changes (see [#4697]( * BNW mechanics - trade routes, world congress, etc. ## Contributing Programmers start [here]( Translators start [here]( Modders start [here]( You can join us in any of the open issue, or work on improving anything you want - once you're finished, issue a pull request and it'll go into the next version! If not, you can help by spreading the word - vote for Unciv where you can, mention it on Reddit or Twitter etc, and help us with new ideas of how to get the word out! ## FAQ ## How do I install? - **Android** - [Google Play]( or [F-droid]( - **Windows/Linux** - [itch.io]( Flatpak via [Flathub]( or [AUR]( - **Raspberry Pi** - [Pi-apps]( - **MacOS** - Install [with this guide]( - Jars, APKs and Windows/Linux builds also available in [Releases]( (run jar with `java -jar Unciv.jar`) - *not recommended* since we update frequently and you will quickly become out-of-date - [Build from scratch]( if that's your thing ### How about IOS? I'm not planning on it. It means paying money to Apple, yet another release path, and since I don't have an IOS device it means I can't test it properly. ### Steam release? Steam has decided that they don't want to host Unciv, they probably don't want to risk legal issues with Firaxis (although those should be non-existent, see below) ### Will you implement {feature}? If it's in the original Civ V, then yes! If not, then the feature won't be added to the base game - possibly it will be added as a way to mod the game, which is constantly expanding #### Why not? This is its own game, why not add features that weren't in Civ V? Having a clear vision is important for actually getting things done. Anyone can make a suggestion. Not all are good, viable, or simple. Not many can actually implement stuff. As an open source project, this stuff is done in our spare time, of which there isn't much. We need a clear-cut criteria to decide what to work on and what not to work on. #### Will you implement Civ VI? Considering how long it took to get this far, no. ### How can I learn to play? Where's the wiki? All the tutorial information is available in-game at menu > civilopedia > tutorials All the information is included in the amazing [Civ V wiki]( Since this is a Civ V clone, you can search Google for how to play Civ V and there are loads of answers =) Alternatively, you could [join us on Discord]( and ask there =D ### Aren't you basically making a Civ V clone? Is that even legal? According to the [US Copyright Office FL-108]( intellectual property rights *do not* apply to mechanics - as I'm sure you know, there are a billion Flappy Bird knockoffs It is definitely illegal: - To use any assets from the original game (images, sound etc) - they belong to Firaxis It is probably illegal (no solid sources on this): - To use the Civilization name - To impersonate the Civ games (so calling yourself civi|zation with a similar logo, for instance) Interestingly, [Civilization is a registered trademark]( but it looks like it's only *that particular logo* which is trademarked, so technically you could make another game called ""Civilization"" and it'll stick. In any case we're not going there :) ## Run with Docker []( If you have docker compose installed: ```$ docker compose build && docker compose up``` and then goto If just docker: ```$ docker build . -t unciv && docker run -d -p 6901:6901 -p 5901:5901 unciv ``` Or just use our already built one: ```$ docker run -d -p 6901:6901 -p 5901:5901 ghcr.io/yairm210/unciv ``` and then goto ## [Credits and 3rd parties](docs/Credits.md)","1.5k, Code, Issues, Pull requests, Actions, Security, Insights, bug, feature, Will not stale, AI, help wanted, Stale, Conflicts, enhancement, UI, Missing saved game, wontfix, Documentation, performance, not enough translations, mergeable translation, Toolchain, Solved, Contains Saved Game"
TranslationPlugin,YiiGuxing/TranslationPlugin,10967,"['Kotlin', 'HTML', 'Java']","['jetbrains-ides', 'android-studio', 'plugin', 'translation', 'translate']","# [![TranslationPlugin][plugin-logo]][gh:translation-plugin] TranslationPlugin [![Plugin Homepage][badge:plugin-homepage]][plugin-homepage] [![Build Status][badge:build]][gh:workflows-build] [![License][badge:license]][gh:license] [![GitHub releases][badge:release]][gh:releases] [![Version][badge:version]][plugin-versions] [![Downloads][badge:downloads]][plugin-homepage] [![Financial Contributors on Open Collective][badge:open-collective]][open-collective] Translation plugin for IntelliJ based IDEs/Android Studio. [![Getting Started][badge:get-started-en]][get-started-en] [![][badge:get-started-zh]][get-started-zh] [![][badge:get-started-jp]][get-started-ja] [![][badge:get-started-ko]][get-started-ko] --- [ [ [ [ [ [ [ --- - [Features](#features) - [Compatibility](#compatibility) - [Installation](#installation) - [Using the Plugin](#using-the-plugin) - [Actions](#actions) - [FAQ](#faq) - [Support and Donations](#support-and-donations) - [Contributors](#contributors) - [Code Contributors](#code-contributors) - [Financial Contributors](#financial-contributors) ## Features - Multiple Translation Engines - Microsoft Translator - Google Translate - DeepL Translator - OpenAI Translator - Youdao Translate - Baidu Translate - Alibaba Translate - Multiple languages inter-translation - Text-to-speech - Microsoft Edge TTS - Google TTS - OpenAI TTS - Document translation - Automatic word selection - Automatic word breaks - Word Book ## Compatibility - Android Studio - Aqua - AppCode - CLion - DataGrip - DataSpell - GoLand - HUAWEI DevEco Studio - IntelliJ IDEA Community - IntelliJ IDEA Ultimate - MPS - PhpStorm - PyCharm Community - PyCharm Professional - Rider - RubyMine - RustRover - WebStorm ## Installation - **Installing from the plugin repository within the IDE:** - Preferences(Settings) > Plugins > Marketplace > Search and find "" Translation"" > Install Plugin. - **Installing manually:** - Download the plugin package on [GitHub Releases][gh:releases] or in the [JetBrains Plugin Repository][plugin-versions]. - Preferences(Settings) > Plugins > > Install plugin from disk... > Select the plugin package and install (no need to unzip) Restart the **IDE** after installation. ## Using The Plugin 1. **Sign up for a translation service (optional)** Most translation services require user registration to access their services (such as OpenAI, DeepL, Youdao Translate, etc.). Therefore, you may need to create an account, obtain an **Authentication Key**, and then bind the **Authentication Key** within the pluginPreferences(Settings) > Tools > Translation > General > Translation Engine > Configure... 2. **Begin translating** Select a text or hover the mouse over the text > Right-click > Translate Or use shortcuts for translation, as detailed in **[Actions](#actions)**. 3. **Translate and replace** Translate the target text and replace it. If the target language is English, the output has several formats: **in camel case, with a word separator** (when the output contains multiple words, the separator can be configured in the plugin configuration page: Translation Settings > Translate and replace > Separator) and in the **original format**. Instructions: Select a text or hover the mouse over the text > Right-click > Translate and Replace... (Or use shortcuts for translation, as detailed in **[Actions](#actions)**). 4. **Translate documents** Preferences(Settings) > Tools > Translation > Other > Translate documents: When you check this option, the document will be automatically translated when you view it. 5. **Switch engines** Click the engine widget in the status bar or use the shortcut Ctrl + Shift + S (Mac OS: Control + Meta + Y) to switch between the translation engine and the TTS engine quickly. ## Actions - **Show Translation Dialog...** Open the translation dialog, which appears by default on the toolbar. Default shortcut: - Windows - Ctrl + Shift + O - Mac OS - Control + Meta + I - **Translate** Extract words and translate them. If you have already selected a text, extract the words from the portion of the text you'd like to translate. Otherwise, words are extracted automatically from the maximum range (this extraction can be configured in Settings). This action is displayed by default in the editor's right-click context menu. Default shortcut: - Windows - Ctrl + Shift + Y - Mac OS - Control + Meta + U - **Translate(Inclusive)** Extract words and translate them. Automatically extract and translate all words from a specific range, ignoring manually selected text. Default shortcut: (None) - **Translate(Exclusive)** Extract words and translate them. Automatically extract the nearest single word, ignoring manually selected text. Default shortcut: (None) - **Translate and Replace...** Translate and replace. The word extraction method works the same as when **translating**. Default shortcut: - Windows - Ctrl + Shift + X - Mac OS - Control + Meta + O - **Translate Documentation** Translate the contents of document comments. This option is displayed by default in the editor's context menu (right-click to access) and is available when the cursor is in the document's comment block. Default shortcut: (None) - **Toggle Quick Documentation Translation** Toggle between the original and translated texts in Quick Documentation. This option is available when the focus is on the Quick Documentation pop-up window or the documentation tool window. Default shortcut (same as **translation** shortcut): - Windows - Ctrl + Shift + Y - Mac OS - Control + Meta + U - **Translate Text Component** Translate selected text in some text components (e.g. Quick Docs, popup hints, input boxes...). This does not support automatic word extraction. Default shortcut (same as **translation** shortcut): - Windows - Ctrl + Shift + Y - Mac OS - Control + Meta + U - **Switch Engine** Quickly switch between translation engine and TTS engine. Default shortcut: - Windows - Ctrl + Shift + S - Mac OS - Control + Meta + Y - **Word of the Day** Display the 'Word of the Day' dialog box. Default shortcut: (None) - **Other** - Translation dialog shortcuts: - Display the list of source languages - Alt + S - Display the list of target languages - Alt + T - Switch between languages - Alt + Shift + S - Pin/unpin a window - Alt + P - Play TTS - Alt/Meta/Shift + Enter - Save to Word Book - Ctrl/Meta + F - Show history - Ctrl/Meta + H - Copy translation - Ctrl/Meta + Shift + C - Clear input - Ctrl/Meta + Shift + BackSpace/Delete - Expand more translations - Ctrl/Meta + Down - Hide more translations - Ctrl/Meta + UP - Translation balloon shortcuts: - Open dialog - Ctrl + Shift + Y / Control + Meta + U - Quick Documentation window shortcuts: - Enable/disable automatic translation - Ctrl + Shift + Y / Control + Meta + U ## FAQ > *If you have any questions, please ask [here][gh:discussions-q-a].* 1. **What should I do if there is a network error or the network connection times out?** **A:** - Check the network environment and make sure the network is running smoothly. - Check whether a proxy is preventing the plugin from accessing the translation API. - Check the IDE proxy configuration to see if that is the cause of the problem. 2. **What should I do if the translated content appears garbled?** **A:** Garbled code generally appears when there is a lack of corresponding characters in the font. You can go to the Settings page of the plugin to modify the font in order to fix the garbled code (as shown below). ![screenshots][file:settings-font] 3. **What if I can't save the application key?** **A:** You can try changing the way passwords are saved to `In KeePass` (Settings > Appearance & Behavior > System Settings > Passwords). For more details: - For macOS, please refer to [#81][gh:#81] - For Linux, please refer to [#115][gh:#115] 4. **What if the shortcuts don't work?** **A:** The shortcut keys are most likely not working because they are being used in other plugins or external applications. You can reset shortcut keys for the corresponding operations. ## Support and Donations You can contribute and support this project by doing any of the following: * Star the project on GitHub * Give feedback * Commit PR * Contribute your ideas/suggestions * Share the plugin with your friends/colleagues * If you love this plugin, please consider donating. It will inspire me to continue development on the project: Open Collective WeChat Pay Alipay > **Note** > > After using Alipay/WeChat to pay for your donation, please provide your name/nickname and website by leaving > a message or via email in the following format: > > `Name/Nickname [][: message]` (website and message are optional.) > > Example: `Yii.Guxing : I like the plugin!` > > If you choose to send an email, please also provide the following information: > ```text > Donation Amount: > Payment Platform: Alipay/WeChat Pay > Payment Number (last 5 digits): > ``` > Email address: [yii.guxing@outlook.com][mailto] (click to send email) > > The name, website and total donation amount you provide will be added to > the [donor list][file:financial-contributors]. **Thank you for your support!** ## Contributors ### Code Contributors This project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)]. ### Financial Contributors Become a financial contributor and help us sustain our community. [[Contribute][open-collective-contribute]] #### Backers Thank you to all our backers! [[Become a backer]( #### Sponsors Support this project by becoming a sponsor! Your logo will show up here with a link to your website. [[Become a sponsor][open-collective-contribute]] #### Donors | **Name** | **Website** | **Amount** | |------------|------------------------------------------------------------|------------| | | | 425.00 CNY | | | | 120.00 CNY | | | [github.com/fobgochod]( | 110.00 CNY | | Kimmy | | 100.00 CNY | | LiMingjun | | 100.00 CNY | | DarknessTM | [github.com/darknesstm]( | 100.00 CNY | | Sunlife95 | | 100.00 CNY | | @ | | 100.00 CNY | |... [TRUNCATED]","765, Code, Issues, Pull requests, Discussions, Actions, Wiki, Security, Insights, feature request ✨, PR welcome, feature ✨, enhancement ✨, java, dependencies, bug 🐛, question ❔, in progress 🚧, 重复, 有道又挂了..., wontfix, wont implement, ui 🎨, typos ✒, too many requests ⛔, release changelog 📑, ready for release ⌛, published 🚀, postponed 🚥, not plugin's bug, not following template ❗, no reply, network 📡, need more information ❕, merged, 📢, keep watching 👀, invalid, idea 💡"
chatgpt-android,skydoves/chatgpt-android,3561,['Kotlin'],"['android', 'chat', 'chatgpt', 'compose', 'jetpack']","**ChatGPT Android** demonstrates [OpenAI's ChatGPT]( on Android with [Stream Chat SDK for Compose]( The primary objective of this repository is to showcase the following: - Demonstrating [OpenAI's chat APIs]( - Creating comprehensive UI elements utilizing Jetpack Compose. - Incorporating Android architecture components using Jetpack libraries such as Hilt and AppStartup. - Executing background tasks efficiently through Kotlin Coroutines and WorkManager. - Seamlessly integrating chat systems via the [Stream Chat SDK for Compose]( to facilitate real-time event handling. ## Previews ## Stream Chat & Video SDKs **ChatGPT Android** is built with __[Stream Chat SDK for Compose]( to implement messaging systems. If youre interested in adding powerful In-App Messaging or real-time Video Chat to your app, check out the __[Android Chat Messaging Tutorial]( or __[Android Video Call Tutorial]( ! - [Stream Chat SDK for Android on GitHub]( - [Android Samples for Stream Chat SDK on GitHub]( - [Stream Chat Compose UI Componenets Guidelines]( If you're interested in building a real-time meeting room with video/audio calling, audio room, or livestreaming, check out the references below: - [Stream Video SDK for Android on GitHub]( - [Video Call Tutorial]( / [Audio Room Tutorial]( / [Livestream Tutorial]( ## How to build the project? For proper project setup, it's essential to follow the instructions below. In most cases, you can complete all configuration steps within 10 to 20 minutes: 1. Go to the __[Stream login page]( 2. If you have your GitHub or Google account, click the **Continue with GitHub** or **Continue with Google** button and you can sign up within a couple of seconds. 3. Go to the __[Dashboard]( and click the **Create App** button like the below. 4. Fill in the blanks like the below and click the **Create App** button. 5. You will see the **Key** like the figure below and then copy it. 6. Create a new file named **secrets.properties** on the root directory of this Android project, and add the key to the `secrets.properties` file like the below: ```gradle STREAM_API_KEY=.. ``` 7. Go to your __[Dashboard]( again and click your App. 9. In the **Overview** menu, you can find the **Authentication** category by scrolling to the middle of the page. 10. Switch on the **Disable Auth Checks** option and click the **Submit** button like the figure below. 11. Click the **Explorer** tab on the left side menu. 12. Click **users** -> **Create New User** button sequentially and add fill in the user like the below: - User Name: `Chat GPT` - User ID: `70ef052a-da88-4451-af92-99f7ed335a71` 13. Now, it's time to set up the OpenAI API key. Go to __[OpenAI API Dashboard]( login with your Google account and click **Start verification** to verify your phone number to create an API key. 14. After verifying your phone number, click the **Create new secret key** on the page like the image below and create your API key: 15. Copy and paste your API key to the `secrets.properties` file as named `GPT_API_KEY` under the `STREAM_API_KEY` field: ```gradle GPT_API_KEY=.. ``` 16. Unlock Rate limits for OpenAI APIs As per the guidelines outlined in their [Rate limits]( documentation, access to the free tier of the API is __granted after a minimum expenditure of $5 since the creation of your account__. That means, you should register your payment method to the OpenAI and purchase initial credits. So you should go to the [OpenAI Billings]( and click the **Add payment details** button like the image below: 17. Once you've added your payment deatils, you'll able to see the **Add to creadit balance** button like the image below: Next, click the **Add to credit balance** button to purchase the initial credit. As you've discovered in the previous step, the minimum credit starts from $5. Therefore, if you only intend to utilize the API limits for testing or building a side project, you can opt for the minimum pricing. Also, not that it's advisable to disable the automatic recharge option to avoid unexpected charges. 18. Once you've completed all those steps above, now build, run and enjoy your the project! ## Troubleshooting You can typically find the reasons behind your error code by referring to the [OpenAI Error code documentation]( ### 401 Error If you encounter 401 errors while chatting with ChatGPT app, as shown in the image below, it's crucial to verify the correctness of your OpenAI API key. Ensure that there are no typos in your API key and that it has been correctly copied and pasted into the `secrets.properties` file, as outlined in the guidelines above. ### 429 Error If you encounter this error from the outset, it's likely that your rate limits do not meet the requirements. Please revisit step 16 in the guidelines above for further instructions. ## Tech Stack & Open Source Libraries - Minimum SDK level 21. - 100% [Jetpack Compose]( based + [Coroutines]( + [Flow]( for asynchronous and cold streams. - [Compose Chat SDK for Messaging]( The Jetpack Compose Chat Messaging SDK is built on a low-level chat client and provides modular, customizable Compose UI components that you can easily drop into your app. - [OpenAI Chat API]( Given a list of messages comprising a conversation, the model will return a response. - Jetpack - Compose: Androids modern toolkit for building native UI. - ViewModel: UI related data holder and lifecycle aware. - App Startup: Provides a straightforward, performant way to initialize components at application startup. - Navigation: For navigating screens and [Hilt Navigation Compose]( for injecting dependencies. - Room: Constructs Database by providing an abstraction layer over SQLite to allow fluent database access. - [Hilt]( Dependency Injection. - [WorkManager]( To achieve background processing with scheduling. - [Landscapist Glide]( [animation]( [placeholder]( Jetpack Compose image loading library that fetches and displays network images with Glide, Coil, and Fresco. - [Retrofit2 & OkHttp3]( Construct the REST APIs and paging network data. - [Sandwich]( Construct a lightweight and modern response interface to handle network payload for Android. - [Moshi]( A modern JSON library for Kotlin and Java. - [ksp]( Kotlin Symbol Processing API. - [Balloon]( Modernized and sophisticated tooltips, fully customizable with an arrow and animations for Android. - [viewmodel-lifecycle]( ViewModel Lifecycle allows you to track and observe Jetpack's ViewModel lifecycle changes. - [StreamLog]( A lightweight and extensible logger library for Kotlin and Android. - [Baseline Profiles]( To improve app performance by including a list of classes and methods specifications in your APK that can be used by Android Runtime. ## Architecture **ChatGPT Android** follows the [Google's official architecture guidance]( **ChatGPT Android** was built with [Guide to app architecture]( so it would be a great sample to show how the architecture works in real-world projects. The overall architecture is composed of two layers; UI Layer and the data layer. Each layer has dedicated components and they each have different responsibilities. The arrow means the component has a dependency on the target component following its direction. ### Architecture Overview Each layer has different responsibilities below. Basically, they follow [unidirectional event/data flow]( ### UI Layer The UI Layer consists of UI elements like buttons, menus, tabs that could interact with users and [ViewModel]( that holds app states and restores data when configuration changes. ### Data Layer The data Layer consists of repositories, which include business logic, such as querying data from the local database and requesting remote data from the network. It is implemented as an offline-first source of business logic and follows the [single source of truth]( principle. For more information about the overall architecture, check out **[Build a Real-Time WhatsApp Clone With Jetpack Compose]( ## Modularization **ChatGPT Android** adopted modularization strategies below: - **Reusability**: Modulizing reusable codes properly enable opportunities for code sharing and limits code accessibility in other modules at the same time. - **Parallel Building**: Each module can be run in parallel and it reduces the build time. - **Decentralized focusing**: Each developer team can assign their dedicated module and they can focus on their own modules. ## MAD Score ## Contribution Most of the features are not completed except the chat feature, so anyone can contribute and improve this project following the [Contributing Guideline]( ## Find this repository useful? Support it by joining __[stargazers]( for this repository. :star: Also, __[follow me]( on GitHub for my next creations! # License ```xml Designed and developed by 2022 skydoves (Jaewoong Eum) Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. ```","416, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, dependencies, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
rethink-app,celzero/rethink-app,2483,"['Kotlin', 'Java']","['android-app', 'firewall', 'android-firewall', 'dns-over-https', 'internet-freedom']","## Rethink DNS + Firewall + VPN for Android A [WireGuard]( client, an [OpenSnitch]( firewall and network monitor + a [pi-hole]( DNS over HTTPS client with blocklists. []( []( In other words, Rethink DNS + Firewall has three primary modes, VPN, DNS, and Firewall. The VPN (proxifier) mode supports multiple WireGuard upstreams in a split-tunnel configuration. The DNS mode routes all DNS traffic generated by apps to _any_ user chosen DNS-over-HTTPS or DNSCrypt resolver. The Firewall mode lets the user deny internet-access to entire applications based on events like screen-on / screen-off, app-foreground / app-background, unmetered-connection / metered-connection; or based on play-store defined categories like Social, Games, Utility, Productivity; or additionally, based on user-defined denylists. ### VPN / Proxifier Rethink supports forwarding TCP and UDP connections over SOCKS5, HTTP CONNECT, and WireGuard tunnels. Split-tunneling further helps run multiple such tunnels at the same time and lets users route different apps over different tunnels. For example, one could route Firefox over SOCKS5 connecting to Tor, Netflix over WireGuard connecting through any popular VPN provider, and Telegram or WhatsApp over censorship-resistant HTTP CONNECT endpoints at the same time. ### Firewall The firewall doesn't really care about the connections per se rather what's making those connections. This is different from the traditional firewalls but in-line with [Little Snitch]( [LuLu]( [Glasswire]( and others. Currently, per-app connection mapping is implemented by capturing `udp` and `tcp` connections managed by [`firestack`]( (written in golang) and asking [ConnectivityService for the owner]( an API available only on Android 10 or higher. `procfs` (`/proc/net/tcp` and `/proc/net/udp`) is read on-demand to track per-app connections like [NetGuard]( or OpenSnitch do, on Android 9 and lower versions. ### Network Monitor A network monitor is a per-app report-card of sorts on when connections were made, how many were made, and to where. Tracking TCP has turned out to be so far straight-forward. DNS packets are trickier to track, and so a rough heuristic is used for now, which may not hold good in all cases. ### DNS over HTTPS client Almost all of the network related code (`firestack`), including DNS over HTTPS split-tunnel, is a hard fork of [Jigsaw-Code/outline-go-tun2socks]( written in golang. The UI is vastly different but borrows minimally from [Jigsaw-Code/Intra]( A split-tunnel traps requests sent to the VPN's DNS endpoint and relays it to a DNS-over-HTTPS / DNSCrypt endpoint of the user's choosing, logging the end-to-end latency, time of request, the dns request query itself and its answer. ### The Rethink DNS Resolver A malware and ad-blocking DNS over HTTPS resolver at ` (deployed to 300+ locations world-wide via Cloudflare Workers) is the default DNS endpoint on the app, though the user is free to change that. A configurable DNS resolver that lets users add or remove denylists and allowlists, add rewrites, analyse DNS requests is launching late 2023. Right now, a free-to-use DNS over HTTPS endpoint with custom blocklists can be setup here: [rethinkdns.com/configure]( The resolver is deployed to [Fly.io]( at `max.rethinkdns.com` and [Deno Deploy]( at `rdns.deno.dev` too, apart from the default deployment on [Cloudflare Workers]( The resolver is open source software: [serverless-dns]( ### The Rethink Proxy Network Routing TCP connections over a serverless proxy (hosted on Cloudflare Workers) [will soon be part of Rethink]( Users would be able to self-host these or use the ones run by us for $1 month of unlimited bandwidth. This service is expected to be launching late 2023. The proxy is open source software: [serverless-proxy]( ### Community []( - The telegram community is super active and full of crypto-bros. Kidding. We are generally a welcoming bunch. Feel free to get in touch: [t.me/rethinkdns]( - Or, if you prefer [Matrix]( (which is bridged to Telegram). - Or, email us: [hello@celzero.com](mailto:hello@celzero.com) (we read all emails immediately and reply once we fix the issues being reported). - We regularly hangout in our subreddit: [r/rethinkdns]( - We're also kind of active on the bird app, mostly nerd-sniping other engs or shit-posting about our tech stack: [twitter/rethinkdns]( ### Translation Help translate Rethink DNS + Firewall on [Weblate]( []( ### What Rethink DNS + Firewall is not Rethink is not an anonymity tool: It helps users tackle unabated censorship and surveillance but doesn't lay claim to protecting a user's identity at all times, if ever. Rethink doesn't aim to be a feature-rich traditional firewall: It is more in-line with [Little Snitch]( than IP tables, say. Rethink is not an anti-virus: Rethink may stop users from phishing attacks, malware, scareware websites through its DNS-based blocklists, but it doesn't actively mitigate threats or even look for them or act on them, otherwise. ### What Rethink DNS + Firewall aspires to be To turn Android devices into user-agents: Something that users can control as they please without requiring root-access. A big part of this, for an always-on, always-connected devices, is capturing network traffic and reporting it in a way that makes sense to the end-users who can then take a series of actions to limit their exposure but not necessarily eliminate it. Take DNS for example-- for most if not all connections, apps send out a DNS request first, and by tracking just those one can glean a lot of intelligence about what's happening with the phone and which app's responsible. To deliver the promise of open-internet for all: With the inevitable ESNI standardization and the imminent adoption of DNS over HTTPS and DNS over TLS across operating systems, we're that much closer to an open internet. Of course, *Deep Packet Inspection* remains a credible threat that can't be mitigated with this, but it is one example of delivering maximum impact (circumvent internet censorship in most countries) with minimal effort (not requiring use of a VPN or access via IPFS, for example). Rethink would continue to make these technologies accessible in the most simplest way possible, especially the ones that get 90% of the way there with 10% effort. ## Development []( 1. Feel free to fork and send along a pull request for any reproducible bug fixes. 1. The codebase is raw and is lacking documentation and comprehensive tests. If you need help, feel free to create a Wikipage to highlight the pain with building, testing, writing, committing code. 2. Write descriptive commit messages that explain concisely the changes made. 3. Each commit must reference an open issue on the project. This is to make sure there isn't duplicated effort more than anything else. 2. If you plan to work on a feature, please create a github issue on the project first to kickstart the discussion before committing to doing any work. Again, this is to avoid duplicate work more than anything else. 3. Prod releases are usually once every 2 months, while betas are released bi-weekly. ## Tenets (unless you know better ones) We aren't there yet, may never will be but these are some tenets for the project for the foreseeable future. - Make it right, make it secure, make it resilient, make it fast. In that order. - Easy to use, no-root, no-gimmicks features that are anti-censorship and anti-surveillance. - Easy to use: Any of the 3B+ Android users must be able to use it. Think CleanMaster / Instagram levels of ease-of-use. - no-root: Shouldn't require root-access for any functionality added to it. - no-gimmicks: Misleading material bordering on scareware, for example. - anti-censorship: Features focused on helping bring an open internet to everyone, preferably in the most efficient way possible (both monetarily and technically). - Anti-surveillance: As above, but features that further limit (may not necessarily eliminate) surveillance by apps. - Incremental changes in balance with newer features. - For example, work on nagging UI issues or OEM specific bugs, must be taken up on equal weight to newer features, and a release must probably establish a good balance between the two. However; working on only incremental changes for a release is fine. - Opinionated. Chip-away complexity. Do not expect users to require a PhD in Computer Science to use the app. - No duplicate functionality. - A concerted effort to not provide too many tunable knobs and settings. To err on the side of easy over simple. - Ignore all tenets. - Common sense always takes over when tenets get in the way. - Must be distributable on the PlayStore, at least some toned down version of it. - This unfortunately means on-device blocklists aren't possible; however, [Cloudflare Gateway]( cloud-based per-user blocklists get us the same functionality. - Practice what you preach: Be obsessively private and secure. ## Backstory []( []( []( Internet censorship (sometimes ISP-enforced and often times government-enforced), unabated dragnet surveillance (by pretty much every company and app) stirred us upon this path. The three of us university classmates, [Mohammed]( [Murtaza]( [Santhosh]( got together in late 2019 in the sleepy town of Coimbatore, India to do something about it. Our main gripe was there were all these wonderful tools that people could use but couldn't, either due to cost or due to inability to grok Computer-specific jargon. A lot has happened since we started and a lot has changed but our focus has always been on Android and its 2B+ unsuspecting users. The current idea has been in the works for since May 2020, with the pandemic derailing a bit of progress, and a bit of snafu with abandoning our previous version in favour of the current fork, which we aren't proud of yet, but it is a start. All's good now that we've won a grant from the [Mozilla Builders MVP program]( to go ahead and build this thing that we wanted to... do so faster... and not simply ... [TRUNCATED]","126, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, bug, P2, P0, P1, enhancement, dependencies, P3, L050, L010, L100, user-request, L020, wontfix, question, invalid, help wanted, good first issue, duplicate, documentation"
BCR,chenxiaolong/BCR,1432,"['Kotlin', 'Shell', 'Python']",[],"# Basic Call Recorder []( [](./LICENSE) BCR is a simple Android call recording app for rooted devices or devices running custom firmware. Once enabled, it stays out of the way and automatically records incoming and outgoing calls in the background. ## Features * Supports Android 9 and newer * Supports output in various formats: * OGG/Opus - Lossy, smallest files, default on Android 10+ * M4A/AAC - Lossy, smaller files, default on Android 9 * FLAC - Lossless, larger files * WAV/PCM - Lossless, largest files, least CPU usage * Supports Android's Storage Access Framework (can record to SD cards, USB devices, etc.) * Per-contact auto-record rules * Quick settings toggle * Material You dynamic theming * No persistent notification unless a recording is in progress * No network access permission * Works with call screening on Pixel devices (records the caller, but not the automated system) * Supports both Magisk and KernelSU ## Non-features As the name alludes, BCR intends to be a basic as possible. The project will have succeeded at its goal if the only updates it ever needs are for compatibility with new Android versions. Thus, many potentially useful features will never be implemented, such as: * Support for old Android versions (support is dropped as soon as maintenance becomes cumbersome) * Workarounds for [OEM-specific battery optimization and app killing behavior]( * Workarounds for devices that don't support the [`VOICE_CALL` audio source]( (eg. using microphone + speakerphone) * Support for direct boot mode (the state before the device is initially unlocked after reboot) * Support for stock, unrooted firmware ## Usage 1. Download the latest version from the [releases page]( To verify the digital signature, see the [verifying digital signatures](#verifying-digital-signatures) section. 2. Install BCR as a system app. * **For devices rooted with Magisk/KernelSU**, simply flash the zip as a Magisk/KernelSU module from within the respective application. * **For OnePlus and Realme devices running the stock firmware (or custom firmware based on the stock firmware)**, also extract the `.apk` from the zip and install it manually before rebooting. This is necessary to work around a bug in the firmware where the app data directory does not get created, causing BCR to open up to a blank screen. * **For unrooted custom firmware**, flash the zip while booted into recovery. * **NOTE**: The `READ_CALL_LOG` permission is hard restricted in Android 10+, which prevents it from being granted, even via Android's settings. To remove this restriction, run via adb: ```bash # If rooted, run inside of `su`: CLASSPATH=/system/priv-app/com.chiller3.bcr/app-release.apk app_process / com.chiller3.bcr.standalone.RemoveHardRestrictionsKt # If unrooted, install BCR as both a user app and a system app: pm install /system/priv-app/com.chiller3.bcr/app-release.apk ``` * **NOTE**: If the custom firmware's `system` partition is formatted with `erofs`, then the filesystem is read-only and it is not possible to use this method. * Manually extracting the files from the `system/` folder in the zip will also work as long as the files have `644` permissions and the `u:object_r:system_file:s0` SELinux label. 3. Reboot and open BCR. If other call recorders are installed, make sure to disable their phone call recording functionality. On most devices, a phone call cannot be recorded by two apps at the same time. However, it is fine to have BCR record phone calls and another app record eg. VOIP calls. 4. Enable call recording and pick an output directory. If no output directory is selected or if the output directory is no longer accessible, then recordings will be saved to `/sdcard/Android/data/com.chiller3.bcr/files`. Note that on Android 12+, `/sdcard/Android/data/` is only accessible via USB or DocumentsUI (AOSP's built in file manager). When enabling call recording the first time, BCR will prompt for microphone, notification (Android 13+), call log, contacts, and phone permissions. Only microphone and notification permissions are required for basic call recording functionality. If additional permissions are granted, more information is added to the output filename. For example, the contacts permission will allow the contact name to be added to the filename. See the [permissions section](#permissions) below for more details about the permissions. 5. To install future updates, there are a couple methods: * If installed via Magisk, the module can be updated right from Magisk Manager's modules tab. Flashing the new version in Magisk manually also works just as well. * The `.apk` can also be extracted from the zip and be directly installed. With this method, the old version exists as a system app and the new version exists as a user-installed update to the system app. This method is more convenient if BCR is baked into the Android firmware image. ## Permissions * `CAPTURE_AUDIO_OUTPUT` (**automatically granted by system app permissions**) * Needed to capture the call audio stream. * `CONTROL_INCALL_EXPERIENCE` (**automatically granted by system app permissions**) * Needed to monitor the phone call state for starting and stopping the recording and gathering call information for the output filename. * `RECORD_AUDIO` (**must be granted by the user**) * Needed to capture the call audio stream. * `FOREGROUND_SERVICE`, `FOREGROUND_SERVICE_MICROPHONE` (**automatically granted at install time**) * Needed to run the call recording service. * `POST_NOTIFICATIONS` (**must be granted by the user on Android 13+**) * Needed to show notifications. * A notification is required for running the call recording service in foreground mode or else Android will not allow access to the call audio stream. * `READ_CALL_LOG` (**optional**) * If allowed, the name as shown in the call log can be added to the output filename. * This is also required to show the correct phone number when using call redirection apps. * `READ_CONTACTS` (**optional**) * If allowed, the contact name can be added to the output filename. It also allows auto-record rules to be set per contact. * `READ_PHONE_STATE` (**optional**) * If allowed, the SIM slot for devices with multiple active SIMs is added to the output filename. * `REQUEST_IGNORE_BATTERY_OPTIMIZATIONS` (**optional**) * If allowed, request Android to disable battery optimizations (app killing) for BCR. * This is usually not needed. The way BCR hooks into the telephony system makes it unlikely to be killed. * OEM Android builds that stray further from AOSP may ignore this. * `VIBRATE` (**automatically granted at install time**) * If vibration is enabled for BCR's notifications in Android's settings, BCR will perform the vibration. Android itself does not respect the vibration option when a phone call is active. Note that `INTERNET` is _not_ in the list. BCR does not and will never access the network. BCR will never communicate with other apps either, except if the user explicitly taps on the `Open` or `Share` buttons in the notification shown when a recording completes. In that scenario, the target app is granted access to that single recording only. ## Call redirection BCR has limited support for call redirection apps, like Google Voice. Redirected calls can be recorded only if the call redirection service uses standard telephone calls behind the scenes (instead of VOIP). There are several limitations when recording redirected calls compared to regular calls: * The call must not be a conference call. Otherwise, the filename will only show the call redirection service's proxy phone number. * Auto-record rules will not work properly. Redirected calls will never match any rules for specified contacts and will only match the `All other calls` rule. * During the call, BCR's notification will only show the call redirection service's proxy phone number. * BCR must be granted the call logs permission. * The dialer app must put the original phone number into the system call log. The AOSP and Google dialer apps do, but other OEM dialer apps might not. These limitations exist because when a call is redirected, only the dialer app itself is aware of the original phone number. The Android telephony system is not aware of it. BCR can only find the original phone number by searching the system call log when the dialer adds the entry at the end of the call. ## Filename template BCR supports customizing the template used for determining the output filenames of recordings. The default template is: ``` {date}[_{direction}|][_sim{sim_slot}|][_{phone_number}|][_[{contact_name}|{caller_name}|{call_log_name}]|] ``` ### Template syntax * Curly braces (`{var}`) are used to refer to variables. Variables are replaced by the value they represent. For example, `{phone_number}` is replaced by the actual phone number of the call. * Square brackets (`[{var}|default]`) are used for specifying fallbacks. For example, `[{contact_name}|{caller_name}|Unknown]` will insert the contact name if the number is in the contacts. Otherwise, it'll fall back to the caller ID or `Unknown` if neither the contact name nor caller ID exist. Falling back to an empty string is perfectly valid too. For example, `[{contact_name}|]` evaluates to either the contact name or nothing. ### Template variables * `{date}`: The timestamp of the call. The default timestamp format tries to be as unambiguous as possible and is in the form: `20230414_215701.088-0400`. A custom timestamp format can be specified with `{date:}`. For example, `{date:yyyy-MM-dd @ h.mm.ss a}` would produce `2023-04-14 @ 9.57.01 PM`. A full list of timestamp formatting characters can be found at: * For the file retention feature to work, the date must not immediately follow another variable. For example, `{phone_number}{date}` will cause file retention to be disabled, but `{phone_number} ({date})` works because there's some text ` (` between the two variables. * If the date format is changed, the old recordings should be manually renamed or... [TRUNCATED]","93, Code, Issues, Pull requests, Actions, Security, Insights, bug/limitation elsewhere, enhancement, question, bug, appreciation, wontfix, spam, no response, invalid, duplicate"
LibreTube,libre-tube/LibreTube,7845,"['Kotlin', 'Shell']","['kotlin', 'android', 'youtube']","[]( []( []( []( > **Note** > We don't accept feature or bug requests on these platforms. Kindly submit requests only on GitHub. []( []( []( Credits Readme Design and Banners by [XelXen]( Readme Screenshots by [ARBoyGo]( Readme Emoji is from [openmoji]( Icons [Default App Icon]( by [XelXen]( [Boosted Bird]( by [Margot Albert-Heuzey]( About YouTube has an extremely invasive [privacy policy]( which relies on using user data in unethical ways. They store a lot of your personal data - ranging from ideas, music taste, content, political opinions, and much more than you think. This project is aimed at improving the users' privacy by being independent from Google and bypassing their data collection. Therefore, the app is using the [Piped API]( which uses proxies to circumvent Google's data collection and includes some other additional features. If you have questions or need help, please make sure to read the [FAQ]( before asking for help at the community channels. The [Matrix room]( is considered as the main communication channel, all other forums or social media accounts are maintained by volunteers from the community but not the developer(s). Screenshots [](fastlane/metadata/android/en-US/images/phoneScreenshots/Screenshot_1.jpg) [](fastlane/metadata/android/en-US/images/phoneScreenshots/Screenshot_2.jpg) [](fastlane/metadata/android/en-US/images/phoneScreenshots/Screenshot_3.jpg) [](fastlane/metadata/android/en-US/images/phoneScreenshots/Screenshot_4.jpg) [](fastlane/metadata/android/en-US/images/phoneScreenshots/Screenshot_9.jpg) * For more [Screenshot]( Features - [x] No Ads - [x] User Accounts - [x] Subscriptions - [x] Subscription Groups - [x] User Playlists - [x] Playlist Bookmarks - [x] Watch/Search History - [x] SponsorBlock - [x] DeArrow - [x] ReturnYouTubeDislike - [x] Downloads Contributing Whether you have ideas, translations, design changes, code cleaning or really heavy code changes, help is always welcome. The more is done, the better it gets! Please respect our [Code of Conduct]( in order to keep all interactions and dicussions healthy. You can open and build the project like any other normal Android project by using Android Studio. If creating a pull request containing code changes, please make sure to format your code with `ktlint --code-style=android_studio -F` before. Please make sure the title of your pull request and the commit messages follow the [conventional commit types]( (e.g. `feat: support for xy`). The most common commit types are ""feat"", ""fix"", ""refactor"", ""ci"" and ""chore"". > **Note** > Any issue avoiding the issue template will be ignored and forced to be closed. Donate Donations can be made at: * * Contributions in any form are welcome! Translations Differences to NewPipe With NewPipe, the extraction is done locally on your phone, and all the requests sent towards YouTube/Google are done directly from the network you're connected to, which doesn't use a middleman server in between. Therefore, Google can still access information such as the user's IP address. Aside from that, subscriptions can only be stored locally. LibreTube takes this one step further and proxies all requests via Piped (which uses the NewPipeExtractor). This prevents Google servers from accessing your IP address or any other personal data. Apart from that, Piped allows syncing your subscriptions between LibreTube and Piped, which can be used on desktop too. If the NewPipeExtractor breaks, it only requires an update of Piped and not LibreTube itself. Therefore, fixes usually arrive faster than in NewPipe. While LibreTube only supports YouTube, NewPipe also allows the use of other platforms like SoundCloud, PeerTube, Bandcamp and media.ccc.de. Both are great clients for watching YouTube videos. It depends on the individual's use case which one fits their needs better. Privacy Policy and Disclaimer LibreTube aims to protect the privacy of its users. [Our Privacy Policy](/PRIVACY_POLICY.md) gives detailed information on which data the app stores in order to work, how it is being used, and how the project protects your personal information. It is recommended to read the privacy policy of LibreTube as well as the privacy policy of the instance you have chosen inside the app. ## License []( LibreTube is [Free Software]( You can use, study, share and modify it at your will. The app can be redistributed and/or modified under the terms of the [GNU General Public License version 3 or later]( published by the [Free Software Foundation]( Scroll to top","422, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, bug, enhancement, priority: low, help wanted, can't reproduce, wontfix, discussion, contribution-friendly, testers needed, release builds only, release blocker, question, priority: high, invalid, duplicate, dependencies"
RootEncoder,pedroSG94/RootEncoder,2409,"['Kotlin', 'Java', 'GLSL']","['rtmp', 'android', 'rtsp', 'java', 'encoder']","# RootEncoder for Android []( []( []( Sponsored with by Enterprise Grade APIs for Feeds & Chat. Try the Android Chat tutorial RootEncoder (rtmp-rtsp-stream-client-java) is a stream encoder to push video/audio to media servers using protocols RTMP, RTSP and SRT with all code written in Java/Kotlin Note: The library was renamed from rtmp-rtsp-stream-client-java to RootEncoder after add SRT protocol because the name has no sense anymore ## iOS version (under develop): ## Wiki ## Permissions: ```xml ``` ## Compile To use this library in your project with gradle add this to your build.gradle: ### Version 2.2.6 or less ```gradle allprojects { repositories { maven { url ' } } } dependencies { implementation 'com.github.pedroSG94.RootEncoder:rtplibrary:2.2.6' } ``` ### Version 2.2.7 or more ```gradle allprojects { repositories { maven { url ' } } } dependencies { implementation 'com.github.pedroSG94.RootEncoder:library:2.4.5' } ``` ## Features: - [x] Android min API 16. ### Encoder: - [x] Support [camera1]( and [camera2]( API - [x] Encoder type buffer to buffer. - [x] Encoder type surface to buffer. - [x] Audio noise suppressor. - [x] Audio echo cancellation. - [x] Disable/Enable video and audio while streaming. - [x] Switch camera while streaming. - [x] Change video bitrate while streaming (API 19+). - [x] AV1, H264, H265, G711, AAC and OPUS hardware/software encoding. - [x] Force video and audio Codec to use hardware/software encoding (Not recommended). - [X] Record MP4 file while streaming (API 18+). - [X] Set Image, Gif or Text to stream on real time. - [X] OpenGL real time filters. [More info]( - [x] Stream from video and audio files like mp4, webm, mp3, etc (Limited by device decoders). [More info]( - [x] Stream device screen (API 21+). ### RTMP: - [X] Get upload bandwidth used. - [x] RTSP auth (adobe and llnw). - [x] AV1, H265 ([Using RTMP enhanced]( H264, AAC and G711 support. - [x] RTMPS (under TLS) - [x] RTMPT and RTMPTS (tunneled and tunneled under TLS) - [x] AMF0 - [ ] AMF3 ### RTSP: - [X] Get upload bandwidth used. - [x] RTMP auth (basic and digest). - [x] AV1, H264, H265, AAC, G711 and OPUS support. - [x] TCP/UDP. - [x] RTSPS. ### SRT (beta): - [X] Get upload bandwidth used. - [X] H264, H265, AAC and OPUS support. - [X] Resend lost packets - [X] Encrypt (AES128, AES192 and AES256) - [ ] SRT auth. ### UDP (beta): - [X] Get upload bandwidth used. - [X] H264, H265, AAC and OPUS support. - [X] Unicast, Multicast and Broadcast support. - [X] MPEG2-TS support. ## Other related projects: ### 3rd party projects: Projects related with the library developed by other users. Contact with user owner if you have any problem or question. ## Real time filters: ### NOTE: In library version 2.0.9, the filters was refactored. Check the wiki link to migrate your implementation. ## Looking for sponsors This library need sponsors to get new devices or pay platforms to test and debug errors. Any donation or sponsor is welcome! If you are interested. You can contact me by email or donate directly on [Github]( or [Paypal]( Thank you! ## Use examples: ### Rotation example This is the recommend way to use the library. This example support screen rotation, stream orientation (vertical, horizontal) filters and change video/audio sources on fly: ### Screen example Example to stream using Screen as video source using a service to stream in background: ### From file example Code example to stream using a video file as video/audio source: ### Old Api example Code example for low API devices (Android API 16+):","752, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, enhancement, help wanted, wontfix, question, invalid, duplicate, dependencies, bug"
KeyMapper,keymapperorg/KeyMapper,923,"['Kotlin', 'Ruby', 'AIDL']","['keyboard', 'keymapping', 'keymapper', 'android', 'android-app']","**DEVELOPMENT STOPPED. LOOKING FOR MAINTAINER** > Well, working on this project was a fun ride ! This project has taught me so much about Android, software development and how to collaborate with an online community. It has been my dream to lead a big FOSS project with people from all over the world so a **huge** thank you goes to everyone that spread the word and helped on GitHub along the way . Unfortunately, I do not have any more time to work on this project - I'm now studying Computer Science at university and I have landed software-dev side jobs, which has taken up any free-time I did have to code on the side. > > A special thank you goes to everyone in the [Team]( for their long-term committment to the project and for being so engaged with the community . > The Discord server, website and app store listing will still be up! So don't worry, you can still map your keys to your heart's content. Key Mapper is a free and open source Android app that can remap your buttons and fingerprint reader gestures. The aim of this project is to allow anyone to map their buttons in any combination to anything. []( Check out the new [website]( for more information and help! ### How do I contribute? There are many ways to help with this project. Check out the contributing guide in the [documentation](","143, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, enhancement, bug, action, tv-only, key map, low-priority, priority, constraint, website, code enhancement, tester-found, app stores, translations, testing, tester required, regression"
snippets,android/snippets,523,"['Kotlin', 'Java']",[],"# Android Snippets This repository holds code snippets used in Android documentation on [developer.android.com]( The idea is that by having a small sample project that contains the code snippets from documentation, developers will gain more context on how to implement a specific API. In addition, by having CI running on this repo, we can ensure that the code snippets on developer.android.com is in a working condition. It is a work in progress, as many snippets are still embedded as static HTML. # Contributing We love contributions! See [CONTRIBUTING.md](./CONTRIBUTING.md) for guidelines.","134, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, snippet-bot:no-prefix-req, snippet-bot:force-run, question, invalid, help wanted, good first issue, enhancement, duplicate, dependencies, bug"
Kizzy,dead8309/Kizzy,491,['Kotlin'],"['android', 'discord', 'discord-rpc', 'jetpack-compose', 'material-3']","Kizzy A Discord Rich Presence manager for Android fully written in Kotlin. ## Quickstart Check out our [QuickStart Guide]( ## Download > **Warning** > If you're thinking about downloading a Kizzy clone or app from any third-party service (other than the ones listed in our repository), think again! We can't be held responsible for any issues that may arise with your account as a result. Stay safe and stick to our trusted download links for the genuine app. ## Screenshots ## Features - [x] Clickable buttons - [x] Detects current Running app - [x] Detects Current Playing media - [x] Optional timestamps - [x] Custom Status - [x] Save/Load presence configs - [x] Material You theme - [x] Translations - [x] Easy [Setup]( - [x] 300+ Predefined presets - [x] Create custom configs with your own images and links - [x] Preview Rpc in the app itself - [x] Runs in background even when screen is off - [x] Gif support - [x] External Url support (meaning you can give a url which points to an image on the web and discord will show it!) - [x] Use Images from Gallery ## Getting Started Read the Setup Guide from []( ## Build For building the app locally > Prerequisites: - Android Studio - Familiar with Gradle, Kotlin, Jetpack Compose > Clone the project ```console git clone ``` > Building - Open Android Studio - Import the project - Click on Build and Run > **Warning** > This app uses the Discord Gateway connection. Use this at your own risk. However people have been using custom rich presence for past 4-5 years and there's is still no case of account getting terminated. ## Translate See [Contribute for Translation]( ## Credits [Read You]( and [Seal]( for Ui Components [Material Color Utilities]( [Rich-Presence-U]( for Nintendo and Wii U games data [Logra]( for logs ui [Xbox-Rich-Presence-Discord]( for Xbox games data [Monet]( for Material3 palettes ## Licence **Kizzy** is an open source project under the GNU GPL 3.0 Open Source License , which allows you to use, reference, and modify the source code of **Kizzy** for free, but does not allow the modified and derived code to be distributed and sold as closed-source commercial software. For details, please see the full GNU GPL 3.0 Open Source License . See [Terms Of Service]( for more info","56, Code, Issues, Pull requests, Actions, Projects, Security, Insights, bug, enhancement, wontfix, todo, stale, question, invalid, help wanted, good first issue, duplicate, documentation, can't fix"
stripe-android,stripe/stripe-android,1222,"['Kotlin', 'Java', 'Ruby']","['stripe', 'stripe-sdk']","[]( # Stripe Android SDK []( []( []( > [!TIP] > Want to chat live with Stripe engineers? Join us on our [Discord server]( The Stripe Android SDK makes it quick and easy to build an excellent payment experience in your Android app. We provide powerful and customizable UI elements that can be used out-of-the-box to collect your users' payment details. We also expose the low-level APIs that power those UIs so that you can build fully custom experiences. Get started with our [ integration guides]( and [example projects](#examples), or [ browse the SDK reference]( > Updating to a newer version of the SDK? See our [migration guide]( and [changelog]( Table of contents ================= * [Features](#features) * [Releases](#releases) * [Installation](#installation) * [Requirements](#requirements) * [Configuration](#configuration) * [Getting Started](#getting-started) * [Examples](#examples) ## Features **Simplified Security**: Use the SDK to collect credit card numbers and remain [PCI compliant]( This means sensitive data is sent directly to Stripe instead of passing through your server. For more information, see our [Integration Security Guide]( **SCA-Ready**: The SDK automatically performs native [3D Secure authentication]( to comply with [Strong Customer Authentication]( regulation in Europe. **Native UI**: We provide native screens and elements to collect payment. For example, [PaymentSheet]( is a prebuilt UI that combines all the steps required to pay - collecting payment details, and confirming the payment - into a single sheet that displays on top of your app. **Google Pay**: Stripe is fully compatible with [Google Pay]( **Stripe API**: We provide [low-level APIs]( that correspond to objects and methods in the Stripe API. You can build a custom UI on top of this layer. **Localized**: We support the following localizations: Bulgarian, Catalan, Chinese (Hong Kong), Chinese (Simplified), Chinese (Traditional), Croatian, Czech, Danish, Dutch, English (US), English (United Kingdom), Estonian, Filipino, Finnish, French, French (Canada), German, Greek, Hungarian, Indonesian, Italian, Japanese, Korean, Latvian, Lithuanian, Malay, Maltese, Norwegian Bokml, Norwegian Nynorsk (Norway), Polish, Portuguese, Portuguese (Brazil), Romanian, Russian, Slovak, Slovenian, Spanish, Spanish (Latin America), Swedish, Turkish, Thai and Vietnamese. **Recommended usage** If you're selling digital products or services that will be consumed within your app, (e.g. subscriptions, in-game currencies, game levels, access to premium content, or unlocking a full version), and you plan to distribute it through the Google Play Store, you must use Googles's in-app purchase APIs. See the [Google Play Billing]( for more information. For all other scenarios you can use this SDK to process payments via Stripe. ## Releases * The [changelog](CHANGELOG.md) provides a summary of changes in each release. * The [migration guide](MIGRATING.md) provides instructions on upgrading from older versions. ## Installation ### Requirements * Android 5.0 (API level 21) and above * [Android Gradle Plugin]( 3.5.1 * [Gradle]( 5.4.1+ * [AndroidX]( (as of v11.0.0) ### Configuration Add `stripe-android` to your `build.gradle` dependencies. ``` dependencies { implementation 'com.stripe:stripe-android:20.44.0' } ``` ### Compatibility with Jetpack Compose `stripe-android` uses Jetpack Compose internally and expects consumers to use a compatible version: 20.22.0-20.31.0Compose UI 1.4.x 20.32.0-20.37.3Compose UI 1.5.x 20.37.4-CurrentCompose UI 1.5.x or Compose UI 1.6.x ## Getting Started ### Integration Get started with our [ integration guides]( and [example projects](#examples), or [ browse the SDK reference]( ### Examples - The [PaymentSheet example project]( demonstrates how to integrate and use our prebuilt ui (single-step and multi-step). - The [example project]( demonstrates other integrations, that give you more control over the user experience: - how to use the Stripe class's synchronous and asynchronous methods - how to use the CardFormView.","628, Code, Issues, Pull requests, Actions, Projects, Security, Insights, bug, feature, triaged, 3DS, work-cli, dependencies, enhancement, PaymentSheet, Styling, CardInputWidget, question, identity, PayLauncher, P3, Google Pay, CardMultilineWidget, CardFormView, wontfix, vertical-mode, invalid, integration, flake-fix, fix-in-progress, financial-connections, external-payment-methods, example, duplicate, catawiki, bypass, breaking"
Trail-Sense,kylecorry31/Trail-Sense,979,"['Kotlin', 'Python', 'HTML']","['android', 'barometer', 'altimeter', 'compass', 'gps']","# Trail Sense > Use your Android phone's sensors to assist with wilderness treks or survival situations. Designed for entirely offline use. []( []( []( Trail Sense is a tool, and just like any other tool that you bring into the wilderness, it's essential to have backup equipment and skills. As featured in the [#WeArePlay]( campaign! See the [Technical Blog / Research]( F-Droid Google Play ## Table of Contents - [Feature Roadmap](#feature-roadmap) - [Goals](#goals) - [Features](#features) - [Privacy](#privacy) - [Contributing](#contributing) - [FAQ](#faq) - [Support](#support) - [Open Source Credits](#open-source-credits) - [License](#license) ## Feature Roadmap (2024) The feature roadmap is a tentative outline of the major features that are planned to be completed in the next year. Smaller features may end up being implemented in between. - [x] Augmented reality - [ ] Automations - [ ] Path navigation - [ ] Experiment with the first plugin (Comms) ## Goals - Trail Sense must not use the Internet in any way, as I want the entire app usable when there is no Internet connection - Features must provide some benefits to people using the app while hiking, in a survival situation, etc. - Features should make use of the sensors on a phone rather than relying on stored information such as guides - Features must be based on peer-reviewed science or be verified against real world data - [Use Cases]( ## Features - Designed for hiking, backpacking, camping, and geocaching - Place beacons and navigate to them - Follow paths - Retrace your steps with backtrack - Use a photo as a map - Plan what to pack - Be alerted before the sun sets - Predict the weather - Use your phone as a flashlight - [And much more!]( See the need for a new feature? [Post it here!]( For a list of community contributed device feature support, [go here]( # Privacy Location information gathered by this application does not leave your device (as a matter of fact, this app doesn't use the Internet at all). The altitude and pressure history for the last 48 hours is stored in local app storage - this is used to determine weather forecasts. The last known location is also stored in app preferences to allow faster load times and support app functionality when the GPS can not be reached. The beacons and paths store their location information in a local SQLite database. All of this information is cleared when you clear the app storage or delete it. ## Permissions ### Sensitive - **POST_NOTIFICATIONS** - Allows Trail Sense to display notifications (backtrack, weather, sunset alerts, astronomy events, water boil timer, etc) - **When denied**: Alerts will not be displayed and some services may not function properly depending on your device manufacturer. - **ACCESS_FINE_LOCATION / ACCESS_COARSE_LOCATION** - Allows Trail Sense to retrieve your location for navigation, weather (sea level calibration), and astronomy. - **When denied**: You will have the ability to mock your location under Settings > Sensors > GPS. On Android 14+, backtrack and weather will be unavailable due to Android OS constraints. - **ACCESS_BACKGROUND_LOCATION** - Allows Trail Sense to retrieve your location for sunset alerts while in the background. On some devices, this will also improve the reliability of backtrack and weather monitor (though shouldn't be needed on most devices). - **When denied**: If you travel and do not open Trail Sense, but have Sunset Alerts enabled, the times will likely be inaccurate. - **ACTIVITY_RECOGNITION** - Allows Trail Sense to use your phone's pedometer for distance calculation. - **When denied**: The pedometer will not work. - **CAMERA** - Allows Trail Sense to use your camera on the sighting compass, clinometer, and for taking photos used by the Cloud Scanner, QR Code Scanner, and Photo Maps. - **When denied**: You will not be able to use the sighting compass, camera clinometer, or QR Code Scanner. You will need to pick an existing photo to use for the Cloud Scanner or Photo Maps. - **SCHEDULE_EXACT_ALARM** - Allows Trail Sense to post a notification at an exact time. This is used by the Clock tool (when updating system time) and Sunset Alerts. - **When denied**: The clock and sunset alerts may not be accurate (can be off by several minutes). ### Not sensitive (always granted) - **RECEIVE_BOOT_COMPLETED** - Allows Trail Sense to restart when you reboot your device. This will re-enable backtrack, weather monitor, and several other background services. - **FOREGROUND_SERVICE** - Allows Trail Sense to start foreground services, such as backtrack and weather monitor. - **FLASHLIGHT** - Allows Trail Sense to control the phone's flashlight. - **VIBRATE** - Allows Trail Sense to vibrate the phone. Used for haptic feedback on dials and on the metal detector tool. - **WAKE_LOCK** - Allows Trail Sense to reliably run services such as backtrack and weather monitor, especially when the frequency is under 15 minutes. # Debug features Only available on debug APKs / builds via Android Studio - Weather tool's barometer chart shows unsmoothed readings in background - Weather history, elevation history, path elevations, and latest cloud scan are logged to the files/debug folder in Trail Sense data as CSV files - Weather settings shows statistics timing (for weather monitor service) - Paths show statistics about timing (for backtrack service) # Contributing See the [CONTRIBUTING.md]( file for details on contributing to Trail Sense. # FAQ The FAQ has moved [to the wiki]( # Support The best way to support Trail Sense is to send me your feedback, share how you are using it, test nightly builds, or post your ideas for new features. # Open Source Credits - Thank you to everyone who tried out this app and opened issues, suggested features, provided translations, or tested debug builds for me - Please see the in app licenses for all open source licenses - Contributors and translators: - [showdownjs]( used for website markdown rendering [License]( # License []( - **[MIT license](LICENSE)**","66, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, p4, p3, help wanted, research, tool-paths, tool-photo-maps, tech-debt, tool-navigation, tool-weather, feature-request, tool-astronomy, tool-augmented-reality, settings, tool-tides, p2, sensor-gps, bug, tools, sensor-compass, tool-pedometer, tool-packing-lists, tool-battery, tool-beacons, sensor-altimeter, tool-flashlight, tool-convert, documentation, translations, tool-whistle, plugin"
ktlint,pinterest/ktlint,6033,"['Kotlin', 'Shell', 'Batchfile']","['kotlin', 'lint', 'linter']","Kotlin linter in spirit of standard/standard (JavaScript) and gofmt (Go). ## Key features - No configuration required - Built-in Rule sets - Built-in formatter - `.editorconfig` support - Several built-in reporters: `plain`, `json`, `html` and `checkstyle` - Executable jar - Allows extension with custom rule sets and reporters ## Quick start Follow steps below for a quick start with latest ktlint release. * Step 1: Install with brew ```shell brew install ktlint ``` See [download and verification from GitHub]( or [other package managers]( for alternative ways of installing ktlint. Or, use one of the [integrations like maven and gradle plugins]( * Step 2: Lint and format your code All files with extension `.kt` and `.kts` in the current directory and below will be scanned. Problems will be fixed automatically when possible. ```shell title=""Autocorrect style violations"" ktlint --format # or ktlint -F ``` See [cli usage]( for a more extensive description on using ktlint. ## Documentation User guide ### Legal This project is not affiliated with nor endorsed by JetBrains. All code, unless specified otherwise, is licensed under the [MIT]( license. Copyright (c) 2019 Pinterest, Inc. Copyright (c) 2016-2019 Stanley Shyiko.","498, Code, Issues, Pull requests, Actions, Security, Insights, Parked, up-for-grabs, import-ordering rule, chain-method-continuation rule, breaking-change, annotation-grouping rule, annotation rule, wrapping rule, unused-imports rule, type-parameter-list-spacing rule, trailing-space rule, trailing-comma rule, spacing-between-declarations-with-annotations rule, sarif reporting, question, property-wrapping rule, property-naming rule, parameter-list-wrapping rule, parameter-list-spacing rule, no-unused-imports rule, new rule, multiline-loop rule, multiline-if-else rule, multiline-expression-wrapping rule, modifier-list-spacing rule, max-line-length rule, ktlint-official-codestyle, java16+, insufficient-context-in-psi, indentation rule"
Flipper-Android-App,flipperdevices/Flipper-Android-App,1330,"['Kotlin', 'FreeMarker', 'CMake']","['android', 'flipperzero', 'hacktoberfest', 'flipper']","# Flipper Android App []( []( Mobile app to rule all Flipper's family ## Download []( []( Or get the app from the [Releases Section]( ## Module arch ``` instances app components core bridge feature1 feature2 ``` - `app` - Main application module with UI - `components/core` - Core library with deps and utils - `components/bridge` - Communication between android and Flipper - `components/*` - Features modules, which connect to root application","156, Code, Issues, Pull requests, Actions, Security, Insights, enhancement, bug, need info, dependencies, wontfix, wearos, spam, question, invalid, in-progress, help wanted, good first issue, github_actions, duplicate, documentation, discussions, deploy, blocked"
cloudstream,recloudstream/cloudstream,5646,"['Kotlin', 'Java', 'C++']","['android', 'video-streaming', 'media-center', 'home-theater', 'multimedia']","# CloudStream ** Warning: By default this app doesn't provide any video sources, you have to install extensions in order to add functionality to the app.** []( ### Features: + **AdFree**, No ads whatsoever + No tracking/analytics + Bookmarks + Phone and TV support + Chromecast + Extension system for personal customization ### Supported languages:","474, Code, Issues, Pull requests, Actions, Projects, Security, Insights, enhancement, bug, possible provider issue, duplicate, possible duplicate, not enough information, TODO, good first issue, potential extension, api, wontfix, question, invalid, help wanted, documentation"
Inure,Hamza417/Inure,904,"['Kotlin', 'Java', 'HTML']","['app', 'manager', 'tool', 'android', 'android-application']","# Inure App Manager An elegant Android app manager. ## Stats []( []( [&logo=github&logoColor=white)]( []( []( -839192?logo=android&logoColor=white) -566573?logo=android&logoColor=white) []( []( []( ## Download []( []( []( []( ## Buy (Full Version) [-Purchase-23a094?logo=gumroad&logoColor=white)]( [-Purchase-ea4335?logo=googleplay)]( [-Purchase-ffffff?logo=github)]( [-Purchase-FF5E5B?logo=kofi&logoColor=white)]( ## Featured - [**Android Weekly Issue #465**]( - [**""Inure, a beautifully animated Android App Manager.""** - _Android Dev Notes_]( - [**Top 5 Android Apps of the Week** - _NextPit_]( - [**5 Super Useful OPENSOURCE Apps for Android** - _TechDoc_]( - [**Best Android Apps - February 2023** - _HowToMen_]( - [**5 Magnificent Open Source Android Apps To Download Right NOW!** - _Anubhav Roy_]( - [**Top Android Apps! (May 2023)** - _Sam Beckman_]( - [**8 Legendary Android Apps You Must INSTALL NOW - May 2023!** - _Mr Android FHD_]( - [**Apps that Will LEVEL Up Your Smartphone Experience in 2023!** - _Sam Beckman_]( - [**The Most Functional App Ever!** - _Sam Beckman_]( - [**Top 10 Android Apps! (October 2023)** - _Matt Robb_]( - [**The Best Apps of 2023!** - _Sam Beckman_]( - [**Coolest Open Source projects of the week ** - _Ana Mogul_]( - [**10 Reasons to Root Your Phone in 2024!** - _Sam Beckman_]( ## About Inure is an Android application package manager irrespective of whether they're installed or not, it can scan through any app's internal components and modify them on the go. It also packs a nice looking Terminal Emulator, Usage Stats, Split/APK Installer and various other tools and many of them are waiting to be implemented as well. On top of that, Inure's all functionalities been made to work with both Root and Shizuku modes. Inure's development was started as an independent learning project which later has become one of the most ambitious and intuitive Android apps developed by a single person and is based 100% on custom UI APIs developed to be used only in this app with its own native theme engine, crash handler, image renderer and a beautiful animation framework. Along with it own UI perks, Inure also supports dynamic Material You colors with dedicated accent and theme color modes. The app is in stable testing stage. You can join app's [Telegram Group]( and get development related updates. ### Features See the [concise list of features of the app here](./FEATURES.md). ## Screenshots ### App's Interface | | | | |:---------------------------------------------------------------------:|:---------------------------------------------------------------------:|:---------------------------------------------------------------------:| | 0x01 | 0x02 | 0x03 | | | | | |:---------------------------------------------------------------------:|:---------------------------------------------------------------------:|:---------------------------------------------------------------------:| | 0x04 | 0x05 | 0x06 | | | | | |:---------------------------------------------------------------------:|:---------------------------------------------------------------------:|:---------------------------------------------------------------------:| | 0x07 | 0x08 | 0x09 | | | | | |:---------------------------------------------------------------------:|:---------------------------------------------------------------------:|:---------------------------------------------------------------------:| | 0x00 | 0x0A | 0x0B | | | | | |:---------------------------------------------------------------------:|:---------------------------------------------------------------------:|:---------------------------------------------------------------------:| | 0x0C | 0x0D | 0x0E | | | | | |:---------------------------------------------------------------------:|:---------------------------------------------------------------------:|:---------------------------------------------------------------------:| | 0x0F | 0x11 | 0x12 | | | | | |:---------------------------------------------------------------------:|:---------------------------------------------------------------------:|:---------------------------------------------------------------------:| | 0x13 | 0x14 | 0x15 | | | | | |:---------------------------------------------------------------------:|:---------------------------------------------------------------------:|:---------------------------------------------------------------------:| | 0x16 | 0x17 | 0x18 | | | | | |:---------------------------------------------------------------------:|:---------------------------------------------------------------------:|:---------------------------------------------------------------------:| | 0x19 | 0x1A | 0x1B | | | | | |:---------------------------------------------------------------------:|:---------------------------------------------------------------------:|:---------------------------------------------------------------------:| | 0x1C | 0x1D | 0x1E | | | | | |:---------------------------------------------------------------------:|:---------------------------------------------------------------------:|:---------------------------------------------------------------------:| | 0x1F | 0x20 | 0x21 | ### Accessibility Various accessibility features to make the app more accessible to users. Inure also supports an option to add more colors to interface of various types including Pastel, Coffee (soothing) and Retro (color blocked) for users who don't prefer monochromatic interface or have difficulty using it. Including that, Inure also supports highlighting clickable elements and divider for users who have difficulty in differentiating spaces between interface elements. Further more, it's also possible to disable all animations to reduce excessive motion in the app. Inure has options to adjust animation requirements over multiple levels from all animations to no animations with fine granularity. | | | | |:---------------------------------------------------------------------:|:---------------------------------------------------------------------:|:---------------------------------------------------------------------:| | 0x00 | 0x01 | 0x02 | ### Menus and Dialogs Inure has 3 different styles of Menu and Dialogs type depending on how they're required, the popup type used for quick actions follows the user thumb on the screen, the modal dialog is used to adjust panel level preferences and chip style dialog for managing filter flags and tags. These three work together to refine a good level of UX and UI without overloading the user with a lot of options. | | | | |:---------------------------------------------------------------------:|:---------------------------------------------------------------------:|:---------------------------------------------------------------------:| | 0x00 | 0x01 | 0x02 | If you've any questions or suggestions for design, please initiate a discussion or an issue. ## Contribute #### Include your app in Inure's FOSS panel If you are a developer and want your app to be listed in the FOSS panel of Inure and show a FOSS indicator alongside your app, there are two ways this can be done. 1. You can publish your app on F-Droid. Inure automatically marks the app as FOSS if it's available on F-Droid. 2. You can add `open_source` and `open_source_license` tag in your app's manifest file and Inure will fetch this info during the runtime and will include your app based on the flag. ```xml ``` #### Participate in Community Permission Descriptions Community permissions descriptions of some OEM or Developer defined permissions for native framework or system apps whose details Android doesn't or cannot provide. You can read the complete [guidelines here]( on how to contribute. #### Developers Inure's repo doesn't require any special setup, clone/fork the repo and run in [Android Studio]( and let the initial setup finish automatically and you'll be good to go. #### Not a developer? You can take participation in app's translation on [Crowdin]( and watch Inure work in your language and make the app more user friendly to everyone speaking your tongue. Alternatively, you can also edit/upload your locale's strings from `app/src/main/res/values-locale-code` directory. #### Want to show you were here? You cannot do the above still wanna show your support? hit the star and let me know you were here and appreciate the project. ## License **Inure App Manager** Copyright 2023 - Hamza Rizwan **Inure App Manager** is released as open source software under the [GPL v3]( license, see the [LICENSE](./LICENSE) file in the project root for the full license text. ## Behind The Scenes | | |:------------------------------------------:| | Designing of interface skeletons for Inure | | | |:---------------------------------------------:| | Audio Player interface design (later removed) | | | |:---------------------------------------:| | Presentation design for Batch interface |","52, Code, Issues, Pull requests, Discussions, Actions, Wiki, Security, Insights, feature request, enhancement, awaiting api support, bug, wontfix, wontadd, wip, question, out of scope, not planned, invalid, inactive, help wanted, good first issue, error, duplicate, documentation, cant reproduce, bad issue, Q/A"
Jetpack-Compose-Tutorials,SmartToolFactory/Jetpack-Compose-Tutorials,2561,['Kotlin'],"['android', 'jetpack-compose', 'jetpack-compose-tutorial', 'jetpack-compose-navigation', 'android-ui']","### Jetpack Compose Tutorials and Playground ## Overview Series of Tutorials to learn about Jetpack Compose, Material Widgets, State, Animation, and Navigation. Easy to search in code and in app. Each chapter module contains its own content in code. SearchBar can be used to search with a tag or description available for each tutorial. Recommended section is under constructions for now, when finished it will get recommended tags using previous searches using a database, domain with ViewModel. | Tutorial | Preview | |:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------| | 1-1 Column, Row, Box, ModifiersCreate Row that adds elements in horizontal order, and Column that adds elements in vertical order. Column Row Box Modifier | | | | | | 1-2 Surface, Shape, ClickableCreate and modify Surface to draw background for Composables, add click action to any composable. Set weight or offset modifiers. Surface Shape Clickable | | | | | ### Material Widgets | Tutorial | Preview | |:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------| | 2-1 TextCreate Text component with different properties such as color, background, font weight, family, style, spacing and others Text Row FontStyle Annotated String Hyperlink | | | | | | 2-2 Button, IconButton, FAB, ChipCreate button with text and/or with image, Floating Action Button or Chips. Modify properties of buttons including color, text, and click actions. Button IconButton FloatingActionButton Chip | | | | | | 2-3 TextFieldCreate TextField component with regular style or outlined. Set error, colors, state, icons, and IME actions. TextField OutlinedTextField IME Phone format VisualTransformation Regex | | | | | | 2-4 ImageCreate Image with image, vector resource or with Painter, set image and Content scales to fit, expand or shrink image. Change shape of Image or apply ColorFilter and PorterDuff modes. Image Canvas Drawable Bitmap | | | | | | 2-5 LazyColumn/Row/VerticalGridVertical, horizontal grid lists with LazyColumn, LazyRow and LazyVerticalGrid. Use contentPadding set paddings for lists, verticalArrangement or horizontalArrangement for padding between items, rememberLazyListState to manually scroll. LazyColumn(Vertical RecyclerView) LazyRow(Horizontal RecyclerView LazyVerticalGrid(GridLayout) StickyHeaders | | | | | | 2-6 TopAppbar & TabTopAppbar with actions, overflow menus. Tabs with text only, image only and image+text with different background, divider, and indicators. TopAppBar Overflow menu TabRow and Tab Tab Indicator, Divider | | | | | | 2-7 BottomNavigationBottom navigation bars allow movement between primary destinations in an app. BottomNavigation should contain multiple BottomNavigationItems, each representing a singular destination. BottomNavigation BottomNavigationItem | | | | | | 2-8 BottomAppBarA bottom app bar displays navigation and key actions at the bottom of screens. BottomAppBar Scaffold | | | | | | 2-9-1 Side NavigationA backdrop appears behind all other surfaces in an app, displaying contextual and actionable content. Scaffold Side Navigation DrawerState | | | | | | 2-9-2 ModalDrawerModal navigation drawers block interaction with the rest of an apps content with a scrim. They are elevated above most of the apps UI and dont affect the screens layout grid. ModalDrawer DrawerState Scaffold | | | | | | 2-10-1 BottomSheetCreate bottom sheet using BottomSheetScaffold and rememberBottomSheetScaffoldState, create modal bottom sheets. BottomSheetScaffold BottomSheetState ModalBottomSheetLayout | | | | | | 2-10-4 BottomDrawerBottomDrawer with BottomAppBar. BottomDrawer BottomAppBar Scaffold | | | | | | 2-10-5 BackdropScaffoldBackdropScaffold provides an API to put together several material components to construct your screen. | | | | | | 2-11 Snackbar, Progress, SelectionCreate Snackbars with various layouts and styling, Checkboxes with selectable text, tri state checkbox, grouped radio buttons and sliders. SnackBar ProgressIndicator Checkbox TriStateCheckbox Switch RadioButton Slider RangeSlider | | | | | | 2-12 Dialog, AlertDialogCreate Dialog, and AlertDialog with standard and custom layouts. Implement on dismiss logic and get result when dialog is closed. AlertDialog Dialog DialogProperties | | | | | ### Layout | Tutorial | Preview | |:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------| | 3-1-1 Custom ModifierCreate custom layout using using layout, Measurable, Constraint, Placeable. Custom Modifier Measurable Constraint Placeable | | | | | | 3-1-2 onGloballyPositionedUse Modifier.onGloballyPositioned to get position of a Composable in parent, root or window.br> Modifier onGloballyPositioned | | | | | | 3-1-3 graphicsLayerUse Modifier.offset{} and Modifier.graphicsLayer{} to scale, translate or change other properties of a Composable. Modifier graphicsLayer | | | | | | 3-1-4 BoxWithConstraintsBoxWithConstraints is a composable that defines its own content according to the available space, based on the incoming constraints or the current LayoutDirection. BoxWithConstraints Constraint | | | | | | | | 3-1-6 Chaining Size ModifiersObserve how chaining Modifier.size.size, Modifier.sizeIn.size or Modifier.size.requiredSize or other combination of size modifiers effect final Constraints. Modifier size/sizeIn requiredWidth/requiredHeight/requiredSize | | | | | | 3-1-7 Modifier.wrapContentSizeUse Modifier.wrapContentSize/Width/Height to use content constraints instead of Constraints forced by parent. Modifier Custom Layout Measurable | | | | | | 3-1-8 Modifier.layoutUse Modifier.layout to create LayoutModifier to measure with Constraints and place Placeables based on which order Modifier.layout is assigned. Modifier Custom Layout Measurable Constraints Placeable | | | | | | 3-2-1 Custom LayoutCreate custom layout using using MeasurePolicy and use intrinsic dimensions. Custom Layout Measurable Constraint Placeable | | | | | | 3-2-10 Constraints & Modifier.layoutConstraints to measure measurables with Constraints.offset and Constraints.constrainWidth to limit maximum width or available space for Placeable. Custom Layout Measurable Constraint Placeable Modifier.layout | | | | | | 3-3-1 Scope&ParentDataModifierAdd custom modifiers to Composable inside a custom layout using its scope like align modifier only available in specific Composable like a custom Column. Custom Layout Scope ParentDataModifier Measurable Constraint Placeable | | | | | | 3-5 SubcomposeLayoutSubcompose layout which allows to subcompose the actual content during the measuring stage for example to use the values calculated during the measurement as params for the composition of the children. SubcomposeLayout Constraint Measurable Constraint Placeable | | | | | | 3-6-1 Custom Chat Layouts1Custom layout like whatsapp chat layout that moves time and message read status layout right or bottom based on message width. Custom Layout Measurable Constraint Placeable | | | | | | 3-6-2 Custom Chat SubcomposeLayoutCustom layout like whatsapp chat. Added quote and name tag resized to longest sibling using SubcomposeColumn from previous examples to have whole layout. Custom Layout SubcomposeLayout Measurable Constraint Placeable | | | | | | 3-9 Visibility PercentageDetect percentage of visibility of a Composable using Modifier.onPlaced inside Column with vertical scroll or LazyColumn. Modifier LazyColumn LazyListState onPlaced | | | | | | 3-10 Center Item on ScrollDetect position in parent and center an item while its parent is scrolled. Modifier LazyColumn onPlaced | | | | | ### State | Tutorial | Preview | |:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------| | 4-1-1 Remember&MutableStateRemember and mutableState effect recomposition and states. remember State Recomposition | | | | | | 4-2-3 Scoped RecompositionHow hierarchy of Composables effects Smart Composition. remember Recomposition State | | | | | | 4-4 Custom RememberCreate a custom remember and custom component to have badge that changes its shape based on properties set by custom rememberable. remember State Recomposition Custom Layout | | | | | | 4-5-1 SideEffect1Use remember functions like rememberCoroutineScope, and rememberUpdatedState and side-effect functions such as LaunchedEffect and DisposableEffect. remember rememberCoroutineScope rememberUpdatedState LaunchedEffect DisposableEffect | | | | | | 4-5-2 SideEffect2Use SideEffect, derivedStateOf, produceState and snapshotFlow. remember SideEffect derivedStateOf produceStateOf snapshotFlow | | | | | | 4-7-3 Compose Phases3How deferring a state read changes which phases of frame(Composition, Layout, Draw) are called. Modifier Recomposition Composition Layout Draw | | | | | | 4-11-6 LazyList Scroll DirectionDetect scroll direction... [TRUNCATED]","251, Code, Issues, Pull requests, Actions, Projects, Security, Insights, help wanted, wontfix, question, invalid, good first issue, enhancement, duplicate, documentation, bug"
vico,patrykandpatrick/vico,1860,"['Kotlin', 'CSS']","['android-library', 'chart', 'charts', 'jetpack-compose', 'android']","# Vico Vico is a light and extensible chart library for Android. Its compatible with both Jetpack Compose and the view system, but its two main modules`compose` and `views`are independent. Learn more in [the wiki](","110, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, bug, done in alpha, high priority, medium priority, needs information, low priority, done in beta, documentation error"
intellij-rust,intellij-rust/intellij-rust,4521,"['Kotlin', 'Rust', 'Python']","['intellij', 'rust', 'clion', 'hacktoberfest']","# Deprecation notice This project is officially deprecated. If you are using [RustRover]( or [new Rust plugin for IntelliJ IDEA Ultimate or CLion]( please report your issue at the official tracker: See [our announcement]( for more details. # Rust plugin for the IntelliJ Platform []( [![JetBrains plugins][plugin-version-svg]][plugin-repo] [![JetBrains plugins][plugin-downloads-svg]][plugin-repo] | Build Status | | |--------------|------------------------------------------------------------------------------| | Check | [![Check Status][check-status-svg]][check-status] | | Stable | [![Stable Build Status][stable-build-status-svg]][stable-build-status] | | Beta | [![Beta Build Status][beta-build-status-svg]][beta-build-status] | | Nightly | [![Nightly Build Status][nightly-build-status-svg]][nightly-build-status] | ## Installation & Usage For installation options, see the [Quick Start Guide]( If you want to jump straight in, open `Settings > Plugins > Marketplace` in your IDE, search for _Rust_ and install the plugin. To open an existing project, use **File | Open** and point to the directory containing `Cargo.toml`. For creating projects, use the **Rust** template. All the plugin's features are described in [documentation]( New features are regularly announced in [changelogs]( ## Compatible IDEs The plugin is compatible with all IntelliJ-based IDEs starting from the version 2022.2, with the following differences in the sets of the available features: | | Open-source and Educational IDEs* | [CLion] | [IntelliJ IDEA] Ultimate, [GoLand] | [PyCharm] Professional | [WebStorm], [PhpStorm], other commercial IDEs | |------------------------|----------------------------------------------|---------|------------------------------------|------------------------|-----------------------------------------------| | [Language support] | + | + | + | + | + | | [Cargo support] | + | + | + | + | + | | [Code coverage] | + | + | + | + | + | | [Detecting duplicates] | - | + | + | + | + | | [Debugger] | - | + | +** | +** | - | | [Run targets] | - | + | + | - | - | | [Profiler] | - | + | - | - | - | | [Valgrind Memcheck] | - | + | - | - | - | \* [IntelliJ IDEA] Community Edition, [PyCharm] Community Edition, [PyCharm Edu], [IntelliJ IDEA Edu], and third-party IntelliJ-based IDEs. \** Requires the [Native Debugging Support]( plugin. LLDB only ## TOML If you are looking for the TOML plugin, see [toml] directory in [intellij-community]( repository. ## Contributing You're encouraged to contribute to the plugin if you've found any issues or missing functionality that you would want to see. Check out [CONTRIBUTING.md] to learn how to set up the project and [ARCHITECTURE.md] to understand the high-level structure of the codebase. If you are not sure where to start, consider the issues tagged with [help wanted]. [intellij-rust.github.io]: [website]: [help wanted]: [CONTRIBUTING.md]: CONTRIBUTING.md [ARCHITECTURE.md]: ARCHITECTURE.md [toml]: [plugin-repo]: [plugin-version-svg]: [plugin-downloads-svg]: [check-status]: [check-status-svg]: [stable-build-status]: [stable-build-status-svg]: [beta-build-status]: [beta-build-status-svg]: [nightly-build-status]: [nightly-build-status-svg]: [IntelliJ IDEA]: [CLion]: [PyCharm]: [GoLand]: [WebStorm]: [PhpStorm]: [PyCharm Edu]: [IntelliJ IDEA Edu]: [Detecting duplicates]: [Language support]: [Cargo support]: [Code coverage]: [Debugger]: [Run targets]: [Profiler]: [Valgrind Memcheck]:","379, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, bug, feature, subsystem::code insight, subsystem::type inference & name resolution, improvement, subsystem::highlighting, subsystem::debugger, subsystem::сompletion, subsystem::refactoring, subsystem::IDE, subsystem::macros, subsystem::tools, meta, subsystem::build & run, subsystem::tests, performance, subsystem::project model, subsystem::fmt, subsystem::ui, subsystem::proc-macros, help wanted, subsystem::toml, subsystem::qdoc, subsystem::doc coments, subsystem::cfg, subsystem::wsl, rust, subsystem::console & terminal, E-medium, subsystem::tools::external linter"
KMP-NativeCoroutines,rickclephas/KMP-NativeCoroutines,976,"['Kotlin', 'Swift', 'Java']","['ios', 'kotlin', 'swift', 'kotlin-coroutines', 'kotlin-multiplatform']","# KMP-NativeCoroutines A library to use Kotlin Coroutines from Swift code in KMP apps. ## Why this library? Both KMP and Kotlin Coroutines are amazing, but together they have some limitations. The most important limitation is cancellation support. Kotlin suspend functions are exposed to Swift as functions with a completion handler. This allows you to easily use them from your Swift code, but it doesn't support cancellation. > [!NOTE] > While Swift 5.5 brings async functions to Swift, it doesn't solve this issue. > For interoperability with ObjC all functions with a completion handler can be called like an async function. > This means starting with Swift 5.5 your Kotlin suspend functions will look like Swift async functions. > But that's just syntactic sugar, so there's still no cancellation support. Besides cancellation support, ObjC doesn't support generics on protocols. So all the `Flow` interfaces lose their generic value type which make them hard to use. This library solves both of these limitations . ## Compatibility The latest version of the library uses Kotlin version `2.0.0`. Compatibility versions for older and/or preview Kotlin versions are also available: | Version | Version suffix | Kotlin | KSP | Coroutines | |----------------|-------------------|:---------:|:----------:|:----------:| | **_latest_** | **_no suffix_** | **2.0.0** | **1.0.21** | **1.8.1** | | 1.0.0-ALPHA-30 | _no suffix_ | 1.9.24 | 1.0.20 | 1.8.1 | | 1.0.0-ALPHA-28 | _no suffix_ | 1.9.23 | 1.0.20 | 1.8.0 | | 1.0.0-ALPHA-25 | _no suffix_ | 1.9.22 | 1.0.17 | 1.8.0 | | 1.0.0-ALPHA-23 | _no suffix_ | 1.9.21 | 1.0.16 | 1.7.3 | | 1.0.0-ALPHA-21 | _no suffix_ | 1.9.20 | 1.0.14 | 1.7.3 | | 1.0.0-ALPHA-18 | _no suffix_ | 1.9.10 | 1.0.13 | 1.7.3 | | 1.0.0-ALPHA-17 | _no suffix_ | 1.9.0 | 1.0.12 | 1.7.3 | | 1.0.0-ALPHA-12 | _no suffix_ | 1.8.22 | 1.0.11 | 1.7.2 | | 1.0.0-ALPHA-10 | _no suffix_ | 1.8.21 | 1.0.11 | 1.7.1 | | 1.0.0-ALPHA-7 | _no suffix_ | 1.8.20 | 1.0.10 | 1.6.4 | You can choose from a couple of Swift implementations. Depending on the implementation you can support as low as iOS 9, macOS 10.9, tvOS 9 and watchOS 3: | Implementation | Swift | iOS | macOS | tvOS | watchOS | |----------------|:-----:|:----:|:-----:|:----:|:-------:| | Async | 5.5 | 13.0 | 10.15 | 13.0 | 6.0 | | Combine | 5.0 | 13.0 | 10.15 | 13.0 | 6.0 | | RxSwift | 5.0 | 9.0 | 10.9 | 9.0 | 3.0 | ## Installation The library consists of a Kotlin and Swift part which you'll need to add to your project. The Kotlin part is available on Maven Central and the Swift part can be installed via CocoaPods or the Swift Package Manager. Make sure to always use the same versions for all the libraries! ### Kotlin For Kotlin just add the plugin to your `build.gradle.kts`: ```kotlin plugins { id(""com.google.devtools.ksp"") version ""2.0.0-1.0.21"" id(""com.rickclephas.kmp.nativecoroutines"") version ""1.0.0-ALPHA-31"" } ``` and make sure to opt in to the experimental `@ObjCName` annotation: ```kotlin kotlin.sourceSets.all { languageSettings.optIn(""kotlin.experimental.ExperimentalObjCName"") } ``` ### Swift (Swift Package Manager) The Swift implementations are available via the Swift Package Manager. Just add it to your `Package.swift` file: ```swift dependencies: [ .package(url: "" exact: ""1.0.0-ALPHA-31"") ], targets: [ .target( name: ""MyTargetName"", dependencies: [ // Swift Concurrency implementation .product(name: ""KMPNativeCoroutinesAsync"", package: ""KMP-NativeCoroutines""), // Combine implementation .product(name: ""KMPNativeCoroutinesCombine"", package: ""KMP-NativeCoroutines""), // RxSwift implementation .product(name: ""KMPNativeCoroutinesRxSwift"", package: ""KMP-NativeCoroutines"") ] ) ] ``` Or add it in Xcode by going to `File` > `Add Packages...` and providing the URL: ` > [!NOTE] > The version for the Swift package should not contain the Kotlin version suffix > (e.g. `-new-mm` or `-kotlin-1.6.0`). > [!NOTE] > If you only need a single implementation you can also use the SPM specific versions with suffixes > `-spm-async`, `-spm-combine` and `-spm-rxswift`. ### Swift (CocoaPods) If you use CocoaPods add one or more of the following libraries to your `Podfile`: ```ruby pod 'KMPNativeCoroutinesAsync', '1.0.0-ALPHA-31' # Swift Concurrency implementation pod 'KMPNativeCoroutinesCombine', '1.0.0-ALPHA-31' # Combine implementation pod 'KMPNativeCoroutinesRxSwift', '1.0.0-ALPHA-31' # RxSwift implementation ``` > [!NOTE] > The version for CocoaPods should not contain the Kotlin version suffix (e.g. `-new-mm` or `-kotlin-1.6.0`). ### IntelliJ / Android Studio Install the [IDE plugin]( from the JetBrains Marketplace to get: * Annotation usage validation * Exposed coroutines warnings * Quick fixes to add annotations ## Usage Using your Kotlin Coroutines code from Swift is almost as easy as calling the Kotlin code. Just use the wrapper functions in Swift to get async functions, AsyncStreams, Publishers or Observables. ### Kotlin The plugin will automagically generate the necessary code for you! Just annotate your coroutines declarations with `@NativeCoroutines` (or `@NativeCoroutinesState`). #### Flows Your `Flow` properties/functions get a native version: ```kotlin import com.rickclephas.kmp.nativecoroutines.NativeCoroutines class Clock { // Somewhere in your Kotlin code you define a Flow property // and annotate it with @NativeCoroutines @NativeCoroutines val time: StateFlow // This can be any kind of Flow } ``` Generated code The plugin will generate this native property for you: ```kotlin import com.rickclephas.kmp.nativecoroutines.asNativeFlow import kotlin.native.ObjCName @ObjCName(name = ""time"") val Clock.timeNative get() = time.asNativeFlow() ``` For the `StateFlow` defined above the plugin will also generate this value property: ```kotlin val Clock.timeValue get() = time.value ``` In case of a `SharedFlow` the plugin would generate a replay cache property: ```kotlin val Clock.timeReplayCache get() = time.replayCache ``` #### StateFlows Using `StateFlow` properties to track state (like in a view model)? Use the `@NativeCoroutinesState` annotation instead: ```kotlin import com.rickclephas.kmp.nativecoroutines.NativeCoroutinesState class Clock { // Somewhere in your Kotlin code you define a StateFlow property // and annotate it with @NativeCoroutinesState @NativeCoroutinesState val time: StateFlow // This must be a StateFlow } ``` Generated code The plugin will generate these native properties for you: ```kotlin import com.rickclephas.kmp.nativecoroutines.asNativeFlow import kotlin.native.ObjCName @ObjCName(name = ""time"") val Clock.timeValue get() = time.value val Clock.timeFlow get() = time.asNativeFlow() ``` #### Suspend functions The plugin also generates native versions for your annotated suspend functions: ```kotlin import com.rickclephas.kmp.nativecoroutines.NativeCoroutines class RandomLettersGenerator { // Somewhere in your Kotlin code you define a suspend function // and annotate it with @NativeCoroutines @NativeCoroutines suspend fun getRandomLetters(): String { // Code to generate some random letters } } ``` Generated code The plugin will generate this native function for you: ```kotlin import com.rickclephas.kmp.nativecoroutines.nativeSuspend import kotlin.native.ObjCName @ObjCName(name = ""getRandomLetters"") fun RandomLettersGenerator.getRandomLettersNative() = nativeSuspend { getRandomLetters() } ``` #### Interface limitations Unfortunately extension functions/properties aren't [supported]( on Objective-C protocols. However this limitation can be ""overcome"" with some Swift magic. Assuming `RandomLettersGenerator` is an `interface` instead of a `class` we can do the following: ```swift import KMPNativeCoroutinesCore extension RandomLettersGenerator { func getRandomLetters() -> NativeSuspend { RandomLettersGeneratorNativeKt.getRandomLetters(self) } } ``` #### Exposed coroutines checks When suspend functions and/or `Flow` declarations are exposed to ObjC/Swift, the compiler and IDE plugin will produce a warning, reminding you to add one of the KMP-NativeCoroutines annotations. You can customise the severity of these checks in your `build.gradle.kts` file: ```kotlin nativeCoroutines { exposedSeverity = ExposedSeverity.ERROR } ``` Or, if you are not interested in these checks, disable them: ```kotlin nativeCoroutines { exposedSeverity = ExposedSeverity.NONE } ``` ### Swift Concurrency The Async implementation provides some functions to get async Swift functions and `AsyncSequence`s. #### Async functions Use the `asyncFunction(for:)` function to get an async function that can be awaited: ```swift import KMPNativeCoroutinesAsync let handle = Task { do { let letters = try await asyncFunction(for: randomLettersGenerator.getRandomLetters()) print(""Got random letters: \(letters)"") } catch { print(""Failed with error: \(error)"") } } // To cancel the suspend function just cancel the async task handle.cancel() ``` or if you don't like these do-catches you can use the `asyncResult(for:)` function: ```swift import KMPNativeCoroutinesAsync let result = await asyncResult(for: randomLettersGenerator.getRandomLetters()) if case let .success(letters) = result { print(""Got random letters: \(letters)"") } ``` #### AsyncSequence For `Flow`s there is the `asyncSequence(for:)` function to get an `AsyncSequence`: ```swift import KMPNativeCoroutinesAsync let handle = Task { do { let sequence = asyncSequence(for: randomLettersGenerator.getRandomLettersFlow()) for try await letters in sequence { print(""Got random letters: \(letters)"") } } catch { print(""Failed with error: \(error)"") } } // To cancel the flow (collection) just cancel the async task handle.cancel() ``` ### Combine The Combine implementation provides a couple functions to get an `AnyPublisher` for your Coroutines code. > [!NOTE] > These functions create deferred `AnyPublisher`s. > Meaning every subscription will trigger the collection of the `Flow` or execution of the suspend function. #### Publisher For your `Flow`s use the `createPublisher(for:)` f... [TRUNCATED]","31, Code, Issues, Pull requests, Actions, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
mockk,mockk/mockk,5300,"['Kotlin', 'C++', 'Java']","['verification', 'chain-calls', 'matcher', 'argument-matchers', 'kotlin']","[]( []( []( []( []( []( ## Getting started All you need to get started is just to add a dependency to `MockK` library. #### Gradle/Maven dependency ApproachInstruction testImplementation ""io.mockk:mockk:${mockkVersion}"" (Kotlin DSL) testImplementation(""io.mockk:mockk:${mockkVersion}"") <dependency> <groupId>io.mockk</groupId> <artifactId>mockk-jvm</artifactId> <version>${mockkVersion}</version> <scope>test</scope> </dependency> Unit testImplementation ""io.mockk:mockk-android:${mockkVersion}"" testImplementation ""io.mockk:mockk-agent:${mockkVersion}"" Instrumented androidTestImplementation ""io.mockk:mockk-android:${mockkVersion}"" androidTestImplementation ""io.mockk:mockk-agent:${mockkVersion}"" ## DSL examples Simplest example. By default mocks are strict, so you need to provide some behaviour. ```kotlin val car = mockk() every { car.drive(Direction.NORTH) } returns Outcome.OK car.drive(Direction.NORTH) // returns OK verify { car.drive(Direction.NORTH) } confirmVerified(car) ``` See the ""Features"" section below for more detailed examples. ### Spring support * [springmockk]( introduced in official [Spring Boot Kotlin tutorial]( ### Quarkus support * [quarkus-mockk]( adds support for mocking beans in Quarkus. Documentation can be found [here]( ### Kotlin version support From version 1.13.0 MockK supports Kotlin 1.4 and higher ### Known issues * PowerMock needs a workaround to run together with MockK [#79]( (not sure after workaround if it is generally usable or not, please somebody report it) * Inline functions cannot be mocked: see the discussion on [this issue]( * Spies, `mockkStatic` may not work on JDK 16+; `InaccessibleObjectException`/`IllegalAccessException`: [read more here](doc/md/jdk16-access-exceptions.md) * Using a spy with a suspending function [will give unexpected test results]( Table of contents: * auto-gen TOC: {:toc} ## Examples, guides & articles ### Kotlin Academy articles Check the series of articles ""Mocking is not rocket science"" at [Kt. Academy]( describing MockK from the very basics of mocking up to description of all advanced features. - [Basics]( - [Expected behavior and behavior verification]( - [MockK features]( - [MockK advanced features]( - [Testing Quarkus with Kotlin, JUnit and MockK]( - [Unraveling MockK's black magic(EN, translation)]( - [Mockk Guidebook]( - [Kotlin Unit Testing with Mockk by Marco Cattaneo]( - [(Video) Use verify in MockK to validate function calls on mocked object]( - [Testing With MockK paid course on raywenderlich.com]( - TDD for Android video tutorial [part 1]( [part 2]( by Ryan Kay - [(Video)Android Developer Live Coding #13: Unit Testing with Mockk, Coroutines, Test Driven Development]( - [KotlinConf 2018 - Best Practices for Unit Testing in Kotlin by Philipp Hauer]( - [kotlin-fullstack-sample uses MockK]( project covered with tests - [DZone article]( - [Habrahabr article]( (RU) - [Mocking in Kotlin with MockK - Yannick De Turck]( ### Japanese guides and articles - [Documentation translation to Japanese]( - [Unraveling MockK's black magic / MockK (JP, but readable through chrome translator)]( ### Chinese guides and articles - [ Kotlin + Mockito ]( - [MockK mockk, every, Annotation, verify]( - [MockK Relaxed Mocks, Verify, Capture]( - [ Static Method, Singleton]( ### Korean guides and articles - [Documentation translation to Korean]( - [MockK !]( ## Features ### Annotations You can use annotations to simplify the creation of mock objects: ```kotlin class TrafficSystem { lateinit var car1: Car lateinit var car2: Car lateinit var car3: Car } class CarTest { @MockK lateinit var car1: Car @RelaxedMockK lateinit var car2: Car @MockK(relaxUnitFun = true) lateinit var car3: Car @SpyK var car4 = Car() @InjectMockKs var trafficSystem = TrafficSystem() @Before fun setUp() = MockKAnnotations.init(this, relaxUnitFun = true) // turn relaxUnitFun on for all mocks @Test fun calculateAddsValues1() { // ... use car1, car2, car3 and car4 } } ``` Injection first tries to match properties by name, then by class or superclass. Check the `lookupType` parameter for customization. Properties are injected even if `private` is applied. Constructors for injection are selected from the biggest number of arguments to lowest. `@InjectMockKs` by default injects only `lateinit var`s or `var`s that are not assigned. To change this, use `overrideValues = true`. This would assign the value even if it is already initialized somehow. To inject `val`s, use `injectImmutable = true`. For a shorter notation use `@OverrideMockKs` which does the same as `@InjectMockKs` by default, but turns these two flags on. ### JUnit4 JUnit 4 exposes a rule-based API to allow for some automation following the test lifecycle. MockK includes a rule which uses this to set up and tear down your mocks without needing to manually call `MockKAnnotations.init(this)`. Example: ```kotlin class CarTest { @get:Rule val mockkRule = MockKRule(this) @MockK lateinit var car1: Car @RelaxedMockK lateinit var car2: Car @Test fun something() { every { car1.drive() } just runs every { car2.changeGear(any()) } returns true // etc } } ``` #### JUnit5 In JUnit5 you can use `MockKExtension` to initialize your mocks. ```kotlin @ExtendWith(MockKExtension::class) class CarTest { @MockK lateinit var car1: Car @RelaxedMockK lateinit var car2: Car @MockK(relaxUnitFun = true) lateinit var car3: Car @SpyK var car4 = Car() @Test fun calculateAddsValues1() { // ... use car1, car2, car3 and car4 } } ``` Additionally, it adds the possibility to use `@MockK` and `@RelaxedMockK` on test function parameters: ```kotlin @Test fun calculateAddsValues1(@MockK car1: Car, @RelaxedMockK car2: Car) { // ... use car1 and car2 } ``` Finally, this extension will call `unmockkAll` and `clearAllMocks` in a `@AfterAll` callback, ensuring your test environment is clean after each test class execution. You can disable this behavior by adding the `@MockKExtension.KeepMocks` annotation to your class or globally by setting the `mockk.junit.extension.keepmocks=true` property. (Since v1.13.11) Alternatively, since `clearAllMocks` is not thread-safe, if you need to run test in parallel you can add the `MockKExtension.RequireParallelTesting` annotation to your class or set the `mockk.junit.extension.requireParallelTesting=true` property to disable calling it in the `@AfterAll` callback. #### Automatic verification confirmation You can make sure that all stubbed methods are actually verified by also annotating your test class with `@MockKExtension.ConfirmVerification`. This will internally call `confirmVerified` on all mocks after each test, to make sure there are no unnecessary stubbings. Please note that this behavior may not work as expected when running tests in your IDE, as it is Gradle who takes care of handling the exception being thrown when these `confirmVerified` calls fail. #### Automatic unnecessary stubbing check You can make sure that all stubbed methods are useful - used at least once - by also annotating your test class with `@MockKExtension.CheckUnnecessaryStub`. This will internally call `checkUnnecessaryStub` on all mocks after each test, to make sure there are no unnecessary stubbings. ### Spy Spies allow you to mix mocks and real objects. ```kotlin val car = spyk(Car()) // or spyk() to call the default constructor car.drive(Direction.NORTH) // returns whatever the real function of Car returns verify { car.drive(Direction.NORTH) } confirmVerified(car) ``` Note 1: the spy object is a copy of the passed object. Note 2: there is a known issue if using a spy with a suspending function: ### Relaxed mock A `relaxed mock` is the mock that returns some simple value for all functions. This allows you to skip specifying behavior for each case, while still stubbing things you need. For reference types, chained mocks are returned. ```kotlin val car = mockk(relaxed = true) car.drive(Direction.NORTH) // returns null verify { car.drive(Direction.NORTH) } confirmVerified(car) ``` Note: relaxed mocking is working badly with generic return types. A class cast exception is usually thrown in this case. Opt for stubbing manually in the case of a generic return type. Workaround: ```kotlin val func = mockk<() -> Car>(relaxed = true) // in this case invoke function has generic return type // this line is workaround, without it the relaxed mock would throw a class cast exception on the next line every { func() } returns Car() // or you can return mockk() for example func() ``` ### Partial mocking Sometimes, you need to stub some functions, but still call the real method on others, or on specific arguments. This is possible by passing `callOriginal()` to `answers`, which works for both relaxed and non-relaxed mocks. ```kotlin class Adder { fun addOne(num: Int) = num + 1 } val adder = mockk() every { adder.addOne(any()) } returns -1 every { adder.addOne(3) } answers { callOriginal() } assertEquals(-1, adder.addOne(2)) assertEquals(4, adder.addOne(3)) // original function is called ``` ### Mock relaxed for functions returning Unit If you want `Unit`-returning functions to be relaxed, you can use `relaxUnitFun = true` as an argument to the `mockk` function, `@MockK`annotation or `MockKAnnotations.init` function. Function: ```kotlin mockk(relaxUnitFun = true) ``` Annotation: ```kotlin @MockK(relaxUnitFun = true) lateinit var mock1: ClassBeingMocked init { MockKAnnotations.init(this) } ``` MockKAnnotations.init: ```kotlin @MockK lateinit var mock2: ClassBeingMocked init { MockKAnnotations.init(this, relaxUnitFun = true) } ``` ### Object mocks Objects can be turned into mocks in the following way: ```kotlin object ObjBeingMocked { fun add(a: Int, b: Int) = a + b } mockkObject(ObjBeingMocked) // applies mocking to an Object assertEquals(3, ObjBeingMocked.add(1, 2)) every { ObjBeingMocked.add(1, 2) } returns 55 assertEquals(55, ObjBeingMocked.add(1, 2)) ``` To revert back, use `unmockkObject` or `unmockkAll` (more destructive: cancels object, static and constructor mocks) ```kotlin @Before f... [TRUNCATED]","331, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, important, bug, stale, enhancement, ait, value classes, hacktoberfest, ByteBuddy bug, hard, coroutines, big, Kotlin bug, wontfix, question, no reproduction, java, gradle, good-first-issue, android, small, released, performance, jetpack-compose, invalid, help wanted, good first issue, fixed, duplicate, docs, dependencies"
VCamera,andvipgroup/VCamera,177,"['Kotlin', 'Java', 'HTML']",[],"# VCamera This is a powerful app that allows you to replace the camera with the video you specify. It can be used as a live broadcast assistant, such as using local movies as live broadcast content. It can also be used to prevent APP sneak shots. # Scenes to be used: 1. Protect the privacy of the camera and prevent some apps from maliciously taking pictures. 2. Live Assistant. Similar to OBS, but may be better than OBS, can be used for Twitch, Youtube, Facebook, etc. 3. Entertainment among friends. How fun it would be to record a hilarious video to prank your friends. **Notice:** **Please strictly abide by the laws and regulations. It is strictly forbidden to use this APP for any illegal activities, otherwise you will bear the consequences.** # QA: **If you are the owner of an APP,How to detect if you dont want your APP to run in VCamera?** VCamera is based on a virtual machine, so you can detect whether it is currently running in a virtual machine environment. [Check Env Demo Code]( [Check Env Demo Apk]( Here ""isPathReallyExist < 0"" means it running in a virtual machine. If ""isPathReallyExist = 0"" means it running in a real device. # Demo Video []( # Key Features **1. Support replacing the camera with a photo.** **2. Support replacing the camera with video.** **3. Support to replace the camera with network video.** **4. Support resizing video, rotating, moving, zooming, flipping, etc.** # Contact Me andvipgroup@gmail.com # APK Download **Latest version : 3.5.4**","76, Code, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
PhotoEditor,burhanrashid52/PhotoEditor,4040,['Kotlin'],"['android', 'image-processing', 'photo-editor', 'emoji', 'paint']","# PhotoEditor []( []( []( []( []( []( []( []( A Photo Editor library with simple, easy support for image editing using Paints, Text, Filters, Emoji and Sticker like stories. [Download link]( ## Features - [**Drawing**](#drawing) on image with option to change its Brush's Color, Size, Opacity, Erasing and basic shapes. - Apply [**Filter Effect**](#filter-effect) on image using MediaEffect - Adding/Editing [**Text**](#text) with option to change its Color with Custom Fonts. - Adding [**Emoji**](#emoji) with Custom Emoji Fonts. - Adding [**Images/Stickers**](#adding-imagesstickers) - Pinch to Scale and Rotate views. - [**Undo and Redo**](#undo-and-redo) for Brush and Views. - [**Deleting**](#deleting) Views - [**Saving**](#saving) Photo after editing. - More [**FAQ**](#faq). - [Lesson Learned from building successful android library PhotoEditor: Droidcon Berlin 2021](#lesson-learned-from-building-successful-android-library-photoeditor-droidcon-berlin-2021) ## Benefits - Hassle free coding - Increase efficiency - Easy image editing ## Getting Started To start with this, we need to simply add the dependencies from `mavenCentral()` in the gradle file of our app module like this ```groovy implementation 'com.burhanrashid52:photoeditor:3.0.2' ``` or we can also import the :photoeditor module from sample for further customization ## Migrations ### AndroidX PhotoEditor [v.1.0.0]( is a migration to androidX and dropping the support of older support library. There are no API changes. If you find any issue migrating to v.1.0.0 , please follow this [Guide]( If you still facing the issue than you can always rollback to [v.0.4.0]( Any fix in PR are Welcome :) ### Kotlin PhotoEditor [v.2.0.0]( is fully migrated to Kotlin. You can use [v.1.5.1]( for the Java version. There are no breaking API changes in these two versions. ## Setting up the View First we need to add `PhotoEditorView` in our xml layout ```xml ``` We can define our drawable or color resource directly using `app:photo_src` We can set the image programmatically by getting source from `PhotoEditorView` which will return a `ImageView` so that we can load image from resources,file or (Picasso/Glide) ```java PhotoEditorView mPhotoEditorView = findViewById(R.id.photoEditorView); mPhotoEditorView.getSource().setImageResource(R.drawable.got); ``` ## Building a PhotoEditor To use the image editing feature we need to build a PhotoEditor which requires a Context and PhotoEditorView which we have to setup in our xml layout ```java //Use custom font using latest support library Typeface mTextRobotoTf = ResourcesCompat.getFont(this, R.font.roboto_medium); //loading font from asset Typeface mEmojiTypeFace = Typeface.createFromAsset(getAssets(), ""emojione-android.ttf""); mPhotoEditor = new PhotoEditor.Builder(this, mPhotoEditorView) .setPinchTextScalable(true) .setClipSourceImage(true) .setDefaultTextTypeface(mTextRobotoTf) .setDefaultEmojiTypeface(mEmojiTypeFace) .build(); ``` We can customize the properties in the PhotoEditor as per our requirement | Property | Usage | | ------------- | ------------- | | `setPinchTextScalable()` | set false to disable pinch to zoom on text insertion. Default: true. | | `setClipSourceImage()` | set true to clip the drawing brush to the source image. Default: false. | | `setDefaultTextTypeface()` | set default text font to be added on image | | `setDefaultEmojiTypeface()` | set default font specifc to add emojis | That's it we are done with setting up our library ## Drawing We can customize our brush and paint with different set of property. To start drawing on image we need to enable the drawing mode | Type | Method | |----------------------------------------------|------------------------------------------------------------------------| | Enable/Disable | `mPhotoEditor.setBrushDrawingMode(true);` | | Shape (brush, line, oval, rectangle, arrow) | `mPhotoEditor.addShape(shape)` | | Shape size (px) | `mPhotoEditor.setBrushSize(brushSize)` or through the a ShapeBuilder | | Shape opacity (In %) | `mPhotoEditor.setOpacity(opacity)` or through the a ShapeBuilder | | Shape color | `mPhotoEditor.setBrushColor(colorCode)` or through the a ShapeBuilder | | Brush Eraser | `mPhotoEditor.brushEraser()` | **Note**: Whenever we set any property of a brush for drawing it will automatically enable the drawing mode ## Shapes We can draw shapes from [v.1.5.0]( We use `ShapeBuilder` to define shape and other properties. ```kotlin val shapeBuilder = ShapeBuilder() .withShapeOpacity(100) .withShapeType(ShapeType.Oval) .withShapeSize(50f); photoEditor.setShape(mShapeBuilder) ``` For more details check [ShapeBuilder]( ## Filter Effect We can apply inbuild filter to the source images using `mPhotoEditor.setFilterEffect(PhotoFilter.BRIGHTNESS);` We can also apply custom effect using `Custom.Builder` For more details check [Custom Filters]( ## Text We can add the text with inputText and colorCode like this `mPhotoEditor.addText(inputText, colorCode);` It will take default fonts provided in the builder. If we want different fonts for different text we can set typeface with each text like this `mPhotoEditor.addText(mTypeface,inputText, colorCode);` In order to edit the text we need the view, which we will receive in our PhotoEditor callback. This callback will trigger when we **Long Press** the added text ```java mPhotoEditor.setOnPhotoEditorListener(new OnPhotoEditorListener() { @Override public void onEditTextChangeListener(View rootView, String text, int colorCode) { } }); ``` Now we can edit the text with a view like this `mPhotoEditor.editText(rootView, inputText, colorCode);` If you want more customization on text. Please refer the wiki page for more details. ## Emoji We can add the Emoji by `PhotoEditor.getEmojis(getActivity());` which will return a list of emojis unicode. `mPhotoEditor.addEmoji(emojiUnicode);` It will take default fonts provided in the builder. If we want different Emoji fonts for different emoji we can set typeface with each Emoji like this `mPhotoEditor.addEmoji(mEmojiTypeface,emojiUnicode);` ## Adding Images/Stickers We need to provide a Bitmap to add our Images `mPhotoEditor.addImage(bitmap);` ## Undo and Redo ```java mPhotoEditor.undo(); mPhotoEditor.redo(); ``` ## Deleting For deleting a Text/Emoji/Image we can click on the view to toggle the view highlighter box which will have a close icon. So, by clicking on the icon we can delete the view. ## Saving In [v.3.0.0]( onward, we can save an image to a file using coroutines: ```kotlin // Please note that if you call this from a fragment, you should call // 'viewLifecycleOwner.lifecycleScope.launch' instead. lifecycleScope.launch { val result = photoEditor.saveAsFile(filePath) if (result is SaveFileResult.Success) { showSnackbar(""Image saved!"") } else { showSnackbar(""Couldn't save image"") } } ``` You can also save an image to a file from Java. We need to provide a file with callback method when edited image is saved. ```java mPhotoEditor.saveAsFile(filePath, new PhotoEditor.OnSaveListener() { @Override public void onSuccess(@NonNull String imagePath) { Log.e(""PhotoEditor"",""Image Saved Successfully""); } @Override public void onFailure(@NonNull Exception exception) { Log.e(""PhotoEditor"",""Failed to save Image""); } }); ``` For more details see [Saving]( ## How to contribute? * Check out contribution guidelines [CONTRIBUTING.md]( ## Questions? Hit me on twitter []( []( []( ## FAQ Can I use this library in my app for free? Yes. It's an open-source library and free to use. If this library has saved your time then showing a little credit will increase my motivation towards making the library better :) Does it support the CROP feature? Currently, No. I started to build in branch [PE-79]( But due to time constraint, I drop the idea. Any PR related to CROP is welcomed :) Facing issues in applying Filter? The filter effect is applied using `GlSurfaceView` and the implementation of this feature causing a lot of issues. Need to think of some other alternative solution. Here is the issue [list]( Does is support in other platforms (iOS, Web, Flutter)? No. Currently, the focus is on making the android library better. We don't have any plans for [other Platform]( Other Know Issues [Image Scaling]( [Memory Issue in Filter]( ### Who is using PhotoEditor? 1. [Pixxo]( 2. [Couple Blog: Long distance]( 3. [Screenshot Tile (NoRoot)]( **Note**: I will be happy to add your app to the list. Please reach out to me with details. You know how to reach me :) ## Credits This project is inspired from [PhotoEditorSDK]( ## Buy a cup of coffee If you found this project helpful or you learned something from the source code and want to thank me, consider buying me a cup of [BuyMeACoffee]( ## Lesson Learned from building successful android library PhotoEditor: Droidcon Berlin 2021 []( ""Lesson Learned from building successful android library PhotoEditor"") ### [Open source Support]( by [JetBrains]( ## MIT License Copyright (c) 2022 Burhanuddin Rashid Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN... [TRUNCATED]","981, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, enhancement, bug, question, help wanted, suggestion, discussion, Stale, wontfix, sample-app, release.1.1.0, not supported, not a bug, need more info, more-info-needed, invalid, inactive, good first issue, fixed, duplicate, documentation, deprecated, 3.1.0, 3.0.3, 3.0.2, 3.0.1, 3.0.0, 1.5.1, 1.5.0"
samples,flutter/samples,16692,"['Dart', 'C', 'C++']",[],"# Flutter samples []( A collection of open source samples that illustrate best practices for [Flutter]( ## Visual samples index The easiest way to browse through the samples in this repo (as well as a few others!) is the [visual samples index]( ## Tip: minimize download size As this repository is quite big, you can use svn to download a single example. For example: ``` svn co ``` You can also use a [partial clone]( to skip blob objects that aren't currently checked out, while including the full commit history: ``` git clone --filter=blob:none ``` ## Interested in contributing? See the [contributor's guide](CONTRIBUTING.md)! ## Questions or issues? If you have a general question about one of these samples or how to adapt its techniques for one of your own apps, try one of these resources: * [The FlutterDev Discord]( * [StackOverflow]( If you run into a bug in one of the samples, please file an issue in the [`flutter/samples` issue tracker](","7.4k, Code, Issues, Pull requests, Actions, Security, Insights, p2, p1, enhancement, samples-index, tech-debt, p3, bug, tests, needs-info, wontfix, waiting for feedback, review:tech, revert, revert of, polish, p0, javascript, invalid, help wanted, good first issue, github_actions, duplicate, documentation, dependencies, dart, cla: yes, cla: no, autosubmit, Flutter 3.10 beta"
ente,ente-io/ente,8338,"['Dart', 'TypeScript', 'Go']","['android', 'ios', 'e2ee', 'encryption', 'end-to-end-encryption']","Fully open source end-to-end encrypted photos, authenticators and more. # Ente Ente is a service that provides a fully open source, end-to-end encrypted platform for you to store your data in the cloud without needing to trust the service provider. On top of this platform, we have built two apps so far: Ente Photos (an alternative to Apple and Google Photos) and Ente Auth (a 2FA alternative to the deprecated Authy). This monorepo contains all our source code - the client apps (iOS / Android / F-Droid / Web / Linux / macOS / Windows) for both the products (and more planned future ones!), and the server that powers them. Our source code and cryptography have been externally audited by Cure53 (a German cybersecurity firm, arguably the world's best), Symbolic Software (French cryptography experts) and Fallible (an Indian penetration testing firm). Learn more at [ente.io]( ## Ente Photos Our flagship product. 3x data replication. On device machine learning. Cross platform. Private sharing. Collaborative albums. Family plans. Easy import, easier export. Background uploads. The list goes on. And of course, all of this, while being fully end-to-end encrypted. Ente Photos is a paid service, but we offer a free trial. You can also clone this repository and choose to self host. []( []( []( []( []( ## Ente Auth Our labour of love. Two years ago, while building Ente Photos, we realized that there was no open source end-to-end encrypted authenticator app. We already had the building blocks, so we built one. Ente Auth is currently free. If in the future we convert this to a paid service, existing users will be grandfathered in. []( []( []( []( []( ## Contributing Want to get aboard the Ente hype train? Welcome along! Don't hesitate if you're not a developer, there are many other important ways in which [you can contribute](CONTRIBUTING.md). ## Support We are never more than an email away. For the various ways to ask for help, please see our [support guide](SUPPORT.md). ## Community Please visit our [community page]( for all the ways to connect with the community. []( []( []( []( --- ## Security If you believe you have found a security vulnerability, please responsibly disclose it by emailing security@ente.io or [using this link]( instead of opening a public issue. We will investigate all legitimate reports. To know more, please see our [security policy](SECURITY.md).","494, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, - photos, - auth, --mobile, --desktop, --web, triage, help wanted, good first issue, --cli, planned, needs more info, --server, not currently actionable, duplicate, docs"
fvm,leoafarias/fvm,4344,"['Dart', 'Shell', 'PowerShell']","['flutter', 'cli', 'dart', 'flutter-sdk-versions', 'flutter-releases']","# fvm []( []( []( []( []( []( FVM streamlines Flutter version management. It allows per project SDK versions, ensuring consistent app builds and easier testing of new releases, thereby boosting the efficiency of your Flutter project tasks. ## Why FVM? - Need for simultaneous use of multiple Flutter SDKs. - SDK testing requires constant [channel]( switching. - Channel switches are slow and need repeated reinstalls. - Difficulty managing the latest successful SDK version used in an app. - Flutter's major updates demand total app migration. - Inconsistencies occur in development environments within teams. For more information, read [FVM documentation]( ## Contributors --- Checkout Flutter Sidekick. [Read more about it here.]( ## Troubleshooting Please view our [FAQ]( ## License This project is licensed under the MIT License; see [LICENSE](LICENSE) file for details.","210, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, bug, enhancement, help wanted, good first issue, docker, pinned, need info, working as intended, wontfix, windows, question, invalid, dx, duplicate"
revanced-manager,ReVanced/revanced-manager,16096,"['Dart', 'Kotlin', 'Ruby']","['revanced', 'manager', 'android', 'modding', 'patching']","Continuing the legacy of Vanced # ReVanced Manager Application to use ReVanced on Android ## About ReVanced Manager is an application that uses [ReVanced Patcher]( to patch Android apps. ## Features Some of the features ReVanced Manager provides are: - **Patch apps**: Apply any patch of your choice to Android apps - **Portable**: ReVanced Patcher that fits in your pocket - **Simple UI**: Quickly understand the ins and outs of ReVanced Manager - **Customization**: Configurable API, custom sources, language, signing keystore, theme and more ## Download You can download the most recent version of ReVanced Manager at [revanced.app/download]( or from [GitHub releases]( Learn how to use ReVanced Manager by following the [documentation](/docs). ## Everything else ### Contributing Thank you for considering contributing to ReVanced Manager. You can find the contribution guidelines [here](CONTRIBUTING.md). ### Building To build a ReVanced Manager, you can follow the [documentation](/docs). ### Documentation You can find the documentation for ReVanced Manager [here](/docs). ### Contributing Thank you for considering contributing to ReVanced Manager. You can find the contribution guidelines [here](/CONTRIBUTING.md). ## License ReVanced Manager is licensed under the GPLv3 license. Please see the [license file](LICENSE) for more information. [tl;dr]( you may copy, distribute and modify ReVanced Manager as long as you track changes/dates in source files. Any modifications to ReVanced Manager must also be made available under the GPL, along with build & install instructions.","696, Code, Issues, Pull requests, Actions, Projects, Security, Insights, Feature request, Bug report, ReVanced Manager Compose, Waiting on author"
flutter_rust_bridge,fzyzcjy/flutter_rust_bridge,3627,"['Dart', 'Rust', 'C']","['dart', 'flutter', 'rust', 'bindgen', 'ffi']","# [flutter_rust_bridge v2]( Flutter/Dart <-> Rust binding generator, feature-rich, but seamless and simple. []( []( []( []( []( []( [](#contributors-) []( []( ## What's new in V2 Click to expand * **Rapid setup**: Only a one-liner command to integrate into your project. * **Arbitrary types**: Use arbitrary Rust and Dart types without manual intervention, even if they are not serializable or non-clone (previously need some manual intervention). * **Async Rust**: Support asynchronous Rust (`async fn`), in addition to sync Rust / async Dart / sync Dart. * **Rust call Dart**: Allow Rust to call Dart functions (previously only allow Dart to call Rust). * **Support whole folders as inputs**: Previously only support one single file (e.g. `api.rs`). * **Use libraries/tools in Flutter/Rust**: All existing libraries, Flutter debuggers, ... Nothing to stop you from using them. * **New codec**: A new codec, `SSE`, which is several times faster under typical workload. Please visit [this page]( for more information and update guide. I want to keep it in beta for a while (though CI has all passed), to allow publishing API breaking changes, and hear your thoughts and suggestions about it! ## What's this? * Just write down some ***normal*** Rust code (even with arbitrary types, closure, `&mut`, async, etc) * And call it from Flutter, as if Rust code is ***normal*** Flutter code * The bridge will generate all needed glues in between ## Quickstart Create a working Flutter + Rust app and see it live, by running: ```shell cargo install 'flutter_rust_bridge_codegen@^2.0.0-dev.0' && \ flutter_rust_bridge_codegen create my_app && cd my_app && flutter run ``` **(Optional)** Edit `rust/src/api/simple.rs` (e.g. `Hello` -> `Hi`), then see the change by: ```shell flutter_rust_bridge_codegen generate && flutter run ``` For more elaborated quickstart, please visit [this page]( ## Advantages ### 1. Officially `Flutter Favorite` This package is [officially Flutter Favorite]( and is in the first batch of 7 packages at its [rebooting]( ### 2. Simplicity * **Rapid setup**: Only a one-liner command to integrate into your project. * **Write your code naturally**: Use your intuition and write the code you want. The bridge understands many advanced grammars (see below), allowing seamless calling Rust from Dart. * **Use libraries/tools in Flutter/Rust**: All existing libraries, Flutter debuggers, ... Nothing to stop you from using them. * **Battery included**: Even small things like logging and enable backtraces are configured in the starter kit. ### 3. Powerfulness * **Arbitrary types**: Use arbitrary Rust and Dart types without manual intervention, even if they are not serializable or non-clone. * **Async & sync** x Rust & Dart: Multi modes for various needs - Async Dart to avoid blocking the main thread, sync Dart for places needed (e.g. Widget.build); async Rust for IO bound tasks, thread pools for CPU-heavy computations. * **Two-way road**: Not only can Dart call Rust - Rust can also call Dart. * **Auto-translatable types**: Lots of types can be further translated to Dart native types, e.g. complex `enum`s and `struct`s, zero-copy big arrays, errors (`Result`), and `Stream`s (iterator). * **Auto safety**: Focus on your code, and forget memory safety, malloc/free, or undefined behavior completely. * **Customizable & bare-metal mode**: Provide sensible defaults, but everything (loader, handler, ...) can be customized. You can even throw all away and only use the bare minimum calling. * **Cross-platform**: Support Android, iOS, Windows, Linux, MacOS, and Web. * Other features, e.g. support whole folders as input, pure-Dart compatible, instance and static methods, ... ### 4. Reliability * **Solid CI**: Valgrind & sanitizers (ASAN/MSAN/LSAN) for memory/UB-related bugs, testing per platform per mode, benchmarking, test coverage, post-release, etc, all guaranteed by CI. * **Used by many people**: See [here]( for an incomplete list. * **Easy to code-review & convince yourself**: This package simply simulates how humans write boilerplate code. If you want to convince yourself (or your team) that it is safe, there is not much code to track. * **Fast**: It is only a thin (though feature-rich) wrapper, benchmarked on CI, and even has multiple codecs for best performance under different workloads. * **Hackable**: If (for whatever reason) you want to hack the source, there are contributor guides, code is modular, and the execution logic is intuitive. * **Ask questions**: Feel free to ask questions in the issue tracker, and I usually reply within hours (if not sleeping). ### Why Flutter + Rust? Click to expand Firstly, super briefly introduce each component (you can find much more in a lot of blogs and posts): * **[Flutter]( Cross-platform, hot-reload, rapid-development, flexible UI toolkit. * ""The most popular cross-platform mobile SDK"" (by StackOverflow [[1]]( * **[Rust]( Highly efficient and performant, reliable, productive. * ""The most desired programming language"" for 8 years (by StackOverflow and GitHub [[1]]( Typical scenarios to combine them include: * **UI framework for Rust**: When you want a UI framework for your Rust system. * **Use arbitrary Rust libraries in Flutter**: When the desired functionality only has a library in Rust, not Dart (Flutter). * **Need high-performance code for Flutter**: Rust makes it easy and performant to write multi-thread code, algorithms, data-intensive operations, SIMD code, etc. * ... ## Show me the code ### Example 1: Simple Simple Rust... ```rust fn f(a: String, b: Vec) -> MyStruct { ... } ``` ...called from Dart, without manual intervention. ```dart print(f(a: 'Hello', b: ['Tom'])); ``` ### Example 2: Show off skills ;) Let's see how fancy we can support: ```rust // Arbitrarily fancy Rust types struct Garden { land: whatever::fancy::Land } // Complex but auto-translatable enum Tree { A { name: (String, i32), children: Option> }, B } // Support functions & methods impl Garden { // Allow async & sync Rust async fn plant( // Support T/&T/&mut T &mut self, tree: Tree, // Rust can also call Dart chooser: impl Fn(String) -> bool, // Error translation ; zero copy ) -> Result, FancyError> { ... } } ``` Still seamlessly call in Dart: ```dart var tree = Tree.a(('x', 42), [Tree.b()]); // Async & sync Dart print(await garden.plant(tree, (a) => true)); ``` ## Documentation Check out [the documentation]( for [quickstart]( [full guides]( and more. ## P.S. Achieve ~60 FPS, no matter how janky the Flutter app was due to build/layout Here is my another open-source library :) ## Acknowledgments and contributors Firstly, I want to sincerely thank Dart, Flutter and Rust (alphabetical order). Dart provides a solid foundation for productive UI development, Flutter enables developers to make cross-platform apps with ease, and Rust empowers everyone to build reliable and efficient software. Without the languages and frameworks, this bridge connects absolutely nothing. Besides, I also want to express my thanks for conferring the official [Flutter Favorite]( honor to the package. In addition, I also want to say thanks to the Dart, Flutter and Rust team members as well as community members, who have helped me during the development of flutter_rust_bridge by valuable discussions, insights, and actions. Secondly, thanks goes to these wonderful contributors ([emoji key]( following [all-contributors]( specification): fzyzcjy Viet Dinh rogurotus Nicolas Gasull Joshua Wade Lattice 0 Unoqwy Anton Lazarev sagu Sebastian Urban Rom's Gregory Conrad huang12zheng Daniel Manuel Philipp SoLongAnd... hsfzxjy Cupnfish alanlzhang Erikas Taroza SimplyKyle! Zaitam Brent Lewis nitn3lav Kevin Li Alex Procelewski Daniel Porteous (dport) Andreas Monitzer Kim Dong-Hyun NightFeather Krysl Wouter Ensink Marcel Aidan Debanjan Basu Patrick Auernig Sai Chaitanya Xidorn Quan jsonmona mtz codercengiz Michael Bryan Patrick Mukherjee Aran Donohue Philip Kannegaard Hayes SilverMira Sander in 't Hout Haled Odat bus710 ._. Marc Gutenberger Andrii Stadnik syndim Rhian Moraes Ares Andrew polypixeldev CicadaCinema CosmicHorror Akash Gurava Fabian Lschner Vincent Herlemont wxitcode canxin pixelshot91 TrackerSB Dampfwalze Samuel Cavalcanti Roman Zaynetdinov raphaelrobert Mouayad Alhamwi elliotsayes muji thomas725 orange soeur Alex Gorichev Sven-Hendrik Haase Chris Ohk Vitalii Hurianov Sam Nystrom mattiasgronlund Antonio D'souza max Jonathan Akash Jaiswal Febrian Setianto Satvik Pendem Damien Wise rustui J Ikko Ashimine thesimplekid More specifically, thanks for all these contributions: * [Desdaemon]( Support not only simple enums but also enums with fields which gets translated to native enum or sealed freezed class in Dart. Support the Option type as nullable types in Dart. Support Vec of Strings type. Support tuple type. Support comments in code. Add marker attributes for future usage. Add Linux and Windows support for with-flutter example, and make CI works for that. Avoid parameter collision. Overhaul the documentation and add several chapters to demonstrate configuring a Flutter+Rust project in all five platforms. Refactor command module. Precompiled binary CI workflow. Fix bugs. Add support for the Web platform, parallel to the existing mobile/desktop platforms, via WASM and JavaScript as intermediate values. GitHub retry actions. Implement draft of opaque types. Refactor Boxed and Option. Impl list of dates and optionals. Parameter defaults. Refactor CLI. Refactor codegen errors. Refactor for performance. * [rogurotus]( Add Rust opaque types, enabling arbitrary Rust structs to be used as opaque Dart objects by generating wrappers and raw Arc pointers. Also add Dart opaque types, allowing to use any Dart objects in Rust code. Extend `SyncReturn` for more types. Fix generation bug. Fix SyncReturn. Migrate to dart-sys. Update CI. Fix linters. Fix SyncReturn bug. * [ngasull]( Make sync mode support whatever types that classical async mode supports. Bump sdk. * [SecondFlight]( All... [TRUNCATED]","256, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, enhancement, awaiting, bug, good first issue, wontfix, sync, rust, pass triage, javascript, draft, dependencies, dart, await response"
Obtainium,ImranR98/Obtainium,5434,"['Dart', 'JavaScript', 'Shell']","['android', 'apk', 'foss', 'github', 'gitlab']","# Obtainium []( Get Android App Updates Directly From the Source. Obtainium allows you to install and update apps directly from their releases pages, and receive notifications when new releases are made available. More info: - [Obtainium/wiki]( - [AppVerifier]( - App verification tool (recommended, integrates with Obtainium) - [apps.obtainium.imranr.dev]( - Crowdsourced app configurations - [Side Of Burritos - You should use this instead of F-Droid | How to use app RSS feed]( - Original motivation for this app Currently supported App sources: - Open Source - General: - [GitHub]( - [GitLab]( - [Codeberg]( - [F-Droid]( - Third Party F-Droid Repos - [IzzyOnDroid]( - [SourceHut]( - Other - General: - [APKPure]( - [Aptoide]( - [Uptodown]( - [APKMirror]( (Track-Only) - [Huawei AppGallery]( - Jenkins Jobs - Open Source - App-Specific: - [Signal]( - [VLC]( - Other - App-Specific: - [WhatsApp]( - [Telegram App]( - [Neutron Code]( - Direct APK Link - ""HTML"" (Fallback): Any other URL that returns an HTML page with links to APK files ## Finding App Configurations You can find crowdsourced app configurations at [apps.obtainium.imranr.dev]( If you can't find the configuration for an app you want, feel free to leave a request on the [discussions page]( Or, contribute some configurations to the website by creating a PR at [this repo]( ## Installation []( []( []( [PGP Public Key]( ## Limitations - For some sources, data is gathered using Web scraping and can easily break due to changes in website design. In such cases, more reliable methods may be unavailable. ## Screenshots | | | | | ------------------------------------------------------ | ----------------------------------------------------------------------- | -------------------------------------------------------------------- | | | | |","132, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, enhancement, bug, low priority, to check, UI, source-specific, blocked, help wanted, HTTP, installer, needs follow up, info/idea, wontfix, high priority, good first issue, duplicate, TODO"
flutter_inappwebview,pichillilorenzo/flutter_inappwebview,3017,"['Dart', 'Swift', 'Java']","['flutter', 'flutter-plugin', 'android', 'plugin', 'ios']","# Flutter InAppWebView Plugin []( []( [](#contributors-) []( []( []( []( []( [](/LICENSE) []( []( []( A Flutter plugin that allows you to add an inline webview, to use an headless webview, and to open an in-app browser window. ## New Version 6.x.x is OUT NOW! Migrating from version `5.x.x` is easy! Follow the online [Migration guide]( ## Articles/Resources - [Official documentation: inappwebview.dev/docs]( - Read the online [API Reference]( to get the **full API documentation**. - [Official blog: inappwebview.dev/blog]( - Find open source projects on the [Official Showcase page: inappwebview.dev/showcase]( - Check the [flutter_inappwebview_examples]( repository for project examples - Check the [flutter_inappwebview/example/integration_test/webview_flutter_test.dart]( file for other code examples - [Flutter Browser App]( A Full-Featured Mobile Browser App (such as the Google Chrome mobile browser) created using Flutter and the features offered by the flutter_inappwebview plugin ## Showcase - Who use it Check the [Showcase]( page to see an open list of Apps built with **Flutter** and **Flutter InAppWebView**. #### Are you using the **Flutter InAppWebView** plugin and would you like to add your App there? Send a submission request to the [Submit App]( page! ## Requirements - Dart sdk: "">=2.17.0 <4.0.0"" - Flutter: "">=3.0.0"" - Android: `minSdkVersion >= 19`, `compileSdk >= 34`, [AGP]( version `>= 7.3.0` (use [Android Studio - Android Gradle plugin Upgrade Assistant]( for help), support for `androidx` (see [AndroidX Migration]( to migrate an existing app) - iOS 9.0+: `--ios-language swift`, Xcode version `>= 14.3` - MacOS 10.11+: Xcode version `>= 14.3` ## Installation Add `flutter_inappwebview` as a [dependency in your pubspec.yaml file]( ### Installation - Web support To make it work properly on the Web platform, you need to add the `web_support.js` file inside the `` of your `web/index.html` file: ```html ``` ## Support Did you find this plugin useful? Please consider to [make a donation]( to help improve it! ## Contributors Thanks goes to these wonderful people ([emoji key]( Alex Li 1/2 Christofer Bodin Matthew Lloyd C E Robson Araujo Ryan CodeEagle Tanay Neotia Jamie Joost Matias de Andrea YouCii Salnikov Sergey Po-Jui Chen Manuito setcy EArminjon Ashank Bharati Michael Chow Osvaldo Saez rsydor Le Minh Hoang Michael Kao cloudygeek Christoph Eck Ser1ous Caleb Jones Saverio Murgia Trn c Tm Joker Yash Chandra Verma Arne Kepp mral Crt LrdHelmchen Steven Gunanto Michael Rittmeister Akira Aratani Doflatango Edmund Tay Andrei Diaconu Daniel Kao xuty Ben Bieker Phm Nh V SebastienBtr NeZha Jan Klinge PauloDurrerMelo benmeemo cinos Rex Raphael Jan Henrik Hiland Iguchi Tomokatsu Jonas Uektter emakar liasica Eiichiro Adachi Kamil Powaowski Akio Yamamoto mohenaxiba Ben Anderson Daan Poron perffecto Chandra Abdul Fattah Aleksandar Lugonja Alexandre Richonnier Sunbreak Eric Lee KhatibFX Guide.inc Niraj Nandish nesquikm Andreas Gangs Alexandru Terente Dango Mango Max Zimmermann Alexandru Dochioiu YumengNevix lrorpilla Michal rtek daisukeueta This project follows the [all-contributors]( specification. Contributions of any kind welcome!","1.3k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, bug, android, iOS, waiting for customer response, flutter/dart, enhancement, documentation, javascript, dependencies, wontfix, question, invalid, help wanted, good first issue, duplicate"
FlutterEbookApp,JideGuru/FlutterEbookApp,2814,"['Dart', 'HTML', 'JavaScript']","['flutter', 'flutter-apps', 'flutter-app', 'flutter-book', 'flutter-ui']","# OpenLeaf (Flutter eBook App) []( []( A simple Flutter app to Read and Download books. The Books included in the app are from the [Public Domain]( (Expired Copyright and completely free). The [Feedbooks API]( was used to fetch books. App icon To download this app, click here to see the codemagic builds. You can choose to install the `apk`. You can download from the appstore if you use an iPhone, iPad or a Mac with Silicon chip. Please star the repo if you like what you see. ## Requirements - Any Operating System (ie. MacOS X, Linux, Windows) - Any IDE with Flutter SDK installed (ie. IntelliJ, Android Studio, VSCode etc) - A little knowledge of Dart and Flutter ## Features - [x] Download eBooks. - [x] Read eBooks. - [x] Favorites. - [x] Dark Mode - [x] Swipe to delete downloads. ## ScreenShots | Light | Dark | | --------------------------------- | --------------------------------- | | | | | | | | | | | | | | | | | | | | | | ##### Desktop ## Plugins | Name | Usage | | ---------------------------------------------------------------------- | --------------------------------------------- | | [**Riverpod**]( | State Management | | [**Sembast**]( | NoSQL database to store Favorites & Downloads | | [**XML2JSON**]( | Convert XML to JSON | | [**DIO**]( | Network calls and File Download | | [**Iridium Reader**]( | Plug and play reader widget for epubs | ## Author(s) **Festus Babajide Olusegun** []( ## LICENCE [Apache-2.0](","825, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
flutter-tips-and-tricks,bizz84/flutter-tips-and-tricks,1865,"['Dart', 'Shell']","['dart', 'firebase', 'flutter']","# Flutter Tips & Tricks A collection of all the Flutter tips & tricks I share on [Twitter]( and [LinkedIn]( If you find this useful, give it a star! ## Preview ## Download the App This repo now has a companion app! [Download it here]( to get all my Flutter tips on your phone: []( ## Full List > I'm adding new tips regularly (newest at the top ). | ID | View on GitHub (this repo) | Twitter Post | LinkedIn Post | Link on [codewithandrea.com]( | | -- |-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| -------------- | ------------- | ------------------------------------------------------------------------------------------------------------------------------------ | | 162 | [Flutter Web App Initialization Logic with CSS Loader](tips/0162-flutter-web-app-initialization-logic/index.md) | [link]( | [link]( | | | 161 | [Transform SVG assets at build time](tips/0161-vector-graphics-compiler/index.md) | [link]( | [link]( | | | 160 | [JsonCodable (Dart Macros experiment)](tips/0160-dart-macros-json-codable/index.md) | [link]( | [link]( | | | 159 | [Useful Aliases for Flutter Development](tips/0159-useful-aliases-flutter-dev/index.md) | | | | | 158 | [Hide Generated Dart Files in GitHub PRs](tips/0158-hide-generated-files-with-gitattributes/index.md) | [link]( | [link]( | [link]( | | 157 | [Force App Upgrade Gone Wrong ](tips/0157-force-upgrade-gone-wrong/index.md) | [link]( | [link]( | | | 156 | [Debouncing in Flutter](tips/0156-debouncing-timer/index.md) | [link]( | [link]( | [link]( | | 155 | [Null-aware spread operator (...?)](tips/0155-null-aware-spread-operator/index.md) | [link]( | [link]( | | | 154 | [Loading UI with Shimmer effect](tips/0154-shimmer-effect/index.md) | [link]( | [link]( | | | 153 | [Zoom an image with InteractiveViewer](tips/0153-interactive-viewer/index.md) | [link]( | [link]( | | | 152 | [Logging HTTP status codes with emojis](tips/0152-log-status-code-emoji/index.md) | [link]( | [link]( | | | 151 | [Scroll-to-index inside a ListView](tips/0151-scroll-to-index/index.md) | [link]( | [link]( | | | 150 | [Preloading SVG assets in Flutter](tips/0150-preload-svgs/index.md) | [link]( | [link]( | | | 149 | [Environment variables in Dart](tips/0149-environment-variables/index.md) | [link]( | [link]( | | | 148 | [Determinate Circular Progress Indicator](tips/0148-determinate-circular-progress-indicator/index.md) | [link]( | [link]( | | | 147 | [How to bundle assets based on flavor](tips/0147-bundle-assets-based-on-flavor/index.md) | [link]( | [link]( | | | 146 | [Extension methods vs types (Dart 3.3)](tips/0146-extension-types-dart3.3/index.md) | [link]( | [link]( | | | 145 | [Write reusable widgets!](tips/0145-build-reusable-widgets/index.md) | [link]( | [link]( | | | 144 | [Scheduling microtasks in Dart](tips/0144-scheduling-microtasks/index.md) | [link]( | [link]( | | | 143 | [We need to talk about FlutterFlow!](tips/0143-we-need-to-talk-about-flutterflow/index.md) | [link]( | [link]( | [link]( | | 142 | [Launching your Flutter app with flavors](tips/0142-flutter-run-flavor/index.md) | [link]( | [link]( | | | 141 | [ debugPrint prints in release mode ](tips/0141-dont-use-debug-print/index.md) | [link]( | [link]( | | | 140 | [Toggle Inlay Hints in VSCode](tips/0140-vscode-toggle-inlay-hints/index.md) | [link]( | [link]( | | | 139 | [GitHub Copilot Tips for Flutter Devs](tips/0139-github-copilot-tips-flutter-devs/index.md) | [link]( | [link]( | [link]( | | 138 | [Opening URLs with xcrun / adb](tips/0138-xcrun-adb-open-url/index.md) | [link]( | [link]( | | | 137 | [Combining Streams with RxDart](tips/0137-rxdart-combine-latest/index.md) | [link]( | [link]( | [link]( | | 136 | [Use `IntrinsicWidth`, not fixed width](tips/0136-intrinsic-width/index.md) | [link]( | [link]( | | | 135 | [Replace `Container` with nested widgets](tips/0135-replace-container-nested-widgets/index.md) | [link]( | [link]( | | | 134 | [Debug Paint Size (DevTools)](tips/0134-debug-paint-size/index.md) | [link]( | [link]( | | | 133 | [SelectionArea across multiple widgets](tips/0133-selection-area/index.md) | [link]( | [link]( | | | 132 | [Highlight oversized images with the Flutter DevTools](tips/0132-highlight-oversized-images/index.md) | [link]( | [link]( | | | 131 | [Async Dependency Initialization with `requireValue` (Riverpod)](tips/0131-future-provider-require-value/index.md) | [link]( | [link]( | [link]( | | 130 | [8 Steps to Follow When Building Your Next Flutter App](tips/0130-steps-to-follow-next-flutter-app/index.md) | [link]( | [link]( | [link]( | | 129 | [VSCode Debug Toolbar in Command Center](tips/0129-vscode-debug-toolbar-command-center/index.md) | [link]( | [link]( | | | 128 | [Error Handling during App Startup](tips/0128-error-handling-app-startup/index.md) | [link]( | [link]( | [link]( | | 127 | [Full-Text Search: Firestore Extensions](tips/0127-full-text-search/index.md) | [link]( | [link]( | | | 126 | [How to work with webhooks?](tips/0126-webhooks/index.md) | [link]( | [link]( | [link]( | | 125 | [Xcode 15 DT_TOOLCHAIN_DIR issue](tips/0125-xcode-15-cocoapods-issue/index.md) | [link]( | [link]( | | | 124 | [Payment options on mobile and web](tips/0124-payment-options-mobile-web/index.md) | [link]( | [link]( | | | 123 | [Top reasons for using a realtime backend](tips/0123-user-realtime-backend/index.md) | [link]( | [link]( | [link]( | | 122 | [First steps to tackle when starting a new mobile app](tips/0122-first-steps-new-app/index.md) | [link]( | [link]( | [link]( | | 121 | [Fetching vs Mutating data with Riverpod](tips/0121-riverpod-fetch-vs-mutate-data/index.md) | [link]( | [link]( | [link]( | | 120 | [Flutter web: redirect to an external URL](tips/0120-set-html-window-url/index.md) | [link]( | | | | 119 | [VSCode Quick Fix: Create constructor for final fields, required named](tips/0119-constructor-required-named-vsassist/index.md) | [link]( | | | 118 | [How to Inspect Network Requests with the Flutter DevTools](tips/0118-network-view-devtools/index.md) | [link]( | | | | 117 | [Are global variables bad?](tips/0117-are-global-variables-bad/index.md) | [link]( | | | | 116 | [Measuring execution time in Dart](tips/0116-measure-time/index.md) | [link]( | | | | 115 | [Find the Invalid Switch Expression ](tips/0115-switch-newline/index.md) | [link]( | | | | 114 | [6 steps to minimize your Firebase Bill](tips/0114-minimize-firebase-bill/index.md) | [link]( | | | | 113 | [Conditional JSON parsing in Dart 3](tips/0113-conditional-json-parsing/index.md) | [link]( | | | | 112 | [Switch Matrix in Dart 3](tips/0112-switch-matrix/index.md) | [link]( | | | | 111 | [Destructuring Lists in Dart](tips/0111-destructure-lists-dart/index.md) | [link]( | | | | 110 | [Getting a `Future` from a `FutureProvider` with Riverpod](tips/0110-riverpod-watch-future-provider/index.md) | [link]( | | | | 109 | [Record Equality in Dart 3](tips/0109-records-equality/index.md) | [link]( | | | | 108 | [MediaQuery as InheritedModel](tips/0108-media-query-inherited-model/index.md) | [link]( | | | | 107 | [Happy Birthday with records in Dart 3](tips/0107-happy-birthday-records-dart-3/index.md) | [link]( | | | | 106 | [Return without `async`/`await`](tips/0106-return-no-await/index.md) | [link]( | | | | 105 | [Creating an empty Flutter project](tips/0105-flutter-create-empty/index.md) | [link]( | | | | 104 | [[core/duplicate-app] A Firebase App named ""[DEFAULT]"" already exists](tips/0104-firebase-duplicate-app/index.md) | [link]( | | | | 103 | [Firebase Auth flow in 5 minutes](tips/0103-simple-auth-firebase-ui/index.md) | [link]( | | | | 102 | [Storing API keys in a JSON file](tips/0102-dart-define-from-file/index.md) | [link]( | | [link]( | | 101 | [Backend-agnostic Flutter apps](tips/0101-backend-agnostic/index.md) | [link]( | | [link]( | | 100 | [Firestore Security Rules Playground](tips/0100-security-rules-playground/index.md) | [link]( | | | | 99 | [Firestore OR queries ](tips/0099-firestore-or-query/index.md) | [link]( | | | | 98 | [Pagination with FirestoreListView](tips/0098-firestore-list-view/index.md) | [link]( | | [link]( | | 97 | [Riverpod Notifier with build arguments](tips/0097-riverpod-notifier-build-argument/index.md) | [link]( | | | | 96 | [Cloud Firestore - Cache Size](tips/0096-cloud-firestore-cache-size/index.md) | [link]( | | | | 95 | [StreamProvider with Riverpod Generator](tips/0095-stream-provider-generator/index.md) | [link]( | | [link]( | | 94 | [Fix missing `ProviderScope` error with Riverpod Lint](tips/0094-add-provider-scope/index.md) | [link]( | | [link]( | | 93 | [Add a part file with Riverpod Snippets](tips/0093-riverpod-part/index.md) | [link]( | | | | 92 | [Firebase Billing and Cost Calculator](tips/0092-firebase-billling/index.md) | [link]( | | | | 91 | [Got linter issues? Use `dart fix --apply`](tips/0091-dart-fix-apply/index.md) | [link]( | | [link]( | | 90 | [Using `context.mounted` in Flutter 3.7](tips/0090-context-mounted/index.md) | [link]( | | [link]( | | 89 | [Using `serverTimestamp()` in Firestore](tips/0089-server-timestamp/index.md) | [link]( | | | | 88 | [Get a single item from a list](tips/0088-list-single/index.md) | [link]( | | | | 87 | [The Accessibility Tools package](tips/0087-accessibility-tools/index.md) | [link]( | | | | 86 | [Dart code samples in the Firebase docs](tips/0086-firebase-docs-dart-samples/index.md) | [link]( | | | | 85 | [Use ChatGPT to do custom styling in Flutter](tips/0085-chatgpt-styling/index.md) | [link]( | | | | 84 | [Using the query builder UI in Cloud Firestore](tips/0084-firestore-query-builder/index.md) | [link]( | | | | 83 | [Update packages with the Version Lens VSCode extension](tips/0083-version-lens-vscode/index.md) | [link]( | | [link]( | | 82 | [Cloud Firestore collection count](tips/0082-cloud-firestore-collection-count/index.md) | [link]( | | | | 81 | [How to use the new Riverpod Generator package](tips/0081-future-provider-riverpod-g... [TRUNCATED]","197, Code, Issues, Pull requests, Actions, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
Tachidesk-Sorayomi,Suwayomi/Tachidesk-Sorayomi,723,"['Dart', 'C++', 'CMake']","['flutter', 'tachidesk', 'tachiyomi', 'cross-platform', 'dart']","Tachidesk Sorayomi [][release] []( []( []( []( A free and open source manga reader based on Flutter to read manga from a Tachidesk-Server instance. Tachidesk-Sorayomi need to connect with an already hosted server. Tachidesk-Sorayomi supports Linux, Windows, MacOS, Web, iOS and Android. --- ## Is this application usable? Should I test it? Here is a list of current features for interaction with Tachidesk-Sorayomi: - Managing installed Extensions. - Interaction with your library. - Browsing installed sources. - Viewing manga and chapters. - Reading, downloading, and managing chapters. - Viewing chapter updates **Note:** Keep in mind that Tachidesk-Sorayomi and Tachidesk-Server are alpha software, so it can have issues. See [Support and help](#support-and-help) if it happens. ### Supported Tachidesk versions These are the versions of [Tachidesk-Server][tachidesk-server] that Tachidesk-Sorayomi supports. #### [Release build][release] - [Tachidesk-Server][tachidesk-server] v0.6.6+ ## Downloading and Running the app ### Android Download *-android-all.apk file from latest release [the releases section][release]. ### iOS - Download the latest .ipa file from [the releases section][release] - use [AltStore]( to install Sorayomi in ios. ### Windows Download the latest .msi file from [the releases section][release]. if you use WINGET, you can run ``` winget install tachidesk-sorayomi ``` ### MacOS - Download the *-macos-x64.zip from the latest release [the releases section][release] - Extract the file. - Drag and drop the extracted app file to applications folder in finder. if you use HomeBrew, you can run ``` brew install --cask tachidesk-sorayomi ``` ### Debian based Linux Download the latest deb release from [the releases section][release]. ### Arch based Linux Download the latest release from [the aur]( If you use yay, you can run ``` yay -S tachidesk-sorayomi-bin ``` inside a terminal window. ### Web Download the latest web.zip file from [the releases section][release]. - Sorayomi-web deployed in GitHub pages. You can check out [Sorayomi here]( ## Post installation - Configure your server address in `Navigation bar > more screen > Server URL`. ## Building from source These instructions will get you a copy of the project up and running on your local machine for development and testing purposes. ### Prerequisites You can install Flutter & Dart from [Official website]( - Dart sdk - Flutter - Channel Stable ### Building 1. Clone the repository: ``` $ git clone $ cd Tachidesk-Sorayomi/ ``` 2. You can install all dependencies by running this command in terminal: ``` $ flutter pub get ``` 3. Now enter the following command to start debugging the app: ``` $ flutter run ``` - Localization generator ``` $ flutter gen-l10n ``` - Pull-Request Suggestion - Install GitHooks after cloning the repo using `git config --local core.hooksPath .githooks` ## Support and help - Join Tachidesk's [discord server]( to hang out with the community and receive support and help. ## Built Using - [Flutter]( is an open source framework by Google for building beautiful, natively compiled, multi-platform applications from a single codebase. - [Flutter Riverpod]( - A simple way to access state while robust and testable. - [Riverpod Architecture]( - File architecture developed by [@bizz84]( Find other dependencies in [pubspec.yaml](pubspec.yaml) ## Credit - The `Tachidesk-server` project is developed by [@AriaMoradi]( and contributors, - The `Tachidesk-Sorayomi` project is developed by [@DattatreyaReddy]( and contributors, - CI-CD for `Tachidesk-Sorayomi` is developed by [@mahor1221]( and contributors. ## Translation Feel free to translate the project on [Weblate]( Translation Progress ## License A link for [Tachidesk is provided here]( and is licensed under `Mozilla Public License v2.0`. You can obtain a copy of `Mozilla Public License v2.0` from Copyright (C) Contributors to the Suwayomi project This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at [release]: [tachidesk-server]: [tachidesk-server-preview]:","57, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, enhancement, Backlog, Server, Flutter, wontfix, question, invalid, help wanted, good first issue, duplicate, documentation, doNotMerge, bug"
Butterfly,LinwoodDev/Butterfly,864,"['Dart', 'JavaScript', 'C++']","['flutter', 'app', 'notes-app', 'android', 'linux']","# Butterfly > Powerful, minimalistic, cross-platform, opensource note-taking app []( []( []( []( []( []( Website Download Matrix Discord Mastodon Bluesky Linwood Contribute --- Butterfly is a note taking app where your ideas come first. You can paint, add texts, and export them easily on every device. This app works on android, windows, linux, and in the web. ## Features * ** Simple and intuitive** Every tool is in the right place. Open the app and start drawing. Change your tools by clicking on it. * ** Customizable:** Change everything to your needs. Choose your custom color, create a palette, and add your pages to the paper. The paper has an infinite size, perfect for your ideas and notes. * ** Support your favorite formats:** Import and export are supported for images, pdf and svg. Register the app to open these files to edit them. * ** Works on every device:** The app is available for android, windows, linux, and in the web. You can use it on your phone, tablet, or computer. * ** Choose where your data is stored:** You can choose to store your data locally or in your favorite cloud (webdav). You can also export your data to a file and import it again. * ** Available in many languages:** The app is available in many languages. Help us to translate this app to your language. * ** FOSS:** The app is open source and free. You can contribute to the project and help to make it better. * ** Use it offline:** You can use the app offline. You can draw, paint, and export your notes without an internet connection. * ** Use your favorite stylus:** The app supports stylus and touch devices. You can draw and paint with your favorite stylus. * ** Write text:** You can write text on your notes. You can change the font, size, and color. * ** Take photos:** You can take photos and add them to your notes. You can also import photos from your gallery. * ** Editable:** You can change the size, color, and position of every element after you added it to your note. * ** Add shapes:** You can add shapes to your notes. You can choose between a rectangle, circle and line. * ** Structure your notes:** Add areas and waypoints to your notes to keep them organized. Try it [now]( --- ## Contributing We are happy to see that you are interested in contributing to Butterfly. To get started, visit [the contributing guide](CONTRIBUTING.md). ## License The code is open source and licensed under the [AGPL-3.0](./LICENSE) license. All images in `app/images/` except `powered-by-vercel.svg` and all images in `docs/` are licensed under the [CC-BY-4.0](./BRANDING_LICENSE) license. The files in `api` are licensed under the [Apache-2.0](./api/LICENSE) license instead of the AGPL-3.0 license to allow the use of the API without the need to open source the code (for example for extensions or other external services).","60, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, enhancement, feature-request, good first issue, future, confirmed, bug, external, help wanted, ci, wontfix, waiting for response, ruby, question, javascript, invalid, github_actions, duplicate, documentation, dependencies, dart"
realm-dart,realm/realm-dart,724,"['Dart', 'C', 'C++']","['mobile', 'database', 'cross-platform', 'dart', 'flutter']","[](LICENSE) []( []( Realm is a mobile database that runs directly inside phones, tablets or wearables. This repository holds the source code for the Realm SDK for Flutter and Dart. ## Features * **Mobile-first:** Realm is the first database built from the ground up to run directly inside phones, tablets, and wearables. * **Simple:** Realms object-oriented data model is simple to learn, doesnt need an ORM, and the [API]( lets you write less code to get apps up & running in minutes. * **Modern:** Realm supports latest Dart and Flutter versions and is built with sound null-safety. * **Fast:** Realm is faster than even raw SQLite on common operations while maintaining an extremely rich feature set. * **[MongoDB Atlas Device Sync]( Makes it simple to keep data in sync across users, devices, and your backend in real-time. Get started for free with [a template application]( and [create the cloud backend]( ## Getting Started * Import Realm in a dart file `app.dart` ```dart import 'package:realm/realm.dart'; // import realm package part 'app.realm.dart'; // declare a part file. @RealmModel() // define a data model class named `_Car`. class _Car { late String make; late String model; int? kilometers = 500; } ``` * Generate RealmObject class `Car` from data model class `_Car`. ``` dart run realm generate ``` * Open a Realm and add some objects. ```dart var config = Configuration.local([Car.schema]); var realm = Realm(config); var car = Car(""Tesla"", ""Model Y"", kilometers: 5); realm.write(() { realm.add(car); }); ``` * Query objects in Realm. ```dart var cars = realm.all(); Car myCar = cars[0]; print(""My car is ${myCar.make} model ${myCar.model}""); cars = realm.all().query(""make == 'Tesla'""); ``` * Get stream of result changes for a query. ```dart final cars = realm.all().query(r'make == $0', ['Tesla']); cars.changes.listen((changes) { print('Inserted indexes: ${changes.inserted}'); print('Deleted indexes: ${changes.deleted}'); print('Modified indexes: ${changes.modified}'); }); realm.write(() => realm.add(Car('VW', 'Polo', kilometers: 22000))); ``` ## Samples For complete samples check the [Realm Flutter and Dart Samples]( ## Documentation For API documentation go to * [Realm Flutter API Docs]( * [Realm Dart API Docs]( Use [realm]( package for Flutter and [realm_dart]( package for Dart applications. For complete documentation of the SDKs, go to the [Realm SDK documentation]( If you are using the Realm SDK for the first time, refer to the [Quick Start documentation]( To learn more about using Realm with Atlas App Services and Device Sync, refer to the following Realm SDK documentation: - [App Services Overview]( - [Device Sync Overview]( # Realm Flutter SDK Realm Flutter package is published to [realm]( ## Environment setup for Realm Flutter * Realm Flutter supports the platforms iOS, Android, Windows, MacOS and Linux. * Flutter 3.10.2 or newer. * For Flutter Desktop environment setup, see [Desktop support for Flutter]( * Cocoapods v1.11 or newer. * CMake 3.21 or newer. ## Usage **The full contents of `catalog.dart` is listed [after the usage]( * Add `realm` package to a Flutter application. ``` flutter pub add realm ``` * For running Flutter widget and unit tests run the following command to install the required native binaries. ``` dart run realm install ``` * Import Realm in a dart file (ex. `catalog.dart`). ```dart import 'package:realm/realm.dart'; ``` * Declare a part file `catalog.realm.dart` in the begining of the `catalog.dart` dart file after all imports. ```dart import 'dart:io'; part 'catalog.realm.dart'; ``` * Create a data model class. It should start with an underscore `_Item` and be annotated with `@RealmModel()` ```dart @RealmModel() class _Item { @PrimaryKey() late int id; late String name; int price = 42; } ``` * Generate RealmObject class `Item` from data model class `_Item`. _*On Flutter use `dart run realm` to run `realm` package commands*_ ``` dart run realm generate ``` A new file `catalog.realm.dart` will be created next to the `catalog.dart`. _*The generated file should be committed to source control_ * Use the RealmObject class `Item` with Realm. ```dart // Create a Configuration object var config = Configuration.local([Item.schema]); // Opean a Realm var realm = Realm(config); var myItem = Item(0, 'Pen', price: 4); // Open a write transaction realm.write(() { realm.add(myItem); var item = realm.add(Item(1, 'Pencil')..price = 20); }); // Objects `myItem` and `item` are now managed and persisted in the realm // Read object properties from realm print(myItem.name); print(myItem.price); // Update object properties realm.write(() { myItem.price = 20; myItem.name = ""Special Pencil""; }); // Get objects from the realm // Get all objects of type var items = realm.all(); // Get object by index var item = items[1]; // Get object by primary key var itemByKey = realm.find(0); // Filter and sort object var objects = realm.query(""name == 'Special Pencil'""); var name = 'Pen'; objects = realm.query(r'name == $0', [name]); // Close the realm realm.close(); ``` ## Full contents of `catalog.dart` ```dart import 'package:realm/realm.dart'; part 'catalog.realm.dart'; @RealmModel() class _Item { @PrimaryKey() late int id; late String name; int price = 42; } // Create a Configuration object var config = Configuration.local([Item.schema]); // Open a Realm var realm = Realm(config); var myItem = Item(0, 'Pen', price: 4); // Open a write transaction realm.write(() { realm.add(myItem); var item = realm.add(Item(1, 'Pencil')..price = 20); }); // Objects `myItem` and `item` are now managed and persisted in the realm // Read object properties from realm print(myItem.name); print(myItem.price); // Update object properties realm.write(() { myItem.price = 20; myItem.name = ""Special Pencil""; }); // Get objects from the realm // Get all objects of type var items = realm.all(); // Get object by index var item = items[1]; // Get object by primary key var itemByKey = realm.find(0); // Filter and sort object var objects = realm.query(""name == 'Special Pencil'""); var name = 'Pen'; objects = realm.query(r'name == $0', [name]); // Close the realm realm.close(); ``` # Realm Dart Standalone SDK Realm Dart package is published to [realm_dart]( ## Environment setup for Realm Dart * Realm Dart supports the platforms Windows, Mac and Linux. * Dart SDK 3.0.2 or newer. ## Usage * Add `realm_dart` package to a Dart application. ``` dart pub add realm_dart ``` * Install the `realm_dart` package into the application. This downloads and copies the required native binaries to the app directory. ``` dart run realm_dart install ``` * Import realm_dart in a dart file (ex. `catalog.dart`). ```dart import 'package:realm_dart/realm.dart'; ``` * To generate RealmObject classes with realm_dart use this command. _*On Dart use `dart run realm_dart` to run `realm_dart` package commands*_ ``` dart run realm_dart generate ``` A new file `catalog.realm.dart` will be created next to the `catalog.dart`. _*The generated file should be committed to source control_ * The usage of the Realm Dart SDK is the same like the Realm Flutter above. # Sync data with Realm Flutter and Dart using Device Sync This section is about how to use the Realm with [Device Sync]( and how to connect to [Atlas App Services]( ### I. Set up Atlas App Services 1. Create an account on [cloud.mongodb.com]( Follow the instructions: [Register a new Atlas Account]( 1. Create a new App following the instructions here: [Create an App with Atlas App Services UI]( 1. Read [Authentication Providers]( to see how to configure the appropriate authentication provider type. 1. Go to the **Device Sync** menu and [Enable Flexible Sync]( 1. [Find and Copy the App ID]( of your new application. ### II. Use Device Sync with the Realm 1. Initialize the App Services `App` client and authenticate a user. ``` dart String appId = """"; final appConfig = AppConfiguration(appId); final app = App(appConfig); final user = await app.logIn(Credentials.anonymous()); ``` 1. Open a synced realm. ``` dart final config = Configuration.flexibleSync(user, [Task.schema]); final realm = Realm(config); ``` 1. Add a sync subscription and write data. Only data matching the query in the subscription will be synced to the server and only data matching the subscription will be downloaded to the local device realm file. ``` dart realm.subscriptions.update((mutableSubscriptions) { mutableSubscriptions.add(realm.query(r'status == $0 AND progressMinutes == $1', [""completed"", 100])); }); await realm.subscriptions.waitForSynchronization(); realm.write(() { realm.add(Task(ObjectId(), ""Send an email"", ""completed"", 4)); realm.add(Task(ObjectId(), ""Create a meeting"", ""completed"", 100)); realm.add(Task(ObjectId(), ""Call the manager"", ""init"", 2)); }); realm.close(); ``` To learn more about how to sync data with Realm using Device Sync, refer to the [Quick Start with Sync documentation]( # Building the source See [CONTRIBUTING.md]( for instructions about building the source. # Code of Conduct This project adheres to the [MongoDB Code of Conduct]( By participating, you are expected to uphold this code. Please report unacceptable behavior to [community-conduct@mongodb.com](mailto:community-conduct@mongodb.com). # License Realm Flutter and Dart SDKs and [Realm Core]( are published under the Apache License 2.0. ##### The ""Dart"" name and logo and the ""Flutter"" name and logo are trademarks owned by Google.","75, Code, Issues, Pull requests, Actions, Projects, Security, Insights, O-Community, cla: yes, SDK-Use:Local, T-Bug, Importance:Major, no-changelog, SDK-Use:Sync, gathering-interest, Importance:Workaround, Importance:Dealbraker, Waiting-For-Reporter, Needs-Attention, More-information-needed, Importance:Nice, Importance:Dealbreaker, no-jira-ticket, copied-to-another-repo, SDK-Use:All, Reproduction-Required, First-Good-Issue, CI, Blocked"
flutter_stripe,flutter-stripe/flutter_stripe,893,"['Dart', 'Kotlin', 'Swift']","['flutter', 'stripe', 'dart']","# Flutter Stripe []( The Stripe Flutter SDK allows you to build delightful payment experiences in your native Android and iOS apps using Flutter. We provide powerful and customizable UI screens and elements that can be used out-of-the-box to collect your users' payment details. ## Features **Simplified Security**: We make it simple for you to collect sensitive data such as credit card numbers and remain [PCI compliant]( This means the sensitive data is sent directly to Stripe instead of passing through your server. For more information, see our [Integration Security Guide]( **Apple Pay**: We provide a [seamless integration with Apple Pay]( **Google Pay**: The plugin can easily act as payment provider for the [Pay plugin](#Pay-Plugin-support) that enables you to seamlessly integrate Google Pay or Apple Pay. All you need to do is add your stripe publishable key to the payment profile. **Payment methods**: Accepting more [payment methods]( helps your business expand its global reach and improve checkout conversion. **SCA-Ready**: The SDK automatically performs native [3D Secure authentication]( if needed to comply with [Strong Customer Authentication]( regulation in Europe. **Native UI**: We provide native screens and elements to securely collect payment details on Android and iOS. **Pre-built payments UI**: Learn how to integrate Payment Sheet, the new pre-built payments UI for mobile apps. This pre-built UI lets you accept cards, Apple Pay, and Google Pay out of the box, and includes support for saving & reusing cards. #### Recommended usage If you're selling digital products or services within your app, (e.g. subscriptions, in-game currencies, game levels, access to premium content, or unlocking a full version), you must use the app store's in-app purchase APIs. See [Apple's]( and [Google's]( guidelines for more information. For all other scenarios you can use this SDK to process payments via Stripe. ## Installation ```sh dart pub add flutter_stripe ``` ### Requirements #### Android This plugin requires several changes to be able to work on Android devices. Please make sure you follow all these steps: 1. Use Android 5.0 (API level 21) and above 2. Use Kotlin version 1.5.0 and above: [example]( 3. Requires Android Gradle plugin 8 and higher 4. Using a descendant of `Theme.AppCompat` for your activity: [example]( [example night theme]( 5. Using an up-to-date Android gradle build tools version: [example]( and an up-to-date gradle version accordingly: [example]( 6. Using `FlutterFragmentActivity` instead of `FlutterActivity` in `MainActivity.kt`: [example]( 7. Add the following rules to your `proguard-rules.pro` file: [example]( ```proguard -dontwarn com.stripe.android.pushProvisioning.PushProvisioningActivity$g -dontwarn com.stripe.android.pushProvisioning.PushProvisioningActivityStarter$Args -dontwarn com.stripe.android.pushProvisioning.PushProvisioningActivityStarter$Error -dontwarn com.stripe.android.pushProvisioning.PushProvisioningActivityStarter -dontwarn com.stripe.android.pushProvisioning.PushProvisioningEphemeralKeyProvider ``` 8. Rebuild the app, as the above changes don't update with hot reload These changes are needed because the Android Stripe SDK requires the use of the AppCompat theme for their UI components and the Support Fragment Manager for the Payment Sheets If you are having troubles to make this package to work on Android, join [this discussion]( to get some support. #### iOS Compatible with apps targeting iOS 13 or above. To upgrade your iOS deployment target to 13.0, you can either do so in Xcode under your Build Settings, or by modifying IPHONEOS_DEPLOYMENT_TARGET in your project.pbxproj directly. You will also need to update in your Podfile: `platform :ios, '13.0'` For card scanning add the following to your Info.plist: ```xml NSCameraUsageDescription Scan your card to add it automatically NSCameraUsageDescription <string>To scan cards</string> To scan cards ``` #### Web (Experimental) Now you can use Stripe with Flutter web! Notice right now it is highly experimental and only a subset of features is implemented. Namely: - Create paymentmethod - Confirm payment intent - Confirm setup intent - Create token - Confirm payment element (recommended way of handling payments on web) To use Stripe on web, it is required to add `flutter_stripe_web` in your pubspec file ## Usage ### Card payments There are 3 ways of handling card payments Method | Ease of use | description | Implementation docs | ------------- | ------------- |----------------------------------------------------------------------------------------------------------------- | ------------------- | Payment sheet | Easy | Our recommended way of handling payments. It offers localization, animations and error handling out of the box. | [docs]( | Cardfield | Medium | Single line cardfield. Offers more flexibility but has less built-in functionality. | [docs]( | Card form | Medium | Similar as the cardfield but the entry fields are spread across multi lines | [docs]( | ### Wallets This library fully supports native Apple Pay and [Google pay]( integration. ### Mobile elements [BETA] We also support the customer sheet mobile element. Check out the [docs]( to learn more on how to set it up. ### Financial connections We also support Financial connections in our latest sdk. Check out the [docs]( to learn more on how to set it up. ## Stripe initialization To initialize Stripe in your Flutter app, use the `Stripe` base class. `Stripe` offers `publishableKey`, `stripeAccountId`, `threeDSecureParams` and `merchantIdentifier`. Only `publishableKey` is required. ## Dart API The library offers several methods to handle stripe related actions: ```dart Future createPaymentMethod(...); Future handleNextAction(...); Future confirmPayment(...); Future configure3dSecure(...); Future isApplePaySupported(); Future presentApplePay(...); Future confirmApplePayPayment(...); Future confirmSetupIntent(...); Future retrievePaymentIntent(...); Future createTokenForCVCUpdate(...); Future initPaymentSheet(...); Future presentPaymentSheet(...); Future confirmPaymentSheetPayment() ``` The example app offers examples on how to use these methods. ## Pay Plugin support flutter_stripe fully supports the [Pay plugin]( from the Google Pay team. By including a few lines you can integrate Stripe as a payment processor for Google / Apple Pay: ```dart Future onGooglePayResult(paymentResult) async { final response = await fetchPaymentIntentClientSecret(); final clientSecret = response['clientSecret']; final token = paymentResult['paymentMethodData']['tokenizationData']['token']; final tokenJson = Map.castFrom(json.decode(token)); final params = PaymentMethodParams.cardFromToken( token: tokenJson['id'], ); // Confirm Google pay payment method await Stripe.instance.confirmPayment( clientSecret, params, ); } ``` ## Run the example app - Navigate to the example folder `cd example` - Install the dependencies - `flutter pub get` - Set up env vars for the flutter app and a local backend. - [Get your test Stripe API keys]( - `cp lib/.env.example.dart lib/.env.dart` and set your Stripe publishable key. - `cp server/.env.example server/.env` and set the variable values in your newly created `.env` file. - Install the server dependencies in the `server` directory: * `cd server` * `npm install` or `yarn --cwd ""server""` - Start the example - Terminal 1: * Move to the `server` directory: `cd server` * Run npm or yarn: `npm start` or `yarn --cwd ""server"" start` - Terminal 2: * Move to the `lib` directory: `cd lib` * Run flutter: `flutter run` ##### Additional steps for webhook forwarding - [Install the `stripe-cli`]( - Run `stripe listen --forward-to localhost:4242/webhook` ## Contributing You can help us make this project better, feel free to open an new issue or a pull request. ##### Setup This project uses [melos]( to manage all the packages inside this repo. - Install melos: `dart pub global activate melos` - Setup melos in your local folder: `melos bootstrap` ##### Useful commands - Format `melos run format` - Analyze `melos run analyze` - Test `melos run unittest` - Pub get `melos run get` ##### Publishing - Use `melos version` and `melos publish` to keep all the repositories in sync","496, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, needs triage, enhancement, Stripe RN SDK, bug, blocked, iOS, Android, web, Awaiting response, Stripe sdk, documentation, support, javascript, good first issue, duplicate, dependencies, Generic question"
mobile_scanner,juliansteenbakker/mobile_scanner,756,"['Dart', 'Swift', 'Kotlin']","['flutter', 'android', 'ios', 'dart', 'hacktoberfest']","# mobile_scanner []( []( []( []( A universal scanner for Flutter based on MLKit. Uses CameraX on Android and AVFoundation on iOS. ## Breaking Changes v5.0.0 Version 5.0.0 brings some breaking changes. However, some are reverted in version 5.1.0. Please see the list below for all breaking changes, and Changelog.md for a more detailed list. * ~~The `autoStart` attribute has been removed from the `MobileScannerController`. The controller should be manually started on-demand.~~ (Reverted in version 5.1.0) * ~~A controller is now required for the `MobileScanner` widget.~~ (Reverted in version 5.1.0) * ~~The `onDetect` method has been removed from the `MobileScanner` widget. Instead, listen to `MobileScannerController.barcodes` directly.~~ (Reverted in version 5.1.0) * The `width` and `height` of `BarcodeCapture` have been removed, in favor of `size`. * The `raw` attribute is now `Object?` instead of `dynamic`, so that it participates in type promotion. * The `MobileScannerArguments` class has been removed from the public API, as it is an internal type. * The `cameraFacingOverride` named argument for the `start()` method has been renamed to `cameraDirection`. * The `analyzeImage` function now correctly returns a `BarcodeCapture?` instead of a boolean. * The `formats` attribute of the `MobileScannerController` is now non-null. * The `MobileScannerState` enum has been renamed to `MobileScannerAuthorizationState`. * The various `ValueNotifier`s for the camera state have been removed. Use the `value` of the `MobileScannerController` instead. * The `hasTorch` getter has been removed. Instead, use the torch state of the controller's value. * The `TorchState` enum now provides a new value for unavailable flashlights. * The `onPermissionSet`, `onStart` and `onScannerStarted` methods have been removed from the `MobileScanner` widget. Instead, await `MobileScannerController.start()`. * The `startDelay` has been removed from the `MobileScanner` widget. Instead, use a delay between manual starts of one or more controllers. * The `overlay` widget of the `MobileScanner` has been replaced by a new property, `overlayBuilder`, which provides the constraints for the overlay. * The torch can no longer be toggled on the web, as this is only available for image tracks and not video tracks. As a result the torch state for the web will always be `TorchState.unavailable`. * The zoom scale can no longer be modified on the web, as this is only available for image tracks and not video tracks. As a result, the zoom scale will always be `1.0`. ## Features Supported See the example app for detailed implementation information. | Features | Android | iOS | macOS | Web | |------------------------|--------------------|--------------------|----------------------|-----| | analyzeImage (Gallery) | :heavy_check_mark: | :heavy_check_mark: | :x: | :x: | | returnImage | :heavy_check_mark: | :heavy_check_mark: | :x: | :x: | | scanWindow | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :x: | ## Platform Support | Android | iOS | macOS | Web | Linux | Windows | |---------|-----|-------|-----|-------|---------| | | | | | :x: | :x: | ## Platform specific setup ### Android This package uses by default the **bundled version** of MLKit Barcode-scanning for Android. This version is immediately available to the device. But it will increase the size of the app by approximately 3 to 10 MB. The alternative is to use the **unbundled version** of MLKit Barcode-scanning for Android. This version is downloaded on first use via Google Play Services. It increases the app size by around 600KB. [You can read more about the difference between the two versions here.]( To use the **unbundled version** of the MLKit Barcode-scanning, add the following line to your `/android/gradle.properties` file: ``` dev.steenbakker.mobile_scanner.useUnbundled=true ``` ### iOS **Add the following keys to your Info.plist file, located in /ios/Runner/Info.plist:** NSCameraUsageDescription - describe why your app needs access to the camera. This is called Privacy - Camera Usage Description in the visual editor. **If you want to use the local gallery feature from [image_picker]( NSPhotoLibraryUsageDescription - describe why your app needs permission for the photo library. This is called Privacy - Photo Library Usage Description in the visual editor. Example, ``` NSCameraUsageDescription This app needs camera access to scan QR codes NSPhotoLibraryUsageDescription This app needs photos access to get QR code from photo library ``` ### macOS Ensure that you granted camera permission in XCode -> Signing & Capabilities: ## Web As of version 5.0.0 adding the library to the `index.html` is no longer required, as the library is automatically loaded on first use. ### Providing a mirror for the barcode scanning library If a different mirror is needed to load the barcode scanning library, the source URL can be set beforehand. ```dart import 'package:flutter/foundation.dart'; import 'package:mobile_scanner/mobile_scanner.dart'; final String scriptUrl = // ... if (kIsWeb) { MobileScannerPlatform.instance.setBarcodeLibraryScriptUrl(scriptUrl); } ``` ## Usage Import the package with `package:mobile_scanner/mobile_scanner.dart`. Create a new `MobileScannerController` controller, using the required options. Provide a `StreamSubscription` for the barcode events. ```dart final MobileScannerController controller = MobileScannerController( // required options for the scanner ); StreamSubscription? _subscription; ``` Ensure that your `State` class mixes in `WidgetsBindingObserver`, to handle lifecyle changes: ```dart class MyState extends State with WidgetsBindingObserver { // ... @override void didChangeAppLifecycleState(AppLifecycleState state) { // If the controller is not ready, do not try to start or stop it. // Permission dialogs can trigger lifecycle changes before the controller is ready. if (!controller.value.isInitialized) { return; } switch (state) { case AppLifecycleState.detached: case AppLifecycleState.hidden: case AppLifecycleState.paused: return; case AppLifecycleState.resumed: // Restart the scanner when the app is resumed. // Don't forget to resume listening to the barcode events. _subscription = controller.barcodes.listen(_handleBarcode); unawaited(controller.start()); case AppLifecycleState.inactive: // Stop the scanner when the app is paused. // Also stop the barcode events subscription. unawaited(_subscription?.cancel()); _subscription = null; unawaited(controller.stop()); } } // ... } ``` Then, start the scanner in `void initState()`: ```dart @override void initState() { super.initState(); // Start listening to lifecycle changes. WidgetsBinding.instance.addObserver(this); // Start listening to the barcode events. _subscription = controller.barcodes.listen(_handleBarcode); // Finally, start the scanner itself. unawaited(controller.start()); } ``` Finally, dispose of the the `MobileScannerController` when you are done with it. ```dart @override Future dispose() async { // Stop listening to lifecycle changes. WidgetsBinding.instance.removeObserver(this); // Stop listening to the barcode events. unawaited(_subscription?.cancel()); _subscription = null; // Dispose the widget itself. super.dispose(); // Finally, dispose of the controller. await controller.dispose(); } ``` To display the camera preview, pass the controller to a `MobileScanner` widget. See the [examples](example/README.md) for runnable examples of various usages, such as the basic usage, applying a scan window, or retrieving images from the barcodes.","446, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, ios, enhancement, android, bug, web, pdf417, MLKit, scanWindow, recognition, permissions, macos, landscape mode, flashlight, dependencies, symbiology, lifecycle, help wanted, good first issue, documentation, camera status, black screen, windows, v3.0.0, rear camera, question, portrait mode, layout, java, ipad, interaction with hardware"
flutter-tips-and-tricks,vandadnp/flutter-tips-and-tricks,6616,['Dart'],"['flutter', 'dart', 'flutter-ui']",# Table of Contents * [Canonicalized Maps in Dart](tipsandtricks/canonicalized-maps-in-dart/canonicalized-maps-in-dart.md) * [Extending Functions in Flutter](tipsandtricks/extending-functions-in-flutter/extending-functions-in-flutter.md) * [Stream Timeout Between Events in Flutter](tipsandtricks/stream-timeout-between-events-in-flutter/stream-timeout-between-events-in-flutter.md) * [Dart Object Description Using Reflection](tipsandtricks/dart-object-description-using-reflection/dart-object-description-using-reflection.md) * [Unwrapping Multiple Optionals in Flutter & Dart](tipsandtricks/unwrapping-multiple-optionals-in-flutter-and-dart/unwrapping-multiple-optionals-in-flutter-and-dart.md) * [`SafeList` in Flutter and Dart](tipsandtricks/safelist-in-flutter-and-dart/safelist-in-flutter-and-dart.md) * [Optional Iterable First Element in Dart](tipsandtricks/optional-iterable-first-element-in-dart/optional-iterable-first-element-in-dart.md) * [Finding and Converting JSON Values in Dart](tipsandtricks/finding-and-converting-json-values-in-dart/finding-and-converting-json-values-in-dart.md) * [Colorful Logs in Flutter](tipsandtricks/colorful-logs-in-flutter/colorful-logs-in-flutter.md) * [Prefer `Iterable` in Flutter](tipsandtricks/prefer-iterable-in-flutter/prefer-iterable-in-flutter.md) * [Recoveringg Stream Errors in Flutter](tipsandtricks/recovering-stream-errors-in-flutter/recovering-stream-errors-in-flutter.md) * [Riverpod `StreamProvider` Disposal](tipsandtricks/riverpod-streamprovider-disposal/riverpod-streamprovider-disposal.md) * [Figma Text Strokes in Flutter](tipsandtricks/figma-text-strokes-in-flutter/figma-text-strokes-in-flutter.md) * [Universal App Links in Flutter](tipsandtricks/universal-app-links-in-flutter/universal-app-links-in-flutter.md) * [Reusable Lottie Animations in Flutter](tipsandtricks/reusable-lottie-animations-in-flutter/reusable-lottie-animations-in-flutter.md) * [Identical Objects in Dart](tipsandtricks/identical-objects-in-dart/identical-objects-in-dart.md) * [Breaking Strings in Dart](tipsandtricks/breaking-strings-in-dart/breaking-strings-in-dart.md) * [Presenting Streams in Flutter](tipsandtricks/presenting-streams-in-flutter/presenting-streams-in-flutter.md) * [Presenting Futures in Flutter](tipsandtricks/presenting-futures-in-flutter/presenting-futures-in-flutter.md) * [Absorb `Stream` Errors in Flutter](tipsandtricks/absorb-stream-errors-in-flutter/absorb-stream-errors-in-flutter.md) * [`FlatThen` on `Future` in Dart](tipsandtricks/flatthen-on-future-in-dart/flatthen-on-future-in-dart.md) * [Rich Text Construction in Flutter](tipsandtricks/rich-text-construction-in-flutter/rich-text-construction-in-flutter.md) * [Firestore Transactions in Flutter](tipsandtricks/firestore-transactions-in-flutter/firestore-transactions-in-flutter.md) * [Image Aspect Ratio in Flutter](tipsandtricks/image-aspect-ratio-in-flutter/image-aspect-ratio-in-flutter.md) * [Debouncing Streams in Flutter](tipsandtricks/debouncing-streams-in-flutter/debouncing-streams-in-flutter.md) * [Reusable Alert Dialogs in Flutter](tipsandtricks/reusable-alert-dialogs-in-flutter/reusable-alert-dialogs-in-flutter.md) * [Recursive Search in `Map` in Dart](tipsandtricks/recursive-search-in-map-in-dart/recursive-search-in-map-in-dart.md) * [Row with Spacing in Flutter](tipsandtricks/row-with-spacing-in-flutter/row-with-spacing-in-flutter.md) * [Spreading Custom Classes in Dart](tipsandtricks/spreading-customc-classes-in-dart/spreading-customc-classes-in-dart.md) * [`StreamProvider` in Flutter Riverpod](tipsandtricks/streamprovider-in-flutter-riverpod/streamprovider-in-flutter-riverpod.md) * [Spreading `Iterable` in Flutter](tipsandtricks/spreading-iterable-widget-in-flutter/spreading-iterable-widget-in-flutter.md) * [Immutable Maps in Flutter Riverpod](tipsandtricks/immutable-maps-in-flutter-riverpod/immutable-maps-in-flutter-riverpod.md) * [`StreamProvider` Yield in Riverpod](tipsandtricks/streamprovider-yield-in-riverpod/streamprovider-yield-in-riverpod.md) * [`Future` Unwrap in Flutter](tipsandtricks/future-unwrap-in-flutter/future-unwrap-in-flutter.md) * [HTML Colors in Flutter](tipsandtricks/html-colors-in-flutter/html-colors-in-flutter.md) * [Generic Watch and Filter in Riverpod](tipsandtricks/generic-watch-and-filter-in-riverpod/generic-watch-and-filter-in-riverpod.md) * [Faking APIs with Riverpod](tipsandtricks/faking-apis-with-riverpod/faking-apis-with-riverpod.md) * [Null-Aware Infix Operators in Dart](tipsandtricks/null-aware-infix-operators-in-dart/null-aware-infix-operators-in-dart.md) * [Generic Centering of Widgets in Flutter](tipsandtricks/generic-centering-of-widgets-in-flutter/generic-centering-of-widgets-in-flutter.md) * [Custom Integer to String in Dart](tipsandtricks/custom-integer-to-string-in-dart/custom-integer-to-string-in-dart.md) * [Grouping `Iterable` in Dart](tipsandtricks/grouping-iterable-in-dart/grouping-iterable-in-dart.md) * [Nested Generators in Dart](tipsandtricks/nested-generators-in-dart/nested-generators-in-dart.md) * [Default Value for Optionals in Dart](tipsandtricks/default-value-for-optionals-in-dart/default-value-for-optionals-in-dart.md) * [CompactMap on `Map` in Dart](tipsandtricks/compactmap-on-map-in-dart/compactmap-on-map-in-dart.md) * [iOS Context Menu in Flutter](tipsandtricks/ios-context-menu-in-flutter/ios-context-menu-in-flutter.md) * [Recursive Flatten of List in Dart](tipsandtricks/recursive-flatten-of-list-in-dart/recursive-flatten-of-list-in-dart.md) * [Async API Cleanup in Flutter](tipsandtricks/async-api-cleanup-in-flutter/async-api-cleanup-in-flutter.md) * [Splice in Dart](tipsandtricks/splice-in-dart/splice-in-dart.md) * [Label Text in Flutter](tipsandtricks/label-text-in-flutter/label-text-in-flutter.md) * [Where Clause on `Map` in Dart](tipsandtricks/where-clause-on-map-in-dart/where-clause-on-map-in-dart.md) * [Unawaited and Ignore in Dart](tipsandtricks/unawaited-and-ignore-in-dart/unawaited-and-ignore-in-dart.md) * [Key and Value Mapping in Dart](tipsandtricks/key-and-value-mapping-in-dart/key-and-value-mapping-in-dart.md) * [`-` Operator on `Iterable` in Dart](tipsandtricks/--operator-on-iterablet-in-dart/--operator-on-iterablet-in-dart.md) * [Merging `Map`s in Dart](tipsandtricks/merging-maps-in-dart/merging-maps-in-dart.md) * [`StreamQueue` in Flutter](tipsandtricks/streamqueue-in-flutter/streamqueue-in-flutter.md) * [Enum Annotations in Flutter](tipsandtricks/enum-annotations-in-flutter/enum-annotations-in-flutter.md) * [Sorting Generics in Dart](tipsandtricks/sorting-generics-in-dart/sorting-generics-in-dart.md) * [Animating FAB in Flutter](tipsandtricks/animating-fab-in-flutter/animating-fab-in-flutter.md) * [Image Gallery in Flutter](tipsandtricks/image-gallery-in-flutter/image-gallery-in-flutter.md) * [Map with Index in Dart](tipsandtricks/map-with-index-in-dart/map-with-index-in-dart.md) * [`Set` Comprehension in Dart](tipsandtricks/set-comprehension-in-dart/set-comprehension-in-dart.md) * [Stretching `GridView` Items in Flutter](tipsandtricks/stretching-gridview-items-in-flutter/stretching-gridview-items-in-flutter.md) * [Email Drag and Drop in Flutter](tipsandtricks/email-drag-and-drop-in-flutter/email-drag-and-drop-in-flutter.md) * [Cherry-Picking Functions in Dart](tipsandtricks/cherry-picking-functions-in-dart/cherry-picking-functions-in-dart.md) * [Integer Range Extension in Dart](tipsandtricks/integer-range-extension-in-dart/integer-range-extension-in-dart.md) * [Static vs Factory Constructors in Dart](tipsandtricks/static-vs-factory-constructors-in-dart/static-vs-factory-constructors-in-dart.md) * [Result Type in Dart](tipsandtricks/result-type-in-dart/result-type-in-dart.md) * [`StreamController` Sink in Flutter](tipsandtricks/streamcontroller-sink-in-flutter/streamcontroller-sink-in-flutter.md) * [Enum Members in Dart 2.17](tipsandtricks/enum-members-in-dart-2-17/enum-members-in-dart-2-17.md) * [Constructor vs Factory Constructor in Dart](tipsandtricks/constructor-vs-factory-constructor-in-dart/constructor-vs-factory-constructor-in-dart.md) * [Unwrapping Streams in Dart](tipsandtricks/unwrapping-streams-in-dart/unwrapping-streams-in-dart.md) * [Appending to `Iterable` in Dart](tipsandtricks/appending-to-iterablet-in-dart/appending-to-iterablet-in-dart.md) * [Inline Synchronous Generators in Dart](tipsandtricks/inline-synchronous-generators-in-dart/inline-synchronous-generators-in-dart.md) * [Functions as First Class Citizens in Flutter](tipsandtricks/functions-as-first-class-citizens-in-flutter/functions-as-first-class-citizens-in-flutter.md) * [`+` Operator on `Map` in Dart](tipsandtricks/%2B-operator-on-map-in-dart/%2B-operator-on-map-in-dart.md) * [`Stream` Drain in Flutter](tipsandtricks/stream-drain-in-flutter/stream-drain-in-flutter.md) * [Reusable Separators in Flutter](tipsandtricks/reusable-separators-in-flutter/reusable-separators-in-flutter.md) * [`AsyncSnapshotBuilder` in Flutter](tipsandtricks/asyncsnapshotbuilder-in-flutter/asyncsnapshotbuilder-in-flutter.md) * [Default Parameter Values in Dart](tipsandtricks/default-parameter-values-in-dart/default-parameter-values-in-dart.md) * [`Clipboard` in Flutter](tipsandtricks/clipboard-in-flutter/clipboard-in-flutter.md) * [Generic Object Map in Dart](tipsandtricks/generic-object-map-in-dart/generic-object-map-in-dart.md) * [RequireData in `AsyncSnapshot` in Flutter](tipsandtricks/requiredata-in-asyncsnapshot-in-flutter/requiredata-in-asyncsnapshot-in-flutter.md) * [`Symbol` in Dart](tipsandtricks/symbol-in-dart/symbol-in-dart.md) * [`RadioListTile` in Flutter](tipsandtricks/radiolisttile-in-flutter/radiolisttile-in-flutter.md) * [Infinite `ListView` in Flutter](tipsandtricks/infinite-listview-in-flutter/infinite-listview-in-flutter.md) * [`FilterChip` in Flutter](tipsandtricks/filterchip-in-flutter/filterchip-in-flutter.md) * [Function Pointers in Flutter](tipsandtricks/function-pointers-in-flutter/function-pointers-in-flutter.md) * [Multi-field Object Comparison in Dart](tipsandt... [TRUNCATED],"1.1k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, In Progress"
font_awesome_flutter,fluttercommunity/font_awesome_flutter,824,"['Dart', 'HTML', 'Objective-C']","['flutter', 'flutter-icons', 'font-awesome', 'hacktoberfest']","# font_awesome_flutter []( []( The *free* [Font Awesome]( Icon pack available as set of Flutter Icons - based on font awesome version 6.5.1. This icon pack includes only the *free* icons offered by Font Awesome out-of-the-box. If you have purchased the pro icons and want to enable support for them, please see the instructions below. ## Installation In the `dependencies:` section of your `pubspec.yaml`, add the following line: ```yaml dependencies: font_awesome_flutter: ``` ## Usage ```dart import 'package:font_awesome_flutter/font_awesome_flutter.dart'; class MyWidget extends StatelessWidget { Widget build(BuildContext context) { return IconButton( // Use the FaIcon Widget + FontAwesomeIcons class for the IconData icon: FaIcon(FontAwesomeIcons.gamepad), onPressed: () { print(""Pressed""); } ); } } ``` ### Icon names Icon names equal those on the [official website]( but are written in lower camel case. If more than one icon style is available for an icon, the style name is used as prefix, except for ""regular"". Due to restrictions in dart, icons starting with numbers have those numbers written out. #### Examples: | Icon name | Code | Style| |---------------------------------------------------------------------------------------| --- | ---| | [angle-double-up]( | `FontAwesomeIcons.angleDoubleUp` | solid _(this icon does not have other free styles)_ | | [arrow-alt-circle-up]( | `FontAwesomeIcons.arrowAltCircleUp` | regular | | [arrow-alt-circle-up]( | `FontAwesomeIcons.solidArrowAltCircleUp` | solid | | [1]( | `FontAwesomeIcons.solidOne` | solid | ## Example App View the Flutter app in the `example` directory to see all the available `FontAwesomeIcons`. ## Customizing font awesome flutter We supply a configurator tool to assist you with common customizations to this package. All options are interoperable. By default, if run without arguments and no `icons.json` in `lib/fonts` exists, it updates all icons to the newest free version of font awesome. ### Setup To use your custom version, you must first clone [this repository]( to a location of your choice and run `flutter pub get` inside. This installs all dependencies. The configurator is located in the `util` folder and can be started by running `configurator.bat` on Windows, or `./configurator.sh` on linux and mac. All following examples use the `.sh` version, but work same for `.bat`. (If on windows, omit the `./` or replace it with `.\`.) An overview of available options can be viewed with `./configurator.sh --help`. To use your customized version in an app, go to the app's `pubspec.yaml` and add a dependency for `font_awesome_flutter: '>= 4.7.0'`. Then override the dependency's location: ```yaml dependencies: font_awesome_flutter: '>= 4.7.0' ... dependency_overrides: font_awesome_flutter: path: path/to/your/font_awesome_flutter ... ``` ### Enable pro icons :exclamation: By importing pro icons you acknowledge that it is your obligation to keep these files private. This includes **not** uploading your package to a public github repository or other public file sharing services. * Go to the location of your custom font_awesome_flutter version (see [setup](#setup)) * Download the web version of font awesome pro and open it * Move **all** `.ttf` files from the `webfonts` directory and `icons.json` from `metadata` to `path/to/your/font_awesome_flutter/lib/fonts`. Replace existing files. * Run the configurator. It should say ""Custom icons.json found"" It may be required to run `flutter clean` in apps who use this version for changes to appear. ### Excluding styles One or more styles can be excluded from all generation processes by passing them with the `--exclude` option: ``` $ ./configurator.sh --exclude solid $ ./configurator.sh --exclude solid,brands ``` See the [optimizations](#what-about-file-size-and-ram-usage) and [dynamic icon retrieval by name](#retrieve-icons-dynamically-by-their-name-or-css-class) sections for more information as to why it makes sense for your app. ### Retrieve icons dynamically by their name or css class Probably the most requested feature after support for pro icons is the ability to retrieve an icon by their name. This was previously not possible, because a mapping from name to icon would break all [discussed optimizations](#what-about-file-size-and-ram-usage). Please bear in mind that this is still the case. As all icons could theoretically be requested, none can be removed by flutter. It is strongly advised to only use this option in conjunction with [a limited set of styles](#excluding-styles) and with as few of them as possible. You may need to build your app with the `--no-tree-shake-icons` flag for it to succeed. Using the new configurator tool, this is now an optional feature. Run the tool with the `--dynamic` flag to generate... ``` $ ./configurator.sh --dynamic ``` ...and the following import to use the map. For normal icons, use `faIconNameMapping` with a key of this format: 'style icon-name'. ```dart import 'package:font_awesome_flutter/name_icon_mapping.dart'; ... FaIcon(faIconNameMapping['solid abacus']); ... ``` To exclude unused styles combine the configurator options: ``` $ ./configurator.sh --dynamic --exclude solid ``` A common use case also includes fetching css classes from a server. The utility function `getIconFromCss()` takes a string of classes and returns the icon which would be shown by a browser: ```dart getIconFromCss('far custom-class fa-abacus'); // returns the abacus icon in regular style. custom-class is ignored ``` ## Duotone icons Duotone support has been discontinued after font awesome changed the way they lay out the icon glyphs inside the font's file. The new way using ligatures is not supported by flutter at the moment. For more information on why duotone icon support was discontinued, see [this comment]( ## FAQ Why aren't the icons aligned properly or why are the icons being cut off? Please use the `FaIcon` widget provided by the library instead of the `Icon` widget provided by Flutter. The `Icon` widget assumes all icons are square, but many Font Awesome Icons are not. What about file size and ram usage This package has been written in a way so that it only uses the minimum amount of resources required. All links (eg. `FontAwesomeIcons.abacus`) to unused icons will be removed automatically, which means only required icon definitions are loaded into ram. Flutter 1.22 added icon tree shaking. This means unused icon ""images"" will be removed as well. However, this only applies to styles of which at least one icon has been used. Assuming only icons of style ""regular"" are being used, ""regular"" will be minified to only include the used icons and ""solid"" and ""brands"" will stay in their raw, complete form. This issue is being [tracked over in the flutter repository]( However, using the configurator, you can easily exclude styles from the package. For more information, see [customizing font awesome flutter](#customizing-font-awesome-flutter) Why aren't the icons showing up on Mobile devices? If you're not seeing any icons at all, sometimes it means that Flutter has a cached version of the app on device and hasn't pushed the new fonts. I've run into that as well a few times... Please try: 1. Stopping the app 2. Running `flutter clean` in your app directory 3. Deleting the app from your simulator / emulator / device 4. Rebuild & Deploy the app. Why aren't the icons showing up on Web? Most likely, the fonts were not correctly added to the `FontManifest.json`. Note: older versions of Flutter did not properly package non-Material fonts in the `FontManifest.json` during the build step, but that issue has been resolved and this shouldn't be much of a problem these days. Please ensure you are using `Flutter 1.14.6 beta` or newer! Why does mac/linux not run the configurator? This is most probably due to missing file permissions. Downloaded scripts cannot be executed by default. Either give the execute permission to `util/configurator.sh` with `$ chmod +x configurator.sh` or run the commands by prepending an `sh`: `$ sh ./configurator.sh`","228, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, suggestion, question, invalid, help wanted, enhancement, duplicate, bug, Pro icons, Generator, Awaiting reply"
spotube,KRTirtho/spotube,25011,"['Dart', 'C++', 'Svelte']","['spotify', 'youtube', 'desktop-client', 'music-player', 'music']","An open source, cross-platform Spotify client compatible across multiple platforms utilizing Spotify's data API and YouTube, Piped.video or JioSaavn as an audio source, eliminating the need for Spotify Premium Btw it's not just another Electron app []( --- ## Features - No ads, thanks to the use of public & free Spotify and YT Music APIs - Freely downloadable tracks - Cross-platform support - Small size & less data usage - Anonymous/guest login - Time synced lyrics - No telemetry, diagnostics or user data collection - Native performance - Open source/libre software - Playback control is done locally, not on the server **** It is still **recommended** to support creators by engaging with their YouTube channels/Spotify tracks (or preferably by buying their merch/concert tickets/physical media). ### Unsupported features - **Spotify Shows & Podcasts:** Shows and Podcasts will **never be supported** because the audio tracks are _only_ available on Spotify and accessing them would require Spotify Premium. - **Spotify Listen Along:** [Coming soon!]( ## Installation guide New versions usually release every 3-4 months. This handy table lists all the methods you can use to install Spotube: Platform Package/Installation Method Windows MacOS Android Flatpak flatpak install com.github.KRTirtho.Spotube AppImage AppImage's lacking stability led to it's temporal removal. More information at Debian/Ubuntu Then run: sudo apt install ./Spotube-linux-x86_64.deb Arch/Manjaro With pamac: sudo pamac install spotube-bin With yay: yay -Sy spotube-bin Fedora/OpenSuse For Fedora: sudo dnf install ./Spotube-linux-x86_64.rpm For OpenSuse: sudo zypper in ./Spotube-linux-x86_64.rpm Linux (tarball) Macos - Homebrew brew tap krtirtho/apps brew install --cask spotube Windows - Chocolatey choco install spotube Windows - Scoop scoop bucket add extras scoop install spotube Windows - WinGet winget install --id KRTirtho.Spotube ### Nightly Builds Grab the latest nightly builds of Spotube [from the GitHub Releases]( ## Building from source You can compile Spotube's source code by [following these instructions](CONTRIBUTION.md#your-first-code-contribution). ## The Spotube team - [Kingkor Roy Tirtho]( - The Founder, Maintainer and Lead Developer - [RaptaG]( - The GitHub Moderator and Community Manager - [Owen Connor]( - The Cool Discord Moderator - [Meenbeese]( - The Android Developer - [Piotr Rogowski]( - The MacOS Developer - [Rusty Apple]( - The Mysterious Unknown Guy ## License Spotube is open source and licensed under the [BSD-4-Clause](/LICENSE) License. If you are concerned, you can [read the reason of choosing this license]( [Click to show] Services/Package/Plugin Credits ### Services 1. [Flutter]( - Flutter transforms the app development process. Build, test, and deploy beautiful mobile, web, desktop, and embedded apps from a single codebase 1. [Spotify API]( - The Spotify Web API is a RESTful API that provides access to Spotify data 1. [Piped]( - Piped is a privacy friendly alternative YouTube frontend, which is efficient and scalable by design. 1. [YouTube]( - YouTube is an American online video-sharing platform headquartered in San Bruno, California. Three former PayPal employeesChad Hurley, Steve Chen, and Jawed Karimcreated the service in February 2005 1. [JioSaavn]( - JioSaavn is an Indian online music streaming service and a digital distributor of Bollywood, English and other regional Indian music across the world. Since it was founded in 2007 as Saavn, the company has acquired rights to over 5 crore (50 million) music tracks in 15 languages 1. [SongLink]( - SongLink is a free smart link service that helps you share music with your audience. It's a one-stop-shop for creating smart links for music, podcasts, and other audio content 1. [LRCLib]( - A public synced lyric API 1. [Linux]( - Linux is a family of open-source Unix-like operating systems based on the Linux kernel, an operating system kernel first released on September 17, 1991, by Linus Torvalds. Linux is typically packaged in a Linux distribution 1. [AUR]( - AUR stands for Arch User Repository. It is a community-driven repository for Arch-based Linux distributions users 1. [Flatpak]( - Flatpak is a utility for software deployment and package management for Linux 1. [SponsorBlock]( - SponsorBlock is an open-source crowdsourced browser extension and open API for skipping sponsor segments in YouTube videos. 1. [Inno Setup]( - Inno Setup is a free installer for Windows programs by Jordan Russell and Martijn Laan 1. [F-Droid]( - F-Droid is an installable catalogue of FOSS (Free and Open Source Software) applications for the Android platform. The client makes it easy to browse, install, and keep track of updates on your device 1. [LastFM]( - Last.fm is a music streaming and discovery platform that helps users discover and share new music. It tracks users' music listening habits across many devices and platforms. ### Dependencies 1. [args]( - Library for defining parsers for parsing raw command-line arguments into a set of options and values using GNU and POSIX style options. 1. [async]( - Utility functions and classes related to the 'dart:async' library. 1. [audio_service]( - Flutter plugin to play audio in the background while the screen is off. 1. [audio_session]( - Sets the iOS audio session category and Android audio attributes for your app, and manages your app's audio focus, mixing and ducking behaviour. 1. [auto_size_text]( - Flutter widget that automatically resizes text to fit perfectly within its bounds. 1. [buttons_tabbar]( - A Flutter package that implements a TabBar where each label is a toggle button. 1. [cached_network_image]( - Flutter library to load and cache network images. Can also be used with placeholder and error widgets. 1. [catcher_2]( - Plugin for error catching which provides multiple handlers for dealing with errors when they are not caught by the developer. 1. [collection]( - Collections and utilities functions and classes related to collections. 1. [cupertino_icons]( - Default icons asset for Cupertino widgets based on Apple styled icons 1. [curved_navigation_bar]( - Stunning Animating Curved Shape Navigation Bar. Adjustable color, background color, animation curve, animation duration. 1. [dbus]( - A native Dart implementation of the D-Bus message bus client. This package allows Dart applications to directly access services on the Linux desktop. 1. [device_info_plus]( - Flutter plugin providing detailed information about the device (make, model, etc.), and Android or iOS version the app is running on. 1. [device_preview]( - Approximate how your Flutter app looks and performs on another device. 1. [dio]( - A powerful HTTP networking package,supports Interceptors,Aborting and canceling a request,Custom adapters, Transformers, etc. 1. [disable_battery_optimization]( - Flutter plugin to check and disable battery optimizations. Also shows custom steps to disable the optimizations in devices like mi, xiaomi, samsung, oppo, huawei, oneplus etc 1. [duration]( - Utilities to make working with 'Duration's easier. Formats duration in human readable form and also parses duration in human readable form to Dart's Duration. 1. [envied]( - Explicitly reads environment variables into a dart file from a .env file for more security and faster start up times. 1. [file_selector]( - Flutter plugin for opening and saving files, or selecting directories, using native file selection UI. 1. [fluentui_system_icons]( - Fluent UI System Icons are a collection of familiar, friendly and modern icons from Microsoft. 1. [flutter_cache_manager]( - Generic cache manager for flutter. Saves web files on the storages of the device and saves the cache info using sqflite. 1. [flutter_displaymode]( - A Flutter plugin to set display mode (resolution, refresh rate) on Android platform. Allows to enable high refresh rate on supported devices. 1. [flutter_feather_icons]( - Feather is a collection of simply beautiful open source icons. Each icon is designed on a 24x24 grid with an emphasis on simplicity, consistency and usability. 1. [flutter_hooks]( - A flutter implementation of React hooks. It adds a new kind of widget with enhanced code reuse. 1. [flutter_inappwebview]( - A Flutter plugin that allows you to add an inline webview, to use an headless webview, and to open an in-app browser window. 1. [flutter_native_splash]( - Customize Flutter's default white native splash screen with background color and splash image. Supports dark mode, full screen, and more. 1. [flutter_riverpod]( - A reactive caching and data-binding framework. Riverpod makes working with asynchronous code a breeze. 1. [flutter_secure_storage]( - Flutter Secure Storage provides API to store data in secure storage. Keychain is used in iOS, KeyStore based solution is used in Android. 1. [flutter_svg]( - An SVG rendering and widget library for Flutter, which allows painting and displaying Scalable Vector Graphics 1.1 files. 1. [form_validator]( - Simplest form validation library for flutter's form field widgets 1. [fuzzywuzzy]( - An implementation of the popular fuzzywuzzy package in Dart, to suit all your fuzzy string matching/searching needs! 1. [go_router]( - A declarative router for Flutter based on Navigation 2 supporting deep linking, data-driven routes and more 1. [google_fonts]( - A Flutter package to use fonts from fonts.google.com. Supports HTTP fetching, caching, and asset bundling. 1. [hive]( - Lightweight and blazing fast key-value database written in pure Dart. Strongly encrypted using AES-256. 1. [hive_flutter]( - Extension for Hive. Makes it easier to use Hive in Flutter apps. 1. [hooks_riverpod]( - A reactive caching and data-binding framework. Riverpod makes working with asynchronous code a breeze. 1. [html]( - APIs for parsing and manipulating HTML content outside the browser. 1. [ - A composable, multi-platform, Future-based API for HTTP requests. 1. [image_picker]( - Flutter plugin for selecting images from t... [TRUNCATED]","1k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, bug, enhancement, UI, potential-duplicate, Linux, Android, Windows, macOS, invalid, wontfix / Alternatively patched, question, help wanted, translation, github_actions, duplicate, documentation, deployed, dependencies, dart"
appsflyer-flutter-plugin,AppsFlyerSDK/appsflyer-flutter-plugin,139,"['Dart', 'Objective-C', 'Java']",[],"# appsflyer-flutter-plugin []( In order for us to provide optimal support, we would kindly ask you to submit any issues to support@appsflyer.com > *When submitting an issue please specify your AppsFlyer sign-up (account) email , your app ID , production steps, logs, code snippets and any additional relevant information.* ### This plugin is built for - Android AppsFlyer SDK **v6.14.0** - iOS AppsFlyer SDK **v6.14.3** ## Breaking changes when updating to v6.x.x If you have used one of the removed/changed APIs, please check the integration guide for the updated instructions. - From version `6.11.2`, the `setPushNotification` will not work in iOS. [Please use our new API `sendPushNotificationData` when receiving a notification on flutter side](/doc/API.md#sendPushNotificationData). - From version `6.8.0`, the `enableLocationCollection` has been removed from the plugin. - From version `6.4.0`, UDL (Unified deep link) now as a dedicated class with getters for handling the deeplink result. [Check the full UDL guide]( `setSharingFilter` & `setSharingFilterForAllPartners` APIs are deprecated. Instead use the [new API `setSharingFilterForPartners`]( - From version `6.3.5+2`, Remove stream from the plugin (no change is needed if you use callbacks for handling deeplink). - From version `6.2.3+2`, Flutter 2 is supported, including null safety. `6.2.4-flutterv1` will use iOS SDK 6.2.4 with Flutter V1. - From version `6.0.0`, we have renamed the following APIs: |Before v6 | v6 | |-------------------------------|-----------------------------| | trackEvent | logEvent | | stopTracking | stop | | validateAndTrackInAppPurchase | validateAndLogInAppPurchase | - From version `6.1.2+4`, we have renamed the following APIs: |Before v6.1.2+4 | v6.1.2+4 | |-------------------------------|-----------------------------| | validateAndLogInAppPurchase | validateAndLogInAppIosPurchase/validateAndLogInAppAndroidPurchase | ### Important notice - Switch `ConversionData` and `OnAppOpenAttribution` to be based on callbacks instead of streams from plugin version `6.0.5+2`. ## AD_ID permission for Android In v6.8.0 of the AppsFlyer SDK, we added the normal permission `com.google.android.gms.permission.AD_ID` to the SDK's AndroidManifest, to allow the SDK to collect the Android Advertising ID on apps targeting API 33. If your app is targeting children, you need to revoke this permission to comply with Google's Data policy. You can read more about it [here]( ## Guides - [Adding the SDK to your project](/doc/Installation.md) - [Initializing the SDK](/doc/BasicIntegration.md) - [In-app Events](/doc/InAppEvents.md) - [Deep Linking](/doc/DeepLink.md) - [Advanced APIs](/doc/AdvancedAPI.md) - [Testing the integration](/doc/Testing.md) - [APIs](/doc/API.md) - [Sample App](/example)","109, Code, Issues, Pull requests, Actions, Projects, Security, Insights, support, question, enhancement, wontfix, waiting for customer response, invalid, help wanted, good first issue, fix version 6.0.5+1, duplicate, bug, api request, Platform:iOS, Platform:Android"
sail,sail-tunnel/sail,440,"['Dart', 'Kotlin', 'Swift']","['v2board', 'v2ray', 'shadowsocks', 'trojan', 'vpn']","English | [](./README_zh-CN.md) # Sail []( A flutter application for [V2Board]( ~~and [SSPanel-Uim]( support iOS application not Android now, I don't have android devices, LOL. recreation of [Mohammad Reza Farahzad's design]( **IF THIS PROJECT HELPS YOU, PLEASE GIVE ME A LITTLE STAR.** ## Screenshots ## Resources - [Mohammad Reza Farahzad's design]( - [flat flags]( ## Contact me []( [](mailto:sail-tunnel@gmail.com) ## TODOS: - [x] Support android devices. - [ ] Dart ffi with iOS and android to control vpn. - [x] Order page - [x] My settings page - [x] Servers list page support ping action. - [ ] Refactor colors by material theme. ## Environment - Flutter 3.0.1 - Dart 2.17.1 - macOS 12.4 - IntelliJ IDEA 2022.1.1 (Ultimate Edition) (thx for [jetbrains opensource plan]( - Xcode 13.4.1 - iOS 15.5 ## Installation ```shell flutter pub get ``` ## Develop ```shell flutter run ``` ## Build build android apk ```shell flutter build apk ``` build ios ```shell flutter build ios ```","207, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
melos,invertase/melos,1044,"['Dart', 'Shell', 'Batchfile']","['dart', 'pubdev', 'monorepo', 'lerna', 'flutter']","A tool for managing Dart projects with multiple packages, inspired by Lerna. Documentation License --- ## About Splitting up large code bases into separate independently versioned packages is extremely useful for code sharing. However, making changes across many repositories is _messy_ and difficult to track, and testing across repositories gets complicated really fast. To solve these (and many other) problems, some projects will organize their code bases into multi-package repositories (sometimes called [monorepos]( **Melos is a tool that optimizes the workflow around managing multi-package repositories with git and Pub.** ## What does a Melos workspace look like? A default file structure looks something like this: ``` my-melos-repo/ melos.yaml packages/ package-1/ pubspec.yaml package-2/ pubspec.yaml ``` The location of your packages can be configured via the `melos.yaml` configuration file if the default is unsuitable. ## What can Melos do? - Link local packages in your workspace together without adding dependency overrides. - Automatically version, create changelogs and publish your packages using [Conventional Commits]( - Pre-define advanced custom scripts for your workspace in your `melos.yaml` configuration to use via `melos run [scriptName]`. Anyone contributing to your workspace can just run `melos run` to be prompted to select a script from a list with descriptions of each script. - Scripts can even [prompt to select a package]( to run against with pre-defined filters. - Execute commands across your packages easily with `melos exec -- ` with additional concurrency and fail-fast options. - [Environment variables]( containing various information about the current package and the workspace are available in each execution. - Can be combined with all package filters. - Many advanced package filtering options allowing you to target specific packages or groups of packages in your workspace. - `--no-private` - Exclude private packages (`publish_to: none`). - `--[no-]published` - Filter packages where the current local package version exists on pub.dev. Or ""-no-published"" to filter packages that have not had their current version published yet. - `--[no-]nullsafety` - Filter packages where the current local version uses a ""nullsafety"" prerelease preid. Or ""-no-nullsafety"" to filter packages where their current version does not have a ""nullsafety"" preid. - `--[no-]flutter` - Filter packages where the package depends on the Flutter SDK. Or ""-no-flutter"" to filter packages that do not depend on the Flutter SDK. - `--scope=` - Include only packages with names matching the given glob. - `--ignore=` - Exclude packages with names matching the given glob. - `--diff=` - Only include packages that have been changed since the specified `ref`, e.g. a commit sha or git tag. - `--dir-exists=` - Include only packages where a specific directory exists inside the package. - `--file-exists=` - Include only packages where a specific file exists in the package. - `--depends-on=` - Include only packages that depend on a specific package. - `--no-depends-on=` - Include only packages that _don't_ depend on a specific package. - `--include-dependencies` - Expands the filtered list of packages to include those packages' transitive dependencies (ignoring filters). - `--include-dependents` - Expands the filtered list of packages to include those packages' transitive dependents (ignoring filters). - Advanced support for IntelliJ IDEs with automatic creation of [run configurations for workspace defined scripts and more]( on workspace bootstrap. - Integration with VS Code through an [extension][melos-code]. ## Getting Started Go to the [Getting Started]( page of the [documentation]( to start using Melos. ## Who is using Melos? The following projects are using Melos: - [firebase/flutterfire]( - [Flame-Engine/Flame]( - [fluttercommunity/plus_plugins]( - [GetStream/stream-chat-flutter]( - [4itworks/opensource_qwkin_dart]( - [gql-dart/ferry]( - [cbl-dart/cbl-dart]( - [ema987/paddinger]( - [flutter-stripe/flutter_stripe]( - [danvick/flutter_form_builder]( - [kmartins/groveman]( - [flutternetwork/WiFiFlutter]( - [iapicca/yak_packages]( - [atsign-foundation/at_app]( - [sub6resources/flutter_html]( - [ferraridamiano/ConverterNOW]( - [rrifafauzikomara/youtube_video]( - [mobxjs/mobx.dart]( - [NetGlade/auto_mappr]( - [myConsciousness/atproto.dart]( - [GrowERP Flutter ERP]( - [mrverdant13/coverde]( - [ThexXTURBOXx/flutter_web_auth_2]( - [woltapp/wolt_modal_sheet]( - [cfug/dio]( - [simolus3/drift]( - [Lyokone/flutterlocation]( - [FlutterGen/flutter_gen]( - [canonical/ubuntu-desktop-provision]( - [ubuntu/app-center]( > Submit a PR if you'd like to add your project to the list. Update the > [README.md]( > and the [docs]( > > You can also add a [README badge](#readme-badge) to your projects README to > let others know about Melos . ## Documentation Documentation is available at [ ## Migrations When migrating between major versions of Melos, please read the [migration guide]( ## Commands Full commands list and args can be viewed by running `melos --help`. ``` > melos --help A CLI tool for managing Dart & Flutter projects with multiple packages. Usage: melos [arguments] Global options: -h, --help Print this usage information. --verbose Enable verbose logging. --sdk-path Path to the Dart/Flutter SDK that should be used. This command line option has precedence over the `sdkPath` option in the `melos.yaml` configuration file and the `MELOS_SDK_PATH` environment variable. To use the system-wide SDK, provide the special value ""auto"". Available commands: analyze Analyzes all packages in your project for potential issues in a single run. Optionally configure severity levels. Supports all package filtering options. bootstrap Initialize the workspace, link local packages together and install remaining package dependencies. Supports all package filtering options. clean Clean this workspace and all packages. This deletes the temporary pub & ide files such as "".packages"" & "".flutter-plugins"". Supports all package filtering options. exec Execute an arbitrary command in each package. Supports all package filtering options. format Idiomatically format Dart source code. list List local packages in various output formats. Supports all package filtering options. publish Publish any unpublished packages or package versions in your repository to pub.dev. Dry run is on by default. run Run a script by name defined in the workspace melos.yaml config file. version Automatically version and generate changelogs based on the Conventional Commits specification. Supports all package filtering options. Run ""melos help "" for more information about a command. ``` ## How to Contribute To start making contributions please refer to [`CONTRIBUTING.md`](./CONTRIBUTING.md). ## Lerna This project is heavily inspired by [Lerna]( ## README Badge Using Melos? Add a README badge to show it off: []( ```markdown []( ``` ## License - See [LICENSE](/LICENSE) --- Built and maintained with by Invertase. [melos-code]:","182, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, feature request, bug, Needs: Triage, Type: Accepted, enhancement, hacktoberfest, question, good first issue, documentation, waiting for response, wontfix, platform: windows, invalid, help wanted, hacktoberfest-accepted, duplicate, blocked: cla"
java-design-patterns,iluwatar/java-design-patterns,87413,"['Java', 'HTML', 'CSS']","['java', 'principles', 'design-patterns', 'awesome-list', 'snippets']","# Design patterns implemented in Java []( []( []( []( [](#contributors-) Read in different language : [**zh**](localization/zh/README.md), [**ko**](localization/ko/README.md), [**fr**](localization/fr/README.md), [**tr**](localization/tr/README.md), [**ar**](localization/ar/README.md), [**es**](localization/es/README.md), [**pt**](localization/pt/README.md), [**id**](localization/id/README.md), [**ru**](localization/ru/README.md), [**de**](localization/de/README.md), [**ja**](localization/ja/README.md), [**vi**](localization/vi/README.md), [**bn**](localization/bn/README.md), [**np**](localization/ne/README.md), [**it**](localization/it/README.md), [**da**](localization/da/README.md) # Introduction Design patterns are the best, formalized practices a programmer can use to solve common problems when designing an application or system. Design patterns can speed up the development process by providing tested, proven development paradigms. Reusing design patterns helps prevent subtle issues that cause major problems, and it also improves code readability for coders and architects who are familiar with the patterns. # Getting started This site showcases Java Design Patterns. The solutions have been developed by experienced programmers and architects from the open-source community. The patterns can be browsed by their high-level descriptions or by looking at their source code. The source code examples are well commented and can be thought of as programming tutorials on how to implement a specific pattern. We use the most popular battle-proven open-source Java technologies. Before you dive into the material, you should be familiar with various [Software Design Principles]( All designs should be as simple as possible. You should start with KISS, YAGNI, and Do The Simplest Thing That Could Possibly Work principles. Complexity and patterns should only be introduced when they are needed for practical extensibility. Once you are familiar with these concepts you can start drilling down into the [available design patterns]( by any of the following approaches - Search for a specific pattern by name. Can't find one? Please report a new pattern [here]( - Using tags such as `Performance`, `Gang of Four` or `Data access`. - Using pattern categories, `Creational`, `Behavioral`, and others. Hopefully, you find the object-oriented solutions presented on this site useful in your architectures and have as much fun learning them as we had while developing them. # How to contribute If you are willing to contribute to the project you will find the relevant information in our [developer wiki]( We will help you and answer your questions in the [Gitter chatroom]( # License This project is licensed under the terms of the MIT license. # Contributors Ilkka Seppl Subhrodip Mohanta amit1307 Narendra Pathai Jeroen Meulemeester Joseph McCarthy Thomas Anurag Agarwal Markus Moser Sabiq Ihab Amit Dixit Piyush Kailash Chaudhari joshzambales Kamil Pietruszka Zafar Khaydarov Paul Campbell Argyro Sioziou TylerMcConville saksham93 nikhilbarar Colin But Ruslan Juho Kang Dheeraj Mummareddy Bernardo Sulzbach Aleksandar Dudukovic Yusuf Ayta Mihly Kuprivecz Stanislav Kapinus GVSharma Sran Paunovi Petros G. Sideris Pramod Gupta Amarnath Chandana Anurag870 Wes Gilleland Harshraj Thakor Martin Vandenbussche Alexandru Somai Artur Mogozov anthony Christian Cygnus Dima Gubin Joshua Jimenez Kai Winter lbroman Przemek Prafful Agarwal Sanket Panhale staillebois Krisztin Nagy Alexander Ivanov Yosfik Alqadri Agust Becerra Mil Juan Manuel Surez Luigi Cortese Katarzyna Rzepecka adamski.pro Shengli Bai Boris Dmitry Avershin hoangnam2261 Arpit Jain Jn Ingi Sveinbjrnsson Kirill Vlasov Mitchell Irvin Ranjeet PhoenixYip M Saif Asif kanwarpreet25 Leon Mak Per Wramdemark Evan Sia Wai Suan AnaghaSasikumar Christoffer Hamberg Dominik Gruntz Hannes Leo Gutirrez Ramrez Zhang WH Christopher O'Connell George Mavroeidis Hemant Bothra Kevin Peters George Aristy Mahendran Mookkiah Azureyjt gans Matt Gopinath Langote Hoswey Amit Pandey gwildor28 Stamatis Pitsios qza Rodolfo Forte Ankur Kaushal Ovidijus Okinskas Robert Kasperczyk Tapio Rautonen Yuri Orlov Varun Upadhyay Aditya Pal grzesiekkedzior Sivasubramani M Sami Airaksinen Janne Sinivirta Boris-Chengbiao Zhou Jacob Hein Richard Jones Rachel M. Carmena Zaerald Denze Lungos Lars Kappert Mike Liu Matt Dolan Manan Nishant Arora Peeyush Rakesh Wei Seng Ashish Trivedi xdvrx1 Bethan Palmer Toxic Dreamz Edy Cu Tjong Micha Krzywaski Stefan Birkner Fedor Skvorcov samilAyoub Vladislav Golubinov Swaraj Christoph Flick Ascnio Domenico Sibilio Akash Chandwani Pavlo Manannikov Eiman Rocky Ibrahim ali abdelghany Girish Kulkarni Omar Karazoun Jeff Evans Vivek Singh siavash ruchpeanuts warp125 KHADIR Tayeb ignite1771 Halil Demir Rohit Singh byoungju94 Moustafa Farhat Martel Richard va1m Noam Greenshtain yonghong Xu jinishavora Elvys Soares zWeBrain Alain VR JackieNim EdisonE3 Tao Juan Manuel Abate Xenilo137 Samuel Souza Marlo Henrique AndriyPyzh karthikbhat13 Morteza Adigozalpour Nagaraj Tantri Francesco Scuccimarri Conny Hansson Muklas Rahmanto Vadim Simran Keshri JCarlos Ali Ghasemi Carl Dea Mozartus Manvi Goel Anum Amin Reo Uehara Fiordy Harshal Abhinav Vashisth Kevin Shrirang interactwithankush CharlieYu Leisterbecker DragonDreamer ShivanshCharak HattoriHenzo Arnab Sen MohanaRao SV Yonatan Karp-Rudin Oliani Renjie LIU perfect guy xyllq999 Mohamed Bilal Karshil sheth kongleong86 Aitor Fidalgo Snchez Victor He Minh Nguyen Victor He yiichan Pan Sem zhoumengyks you Thanks LazyProgrammer Mohammed Faizan Ahmed Bruno Fernandes SammanPali Qixiang Chen Shourya Manekar Alan JanFidor Anton Yakutovich steph88ss Yujan Ranjitkar yusha-g Robert Volkmann Bipin Kumar Chaurasia KyleSong30 u7281975 harshalkhachane Tejas Singh Sudarsan Balaji Vaibhav Agrawal u7275858 prasad-333 JurenXu murphShaw XianWu99 JoshuaSinglaANU Ricardo Ramos Farid Zouheir Vincius A. B. Stefanel Stan Prince bhati WuLang Hugo Kat Shivanagouda Agasimani Aparna Girolamo Giordano Chak-C Nakul Nambiar KarmaTashiCat marikattt Hashvardhan Parmar YongHwan Shogo Hida Eugene Piyush Rahul Raj Bharath Kalyan S Saiteja Reddy Enrique Clerici Ramil Sayetov Fredrik Sejr akshatarora0013 Mughees Qasim behappyleee Ayush Thakur Anthony Bosch trananso Giammaria Biffi Saiful Haque JabezBrew konstantin-goldman Tien Nguyen Minh Vladimir Surjendu bakazhou Owen Leung Stavros Barousis Syyed Ibrahim Abdullah JiaDi Zhang Sanchit Bansal Md Saiful Islam Antonio Addeo Allagadda Sai Upendranath Matheus Braga Appari Satya Barghav Marcel Ribeiro-Dantas Muhammad Hanif Amrullah JackH408 Shubham Nishant Jain Rhitam Chaudhury JerryZhao275 Leonardo Lisanti Yennifer Herrera jnniu-n Miguel Angel Perez Garcia Suwan Sankaja alok Daniel Lisboa Sam Powell Joo Fernandes Hong Geon-ui Doksanbir Chant3ll3 YongHwan Kwon Jakub Klimek believe egg0102030405 Ved Asole NewMorning Seunghwan Jeon sugavanesh FinnS-F jerryyummy Manoj Chowdary Aditya nooynayr CYBERCRUX2 Luis Mateo Hincapi Martinez guqing Sashir Estela omahs leif e. Jun Kang Kishalay Pandey drishtii7 David Medina Orozco Roman Leontev Riley k1w1dev dev-yugantar Adelya gatlanagaprasanna","26.1k, Code, Issues, Pull requests, Actions, Wiki, Security, Insights, info: help wanted, type: feature, epic: pattern, status: stale, epic: documentation, status: under review, type: bug, epic: dependencies, type: enhancement, epic: translation, epic: architecture, type: support, type: refactoring, info: good first issue, epic: web site, epic: build issue, type: task, epic: code quality, resolution: won't fix, resolution: invalid, resolution: duplicate, info: needs splitting, info: needs clarification, epic: security, epic: ide issue, epic: developer wiki, epic: design"
redisson,redisson/redisson,22826,['Java'],"['java', 'redis', 'lock', 'map', 'list']","# Redisson - Easy Redis Java clientand Real-Time Data Platform []( []( []( [Quick start]( | [Documentation]( | [Changelog]( | [Code examples]( | [FAQs]( | [Report an issue]( Based on high-performance async and lock-free Java Redis client and [Netty]( framework. Supported JDK: 1.8 - 21 and Android ## Features * Thread-safe implementation * [Redis]( 3.0 - 7.2 compatible * [Valkey]( 7.2.5+ compatible * Supported deployment types * [Proxy]( * [Multi-Cluster]( * [Multi-Sentinel]( * [Single]( * [Cluster]( * [Sentinel]( * [Replicated]( * [Master and Slaves]( * Amazon Web Services compatible * [AWS Elasticache Serverless]( * [AWS Redis Global Datastore]( * [AWS ElastiCache]( * [Amazon MemoryDB]( * Microsoft Azure compatible * [Azure Redis Cache]( * [Azure Redis Cache active-passive replication]( * [Azure Redis Cache active-active replication]( * Google Cloud Memorystore compatible * [Google Cloud Redis]( * [Google Cloud Redis High availability]( * Redis Enterprise compatible * [Redis Enterprise]( * [Redis Enterprise Active-Active databases]( * [Redis Enterprise Multiple Active Proxy]( * IBM Cloud compatible * [IBM Cloud Databases for Redis]( * Aiven compatible * [Aiven for Redis]( * Supports auto-reconnection * Supports failed to send command auto-retry * Supports OSGi * Supports SSL * Asynchronous connection pool * Lua scripting * [RediSearch]( * [JSON datatype]( * [Reactive Streams]( API * [RxJava3]( API * [Asynchronous]( API * Local cache support including [Caffeine]( implementation * [Distributed Java objects]( Object holder, Binary stream holder, Geospatial holder, BitSet, AtomicLong, AtomicDouble, PublishSubscribe, Bloom filter, HyperLogLog * [Distributed Java collections]( Map, Multimap, Set, List, SortedSet, ScoredSortedSet, LexSortedSet, Queue, Deque, Blocking Queue, Bounded Blocking Queue, Blocking Deque, Delayed Queue, Priority Queue, Priority Deque * [Distributed Java locks and synchronizers]( Lock, FairLock, MultiLock, RedLock, ReadWriteLock, Semaphore, PermitExpirableSemaphore, CountDownLatch * [Distributed services]( Remote service, Live Object service, Executor service, Scheduler service, MapReduce service * [Helidon]( integration * [Micronaut]( integration * [Quarkus]( integration * [Spring Cache]( implementation * [Spring Cloud Stream]( implementation * [Spring Transaction API]( implementation * [Spring Data Redis]( implementation * [Spring Boot Starter]( implementation * [Hibernate Cache]( implementation * [MyBatis Cache]( implementation * [Transactions API]( * [JCache API (JSR-107)]( implementation * [Tomcat Session Manager]( implementation * [Spring Session]( implementation * [Redis pipelining]( (command batches) * Supports many popular codecs ([Kryo]( [Jackson JSON]( [Avro]( [Smile]( [CBOR]( [MsgPack]( [Amazon Ion]( [LZ4]( [Snappy]( [Protobuf]( and JDK Serialization) * 2000+ unit tests ## Comparing solutions ### [Redisson vs Jedis]( ### [Redisson vs Lettuce]( ### [Redis vs Apache Ignite]( ### [Redis vs Hazelcast]( ### [Redis vs Ehcache]( ## Success stories ### [Moving from Hazelcast to Redis / Datorama]( ### [Migrating from Hazelcast to Redis / Halodoc]( ### [Distributed Locking with Redis (Migration from Hazelcast) / ContaAzul]( ### [Migrating from Coherence to Redis]( ## Quick start #### Maven org.redisson redisson 3.30.0 #### Gradle compile 'org.redisson:redisson:3.30.0' #### SBT libraryDependencies += ""org.redisson"" % ""redisson"" % ""3.30.0"" #### Java ```java // 1. Create config object Config config = new Config(); config.useClusterServers() // use ""rediss://"" for SSL connection .addNodeAddress(""redis://127.0.0.1:7181""); // or read config from file config = Config.fromYAML(new File(""config-file.yaml"")); ``` ```java // 2. Create Redisson instance // Sync and Async API RedissonClient redisson = Redisson.create(config); // Reactive API RedissonReactiveClient redissonReactive = redisson.reactive(); // RxJava3 API RedissonRxClient redissonRx = redisson.rxJava(); ``` ```java // 3. Get Redis based implementation of java.util.concurrent.ConcurrentMap RMap map = redisson.getMap(""myMap""); RMapReactive mapReactive = redissonReactive.getMap(""myMap""); RMapRx mapRx = redissonRx.getMap(""myMap""); ``` ```java // 4. Get Redis based implementation of java.util.concurrent.locks.Lock RLock lock = redisson.getLock(""myLock""); RLockReactive lockReactive = redissonReactive.getLock(""myLock""); RLockRx lockRx = redissonRx.getLock(""myLock""); ``` ```java // 4. Get Redis based implementation of java.util.concurrent.ExecutorService RExecutorService executor = redisson.getExecutorService(""myExecutorService""); // over 50 Redis based Java objects and services ... ``` Upgrade to __[Redisson PRO]( with **advanced features**. ## Downloads [Redisson 3.30.0]( [Redisson node 3.30.0]( ## FAQs [Q: What is the cause of RedisTimeoutException?]( [Q: When do I need to shut down a Redisson instance, at the end of each request or the end of the life of a thread?]( [Q: In MapCache/SetCache/SpringCache/JCache, I have set an expiry time to an entry, why is it still in Redis when it should be disappeared?]( [Q: How can I perform Pipelining/Transaction through Redisson?]( [Q: Is Redisson thread safe? Can I share an instance of it between different threads?]( [Q: Can I use different encoder/decoders for different tasks?](","5.3k, Code, Issues, Pull requests, Discussions, Actions, Wiki, Security, Insights, question, feature, enhancement, tomcat, dependencies, bug, quarkus, lock, suggestion, wontfix, redis-cluster, redis vendor bug, pubsub, new command, lazy, invalid, hibernate, failover, duplicate, dns, GCP, AWS"
openai-java,TheoKanning/openai-java,4626,"['Java', 'HTML']","['java', 'gpt3', 'openai']","> OpenAI has deprecated all Engine-based APIs. See [Deprecated Endpoints]( below for more info. # OpenAI-Java Java libraries for using OpenAI's GPT apis. Supports GPT-3, ChatGPT, and GPT-4. Includes the following artifacts: - `api` : request/response POJOs for the GPT APIs. - `client` : a basic retrofit client for the GPT endpoints, includes the `api` module - `service` : A basic service class that creates and calls the client. This is the easiest way to get started. as well as an example project using the service. ## Supported APIs - [Models]( - [Completions]( - [Chat Completions]( - [Edits]( - [Embeddings]( - [Audio]( - [Files]( - [Fine-tuning]( - [Images]( - [Moderations]( - [Assistants]( #### Deprecated by OpenAI - [Engines]( - [Legacy Fine-Tunes]( ## Importing ### Gradle `implementation 'com.theokanning.openai-gpt3-java::'` ### Maven ```xml com.theokanning.openai-gpt3-java {api|client|service} version ``` ## Usage ### Data classes only If you want to make your own client, just import the POJOs from the `api` module. Your client will need to use snake case to work with the OpenAI API. ### Retrofit client If you're using retrofit, you can import the `client` module and use the [OpenAiApi](client/src/main/java/com/theokanning/openai/OpenAiApi.java). You'll have to add your auth token as a header (see [AuthenticationInterceptor](client/src/main/java/com/theokanning/openai/AuthenticationInterceptor.java)) and set your converter factory to use snake case and only include non-null fields. ### OpenAiService If you're looking for the fastest solution, import the `service` module and use [OpenAiService](service/src/main/java/com/theokanning/openai/service/OpenAiService.java). > The OpenAiService in the client module is deprecated, please switch to the new version in the service module. ```java OpenAiService service = new OpenAiService(""your_token""); CompletionRequest completionRequest = CompletionRequest.builder() .prompt(""Somebody once told me the world is gonna roll me"") .model(""babbage-002"""") .echo(true) .build(); service.createCompletion(completionRequest).getChoices().forEach(System.out::println); ``` ### Customizing OpenAiService If you need to customize OpenAiService, create your own Retrofit client and pass it in to the constructor. For example, do the following to add request logging (after adding the logging gradle dependency): ```java ObjectMapper mapper = defaultObjectMapper(); OkHttpClient client = defaultClient(token, timeout) .newBuilder() .interceptor(HttpLoggingInterceptor()) .build(); Retrofit retrofit = defaultRetrofit(client, mapper); OpenAiApi api = retrofit.create(OpenAiApi.class); OpenAiService service = new OpenAiService(api); ``` ### Adding a Proxy To use a proxy, modify the OkHttp client as shown below: ```java ObjectMapper mapper = defaultObjectMapper(); Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(host, port)); OkHttpClient client = defaultClient(token, timeout) .newBuilder() .proxy(proxy) .build(); Retrofit retrofit = defaultRetrofit(client, mapper); OpenAiApi api = retrofit.create(OpenAiApi.class); OpenAiService service = new OpenAiService(api); ``` ### Functions You can create your functions and define their executors easily using the ChatFunction class, along with any of your custom classes that will serve to define their available parameters. You can also process the functions with ease, with the help of an executor called FunctionExecutor. First we declare our function parameters: ```java public class Weather { @JsonPropertyDescription(""City and state, for example: Len, Guanajuato"") public String location; @JsonPropertyDescription(""The temperature unit, can be 'celsius' or 'fahrenheit'"") @JsonProperty(required = true) public WeatherUnit unit; } public enum WeatherUnit { CELSIUS, FAHRENHEIT; } public static class WeatherResponse { public String location; public WeatherUnit unit; public int temperature; public String description; // constructor } ``` Next, we declare the function itself and associate it with an executor, in this example we will fake a response from some API: ```java ChatFunction.builder() .name(""get_weather"") .description(""Get the current weather of a location"") .executor(Weather.class, w -> new WeatherResponse(w.location, w.unit, new Random().nextInt(50), ""sunny"")) .build() ``` Then, we employ the FunctionExecutor object from the 'service' module to assist with execution and transformation into an object that is ready for the conversation: ```java List functionList = // list with functions FunctionExecutor functionExecutor = new FunctionExecutor(functionList); List messages = new ArrayList<>(); ChatMessage userMessage = new ChatMessage(ChatMessageRole.USER.value(), ""Tell me the weather in Barcelona.""); messages.add(userMessage); ChatCompletionRequest chatCompletionRequest = ChatCompletionRequest .builder() .model(""gpt-3.5-turbo-0613"") .messages(messages) .functions(functionExecutor.getFunctions()) .functionCall(new ChatCompletionRequestFunctionCall(""auto"")) .maxTokens(256) .build(); ChatMessage responseMessage = service.createChatCompletion(chatCompletionRequest).getChoices().get(0).getMessage(); ChatFunctionCall functionCall = responseMessage.getFunctionCall(); // might be null, but in this case it is certainly a call to our 'get_weather' function. ChatMessage functionResponseMessage = functionExecutor.executeAndConvertToMessageHandlingExceptions(functionCall); messages.add(response); ``` > **Note:** The `FunctionExecutor` class is part of the 'service' module. You can also create your own function executor. The return object of `ChatFunctionCall.getArguments()` is a JsonNode for simplicity and should be able to help you with that. For a more in-depth look, refer to a conversational example that employs functions in: [OpenAiApiFunctionsExample.java](example/src/main/java/example/OpenAiApiFunctionsExample.java). Or for an example using functions and stream: [OpenAiApiFunctionsWithStreamExample.java](example/src/main/java/example/OpenAiApiFunctionsWithStreamExample.java) ### Streaming thread shutdown If you want to shut down your process immediately after streaming responses, call `OpenAiService.shutdownExecutor()`. This is not necessary for non-streaming calls. ## Running the example project All the [example](example/src/main/java/example/OpenAiApiExample.java) project requires is your OpenAI api token ```bash export OPENAI_TOKEN=""sk-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"" ``` You can try all the capabilities of this project using: ```bash ./gradlew runExampleOne ``` And you can also try the new capability of using functions: ```bash ./gradlew runExampleTwo ``` Or functions with 'stream' mode enabled: ```bash ./gradlew runExampleThree ``` ## FAQ ### Does this support GPT-4? Yes! GPT-4 uses the ChatCompletion Api, and you can see the latest model options [here]( GPT-4 is currently in a limited beta (as of 4/1/23), so make sure you have access before trying to use it. ### Does this support functions? Absolutely! It is very easy to use your own functions without worrying about doing the dirty work. As mentioned above, you can refer to [OpenAiApiFunctionsExample.java](example/src/main/java/example/OpenAiApiFunctionsExample.java) or [OpenAiApiFunctionsWithStreamExample.java](example/src/main/java/example/OpenAiApiFunctionsWithStreamExample.java) projects for an example. ### Why am I getting connection timeouts? Make sure that OpenAI is available in your country. ### Why doesn't OpenAiService support x configuration option? Many projects use OpenAiService, and in order to support them best I've kept it extremely simple. You can create your own OpenAiApi instance to customize headers, timeouts, base urls etc. If you want features like retry logic and async calls, you'll have to make an `OpenAiApi` instance and call it directly instead of using `OpenAiService` ## Deprecated Endpoints OpenAI has deprecated engine-based endpoints in favor of model-based endpoints. For example, instead of using `v1/engines/{engine_id}/completions`, switch to `v1/completions` and specify the model in the `CompletionRequest`. The code includes upgrade instructions for all deprecated endpoints. I won't remove the old endpoints from this library until OpenAI shuts them down. ## License Published under the MIT License","1.1k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, enhancement, wontfix, question, invalid, help wanted, good first issue, duplicate, documentation, bug"
shardingsphere,apache/shardingsphere,19497,"['Java', 'ANTLR', 'FreeMarker']","['database', 'distributed-database', 'distributed-sql-database', 'distributed-transactions', 'sql']","## [Distributed SQL transaction & query engine for data sharding, scaling, encryption, and more - on any database.]( **Official Website:** [ []( []( []( []( []( []( []( []( []( []( []( | **Stargazers Over Time** | **Contributors Over Time** | |:---------------------------------------------------------------------------------------------------------------------:|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:| | []( | []( | ### OVERVIEW Apache ShardingSphere is a distributed SQL transaction & query engine that allows for data sharding, scaling, encryption, and more - on any database. Our community's guiding development concept is Database Plus for creating a complete ecosystem that allows you to transform any database into a distributed database system. It focuses on repurposing existing databases, by placing a standardized upper layer above existing and fragmented databases, rather than creating a new database. The goal is to provide unified database services and minimize or eliminate the challenges caused by underlying databases' fragmentation. This results in applications only needing to communicate with a single standardized service. The concepts at the core of the project are `Connect`, `Enhance` and `Pluggable`. - `Connect:` Flexible adaptation of database protocol, SQL dialect and database storage. It can quickly connect applications and heterogeneous databases. - `Enhance:` Capture database access entry to provide additional features transparently, such as: redirect (sharding, readwrite-splitting and shadow), transform (data encrypt and mask), authentication (security, audit and authority), governance (circuit breaker and access limitation and analyze, QoS and observability). - `Pluggable:` Leveraging the micro kernel and 3 layers pluggable mode, features and database ecosystem can be embedded flexibly. Developers can customize their ShardingSphere just like building with LEGO blocks. ShardingSphere became an [Apache]( Top-Level Project on April 16, 2020. So far, ShardingSphere has been used by over [10,000 projects on GitHub]( ### DOCUMENTATION []( []( For full documentation & more details, visit: [Docs]( ### CONTRIBUTION For guides on how to get started and setup your environment, contributor & committer guides, visit: [Contribution Guidelines]( ### Team We deeply appreciate [community contributors]( for their dedication to Apache ShardingSphere. ## ### COMMUNITY & SUPPORT :link: [Mailing List]( Best for: Apache community updates, releases, changes. :link: [GitHub Issues]( Best for: larger systemic questions/bug reports or anything development related. :link: [GitHub Discussions]( Best for: technical questions & support, requesting new features, proposing new features. :link: [Slack channel]( Best for: instant communications and online meetings, sharing your applications. :link: [Twitter]( Best for: keeping up to date on everything ShardingSphere. :link: [LinkedIn]( Best for: professional networking and career development with other ShardingSphere contributors. ## ### STATUS :white_check_mark: Version 5.5.0: released :tada: For the release notes, follow this link to the relevant [GitHub page]( :soon: Version 5.5.1 We are currently working towards our 5.5.1 milestone. Keep an eye on the [milestones page]( of this repo to stay up to date. [comment]: <> (##) [comment]: <> (### NIGHTLY BUILDS:) [comment]: <> () [comment]: <> (A nightly build of ShardingSphere from the latest master branch is available. ) [comment]: <> (The package is updated daily and is available [here]( [comment]: <> (##) [comment]: <> (** Notice:**) [comment]: <> () [comment]: <> (Use this nightly build at your own risk! ) [comment]: <> (The branch is not always fully tested. ) [comment]: <> (The nightly build may contain bugs, and there may be new features added which may cause problems with your environment. ) ## ### How it Works Apache ShardingSphere includes 2 independent products: JDBC & Proxy. They all provide functions of data scale-out, distributed transaction and distributed governance, applicable in a variety of situations such as Java-based isomorphism, heterogeneous language and Cloud-Native. ### ShardingSphere-JDBC []( A lightweight Java framework providing extra services at the Java JDBC layer. With the client end connecting directly to the database, it provides services in the form of a jar and requires no extra deployment and dependence. :link: For more details, follow this [link to the official website]( ### ShardingSphere-Proxy []( []( []( A transparent database proxy, providing a database server that encapsulates the database binary protocol to support heterogeneous languages. Friendlier to DBAs, the MySQL and PostgreSQL version now provided can use any kind of terminal. :link: For more details, follow this [link to the official website]( ### Hybrid Architecture ShardingSphere-JDBC adopts a decentralized architecture, applicable to high-performance light-weight OLTP applications developed with Java. ShardingSphere-Proxy provides static entry and all languages support, suitable for an OLAP application and sharding databases management and operation. Through the combination of ShardingSphere-JDBC & ShardingSphere-Proxy together with a unified sharding strategy by the same registry center, the ShardingSphere ecosystem can build an application system suitable to all kinds of scenarios. :link: More details can be found following this [link to the official website]( ## ### Solution | *Solutions/Features* | *Distributed Database* | *Data Security* | *Database Gateway* | *Stress Testing* | |----------------------|-------------------------|----------------------|-----------------------------------|------------------| | | Data Sharding | Data Encryption | Heterogeneous Databases Supported | Shadow Database | | | Read/write Splitting | Row Authority (TODO) | SQL Dialect Translate (TODO) | Observability | | | Distributed Transaction | SQL Audit (TODO) | | | | | Elastic Scale-out | SQL Firewall (TODO) | | | | | High Availability | | | | ## ### Roadmap ## ### How to Build Apache ShardingSphere Check out [Wiki]( section for details on how to build Apache ShardingSphere and a full guide on how to get started and setup your local dev environment. ## ### Landscapes Apache ShardingSphere enriches the CNCF CLOUD NATIVE Landscape. ##","6.6k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, stale, type: question, type: enhancement, in: SQL parse, good first issue, in: test, db: Oracle, status: volunteer wanted, feature: sharding, type: bug, status: need more info, in: proxy, project: OSD2023, in: metadata, db: PostgreSQL, db: MySQL, in: kernel, good amateur issue, in: JDBC, type: refactor, feature: SQL federation, feature: transaction, type: discussion, feature: DistSQL, feature: readwrite-splitting, feature: encrypt, db: SQLServer, mode: cluster, in: document, feature: pipeline"
android-interview-questions,amitshekhariitbhu/android-interview-questions,10963,"['Java', 'Kotlin']","['cheatsheet', 'cheat-sheets', 'android', 'android-interview-practice', 'android-interview-questions']","# Android Interview Questions and Answers > Android Interview Questions and Answers - Your Cheat Sheet For Android Interview ### Prepared and maintained by [Amit Shekhar]( - Coder | Teacher | Mentor | Open Source | IIT 2010-14 ## About me Hi, I am [**Amit Shekhar**]( I have taught and mentored many developers, and their efforts landed them high-paying tech jobs, helped many tech companies in solving their unique problems, and created many open-source libraries being used by top companies. I am passionate about sharing knowledge through open-source, blogs, and videos. You can connect with me on: - [Twitter]( - [YouTube]( - [LinkedIn]( - [GitHub]( ## **Join my program and get high paying tech job: [amitshekhar.me]( ## Contents - Android Interview Questions * [Android Interview Questions and Answers Playlist](#android-interview-questions-and-answers-playlist) * [Kotlin Coroutines](#kotlin-coroutines) * [Kotlin Flow API](#kotlin-flow-api) * [Kotlin](#kotlin) * [Android](#android) * [Android Libraries](#android-libraries) * [Android Architecture](#android-architecture) * [Android System Design](#android-system-design) * [Android Unit Testing](#android-unit-testing) * [Android Tools And Technologies](#android-tools-and-technologies) * [Java](#java) * [Jetpack Compose](#jetpack-compose) * [Other Topics](#other-topics) * [Data Structures and Algorithms](#data-structures-and-algorithms) ### Android Interview Questions and Answers Playlist - **Question**: What is an inline function in Kotlin? - **Answer**: [What is an inline function in Kotlin?]( - **Question**: What is the advantage of using const in Kotlin? - **Answer**: [What is the advantage of using const in Kotlin?]( - **Question**: What is a reified keyword in Kotlin? - **Answer**: [What is a reified keyword in Kotlin?]( - **Question**: Suspending vs Blocking in Kotlin Coroutines - **Answer**: [Suspending vs Blocking in Kotlin Coroutines]( - **Question**: Launch vs Async in Kotlin Coroutines - **Answer**: [Launch vs Async in Kotlin Coroutines]( - **Question**: internal visibility modifier in Kotlin - **Answer**: [internal visibility modifier in Kotlin]( - **Question**: open keyword in Kotlin - **Answer**: [open keyword in Kotlin]( - **Question**: lateinit vs lazy in Kotlin - **Answer**: [lateinit vs lazy in Kotlin]( - **Question**: What is Multidex in Android? - **Answer**: [What is Multidex in Android?]( - **Question**: How does the Android Push Notification system work? - **Answer**: [How does the Android Push Notification system work?]( - **Question**: How does the Kotlin Multiplatform work? - **Answer**: [How does the Kotlin Multiplatform work?]( - **Question**: What is a ViewModel and how is it useful? - **Answer**: [What is a ViewModel and how is it useful?]( - **Question**: Is it possible to force the Garbage Collection in Android? - **Answer**: [Is it possible to force Garbage Collection in Android?]( - **Question**: What is a JvmStatic Annotation in Kotlin? - **Answer**: [What is a JvmStatic Annotation in Kotlin?]( - **Question**: init block in Kotlin - **Answer**: [init block in Kotlin]( - **Question**: JvmField Annotation in Kotlin - **Answer**: [JvmField Annotation in Kotlin]( - **Question**: singleTask launchMode in Android - **Answer**: [singleTask launchMode in Android]( - **Question**: Difference between == and === in Kotlin - **Answer**: [Difference between == and === in Kotlin]( - **Question**: JvmOverloads Annotation in Kotlin - **Answer**: [JvmOverloads Annotation in Kotlin]( - **Question**: Why is it recommended to use only the default constructor to create a Fragment? - **Answer**: [Why is it recommended to use only the default constructor to create a Fragment?]( - **Question**: Why do we need to call setContentView() in onCreate() of Activity class? - **Answer**: [Why do we need to call setContentView() in onCreate() of Activity class?]( - **Question**: When only onDestroy is called for an activity without onPause() and onStop()? - **Answer**: [When only onDestroy is called for an activity without onPause() and onStop()?]( ### Kotlin Coroutines Topics you should know in **Kotlin Coroutines** for Android Interview: * coroutines * suspend * launch, async-await, withContext * dispatchers * scope, context, job * lifecycleScope, viewModelScope, GlobalScope * suspendCoroutine, suspendCancellableCoroutine * coroutineScope, supervisorScope Learn the above-mentioned from the following links: - [Master Kotlin Coroutines]( - [Suspending vs Blocking in Kotlin Coroutines]( - [Launch vs Async in Kotlin Coroutines]( - [Dispatchers in Kotlin Coroutines]( - [coroutineScope vs supervisorScope]( - [suspend function in Kotlin Coroutines]( - [Kotlin withContext vs Async-await]( - [Callback to Coroutines in Kotlin]( - [Retrofit with Kotlin Coroutines]( - [Parallel Multiple Network Calls Using Kotlin Coroutines]( - [Room Database with Kotlin Coroutines]( - [Unit Testing ViewModel with Kotlin Coroutines and LiveData]( ### Kotlin Flow API Topics you should know in **Kotlin Flow API** for Android Interview: * Flow Builder, Operator, Collector * flowOn, dispatchers * Operators such as filter, map, zip, flatMapConcat, retry, debounce, distinctUntilChanged, flatMapLatest * Terminal operators * Cold Flow vs Hot Flow * StateFlow, SharedFlow, callbackFlow, channelFlow Learn the above-mentioned from the following links: - [Mastering Flow API in Kotlin]( - [Creating Flow Using Flow Builder in Kotlin]( - [Terminal Operators in Kotlin Flow]( - [Cold Flow vs Hot Flow]( - [StateFlow and SharedFlow]( - [Long-running tasks in parallel with Kotlin Flow]( - [Retry Operator in Kotlin Flow]( - [Retrofit with Kotlin Flow]( - [Room Database with Kotlin Flow]( - [Kotlin Flow Zip Operator for Parallel Multiple Network Calls]( - [Instant Search Using Kotlin Flow Operators]( - [callbackFlow - Callback to Flow API in Kotlin]( - [Exception Handling in Kotlin Flow]( - [Unit Testing ViewModel with Kotlin Flow and StateFlow]( ### Kotlin Android Interview Questions and Answers: * **What is the advantage of using const in Kotlin?** - [Video]( and [Blog]( * **When to use lateinit keyword used in Kotlin?** - [Learn from here]( * **What is inline function in Kotlin?** - [Video]( and [Blog]( * **What are `companion objects` in Kotlin?** - [Learn from here]( * **Remove duplicates from an array in Kotlin** - [Learn from here]( * **What is a JvmStatic Annotation in Kotlin?** - [Video]( and [Blog]( * **What is a JvmField Annotation in Kotlin?** - [Video]( and [Blog]( * **What is a JvmOverloads Annotation in Kotlin?** - [Video]( and [Blog]( * **noinline in Kotlin** - [Learn from here]( * **crossinline in Kotlin** - [Learn from here]( * **scope functions in Kotlin** - [Learn from here]( * **What is a reified keyword in Kotlin?** - [Learn from here]( * **lateinit vs lazy in Kotlin** - [Learn from here]( * **What is an `init` block in Kotlin?** - [Video]( and [Blog]( * **Difference between == and === in Kotlin** - [Video]( and [Blog]( * **Advantage of using const in Kotlin** - [Learn from here]( * **What are higher-order functions in Kotlin?** - Learn from here: [Higher-Order Functions and Lambdas in Kotlin]( * **What are Lambdas in Kotlin** - Learn from here: [Higher-Order Functions and Lambdas in Kotlin]( * **AssociateBy - List to Map in Kotlin** - [Learn from here]( * **Open keyword in Kotlin** - [Learn from here]( * **Companion object in Kotlin** - [Learn from here]( * **internal visibility modifier in Kotlin** - [Learn from here]( * **partition - filtering function in Kotlin** - [Learn from here]( * **Infix notation in Kotlin** - [Learn from here]( * **How does the Kotlin Multiplatform work?** - [Learn from here]( * **Suspending vs Blocking in Kotlin Coroutines** - [Learn from here]( * **Tell some advantages of Kotlin.** - [Learn from here]( * **What is the difference between `val` and `var`?** - [Learn from here]( * **How to check if a `lateinit` variable has been initialized?** - [Learn from here]( * **How to do lazy initialization of variables in Kotlin?** - [Learn from here]( * **What are the visibility modifiers in Kotlin?** - [Learn from here]( * **What is the equivalent of Java static methods in Kotlin?** - [Learn from here]( * **What is a data class in Kotlin?** - [Learn from here]( * **How to create a Singleton class in Kotlin?** - [Learn from here]( * **What is the difference between `open` and `public` in Kotlin?** - [Learn from here]( * **Explain the use-case of `let`, `run`, `with`, `also`, `apply` in Kotlin.** - Learn from [here]( and [here]( * **How to choose between `apply` and `with`?** - Learn from [here]( and [here]( * **Difference between List and Array types in Kotlin** - [Learn from here]( * **What are `Labels` in Kotlin?** - [Learn from here]( * **What are Coroutines in Kotlin?** - [Learn from here]( * **What is Coroutine Scope?** - [Learn from here]( * **What is Coroutine Context?** - [Learn from here]( * **Launch vs Async in Kotlin Coroutines** - [Learn from here]( * **When to use Kotlin sealed classes?** - [Learn from here]( * **Tell about the Collections in Kotlin** - [Learn from here]( * **Extension functions** - [Learn from here]( * **What does ?: do in Kotlin? (Elvis Operator)** - [Learn from here]( ### Android Android Interview Questions and Answers: #### Base * **Why does an Android App lag?** - [Learn from here]( * **What is `Context`? How is it used?** - [Context In Android Application]( * **Tell all the Android application components.** - [Learn from here]( * **What is the project structure of an Android Application?** - [Learn from here]( * **What is `AndroidManifest.xml`?** - [Learn from here]( * **What is the `Application` class?** - The Application class in Android is the base class within an Android app that contains all other components such as activities and services. The Application class, or any subclass of the Application class, is instantiated before any other class when the process for your application/package is created. #### Activity and Fragment * **Why... [TRUNCATED]","2.2k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, enhancement, duplicate, bug"
flink-cdc,apache/flink-cdc,5360,"['Java', 'JavaScript', 'Shell']","['change-data-capture', 'cdc', 'batch', 'data-integration', 'data-pipeline']","Flink CDC is a distributed data integration tool for real time data and batch data. Flink CDC brings the simplicity and elegance of data integration via YAML to describe the data movement and transformation in a [Data Pipeline](docs/content/docs/core-concept/data-pipeline.md). The Flink CDC prioritizes efficient end-to-end data integration and offers enhanced functionalities such as full database synchronization, sharding table synchronization, schema evolution and data transformation. ### Getting Started 1. Prepare a [Apache Flink]( cluster and set up `FLINK_HOME` environment variable. 2. [Download]( Flink CDC tar, unzip it and put jars of pipeline connector to Flink `lib` directory. 3. Create a **YAML** file to describe the data source and data sink, the following example synchronizes all tables under MySQL app_db database to Doris : ```yaml source: type: mysql name: MySQL Source hostname: 127.0.0.1 port: 3306 username: admin password: pass tables: adb.\.* server-id: 5401-5404 sink: type: doris name: Doris Sink fenodes: 127.0.0.1:8030 username: root password: pass pipeline: name: MySQL to Doris Pipeline parallelism: 4 ``` 4. Submit pipeline job using `flink-cdc.sh` script. ```shell bash bin/flink-cdc.sh /path/mysql-to-doris.yaml ``` 5. View job execution status through Flink WebUI or downstream database. Try it out yourself with our more detailed [tutorial](docs/content/docs/get-started/quickstart/mysql-to-doris.md). You can also see [connector overview](docs/content/docs/connectors/pipeline-connectors/overview.md) to view a comprehensive catalog of the connectors currently provided and understand more detailed configurations. ### Join the Community There are many ways to participate in the Apache Flink CDC community. The [mailing lists]( are the primary place where all Flink committers are present. For user support and questions use the user mailing list. If you've found a problem of Flink CDC, please create a [Flink jira]( and tag it with the `Flink CDC` tag. Bugs and feature requests can either be discussed on the dev mailing list or on Jira. ### Contributing Welcome to contribute to Flink CDC, please see our [Developer Guide](docs/content/docs/developer-guide/contribute-to-flink-cdc.md) and [APIs Guide](docs/content/docs/developer-guide/understand-flink-cdc-api.md). ### License [Apache 2.0 License](LICENSE). ### Special Thanks The Flink CDC community welcomes everyone who is willing to contribute, whether it's through submitting bug reports, enhancing the documentation, or submitting code contributions for bug fixes, test additions, or new feature development. Thanks to all contributors for their enthusiastic contributions.","1.8k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, mysql-cdc-connector, docs, composer, runtime, common, build, e2e-tests, starrocks-pipeline-connector, mysql-pipeline-connector, doris-pipeline-connector, cli, postgres-cdc-connector, oracle-cdc-connector, base, sqlserver-cdc-connector, db2-cdc-connector, values-pipeline-connector, tidb-cdc-connector, vitess-cdc-connector, oceanbase-cdc-connector, mongodb-cdc-connector, dist, bug, 3.1, 【3.0】, wontfix, umbrella, test, task, resolved"
openapi-generator,OpenAPITools/openapi-generator,20163,"['Java', 'TypeScript', 'Kotlin']","['rest-api', 'rest-client', 'sdk', 'generator', 'restful-api']","OpenAPI Generator []( [](./LICENSE) []( []( []( []( []( []( [Master]( (`7.7.0`): []( []( []( []( :star::star::star: If you would like to contribute, please refer to [guidelines](CONTRIBUTING.md) and a list of [open tasks]( :star::star::star: :bangbang: To migrate from Swagger Codegen to OpenAPI Generator, please refer to the [migration guide](docs/migration-from-swagger-codegen.md) :bangbang: :notebook_with_decorative_cover: For more information, please refer to the [Wiki page]( and [FAQ]( :notebook_with_decorative_cover: :notebook_with_decorative_cover: The eBook [A Beginner's Guide to Code Generation for REST APIs]( is a good starting point for beginners :notebook_with_decorative_cover: :warning: If the OpenAPI spec, templates or any input (e.g. options, environment variables) is obtained from an untrusted source or environment, please make sure you've reviewed these inputs before using OpenAPI Generator to generate the API client, server stub or documentation to avoid potential security issues (e.g. [code injection]( For security vulnerabilities, please contact [team@openapitools.org](mailto:team@openapitools.org). :warning: :bangbang: Both ""OpenAPI Tools"" ( - the parent organization of OpenAPI Generator) and ""OpenAPI Generator"" are not affiliated with OpenAPI Initiative (OAI) :bangbang: ## Sponsors If you find OpenAPI Generator useful for work, please consider asking your company to support this Open Source project by [becoming a sponsor]( You can also individually sponsor the project by [becoming a backer]( #### Thank you to our bronze sponsors! []( []( []( []( []( []( []( []( []( []( []( []( []( []( []( []( []( []( []( []( []( []( []( []( []( #### Thank you GoDaddy for sponsoring the domain names, Linode for sponsoring the VPS, Checkly for sponsoring the API monitoring and Gradle for sponsoring Develocity []( []( []( []( ## Overview OpenAPI Generator allows generation of API client libraries (SDK generation), server stubs, documentation and configuration automatically given an [OpenAPI Spec]( (both 2.0 and 3.0 are supported). Currently, the following languages/frameworks are supported: | | Languages/Frameworks | | -------------------------------- || | **API clients** | **ActionScript**, **Ada**, **Apex**, **Bash**, **C**, **C#** (.net 2.0, 3.5 or later, .NET Standard 1.3 - 2.1, .NET Core 3.1, .NET 5.0. Libraries: RestSharp, GenericHost, HttpClient), **C++** (Arduino, cpp-restsdk, Qt5, Tizen, Unreal Engine 4), **Clojure**, **Crystal**, **Dart**, **Elixir**, **Elm**, **Eiffel**, **Erlang**, **Go**, **Groovy**, **Haskell** ( Servant), **Java** (Apache HttpClient 4.x, Apache HttpClient 5.x, Jersey2.x, OkHttp, Retrofit1.x, Retrofit2.x, Feign, RestTemplate, RESTEasy, Vertx, Google API Client Library for Java, Rest-assured, Spring 5 Web Client, MicroProfile Rest Client, Helidon), **Jetbrains HTTP Client**, **Julia**, **k6**, **Kotlin**, **Lua**, **N4JS**, **Nim**, **Node.js/JavaScript** (ES5, ES6, AngularJS with Google Closure Compiler annotations, Flow types, Apollo GraphQL DataStore), **Objective-C**, **OCaml**, **Perl**, **PHP**, **PowerShell**, **Python**, **R**, **Ruby**, **Rust** (hyper, reqwest, rust-server), **Scala** (akka, scalaz, sttp, swagger-async- pekko), **Swift** (2.x, 3.x, 4.x, 5.x), **Typescript** (AngularJS, Angular (9.x - 17.x), Aurelia, Axios, Fetch, Inversify, jQuery, Nestjs, Node, redux-query, Rxjs), **XoJo**, **Zapier** | | **Server stubs** | **Ada**, **C#** (ASP.NET Core, Azure Functions), **C++** (Pistache, Restbed, Qt5 QHTTPEngine), **Erlang**, **F#** (Giraffe), **Go** (net/ Gin, Echo), **Haskell** (Servant, Yesod), **Java** (MSF4J, Spring, Undertow, JAX-RS: CDI, CXF, Inflector, Jersey, RestEasy, Play Framework, [PKMST]( [Vert.x]( [Apache Camel]( [Helidon]( **Julia**, **Kotlin** (Spring Boot, [Ktor]( [Vert.x]( **PHP** ([Flight]( Laravel, Lumen, [Mezzio (fka Zend Expressive)]( Slim, Silex, [Symfony]( **Python** (FastAPI, Flask), **NodeJS**, **Ruby** (Sinatra, Rails5), **Rust** ([rust-server]( **Scala** (Akka, [Finch]( [Lagom]( [Play]( [Cask]( Scalatra) | | **API documentation generators** | **HTML**, **Confluence Wiki**, **Asciidoc**, **Markdown**, **PlantUML** | | **Configuration files** | [**Apache2**]( | | **Others** | **GraphQL**, **JMeter**, **Ktorm**, **MySQL Schema**, **Postman Collection**, **Protocol Buffer**, **WSDL** | ## Table of contents - [OpenAPI Generator](#openapi-generator) - [Overview](#overview) - [Table of Contents](#table-of-contents) - [1 - Installation](#1---installation) - [1.1 - Compatibility](#11---compatibility) - [1.2 - Artifacts on Maven Central](#12---artifacts-on-maven-central) - [1.3 - Download JAR](#13---download-jar) - [1.4 - Build Projects](#14---build-projects) - [1.5 - Homebrew](#15---homebrew) - [1.6 - Docker](#16---docker) - [1.7 - NPM](#17---npm) - [2 - Getting Started](#2---getting-started) - [3 - Usage](#3---usage) - [3.1 - Customization](#31---customization) - [3.2 - Workflow Integration](#32---workflow-integration-maven-gradle-github-cicd) - [3.3 - Online Generators](#33---online-openapi-generator) - [3.4 - License Information on Generated Code](#34---license-information-on-generated-code) - [3.5 - IDE Integration](#35---ide-integration) - [4 - Companies/Projects using OpenAPI Generator](#4---companiesprojects-using-openapi-generator) - [5 - Presentations/Videos/Tutorials/Books](#5---presentationsvideostutorialsbooks) - [6 - About Us](#6---about-us) - [6.1 - OpenAPI Generator Core Team](#61---openapi-generator-core-team) - [6.2 - OpenAPI Generator Technical Committee](#62---openapi-generator-technical-committee) - [6.3 - History of OpenAPI Generator](#63---history-of-openapi-generator) - [7 - License](#7---license) ## [1 - Installation](#table-of-contents) ### [1.1 - Compatibility](#table-of-contents) The OpenAPI Specification has undergone 3 revisions since initial creation in 2010. The openapi-generator project has the following compatibilities with the OpenAPI Specification: | OpenAPI Generator Version | Release Date | Notes | | --------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------ | ------------------------------------------------- | | 7.7.0 (upcoming minor release) [SNAPSHOT]( | 20.06.2024 | Minor release with breaking changes (with fallback) | | [7.6.0]( (latest stable release) | 20.05.2024 | Minor release with breaking changes (with fallback) | | [6.6.0]( | 11.05.2023 | Minor release with breaking changes (with fallback) | | [5.4.0]( | 31.01.2022 | Minor release with breaking changes (with fallback) | | [4.3.1]( | 06.05.2020 | Patch release (enhancements, bug fixes, etc) | OpenAPI Spec compatibility: 1.0, 1.1, 1.2, 2.0, 3.0, 3.1 (beta support) (We do not publish daily/nightly build. Please use SNAPSHOT instead) For old releases, please refer to the [**Release**]( page. For decomissioned generators/libraries/frameworks, please refer to [the ""Decommission"" label]( in the pull request page. ## [1.2 - Artifacts on Maven Central](#table-of-contents) You can find our released artifacts on maven central: **Core:** ```xml org.openapitools openapi-generator ${openapi-generator-version} ``` See the different versions of the [openapi-generator]( artifact available on maven central. **Cli:** ```xml org.openapitools openapi-generator-cli ${openapi-generator-version} ``` See the different versions of the [openapi-generator-cli]( artifact available on maven central. **Maven plugin:** ```xml org.openapitools openapi-generator-maven-plugin ${openapi-generator-version} ``` * See the different versions of the [openapi-generator-maven-plugin]( artifact available on maven central. * [Readme]( **Gradle plugin:** ```xml org.openapitools openapi-generator-gradle-plugin ${openapi-generator-version} ``` * See the different versions of the [openapi-generator-gradle-plugin]( artifact available on maven central. * [Readme]( ### [1.3 - Download JAR](#table-of-contents) If you're looking for the latest stable version, you can grab it directly from Maven.org (Java 11 runtime at a minimum): JAR location: ` For **Mac/Linux** users: ```sh wget -O openapi-generator-cli.jar ``` For **Windows** users, you will need to install [wget]( or you can use Invoke-WebRequest in PowerShell (3.0+), e.g. ``` Invoke-WebRequest -OutFile openapi-generator-cli.jar ``` After downloading the JAR, run `java -jar openapi-generator-cli.jar help` to show the usage. For Mac users, please make sure Java 11 is installed (Tips: run `java -version` to check the version), and export `JAVA_HOME` in order to use the supported Java version: ```sh export JAVA_HOME=`/usr/libexec/java_home -v 1.11` export PATH=${JAVA_HOME}/bin:$PATH ``` ### Launcher Script One downside to manual jar downloads is that you don't... [TRUNCATED]","6.2k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, Issue: Bug, Enhancement: Feature, Client: TypeScript, Client: Python, Server: Python, Client: Java, help wanted, Server: Spring, Hacktoberfest, Enhancement: General, Client: C-Sharp, Announcement, Client: Go, Server: PHP, Server: Java, Client: PHP, Server: C-Sharp, Client: Rust, Client: JavaScript/Node.js, Feature: OAS 3.0 spec support, Enhancement: CI/Test, Server: Rust, Enhancement: New generator, General: Discussion, Client: Swift, Client: Retrofit, Client: C++, Server: C++, Client: Dart, Feature: Enum"
Iris,IrisShaders/Iris,3129,"['Java', 'Shell', 'GLSL']","['hacktoberfest', 'minecraft', 'opengl', 'shaders']","# Iris ## Links * **Visit [our website]( for downloads and pretty screenshots!** * * **Visit [Modrinth]( to find shader packs!** * Visit [our Discord server]( to chat about the mod and get support! It's also a great place to get development updates right as they're happening. * Visit [the developer documentation]( for information on developing, building, and contributing to Iris! ## FAQ - Find answers to frequently asked questions on our [FAQ page](docs/faq.md). - Iris supports almost all shaderpacks, but a list of unsupported shaderpacks is available [here](docs/unsupportedshaders.md). - A list of unfixable limitations in Iris is available [here](docs/usage/limitations.md). ## Why did you make Iris? Iris was created to fill a void that I saw in the Minecraft customization and graphical enhancement community: the lack of an open-source shaders mod that would let me load my favorite shader packs on modern versions of the game, while retaining performance and compatibility with modpacks. OptiFine, the current dominant mod for loading shader packs, has restrictive licensing that firmly stands in the way of any sort of tinkering, and is fairly notorious for having compatibility issues with the mods that I like. It's also mutually incompatible with Sodium, the best rendering optimization mod in existence by a large margin. ShadersMod was never updated past 1.12, and it lacks support for many of the many modern popular shaderpacks. So I created Iris, to try and solve these issues, and also address many other longstanding issues with shader packs. I first and foremost develop Iris to meet my own needs of a performance-oriented shaders mod with good compatibility and potential for tinkering. Iris when paired with Sodium delivers great performance on my machine, finally making it fully possible for me to actually play with shaders instead of just periodically switching them on to take pretty screenshots, then switching them off once I get tired of frame drops. Of course, as it turns out, I'm far from the only person who benefits from the development of Iris, which is why I've decided to release it to the public as an open-source mod. Canvas is another shaders mod that has already gained some traction. Its big downside for me, however, is the fact that it doesn't support the existing popular OptiFine shaderpacks that I want to use. This is because it uses a new format for shader packs that isn't compatible with the existing format, in order to achieve many of its goals for better mod integration with shaders. And while Canvas now has a few nice shaders like Lumi Lights, I still want to have the option of using existing shader packs that were designed for OptiFine. Shader packs just aren't interchangeable, just like how you cannot hand a copy of *The Last Supper* to someone who wants a copy of the *Mona Lisa*. They're both great pieces of art, but you absolutely cannot just swap one out for the other. That being said, if you're a fan of the shader packs available for Canvas, then great! Canvas and Iris are both perfectly fine ways to enjoy shaders with Minecraft. ## Goals These are the goals of Iris. Iris hasn't fully achieved all these goals, however we are getting close. * **Performance.** Iris should fully utilize your graphics card when paired with optimization mods like Sodium. * **Correctness.** Iris should try to be as issueless as possible in its implementation. * **Mod compatibility.** Iris should make a best effort to be compatible with modded environments. * **Backwards compatibility.** All existing ShadersMod / OptiFine shader packs should just work on Iris, without any modifications required. * **Features for shader pack developers.** Once Iris has full support for existing features of the shader pipeline and is reasonably bug free, I wish to expand the horizons of what's possible to do with Minecraft shader packs through the addition of new features to the shader pipeline. Unlimited color buffers, direct voxel data access, and fancy debug HUDs are some examples of features that I'd like to add in the future. * **A well-organized codebase.** I'd like for working with Iris code to be a pleasant experience overall. ## What's the current state of development? Iris has public releases for 1.18.2, 1.19.2, 1.19.3, and 1.19.4 that work with the official releases of Sodium. Iris is generally usable on most shader packs, and most shader packs are being designed with Iris support in mind. However, Iris is still not complete software. Performance can be improved, and more features are being added for shader developers. There are also some minor missing features from OptiFine that make the implementation incomplete. ## How can I help? * The Iris Discord server is looking for people willing to provide support and moderate the server! Go to #applications on our server if you'd like to apply. * Code review on open PRs is appreciated! This helps get important issues with PRs resolved before I give them a look. * Code contributions through PRs are also welcome! If you're working on a large / significant feature it's usually a good idea to talk about your plans beforehand, to make sure that work isn't wasted. ## But where's the Forge version? Iris doesn't support Forge. This is for a few reasons: * My time is limited, and properly supporting all the mods available for Forge (as well as Forge itself) is a huge amount of work. When people ask for Forge support, they aren't asking just for Iris to run on Forge, they are also asking for it to be compatible out of the box with their kitchen sink modpack that contains over 300 mods. As a result, properly supporting Forge would require me to divert large amounts of precious time into fixing tedious compatibility issues and bugs, time that could instead be spent making the Fabric version of Iris better. * The Forge toolchain isn't really designed to play nice with mods like Iris that need to make many patches to the game code. It's possible, but Fabric & Quilt are just *better* for mods like Iris. It's no coincidence that the emergence of Fabric and the initial emergence of OptiFine replacements happened at around the same time. * Sodium, which Iris depends on to achieve its great performance, has no official Forge version. It's a long story, but in short: the lead developers of Forge were incredibly hostile to JellySquid when she developed for Forge, and since then have made no credible attempts to repair relations or even admit wrongdoing. Some users have already ported Iris to Forge, however these ports generally come with mod compatibility issues and outdated updates. The license of Iris does permit others to legally port Iris to Forge, and we are not strictly opposed to the existence of an Iris Forge port created by others. However, what we are opposed to is someone doing a bare-minimum port of Iris to Forge, releasing it to the public, and then abandoning it or poorly maintaining it while compatibility issues and bug reports accumulate. When that happens, not only does that hurt the reputation of Iris, but we also ultimately get flooded by users wanting support with a low-effort Forge port that we didn't even make. So, if you want to distribute a Forge port of Iris, we'd prefer if you let us know. Please don't just name your port ""Iris Forge,"" ""Iris for Forge,"" or ""Iris Forge Port"" either. Be original, and don't just hijack our name, unless we've given you permission to use one of those kinds of names. If a well-qualified group of people willing to maintain a Forge port of Iris does appear, then a name like ""Iris Forge"" might be appropriate - otherwise, it probably isn't appropriate. ## Credits * **TheOnlyThing and Vaerian**, for creating the excellent logo * **Mumfrey**, for creating the Mixin bytecode patching system used by Iris and Sodium internally * **The Fabric and Quilt projects**, for enabling the existence of mods like Iris that make many patches to the game * **JellySquid**, for creating Sodium, the best rendering optimization mod for Minecraft that currently exists, and for making it open-source * **All past, present, and future contributors to Iris**, for helping the project move along * **Dr. Rubisco**, for maintaining the website * **The Iris support and moderation team**, for handling user support requests and allowing me to focus on developing Iris * **daxnitro, karyonix, and sp614x**, for creating and maintaining the current shaders mods ## License All code in this (Iris) repository is completely free and open source, and you are free to read, distribute, and modify the code as long as you abide by the (fairly reasonable) terms of the [GNU LGPLv3 license]( glsl-transformer is licensed under the GNU Affero General Public License version 3. This may affect your ability to distribute Iris. Though it's not legally required, I'd appreciate it if you could ask before hosting your own public downloads for compiled versions of Iris. Though if you want to add the mod to a site like MCBBS, that's fine, no need to ask me.","595, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, bug, enhancement, mod compatibility, crash, status: underlying issue identified, performance, area: user interface, version: 1.17+, more information needed, area: batched entity rendering, unimplemented, needs investigation, area: better particles, pack: seus, at the mercy of drivers, type: translations, status: bug in Java or OS, high priority, help wanted, documentation, contributions requested, bug in sodium, wontfix, version: 1.16, type: shader pack compatibility, status: waiting on review, status: waiting on other mod, status: waiting on author, status: might be fixed, status: fixed in next release"
tech-interview-for-developer,gyoogle/tech-interview-for-developer,13690,"['Java', 'C++']","['interview', 'developer', 'tech', 'computer-science', 'algorithm']","# tech-interview-for-developer []( []( []( []( [](#contributors) []( []( []( []( ### & **Collaborator** | []( []( | []( | | :-----------------------------------: | :---------------------------------------: | :-------------------------------------: | **Commit convention rule** : -[]-- `ex) 2019-10-14 [Algorithm] Sort Add/Update/Delete` []( [PR]( #### []( ## [ ! Click!]( ### [ ]() ------ ## Computer Science - ### Computer Architecture - [ ]( - [ ]( - [(CPU) ]( - [ ]( - [ & ]( - [ & ]( - [ARM ]( - ### Data Structure - [Array]( - [LinkedList]( - [Array & ArrayList & LinkedList]( - [(Stack) & (Queue)]( - [(Heap)]( - [(Tree)]( - [(Binary Search Tree)]() - [(Hash)]( - [(Trie)]( - [B-Tree & B+Tree]( - ### Database - [(Key) ]( - [SQL - JOIN]( - [SQL Injection]( - [SQL vs NoSQL]( - [(Normalization)]( - [(Anomaly)]( - [(INDEX)]( - [(Transaction)]( - [ (Transaction Isolation Level)]( - [ (Stored PROCEDURE)]( - [(Redis)]( - ### Network - [OSI 7 ]( - [TCP 3 way handshake & 4 way handshake]( - [TCP/IP & ]( - [UDP]( - [ & ]( - [HTTP & HTTPS]( - [TLS/SSL handshake]( - [ (Load Balancing)]( - [Blocking,Non-blocking & Synchronous,Asynchronous]( - [Blocking & Non-Blocking I/O]( - ### Operating System - []( - [ vs ]( - [ ]( - [(Interrupt)]( - [ (System Call)]( - [PCB Context Switching]( - [IPC(Inter Process Communication)]( - [CPU ]( - [(DeadLock)]( - [Race Condition]( - [(Semaphore) & (Mutex)]( - [ & ]( ([PDF]( - [ ]( - [(Memory)]( - [ ]( - ### Software Engineering - [ & ]( / [ & ]( - [TDD(Test Driven Development)]( - [(Agile) 1]( / [(Agile) 2]( - [ (Object-Oriented Programming)]( - [ (Fuctional Programming)]( - [(DevOps)]( - [ (3rd party)?]( - [ (MSA)]( ## Algorithm - [ (Bubble Sort)]( - [ (Selection Sort)]( - [ (Insertion Sort)]( - [ (Quick Sort)]() - [ (Merge Sort)]() - [ (Heap Sort)]() - [ (Radix Sort)]() - [ (Count Sort)]() - [ (Binary Search)]( - [ ]( - [DFS & BFS]( - [ (LIS)]( - [ (LCA)]( - [ (Dynamic Programming)]( - [(Dijkstra) ]( - [(BitMask)]( - ##### TEST - [ PRO ]( ## Design Pattern - [ (Overview)]( - [ ]( - [ ]( - [ ]( - [ ]( - [ ]( - [ ]( - [ ]( - [SOLID]( ## Interview - [(Java, C++ ... )]( - []( - []() - []( - [()]( ## Language - ### C - [[C] C ]( - [[C] ]( - [[C] (Pointer)]() - [[C] ]( - ### C++ - [[C++] vs ]( - [[C++] (Virtual Function)]( - [[C++] ]( - [[C++] Vector Container]( - ### Java - [[Java] Java ]( - [[Java] Call by Value vs Call by Reference]( - [[Java] String & StringBuffer & StringBuilder]() - [[Java] (Java Virtual Machine)]( - [[Java] Casting( & )]( - [[Java] & ]( - [[Java] Thread ]( - [[Java] (Intrinsic Lock)]() - [[Java] ]( - [[Java] Garbage Collection]( - [[Java] Promotion & Casting]( - [[Java] Primitive type & Reference type]( - [[Java] (Serialization)]( - [[Java] Error & Exception]( - [[Java] Stream API]( - [[Java] Record]( - [[Java] Interend String in Java]( - [[Java] Composition]( - ### Javascript - [[Javascript] ES2015+ ]( - [[Javascript] Object Prototype]( - [[Javascript] Closure]( - ### Python - [[Python] ]( ## Web - [ ]( - [(Cookie) & (Session)]( - [HTTP Request Methods]( - [HTTP Status Code]( - [REST API]( - [ WAS ]( - [OAuth]( - [JWT(JSON Web Token)]( - [Authentication and Authorization]( - [ ]( - [UI UX]( - [CSR & SSR]( - [Vue.js vs React]( - [ & & ]( - [PWA(Progressive Web App)]( - [CSRF & XSS]( - ##### Spring - [[Spring] Bean Scope]( - [[Spring] MVC Framework]( - [[Spring Boot] SpringApplication]( - [[Spring Boot] Test Code]( - [JPA]( - [[Spring Data JPA] (Dirty Checking)]( - [Spring Security - ]( - ##### Vue.js - [Vue.js ]( - [Vue CLI + Spring Boot ]( - [Vue.js + Firebase & ]( - [Vue.js + Firebase Facebook ]( - [Nuxt.js]() - ##### React - [React Fragment]( - [React Hook]( - [React + Spring Boot ]( - ##### DevOps - [[AWS] Spring Boot ]( - [[Travis CI] ]( - [ ]( ## Linux - [ ]( - [ ]( - [ ]( ## New Technology - #### AI - [ ]( - [Tensorflow Linear Regression ]( - #### Big Data - [ ]( - [DBSCAN ]( - #### IT Issues - [ (19.08.07)]( - [ (19.08.08)]( - [GraphQL(19.08.08)]( - [SK ?(19.08.08)]( - [, FTP (19.08.20)]( - [2020 ICT ]( - [AMD Intel , 2020 '']( ## Seminar - [2019 NHN OPEN TALK DAY]( - [2019 ]( - [2019 NCSOFT JOB Cafe]( - [2019 ]() ## ETC - [Git Commit Message Convention]( - [GitHub Fork ]( - [GitHub (repository) ]( - [Git & GitHub & GitLab Flow]( - [Javascript Node.js Git ]( ## License []( [](","3.3k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug, Summary"
datahub,datahub-project/datahub,9299,"['Java', 'Python', 'TypeScript']","['metadata', 'linkedin', 'datahub', 'data-catalog', 'data-discovery']","# DataHub: The Data Discovery Platform for the Modern Data Stack ## Built with by [Acryl Data]( and [LinkedIn]( []( []( []( []( []( []( []( []( []( []( []( ### Hosted DataHub Docs (Courtesy of Acryl Data): [datahubproject.io]( --- [Quickstart]( | [Features]( | [Roadmap]( | [Adoption](#adoption) | [Demo]( | [Town Hall]( --- > DataHub Town Hall is the 4th Thursday at 9am US PT of every month - [add it to your calendar!]( > > - Town-hall Zoom link: [zoom.datahubproject.io]( > - [Meeting details](docs/townhalls.md) & [past recordings](docs/townhall-history.md) > DataHub Community Highlights: > > - Read our Monthly Project Updates [here]( > - Bringing The Power Of The DataHub Real-Time Metadata Graph To Everyone At Acryl Data: [Data Engineering Podcast]( > - Check out our most-read blog post, [DataHub: Popular Metadata Architectures Explained]( @ LinkedIn Engineering Blog. > - Join us on [Slack](docs/slack.md)! Ask questions and keep up with the latest announcements. ## Introduction DataHub is an open-source data catalog for the modern data stack. Read about the architectures of different metadata systems and why DataHub excels [here]( Also read our [LinkedIn Engineering blog post]( check out our [Strata presentation]( and watch our [Crunch Conference Talk]( You should also visit [DataHub Architecture](docs/architecture/architecture.md) to get a better understanding of how DataHub is implemented. ## Features & Roadmap Check out DataHub's [Features](docs/features.md) & [Roadmap]( ## Demo and Screenshots There's a [hosted demo environment]( courtesy of [Acryl Data]( where you can explore DataHub without installing it locally ## Quickstart Please follow the [DataHub Quickstart Guide]( to get a copy of DataHub up & running locally using [Docker]( As the guide assumes some basic knowledge of Docker, we'd recommend you to go through the ""Hello World"" example of [A Docker Tutorial for Beginners]( if Docker is completely foreign to you. ## Development If you're looking to build & modify datahub please take a look at our [Development Guide]( ## Source Code and Repositories - [datahub-project/datahub]( This repository contains the complete source code for DataHub's metadata model, metadata services, integration connectors and the web application. - [acryldata/datahub-actions]( DataHub Actions is a framework for responding to changes to your DataHub Metadata Graph in real time. - [acryldata/datahub-helm]( Repository of helm charts for deploying DataHub on a Kubernetes cluster - [acryldata/meta-world]( A repository to store recipes, custom sources, transformations and other things to make your DataHub experience magical - [dbt-impact-action]( : This repository contains a github action for commenting on your PRs with a summary of the impact of changes within a dbt project - [datahub-tools]( : Additional python tools to interact with the DataHub GraphQL endpoints, built by Notion - [business-glossary-sync-action]( : This repository contains a github action that opens PRs to update your business glossary yaml file. ## Releases See [Releases]( page for more details. We follow the [SemVer Specification]( when versioning the releases and adopt the [Keep a Changelog convention]( for the changelog format. ## Contributing We welcome contributions from the community. Please refer to our [Contributing Guidelines](docs/CONTRIBUTING.md) for more details. We also have a [contrib](contrib) directory for incubating experimental features. ## Community Join our [Slack workspace]( for discussions and important announcements. You can also find out more about our upcoming [town hall meetings](docs/townhalls.md) and view past recordings. ## Adoption Here are the companies that have officially adopted DataHub. Please feel free to add yours to the list if we missed it. - [ABLY]( - [Adevinta]( - [Banksalad]( - [Cabify]( - [ClassDojo]( - [Coursera]( - [DefinedCrowd]( - [DFDS]( - [Digital Turbine]( - [Expedia Group]( - [Experius]( - [Geotab]( - [Grofers]( - [Haibo Technology]( - [hipages]( - [inovex]( - [IOMED]( - [Klarna]( - [LinkedIn]( - [Moloco]( - [N26]( - [Optum]( - [Peloton]( - [PITS Global Data Recovery Services]( - [Razer]( - [Saxo Bank]( - [Showroomprive]( - [SpotHero]( - [Stash]( - [Shanghai HuaRui Bank]( - [s7 Airlines]( - [ThoughtWorks]( - [TypeForm]( - [Udemy]( - [Uphold]( - [Viasat]( - [Wikimedia]( - [Wolt]( - [Zynga]( ## Select Articles & Talks - [DataHub Blog]( - [DataHub YouTube Channel]( - [Optum: Data Mesh via DataHub]( - [Saxo Bank: Enabling Data Discovery in Data Mesh]( - [Bringing The Power Of The DataHub Real-Time Metadata Graph To Everyone At Acryl Data]( - [DataHub: Popular Metadata Architectures Explained]( - [Driving DataOps Culture with LinkedIn DataHub]( @ [DataOps Unleashed 2021]( - [The evolution of metadata: LinkedIns story]( @ [Strata Data Conference 2019]( - [Journey of metadata at LinkedIn]( @ [Crunch Data Conference 2019]( - [DataHub Journey with Expedia Group]( - [Data Discoverability at SpotHero]( - [Data Catalogue Knowing your data]( - [DataHub: A Generalized Metadata Search & Discovery Tool]( - [Open sourcing DataHub: LinkedIns metadata search and discovery platform]( - [Emerging Architectures for Modern Data Infrastructure]( See the full list [here](docs/links.md). ## License [Apache License 2.0](./LICENSE).","2.8k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, bug, ingestion, community-contribution, product, accepted, devops, stale, docs, poc-marathon-dec-2023, dependencies, javascript, pending-submitter-response, merge-pending-ci, hacktoberfest-accepted, feature-request, smoke_test, python, platform, on-deck, datahub-community-champion, good-first-issue, abandoned, wip, v0.10.2, ui, sdk, rfc, release-notes, release-0.13.1, release-0.13.0"
cloudstack,apache/cloudstack,1788,"['Java', 'Python', 'Vue']","['python', 'java', 'cloudstack', 'cloud', 'iaas']","# Apache CloudStack []( []( []( []( []( []( []( Apache CloudStack is open source software designed to deploy and manage large networks of virtual machines, as a highly available, highly scalable Infrastructure as a Service (IaaS) cloud computing platform. CloudStack is used by a number of service providers to offer public cloud services, and by many companies to provide an on-premises (private) cloud offering, or as part of a hybrid cloud solution. CloudStack is a turnkey solution that includes the entire ""stack"" of features most organizations want with an IaaS cloud: compute orchestration, Network-as-a-Service, user and account management, a full and open native API, resource accounting, and a first-class User Interface (UI). CloudStack currently supports the most popular hypervisors: VMware vSphere, KVM, XenServer, XenProject and Hyper-V as well as OVM and LXC containers. Users can manage their cloud with an easy to use Web interface, command line tools, and/or a full-featured query based API. For more information on Apache CloudStack, please visit the [website]( ## Who Uses CloudStack? * There are more than 150 known organizations using Apache CloudStack (or a commercial distribution of CloudStack). Our users include many major service providers running CloudStack to offer public cloud services, product vendors who incorporate or integrate with CloudStack in their own products, organizations who have used CloudStack to build their own private clouds, and systems integrators that offer CloudStack related services. * See our [case studies]( highlighting successful deployments of Apache CloudStack. * See the up-to-date list of current [users]( * If you are using CloudStack in your organization and your company is not listed above, please complete our brief adoption [survey]( We're happy to keep your company name anonymous if you require. ## Demo See the project user-interface QA website that runs CloudStack against simulator hypervisor: (admin:password) ## Getting Started * Download a released [version]( * Build from source with the instructions in the [INSTALL.md](INSTALL.md) file. ## Getting Source Repository Apache CloudStack project uses Git. The official Git repository is at: And a mirror is hosted on GitHub: The GitHub mirror is strictly read only and provides convenience to users and developers to explore the code and for the community to accept contributions via GitHub pull requests. ## Documentation * [Project Documentation]( * [Release notes]( * Developer [wiki]( * Design [documents]( * API [documentation]( * How to [contribute](CONTRIBUTING.md) ## News and Events * [Blog]( * [Twitter]( * [Events and meetup]( * [YouTube channel]( ## Getting Involved and Contributing Interested in helping out with Apache CloudStack? Great! We welcome participation from anybody willing to work [The Apache Way]( and make a contribution. Note that you do not have to be a developer in order to contribute to Apache CloudStack. We need folks to help with documentation, translation, promotion etc. See our contribution [page]( If you are a frequent contributors, you can request to be added as collaborators (see to our GitHub repos. This allows you to use project GitHub with ability to report issue with tags, and be assigned to issues and PRs. This is done via the .asf.yaml file in this repo. You may do so by sharing your GitHub users ID or raise a GitHub issue. If you're interested in learning more or participating in the Apache CloudStack project, the mailing lists are the best way to do that. While the project has several communications channels, the [mailing lists]( are the most active and the official channels for making decisions about the project itself. Mailing lists: - [Development Mailing List](mailto:dev-subscribe@cloudstack.apache.org) - [Users Mailing List](mailto:users-subscribe@cloudstack.apache.org) - [Commits Mailing List](mailto:commits-subscribe@cloudstack.apache.org) - [Issues Mailing List](mailto:issues-subscribe@cloudstack.apache.org) - [Marketing Mailing List](mailto:marketing-subscribe@cloudstack.apache.org) Report and/or check bugs on [GitHub]( and check our developer [page]( for contributing code. ## Reporting Security Vulnerabilities If you've found an issue that you believe is a security vulnerability in a released version of CloudStack, please report it to `security@apache.org` with details about the vulnerability, how it might be exploited, and any additional information that might be useful. For more details, please visit our security [page]( ## License Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. Please see the [LICENSE](LICENSE) file included in the root directory of the source tree for extended license details. ## Notice of Cryptographic Software This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country's laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See [The Wassenaar Arrangement]( for more information. The U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms. The form and manner of this Apache Software Foundation distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code. The following provides more details on the included cryptographic software: * CloudStack makes use of JaSypt cryptographic libraries. * CloudStack has a system requirement of MySQL, and uses native database encryption functionality. * CloudStack makes use of the Bouncy Castle general-purpose encryption library. * CloudStack can optionally interact with and control OpenSwan-based VPNs. * CloudStack has a dependency on and makes use of JSch - a java SSH2 implementation.","1.1k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, status:stale, component:UI, component:api, type:improvement, age:1year_plus, component:networking, type:enhancement, Severity:Minor, component:storage, age:2years_plus, type:bug, status:needs-testing, type:new-feature, component:kvm, type:question, status:has-conflicts, component:kubernetes, Python, component:orchestration, component:integration-test, component:advanced-networking, status:needs-investigation, status:needs-functional-definition, component:build, Severity:Major, component:primary-storage, component:management-server, component:agent, status:needs-reproducing, component:vmware"
master-spring-and-spring-boot,in28minutes/master-spring-and-spring-boot,1096,"['Java', 'JavaScript', 'HTML']","['aws', 'docker', 'java', 'spring', 'spring-boot']","# Master Spring and Spring Boot **Spring and Spring Boot** Frameworks are the **No 1 frameworks** for building enterprise apps in the Java world. In this course, you will **learn Spring and Spring Boot from ZERO**. I'm a great believer that the best way to learn is by doing and we designed this course to be **hands-on**. You will build a **web application, a REST API and full stack application** using Spring, Spring Boot, JPA, Hibernate, React, Spring Security, Maven and Gradle. You will learn to containerise applications using Docker. You will learn to deploy these applications to AWS. By the end of the course, you will know everything you would need to become a great Spring and Spring Boot Developer. ## Installing Tools ### Our Recommendations - Use **latest version** of Java - Use **latest version** of ""Eclipse IDE for Enterprise Java Developers"" - Remember: Spring Boot 3+ works only with Java 17+ ### Installing Java - Windows - - Linux - - Mac - #### Troubleshooting - Troubleshooting Java Installation - ### Installing Eclipse - Windows - - Others - #### Troubleshooting - Configuring Java in Eclipse - ## Lectures ### Getting Started - Master Spring Framework and Spring Boot - Getting Started - Master Spring Framework and Spring Boot ### Getting Started with Java Spring Framework - Step 01 - Understanding the Need for Java Spring Framework - Step 02 - Getting Started with Java Spring Framework - Step 03 - Creating a New Spring Framework Project with Maven and Java - Step 04 - Getting Started with Java Gaming Application - Step 05 - Understanding Loose Coupling and Tight Coupling - Step 06 - Introducting Java Interface to Make App Loosely Coupled - Step 07 - Bringing in Spring Framework to Make Java App Loosely Coupled - Step 08 - Your First Java Spring Bean and Launching Java Spring Configuration - Step 09 - Creating More Java Spring Beans in Spring Java Configuration File - Step 10 - Implementing Auto Wiring in Spring Framework Java Configuration File - Step 11 - Questions about Spring Framework - What will we learn? - Step 12 - Understanding Spring IOC Container - Application Context and Bean Factory - Step 13 - Exploring Java Bean vs POJO vs Spring Bean - Step 14 - Exploring Spring Framework Bean Auto Wiring - Primary and Qualifier Annotations - Step 15 - Using Spring Framework to Manage Beans for Java Gaming App - Step 16 - More Questions about Java Spring Framework - What will we learn? - Step 17 - Exploring Spring Framework With Java - Section 1 - Review ### Using Spring Framework to Create and Manage Your Java Objects - Step 01 - Getting Spring Framework to Create and Manage Your Java Objects - Step 02 - Exploring Primary and Qualifier Annotations for Spring Components - Step 03 - Primary and Qualifier - Which Spring Annotation Should You Use? - Step 04 - Exploring Spring Framework - Different Types of Dependency Injection - Step 05 - Java Spring Framework - Understanding Important Terminology - Step 06 - Java Spring Framework - Comparing @Component vs @Bean - Step 07 - Why do we have dependencies in Java Spring Applications? - Step 08 - Exercise/ Solution for Real World Java Spring Framework Example - Step 09 - Exploring Spring Framework With Java - Section 2 - Review ### Exploring Spring Framework Advanced Features - Step 01 - Exploring Lazy and Eager Initialization of Spring Framework Beans - Step 02 - Comparing Lazy Initialization vs Eager Initialization - Step 03 - Exploring Java Spring Framework Bean Scopes - Prototype and Singleton - Step 04 - Comparing Prototype vs Singleton - Spring Framework Bean Scopes - Step 05 - Exploring Spring Beans - PostConstruct and PreDestroy - Step 06 - Evolution of Jakarta EE - Comparing with J2EE and Java EE - Step 07 - Exploring Jakarta CDI with Spring Framework and Java - Step 08 - Exploring Java Spring XML Configuration - Step 09 - Exploring Java Annotations vs XML Configuration for Java Spring Framework - Step 10 - Exploring Spring Framework Stereotype Annotations - Component and more - Step 11 - Quick Review - Important Spring Framework Annotations - Step 12 - Quick Review - Important Spring Framework Concepts - Step 13 - Exploring Spring Big Picture - Framework, Modules and Projects ### Getting Started with Spring Boot - Step 01 - Getting Started with Spring Boot - Goals - Step 02 - Understanding the World Before Spring Boot - 10000 Feet Overview - Step 03 - Setting up New Spring Boot Project with Spring Initializr - Step 04 - Build a Hello World API with Spring Boot - Step 05 - Understanding the Goal of Spring Boot - Step 06 - Understanding Spring Boot Magic - Spring Boot Starter Projects - Step 07 - Understanding Spring Boot Magic - Auto Configuration - Step 08 - Build Faster with Spring Boot DevTools - Step 09 - Get Production Ready with Spring Boot - 1 - Profiles - Step 10 - Get Production Ready with Spring Boot - 2 - ConfigurationProperties - Step 11 - Get Production Ready with Spring Boot - 3 - Embedded Servers - Step 12 - Get Production Ready with Spring Boot - 4 - Actuator - Step 13 - Understanding Spring Boot vs Spring vs Spring MVC - Step 14 - Getting Started with Spring Boot - Review ### Getting Started with JPA and Hibernate with Spring and Spring Boot - Step 01 - Getting Started with JPA and Hibernate - Goals - Step 02 - Setting up New Spring Boot Project for JPA and Hibernate - Step 03 - Launching up H2 Console and Creating Course Table in H2 - Step 04 - Getting Started with Spring JDBC - Step 05 - Inserting Hardcoded Data using Spring JDBC - Step 06 - Inserting and Deleting Data using Spring JDBC - Step 07 - Querying Data using Spring JDBC - Step 08 - Getting Started with JPA and EntityManager - Step 09 - Exploring the Magic of JPA - Step 10 - Getting Started with Spring Data JPA - Step 11 - Exploring features of Spring Data JPA - Step 12 - Understanding difference between Hibernate and JPA ### Build Java Web Application with Spring Framework, Spring Boot and Hibernate - Step 00 - Introduction to Building Web App with Spring Boot - Step 01 - Creating Spring Boot Web Application with Spring Initializr - Step 02 - Quick overview of Spring Boot Project - Step 03 - First Spring MVC Controller, @ResponseBody, @Controller - Step 04 - 01 - Enhancing Spring MVC Controller to provide HTML response - Step 04 - 02 - Exploring Step By Step Coding and Debugging Guide - Step 05 - Redirect to a JSP using Spring Boot - Controller, @ResponseBody and View Resolver - Step 06 - Exercise - Creating LoginController and login view - Step 07 - Quick Overview - How does web work - Request and Response - Step 08 - Capturing QueryParams using RequestParam and First Look at Model - Step 09 - Quick Overview - Importance of Logging with Spring Boot - Step 10 - Understanding DispatcherServlet, Model 1, Model 2 and Front Controller - Step 11 - Creating a Login Form - Step 12 - Displaying Login Credentials in a JSP using Model - Step 13 - Add hard coded validation of userid and password - Step 14 - Getting started with Todo Features - Creating Todo and TodoService - Step 15 - Creating first version of List Todos Page - Step 16 - Understanding Session vs Model vs Request - @SessionAttributes - Step 17 - Adding JSTL to Spring Boot Project and Showing Todos in a Table - Step 18 - Adding Bootstrap CSS framework to Spring Boot Project using webjars - Step 19 - Formatting JSP pages with Bootstrap CSS framework - Step 20 - Lets Add a New Todo - Create a new View - Step 21 - Enhancing TodoService to add the todo - Step 22 - Adding Validations using Spring Boot Starter Validation - Step 23 - Using Command Beans to implement New Todo Page Validations - Step 24 - Implementing Delete Todo Feature - New View - Step 25 - Implementing Update Todo - 1 - Show Update Todo Page - Step 26 - Implementing Update Todo - 1 - Save changes to Todo - Step 27 - Adding Target Date Field to Todo Page - Step 28 - Adding a Navigation Bar and Implementing JSP Fragments - Step 29 - Preparing for Spring Security - Step 30 - Setting up Spring Security with Spring Boot Starter Security - Step 31 - Configuring Spring Security with Custom User and Password Encoder - Step 32 - Refactoring and Removing Hardcoding of User Id - Step 33 - Setting up a New User for Todo Application - Step 34 - Adding Spring Boot Starter Data JPA and Getting H2 database ready - Step 35 - 01 - Configuring Spring Security to Get H2 console Working - Step 36 - Making Todo an Entity and Population Todo Data into H2 - Step 37 - Creating TodoRepository and Connecting List Todos page from H2 database - Step 38 - 01 - Connecting All Todo App Features to H2 Database - Step 38 - 02 - Exploring Magic of Spring Boot Starter JPA and JpaRepository - Step 39 - OPTIONAL - Overview of Connecting Todo App to MySQL database - Step 40 - OPTIONAL - Installing Docker - Step 41 - OPTIONAL - Connecting Todo App to MySQL database ### Creating a Java REST API with Spring Boot, Spring Framework and Hibernate - Step 00 - Creating a REST API with Spring Boot - An Overview - Step 01 - Initializing a REST API Project with Spring Boot - Step 02 - Creating a Hello World REST API with Spring Boot - Step 03 - Enhancing the Hello World REST API to return a Bean - Step 04 - What's happening in the background? Spring Boot Starters and Autoconfiguration - Step 05 - Enhancing the Hello World REST API with a Path Variable - Step 06 - Designing the REST API for Social Media Application - Step 07 - Creating User Bean and UserDaoService - Step 08 - Implementing GET Methods for User Resource - Step 09 - Implementing POST Method to create User Resource - Step 10 - Enhancing POST Method to return correct HTTP Status Code and Location URI - Step 11 - Implementing Exception Handling - 404 Resource Not Found - Step 12 - Implementing Generic Exception Handling for all Resources - Step 13 - Implementing DELETE Method to delete a User Resource - Step 14 - Implementing Validations for REST API - Step 15 - Overview of Advanced REST API Features - Step 16 - Understanding Open API Specificat... [TRUNCATED]","571, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
kafka-ui,provectus/kafka-ui,8709,"['Java', 'TypeScript', 'ANTLR']","['kafka-ui', 'kafka-brokers', 'kafka', 'kafka-streams', 'kafka-client']","UI for Apache Kafka ------------------ #### Versatile, fast and lightweight web UI for managing Apache Kafka clusters. Built by developers, for developers. []( []( []( []( DOCS QUICK START COMMUNITY DISCORD AWS Marketplace ProductHunt #### UI for Apache Kafka is a free, open-source web UI to monitor and manage Apache Kafka clusters. UI for Apache Kafka is a simple tool that makes your data flows observable, helps find and troubleshoot issues faster and deliver optimal performance. Its lightweight dashboard makes it easy to track key metrics of your Kafka clusters - Brokers, Topics, Partitions, Production, and Consumption. ### DISCLAIMER UI for Apache Kafka is a free tool built and supported by the open-source community. Curated by Provectus, it will remain free and open-source, without any paid features or subscription plans to be added in the future. Looking for the help of Kafka experts? Provectus can help you design, build, deploy, and manage Apache Kafka clusters and streaming applications. Discover [Professional Services for Apache Kafka]( to unlock the full potential of Kafka in your enterprise! Set up UI for Apache Kafka with just a couple of easy commands to visualize your Kafka data in a comprehensible way. You can run the tool locally or in the cloud. # Features * **Multi-Cluster Management** monitor and manage all your clusters in one place * **Performance Monitoring with Metrics Dashboard** track key Kafka metrics with a lightweight dashboard * **View Kafka Brokers** view topic and partition assignments, controller status * **View Kafka Topics** view partition count, replication status, and custom configuration * **View Consumer Groups** view per-partition parked offsets, combined and per-partition lag * **Browse Messages** browse messages with JSON, plain text, and Avro encoding * **Dynamic Topic Configuration** create and configure new topics with dynamic configuration * **Configurable Authentification** [secure]( your installation with optional Github/Gitlab/Google OAuth 2.0 * **Custom serialization/deserialization plugins** - [use]( a ready-to-go serde for your data like AWS Glue or Smile, or code your own! * **Role based access control** - [manage permissions]( to access the UI with granular precision * **Data masking** - [obfuscate]( sensitive data in topic messages # The Interface UI for Apache Kafka wraps major functions of Apache Kafka with an intuitive user interface. ## Topics UI for Apache Kafka makes it easy for you to create topics in your browser by several clicks, pasting your own parameters, and viewing topics in the list. It's possible to jump from connectors view to corresponding topics and from a topic to consumers (back and forth) for more convenient navigation. connectors, overview topic settings. ### Messages Let's say we want to produce messages for our topic. With the UI for Apache Kafka we can send or write data/messages to the Kafka topics without effort by specifying parameters, and viewing messages in the list. ## Schema registry There are 3 supported types of schemas: Avro, JSON Schema, and Protobuf schemas. Before producing avro/protobuf encoded messages, you have to add a schema for the topic in Schema Registry. Now all these steps are easy to do with a few clicks in a user-friendly interface. # Getting Started To run UI for Apache Kafka, you can use either a pre-built Docker image or build it (or a jar file) yourself. ## Quick start (Demo run) ``` docker run -it -p 8080:8080 -e DYNAMIC_CONFIG_ENABLED=true provectuslabs/kafka-ui ``` Then access the web UI at [ The command is sufficient to try things out. When you're done trying things out, you can proceed with a [persistent installation]( ## Persistent installation ``` services: kafka-ui: container_name: kafka-ui image: provectuslabs/kafka-ui:latest ports: - 8080:8080 environment: DYNAMIC_CONFIG_ENABLED: 'true' volumes: - ~/kui/config.yml:/etc/kafkaui/dynamic_config.yaml ``` Please refer to our [configuration]( page to proceed with further app configuration. ## Some useful configuration related links [Web UI Cluster Configuration Wizard]( [Configuration file explanation]( [Docker Compose examples]( [Misc configuration properties]( ## Helm charts [Quick start]( ## Building from sources [Quick start]( with building ## Liveliness and readiness probes Liveliness and readiness endpoint is at `/actuator/health`. Info endpoint (build info) is located at `/actuator/info`. # Configuration options All of the environment variables/config properties could be found [here]( # Contributing Please refer to [contributing guide]( we'll guide you from there.","1.1k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, status/accepted, scope/frontend, scope/backend, type/bug, status/triage, type/enhancement, type/feature, good first issue, status/confirmed, status/needs-attention, type/dependencies, area/rbac, type/chore, area/wizard, area/ux, scope/infrastructure, type/refactoring, type/documentation, status/on-hold, status/blocked, severity/high, area/auth, status/design-review, area/messages, type/security, scope/QA, area/serde, area/acl, status/pending-frontend, scope/AQA"
kafka,apache/kafka,27569,"['Java', 'Scala', 'Python']","['scala', 'kafka']","Apache Kafka ================= See our [web site]( for details on the project. You need to have [Java]( installed. We build and test Apache Kafka with Java 8, 11, 17 and 21. We set the `release` parameter in javac and scalac to `8` to ensure the generated binaries are compatible with Java 8 or higher (independently of the Java version used for compilation). Java 8 support project-wide has been deprecated since Apache Kafka 3.0, Java 11 support for the broker and tools has been deprecated since Apache Kafka 3.7 and removal of both is planned for Apache Kafka 4.0 ( see [KIP-750]( and [KIP-1013]( for more details). Scala 2.12 and 2.13 are supported and 2.13 is used by default. Scala 2.12 support has been deprecated since Apache Kafka 3.0 and will be removed in Apache Kafka 4.0 (see [KIP-751]( for more details). See below for how to use a specific Scala version or all of the supported Scala versions. ### Build a jar and run it ### ./gradlew jar Follow instructions in ### Build source jar ### ./gradlew srcJar ### Build aggregated javadoc ### ./gradlew aggregatedJavadoc ### Build javadoc and scaladoc ### ./gradlew javadoc ./gradlew javadocJar # builds a javadoc jar for each module ./gradlew scaladoc ./gradlew scaladocJar # builds a scaladoc jar for each module ./gradlew docsJar # builds both (if applicable) javadoc and scaladoc jars for each module ### Run unit/integration tests ### ./gradlew test # runs both unit and integration tests ./gradlew unitTest ./gradlew integrationTest ### Force re-running tests without code change ### ./gradlew test --rerun ./gradlew unitTest --rerun ./gradlew integrationTest --rerun ### Running a particular unit/integration test ### ./gradlew clients:test --tests RequestResponseTest ### Repeatedly running a particular unit/integration test ### I=0; while ./gradlew clients:test --tests RequestResponseTest --rerun --fail-fast; do (( I=$I+1 )); echo ""Completed run: $I""; sleep 1; done ### Running a particular test method within a unit/integration test ### ./gradlew core:test --tests kafka.api.ProducerFailureHandlingTest.testCannotSendToInternalTopic ./gradlew clients:test --tests org.apache.kafka.clients.MetadataTest.testTimeToNextUpdate ### Running a particular unit/integration test with log4j output ### By default, there will be only small number of logs output while testing. You can adjust it by changing the `log4j.properties` file in the module's `src/test/resources` directory. For example, if you want to see more logs for clients project tests, you can modify [the line]( in `clients/src/test/resources/log4j.properties` to `log4j.logger.org.apache.kafka=INFO` and then run: ./gradlew cleanTest clients:test --tests NetworkClientTest And you should see `INFO` level logs in the file under the `clients/build/test-results/test` directory. ### Specifying test retries ### By default, each failed test is retried once up to a maximum of five retries per test run. Tests are retried at the end of the test task. Adjust these parameters in the following way: ./gradlew test -PmaxTestRetries=1 -PmaxTestRetryFailures=5 See [Test Retry Gradle Plugin]( for more details. ### Generating test coverage reports ### Generate coverage reports for the whole project: ./gradlew reportCoverage -PenableTestCoverage=true -Dorg.gradle.parallel=false Generate coverage for a single module, i.e.: ./gradlew clients:reportCoverage -PenableTestCoverage=true -Dorg.gradle.parallel=false ### Building a binary release gzipped tar ball ### ./gradlew clean releaseTarGz The release file can be found inside `./core/build/distributions/`. ### Building auto generated messages ### Sometimes it is only necessary to rebuild the RPC auto-generated message data when switching between branches, as they could fail due to code changes. You can just run: ./gradlew processMessages processTestMessages ### Running a Kafka broker in KRaft mode Using compiled files: KAFKA_CLUSTER_ID=""$(./bin/kafka-storage.sh random-uuid)"" ./bin/kafka-storage.sh format -t $KAFKA_CLUSTER_ID -c config/kraft/server.properties ./bin/kafka-server-start.sh config/kraft/server.properties Using docker image: docker run -p 9092:9092 apache/kafka:3.7.0 ### Running a Kafka broker in ZooKeeper mode Using compiled files: ./bin/zookeeper-server-start.sh config/zookeeper.properties ./bin/kafka-server-start.sh config/server.properties >Since ZooKeeper mode is already deprecated and planned to be removed in Apache Kafka 4.0, the docker image only supports running in KRaft mode ### Cleaning the build ### ./gradlew clean ### Running a task with one of the Scala versions available (2.12.x or 2.13.x) ### *Note that if building the jars with a version other than 2.13.x, you need to set the `SCALA_VERSION` variable or change it in `bin/kafka-run-class.sh` to run the quick start.* You can pass either the major version (eg 2.12) or the full version (eg 2.12.7): ./gradlew -PscalaVersion=2.12 jar ./gradlew -PscalaVersion=2.12 test ./gradlew -PscalaVersion=2.12 releaseTarGz ### Running a task with all the scala versions enabled by default ### Invoke the `gradlewAll` script followed by the task(s): ./gradlewAll test ./gradlewAll jar ./gradlewAll releaseTarGz ### Running a task for a specific project ### This is for `core`, `examples` and `clients` ./gradlew core:jar ./gradlew core:test Streams has multiple sub-projects, but you can run all the tests: ./gradlew :streams:testAll ### Listing all gradle tasks ### ./gradlew tasks ### Building IDE project #### *Note that this is not strictly necessary (IntelliJ IDEA has good built-in support for Gradle projects, for example).* ./gradlew eclipse ./gradlew idea The `eclipse` task has been configured to use `${project_dir}/build_eclipse` as Eclipse's build directory. Eclipse's default build directory (`${project_dir}/bin`) clashes with Kafka's scripts directory and we don't use Gradle's build directory to avoid known issues with this configuration. ### Publishing the jar for all versions of Scala and for all projects to maven ### The recommended command is: ./gradlewAll publish For backwards compatibility, the following also works: ./gradlewAll uploadArchives Please note for this to work you should create/update `${GRADLE_USER_HOME}/gradle.properties` (typically, `~/.gradle/gradle.properties`) and assign the following variables mavenUrl= mavenUsername= mavenPassword= signing.keyId= signing.password= signing.secretKeyRingFile= ### Publishing the streams quickstart archetype artifact to maven ### For the Streams archetype project, one cannot use gradle to upload to maven; instead the `mvn deploy` command needs to be called at the quickstart folder: cd streams/quickstart mvn deploy Please note for this to work you should create/update user maven settings (typically, `${USER_HOME}/.m2/settings.xml`) to assign the following variables ... ... apache.snapshots. ${maven_username} ${maven_password} apache.releases. ${maven_username} ${maven_password} ... ... ### Installing ALL the jars to the local Maven repository ### The recommended command to build for both Scala 2.12 and 2.13 is: ./gradlewAll publishToMavenLocal For backwards compatibility, the following also works: ./gradlewAll install ### Installing specific projects to the local Maven repository ### ./gradlew -PskipSigning=true :streams:publishToMavenLocal If needed, you can specify the Scala version with `-PscalaVersion=2.13`. ### Building the test jar ### ./gradlew testJar ### Running code quality checks ### There are two code quality analysis tools that we regularly run, spotbugs and checkstyle. #### Checkstyle #### Checkstyle enforces a consistent coding style in Kafka. You can run checkstyle using: ./gradlew checkstyleMain checkstyleTest The checkstyle warnings will be found in `reports/checkstyle/reports/main.html` and `reports/checkstyle/reports/test.html` files in the subproject build directories. They are also printed to the console. The build will fail if Checkstyle fails. #### Spotbugs #### Spotbugs uses static analysis to look for bugs in the code. You can run spotbugs using: ./gradlew spotbugsMain spotbugsTest -x test The spotbugs warnings will be found in `reports/spotbugs/main.html` and `reports/spotbugs/test.html` files in the subproject build directories. Use -PxmlSpotBugsReport=true to generate an XML report instead of an HTML one. ### JMH microbenchmarks ### We use [JMH]( to write microbenchmarks that produce reliable results in the JVM. See [jmh-benchmarks/README.md]( for details on how to run the microbenchmarks. ### Dependency Analysis ### The gradle [dependency debugging documentation]( mentions using the `dependencies` or `dependencyInsight` tasks to debug dependencies for the root project or individual subprojects. Alternatively, use the `allDeps` or `allDepInsight` tasks for recursively iterating through all subprojects: ./gradlew allDeps ./gradlew allDepInsight --configuration runtimeClasspath --dependency com.fasterxml.jackson.core:jackson-databind These take the same arguments as the builtin variants. ### Determining if any dependencies could be updated ### ./gradlew dependencyUpdates ### Common build options ### The following options should be set with a `-P` switch, for example `./gradlew -PmaxParallelForks=1 test`. * `commitId`: sets the build commit ID as .git/HEAD might not be correct if there are local commits added for build purposes. * `mavenUrl`: sets the URL of the maven deployment repository (`file://path/to/repo` can be used to point to a local repository). * `maxParallelForks`: maximum number of test processes to start in parallel. Defaults to the number of processors available to the JVM. * `maxScalacThreads`: maximum number of worker threads for the scalac backend. Defaults to the lowest of `8` and the number of processors available to the JVM. The value must be between 1 and 16 (inclusive). * `ignoreFailures`: ignore test failures from junit * `showStandardStreams`: shows standard out and standard error of the test JVM(s) on the console. * `skipSigning`: skips... [TRUNCATED]","13.6k, Code, Pull requests, Actions, Projects, Security, Insights, stale, connect, kip, streams, tests, core, tiered-storage, tools, mirror-maker-2, docs, KIP-848, producer, kraft, consumer, storage, performance, dependencies, KIP-853, queues-for-kafka, ctr, backport-candidate, KIP-932, controller, admin, KIP-963"
karate,karatelabs/karate,7904,"['Java', 'Gherkin', 'JavaScript']","['test-automation', 'assertions', 'testing-tools', 'mock-server', 'automated-testing']","Get Started Get started using VS Code, IntelliJ, Maven, Gradle, NPM, GitHub Codespaces, Docker or the command-line Examples Examples and demos of integrations with other frameworks Kick Start Videos Beginner-friendly step-by-step guides to starting from scratch # Karate ## Test Automation Made `Simple.` Karate is the only open-source tool to combine API test-automation, [mocks](karate-netty), [performance-testing](karate-gatling) and even [UI automation](karate-core) into a **single**, *unified* framework. The syntax is language-neutral, and easy for even non-programmers. Assertions and HTML reports are built-in, and you can run tests in parallel for speed. There's also a cross-platform [stand-alone executable](karate-netty#standalone-jar) for teams not comfortable with Java. You don't have to compile code. Just write tests in a **simple**, *readable* syntax - carefully designed for HTTP, JSON, GraphQL and XML. And you can mix API and [UI test-automation](karate-core) within the same test script. A [Java API](#java-api) also exists for those who prefer to programmatically integrate Karate's rich automation and data-assertion capabilities. ## Hello World ### For API Testing > If you are familiar with Cucumber / Gherkin, the [*big difference*](#cucumber-vs-karate) here is that you **don't** need to write extra ""glue"" code or Java ""step definitions"" ! It is worth pointing out that JSON is a 'first class citizen' of the syntax such that you can express payload and expected data without having to use double-quotes and without having to enclose JSON field names in quotes. There is no need to 'escape' characters like you would have had to in Java or other programming languages. And you don't need to create additional Java classes for any of the payloads that you need to work with. # Index Start Maven | Gradle | Quickstart | Standalone Executable | Naming Conventions | Script Structure Run JUnit 5 | Command Line | IDE Support | Tags / Grouping | Parallel Execution | Java API | jbang Report Configuration | Environment Switching | Reports | JUnit HTML Report | Dry Run | Report Verbosity | Logging | Log Masking Types JSON | XML | JavaScript Functions | Reading Files | Type / String Conversion | Floats and Integers | Embedded Expressions | JsonPath | XPath | Karate Expressions Variables def | text | table | yaml | csv | string | json | xml | xmlstring | bytes | copy Actions assert | print | replace | get | set | remove | configure | call | callonce | eval | listen | doc | read() | compareImage | karate JS API HTTP url | path | request | method | status | soap action | retry until Request param | header | cookie | form field | multipart file | multipart field | multipart entity | params | headers | cookies | form fields | multipart files | multipart fields Response response | responseBytes | responseStatus | responseHeaders | responseCookies | responseTime | responseType | requestTimeStamp Assert match == | match != | match contains | match contains only | match contains any | match contains deep | match contains only deep | match !contains | match each | match each contains deep | match header | Fuzzy Matching | Schema Validation | contains short-cuts Re-Use Calling Other *.feature Files | Data Driven Features | Calling JavaScript Functions | Calling Java Code | Commonly Needed Utilities | Data Driven Scenarios Advanced Polling | Conditional Logic | Before / After Hooks | JSON Transforms | Loops | HTTP Basic Auth | Header Manipulation | GraphQL | Websockets / Async | call vs read() More Test Doubles | Performance Testing | UI Testing | Desktop Automation | VS Code / Debug | Karate vs REST-assured | Karate vs Cucumber | Examples and Demos # Features * Java knowledge is not required and even non-programmers can write tests * Scripts are plain-text, require no compilation step or IDE, and teams can collaborate using Git / standard SCM * Based on the popular Cucumber / Gherkin standard - with [IDE support]( and syntax-coloring options * Elegant [DSL]( syntax 'natively' supports JSON and XML - including [JsonPath](#set) and [XPath](#xpath-functions) expressions * Eliminate the need for 'Java Beans' or 'helper code' to represent payloads and HTTP end-points, and [dramatically reduce the lines of code]( needed for a test * Ideal for testing the highly dynamic responses from [GraphQL]( API-s because of Karate's built-in [text-manipulation](#text) and [JsonPath]( capabilities * Tests are super-readable - as scenario data can be expressed in-line, in human-friendly [JSON](#json), [XML](#xml), Cucumber [Scenario](#the-cucumber-way) Outline [tables](#table), or a [payload builder](#set-multiple) approach [unique to Karate]( * Express expected results as readable, well-formed JSON or XML, and [assert in a single step](#match) that the entire response payload (no matter how complex or deeply nested) - is as expected * Comprehensive [assertion capabilities](#fuzzy-matching) - and failures clearly report which data element (and path) is not as expected, for easy troubleshooting of even large payloads * [Fully featured debugger]( that can step *backwards* and even [re-play a step while editing it]( - a *huge* time-saver * Simpler and more [powerful alternative]( to JSON-schema for [validating payload structure](#schema-validation) and format - that even supports [cross-field](#referring-to-the-json-root) / domain validation logic * Scripts can [call other scripts](#calling-other-feature-files) - which means that you can easily re-use and maintain authentication and 'set up' flows efficiently, across multiple tests * Embedded JavaScript engine that allows you to build a library of [re-usable functions](#calling-javascript-functions) that suit your specific environment or organization * Re-use of payload-data and user-defined functions across tests is [so easy](#reading-files) - that it becomes a natural habit for the test-developer * Built-in support for [switching configuration](#switching-the-environment) across different environments (e.g. dev, QA, pre-prod) * Support for [data-driven tests](#data-driven-tests) and being able to [tag or group](#tags) tests is built-in, no need to rely on an external framework * Native support for reading [YAML](#yaml) and even [CSV](#csv-files) files - and you can use them for data-driven tests * Standard Java / Maven project structure, and [seamless integration](#command-line) into CI / CD pipelines - and support for [JUnit 5](#junit-5) * Option to use as a light-weight [stand-alone executable]( - convenient for teams not comfortable with Java * Multi-threaded [parallel execution](#parallel-execution), which is a huge time-saver, especially for integration and end-to-end tests * Built-in [test-reports](#test-reports) compatible with Cucumber so that you have the option of using third-party (open-source) maven-plugins for even [better-looking reports](karate-demo#example-report) * Reports include HTTP request and response [logs *in-line*](#test-reports), which makes [troubleshooting]( and [debugging]( easier * Easily invoke JDK classes, Java libraries, or re-use custom Java code if needed, for [ultimate extensibility](#calling-java) * Simple plug-in system for [authentication](# and HTTP [header management](#configure-headers) that will handle any complex, real-world scenario * [Cross-browser Web UI automation](karate-core) so that you can test *all* layers of your application with the same framework * [experimental] [Android and iOS mobile support]( via [Appium]( * Visual Validation via the built-in [image comparison](#compare-image) capabilities * Cross platform [Desktop Automation](karate-robot) that can be [mixed into Web Automation flows]( if needed * Option to invoke via a [Java API](#java-api), which means that you can easily [mix Karate into Java projects or legacy UI-automation suites]( * [Save significant effort]( by re-using Karate test-suites as [Gatling performance tests](karate-gatling) that *deeply* assert that server responses are accurate under load * Gatling integration can hook into [*any* custom Java code]( - which means that you can perf-test even non-HTTP protocols such as [gRPC]( * [API mocks](karate-netty) or test-doubles that even [maintain CRUD 'state']( across multiple calls - enabling TDD for micro-services and [Consumer Driven Contracts]( * [Async](#async) support that allows you to seamlessly integrate the handling of custom events or listening to message-queues * Built-in [HTML templating]( so that you can extend your test-reports into readable specifications * Comprehensive support for different flavors of HTTP calls: * [SOAP](#soap-action) / XML requests * HTTPS / [SSL](#configure) - without needing certificates, key-stores or trust-stores * HTTP [proxy server](#configure) support * URL-encoded [HTML-form](#form-field) data * [Multi-part](#multipart-field) file-upload - including `multipart/mixed` and `multipart/related` * Browser-like [cookie](#cookie) handling * Full control over HTTP [headers](#header), [path](#path) and query [parameters](#param) * [Re-try](#retry-until) until condition * [Websocket]( [support](#async) ## Real World Examples A set of real-life examples can be found here: [Karate Demos](karate-demo) ## Comparison with REST-assured For teams familiar with or currently using [REST-assured]( this detailed comparison of [Karate vs REST-assured]( - can help you evaluate Karate. Do note that if you prefer a pure Java API - Karate has [that covered](#java-api), and with far more capabilities. ## References * [API Testing with Karate]( - video + demos by [Peter Thomas]( (creator / lead dev of Karate) * [Intro to all features of Karate]( - video + demos by [Peter Thomas]( (creator / lead dev of Karate) * [Karate entered the ThoughtWorks Tech Radar]( in 2019 and was [upgraded in ranking]( in May 2020 * [ with Karate]( - (*Microservices Test Automation with Karate*) presentation by [Takanori Suzuki]( * [Writing API Tests with Karate]( - book by [Benjamin Bischo... [TRUNCATED]","1.9k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, help wanted, fixed, enhancement, hacktoberfest, bug, codequality, wontfix, question, on-hold, java, invalid, github_actions, duplicate, documentation, dependencies"
xManager,Team-xManager/xManager,8550,['Java'],"['android', 'java']","### AD-FREE | NEW FEATURES | FREEDOM | **Status** | | | :-------------: | :-------------: | | **Download Milestone** | **** | | **Miscellaneous** | **** | | **Trust Seal** | **** | | **Donation/Sponsor** | **[]( | --- | **Key Features** | **Descriptions** | | ------------- | ------------- | | **All-in-One Place** | Upgrade or Downgrade Anytime & Anywhere | | **Manager Tools** | Uninstall, Open Settings, Clean Cached Data & Launch App | | **Experimentals** | Some A/B Features are Available to Use | | **Friendly Interface** | Neat & Slick Minimalist UI | | **Less Storage** | Lightweight Manager | | **Android** | Easy to Use | --- | **Key Details** | **More Informations** | | :-------------: | ------------- | | **How It Works** | Depending on what variant or version the user wants to install, the manager will directly fetch that selected url data. Once completed, the selected file can be installed. All links are available publicly.IF, you know what it means then you know what it is. | | **About The Project** | The successor from our previous manager app that was released way back in 2020 developed by xC3FFF0E and with the help of Sherlock Holmes.We decided to create an app where people can easily manage and install all versions of the music streaming app from their devices.We aim to make a simple yet useful manager app for everyone's convenience. On this second version of the manager app, we added a couple of features such as the ability to uninstall, open the app's settings directly, clear the offline cached data, and launch the app. We hope that all users find these newly added features very useful. | --- | **Databases** | **Shutdown Date** | **More Informations** | | :-------------: | :-------------: | ------------- | | **Legacy** | 04/01/22 | Legacy databases are now officially shut down. Update to the latest version of xManager (v3.2) to continue using the app. These are the databases used by our old manager up until xManager v1-v3.1.These databases are very old and deprecated at the same time. That is why we decided to take them down. | | **Origins** | 02/24/23 | Origins databases are now officially shut down. Update to the latest version of xManager (v4.5) to continue using the app.These are the databases used by our old manager up until xManager v3.4-v4.4. | --- | **For Contributors** | **More Informations** | | ------------- | ------------- | | **Code Change** | Pull request should be done on the **""Developer""** branch. | | **Translation Change/Update** | Pull request should be done on the **""Developer""** branch. The translations can be found at `resource/values/strings.xml`. | | **Submit Translations** | Pull request should be done on the **""Developer""** branch. Please follow the `<--DEFAULT LANGUAGE-->` format that can be found at `resource/values/strings.xml`. | --- | Important Notes | | ------------- | | xManager was created using [Sketchware Pro]( for Android. xManager uses [Sketch2Any]( to convert the project to Android Studio. **No trackers, no spyware, no keyloggers, or any other malicious codes** are added to the source code. What you see in the source code is what's inside the build app. You can extract the app for yourself. The source code that can be seen here is what's inside the exported zip file for Android Studio. There are some instances that the source code is unbuildable. Some parts might be missing and such due to limitations. Users might experience downtime and maintenance when using the manager app since we are manually changing the hosting links of each file from time to time. xManager is completely free and we do not get any commissions from it **(Rewarded Ads are optional and can be disabled in the settings)**. We will support the app as long as we can. Internal improvements may not be guaranteed. | --- | **The Team** | **Names/Alias** | | ------------- | ------------- | | **Developer** | xC3FFF0E | | **Manager Hosting Links** | jetfireWu Tang Clam | | **Contributors** | RishavGmeechjetfireSherlock HolmesWu Tang ClamZachaha100RABHjuznemLight YagamiTunelover (Mobilism Team)jar3cki (Manager Tester)slavrom21 (Monet Icon)cryiotic3 (Manager Icon)farish278 (Manager Icon)zankyr (Notification Fixed)Arian04 (Duplicate Attributes)roosphx (Login Fixed) | --- | **Manager Translators** | **Names/Alias** | | ------------- | ------------- | | **Arabic Translation** | Yazan Kasem \| lnfinitesimal | | **Bengali Translation** | 0V3R5!9H7 \| ssabit | | **Chinese - Simplified Translation** | Gent G \| Softland99 \| zelixdxin | | **French Translation** | The Punisher \| Luxchar \| xerta555 \| GlThibault | | **Greek Translation** | Walter's Cousin #CAF | | **Indonesian Translation** | Mc.J \| Deraidos \| RelvinArsenio | | **Italian Translation** | albertopasqualetto \| Marco \| gdonisi | | **Portuguese - Brazil Translation** | Loui's \| Zilberto Junior | | **Portuguese - Portugal Translation** | Androide323 | | **Romanian Translation** | NACH \| f9branza \| StephenTheMoldovan | | **Russian Translation** | Pegioner \| vanja-san | | **Slovenian Translation** | MysticX | | **Spanish - Spain Translation** | PetFix \| Snapdragon845GMS \| Zkyclad | | **Turkish Translation** | Berkay \| mikropsoft | | **Ukrainian Translation** | NIKITA[beryllium] #PocoForEver | | **Korean Translation** | Apious \| Annyeong-One | | **Dutch Translation** | Kevin | | **Vietnamese Translation** | minhtamvn \| tungnnnt17 | | **German Translation** | smokedzn | | **Persian Translation** | ohshahab | | **Hebrew Translation** | GreenArmy18 | | **Polish Translation** | dearminder | | **English Translation** | Dyras \| TheChilledBuffalo | | **Slovak Translation** | KaldonM | | **Swedish Translation** | rexobo | | **Finnish Translation** | AfraidOfTheBigBlack \| Lilko1ra \| KasperiP | | **Czech Translation** | rex2630 | | **Chinese (Traditional) Translation** | cracky5322 \| TragicLifeHu | | **Bulgarian Translation** | meorro \| martinov83 | | **Serbian (Cyrillic) Translation** | nexiRS | | **Serbian (Latin) Translation** | nexiRS | | **Catalan Translation** | tomaquet18 | | **Latvian Translation** | ClientSiderz \| gatesbydude | | **German Translation** | 4NDROM3DA | | **Sinhala Translation** | Psycho649 | | **Hungarian Translation** | gurtnyi | | **Japanese Translation** | reindex-ot | | **Nepali Translation** | iamkishansharma | | **Tamil Translation** | jothi-prasath | | **Thai Translation** | MaxNjtk | | **Marathi Translation** | 5eeTheaveragecoder | | **Malayalam Translation** | TheChilledBuffalo | | **Croatian Translation** | mrki1111 | | **Hindi Translation** | askadityapandey | ### THANKS TO ALL CONTRIBUTORS!","254, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
selenium,SeleniumHQ/selenium,29491,"['Java', 'C#', 'C++']","['selenium', 'webdriver', 'java', 'ruby', 'python']","# Selenium []( Selenium is an umbrella project encapsulating a variety of tools and libraries enabling web browser automation. Selenium specifically provides an infrastructure for the [W3C WebDriver specification]( a platform and language-neutral coding interface compatible with all major web browsers. The project is made possible by volunteer contributors who've generously donated thousands of hours in code development and upkeep. Selenium's source code is made available under the [Apache 2.0 license]( This README is for developers interested in contributing to the project. For people looking to get started using Selenium, please check out our [User Manual]( for detailed examples and descriptions, and if you get stuck, there are several ways to [Get Help]( ## Contributing Please read [CONTRIBUTING.md]( before submitting your pull requests. ## Installing These are the requirements to create your own local dev environment to contribute to Selenium. ### All Platforms * [Bazelisk]( a Bazel wrapper that automatically downloads the version of Bazel specified in `.bazelversion` file and transparently passes through all command-line arguments to the real Bazel binary. * Java JDK version 17 or greater (e.g., [Java 17 Temurin]( * Set `JAVA_HOME` environment variable to location of Java executable (the JDK not the JRE) * To test this, try running the command `javac`. This command won't exist if you only have the JRE installed. If you're met with a list of command-line options, you're referencing the JDK properly. ### MacOS * Xcode including the command-line tools. Install the latest version using: `xcode-select --install` * Rosetta for Apple Silicon Macs. Add `build --host_platform=//:rosetta` to the `.bazelrc.local` file. We are working to make sure this isn't required in the long run. ### Windows Several years ago [Jim Evans]( published a great article on [Setting Up a Windows Development Environment for the Selenium .NET Language Bindings]( This article is out of date, but it includes more detailed descriptions and screenshots that some people might find useful. Click to see Current Windows Setup Requirements #### Option 1: Automatic Installation from Scratch This script will ensure a complete ready to execute developer environment. (nothing is installed or set that is already present unless otherwise prompted) 1. Open Powershell as an Administrator 2. Execute: `Set-ExecutionPolicy Bypass -Scope Process -Force` to allow running the script in the process 3. Navigate to the directory you want to clone Selenium in, or the parent directory of an already cloned Selenium repo 4. Download and execute this script in the powershell terminal: [scripts/dev-environment-setup.ps1]` #### Option 2: Manual Installation 1. Allow running scripts in Selenium in general: ``` Set-ExecutionPolicy -ExecutionPolicy RemoteSigned ``` 2. Enable Developer Mode: ``` reg add ""HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock"" /t REG_DWORD /f /v ""AllowDevelopmentWithoutDevLicense"" /d ""1"" ``` 3. Install [MSYS2]( which is an alternative shell environment that provides Unix-like commands * Add bin directory to `PATH` environment variable (e.g., `""C:\tools\msys64\usr\bin""`) * Add `bash.exe` location as the `BAZEL_SH` environment variable (e.g., `""C:\tools\msys64\usr\bin\bash.exe""`) 4. Install the latest version of [Visual Studio Community]( * Use the visual studio installer to modify and add the ""Desktop development with C++"" Workload * Add Visual C++ build tools installation directory location to `BAZEL_VC` environment variable (e.g. `""C:\Program Files\Microsoft Visual Studio\2022\Community\VC""`) * Add Visual C++ Build tools version to `BAZEL_VC_FULL_VERSION` environment variable (this can be discovered from the directory name in `""$BAZEL_VC\Tools\MSVC\""`) 5. Add support for long file names (bazel has a lot of nested directories that can exceed default limits in Windows) * Enable Long Paths support with these 2 registry commands: ```shell reg add ""HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Command Processor"" /t REG_DWORD /f /v ""DisableUNCCheck"" /d ""1"" reg add ""HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem"" /t REG_DWORD /f /v ""LongPathsEnabled"" /d ""1"" ``` * Allow Bazel to create short name versions of long file paths: `fsutil 8dot3name set 0` * Set bazel output to `C:/tmp` instead of nested inside project directory: * Create a file `selenium/.bazelrc.windows.local` * Add ""startup --output_user_root=C:/tmp"" to the file ### Alternative Dev Environments If you want to contribute to the project, but do not want to set up your own local dev environment, there are two alternatives available. #### Using GitPod Rather than creating your own local dev environment, GitPod provides a ready to use environment for you. []( #### Using Dev Container As an alternative you can build a [Dev Container]( - basically a docker container - suitable for building and testing Selenium using the devcontainer.json in the [.devcontainer](.devcontainer/devcontainer.json) directory. Supporting IDEs like VS Code or IntelliJ IDEA should point you to how such a container can be created. #### Using Docker Image You can also build a Docker image suitable for building and testing Selenium using the Dockerfile in the [dev image](scripts/dev-image/Dockerfile) directory. ## Building Selenium is built using a common build tool called [Bazel]( to allow us to easily manage dependency downloads, generate required binaries, build and release packages, and execute tests; all in a fast, efficient manner. For a more detailed discussion, read Simon Stewart's article on [Building Selenium]( Often we wrap Bazel commands with our custom [Rake]( wrapper. These are run with the `./go` command. The common Bazel commands are: * `bazel build` evaluates dependencies, compiles source files and generates output files for the specified target. It's used to create executable binaries, libraries, or other artifacts. * `bazel run` builds the target and then executes it. It's typically used for targets that produce executable binaries. * `bazel test` builds and runs the target in a context with additional testing functionality * `bazel query` identifies available targets for the provided path. Each module that can be built is defined in a `BUILD.bazel` file. To execute the module you refer to it starting with a `//`, then include the relative path to the file that defines it, then `:`, then the name of the target. For example, the target to build the Grid is named `executable-grid` and it is defined in the `'selenium/java/src/org/openqa/selenium/grid/BAZEL.build'` file. So to build the grid you would run: `bazel build //java/src/org/openqa/selenium/grid:executable-grid`. The Bazel documentation has a [handy guide]( for various shortcuts and all the ways to build multiple targets, which Selenium makes frequent use of. To build everything for a given language: ```shell bazel build ///... ``` To build just the grid there is an alias name to use (the log will show where the output jar is located): ```sh bazel build grid ``` To make things more simple, building each of the bindings is available with this `./go` command ```shell ./go :build ``` ## Developing ### Java #### IntelliJ Most of the team uses Intellij for their day-to-day editing. If you're working in IntelliJ, then we highly recommend installing the [Bazel IJ plugin]( which is documented on [its own site]( To use Selenium with the IntelliJ Bazel plugin, import the repository as a Bazel project, and select the project view file from the [scripts](scripts) directory. `ij.bazelproject` for Mac/Linux and `ij-win.bazelproject` for Windows. #### Linting We also use Google Java Format for linting, so using the Google Java Formatter Plugin is useful; there are a few steps to get it working, so read their [configuration documentation]( There is also an auto-formatting script that can be run: `./scripts/format.sh` #### Local Installation While Selenium is not built with Maven, you can build and install the Selenium pieces for Maven to use locally by deploying to your local maven repository (`~/.m2/repository`), using: ```shell ./go java:install ``` #### Updating Dependencies Dependencies are defined in the file [maven_deps.bzl]( To automatically update and pin new dependencies, run: ```shell ./go java:update ``` ### Python You can run Python code locally by updating generated files in the python directory using: ```shell ./go py:update ``` To install Selenium locally based on a specific commit, you can use: ```shell ./go py:install ``` ### Ruby Instead of using `irb`, you can create an interactive REPL with all gems loaded using: `bazel run //rb:console` If you want to debug code, you can do it via [`debug`]( gem: 1. Add `binding.break` to the code where you want the debugger to start. 2. Run tests with `ruby_debug` configuration: `bazel test --config ruby_debug `. 3. When debugger starts, run the following in a separate terminal to connect to debugger: ```sh bazel-selenium/external/bundle/bin/rdbg -A ``` If you want to use [RubyMine]( for development, you can configure it use Bazel artifacts: 1. Open `rb/` as a main project directory. 2. Run `bundle exec rake update` as necessary to create up-to-date artifacts. If this does not work, run `./go rb:update` from the `selenium` (parent) directory. 3. In Settings / Languages & Frameworks / Ruby SDK and Gems add new Interpreter pointing to `../bazel-selenium/external/rules_ruby_dist/dist/bin/ruby`. 4. You should now be able to run and debug any spec. It uses Chrome by default, but you can alter it using environment variables secified in [Ruby Testing](#ruby-2) section below. ### Rust To keep `Carbo.Bazel.lock` synchronized with `Cargo.lock`, run: ```shell CARGO_BAZEL_REPIN=true bazel sync --only=crates ``` ## Testing There are a number of bazel configurations specific for testing. ### Common Options Examples Here are examples of arguments we make use of in testing the Selenium code: * `... [TRUNCATED]","8k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, I-enhancement, I-defect, help wanted, C-java, C-py, C-dotnet, needs-triaging, C-nodejs, C-grid, C-rb, A-needs decision, enhancement, C-devtools, Review effort [1-5]: 2, C-rust, I-logging, D-atoms, Bug fix, A-needs new owner, I-issue-template, C-build, Review effort [1-5]: 3, tests, support, R-awaiting answer, documentation, breaking change, Review effort [1-5]: 4, Review effort [1-5]: 1, R-blocked on external"
bitcoin-wallet,bitcoin-wallet/bitcoin-wallet,3585,['Java'],"['bitcoin', 'bitcoinj', 'bitcoin-wallet', 'android', 'java']","# BITCOIN WALLET Welcome to _Bitcoin Wallet_, a standalone Bitcoin payment app for your Android device! This project contains several sub-projects: * __wallet__: The Android app itself. This is probably what you're searching for. * __market__: App description and promo material for the Google Play app store. ### PREREQUISITES FOR BUILDING You'll need git, a Java 11 SDK and Gradle between 4.4 and 6.9.x for this. We'll assume Ubuntu 22.04 LTS (Jammy Jellyfish) for the package installs, which comes with OpenJDK 11 and Gradle 4.4.1 out of the box. # first time only sudo apt install git gradle openjdk-11-jdk Create a directory for the Android SDK (e.g. `android-sdk`) and point the `ANDROID_HOME` variable to it. Download the [Android SDK Tools]( and unpack it to `$ANDROID_HOME/`. Finally, the last preparative step is acquiring the source code. Again in your workspace, use: # first time only git clone -b main bitcoin-wallet cd bitcoin-wallet ### BUILDING You can build all sub-projects in all flavors at once using Gradle: # each time gradle clean build For details about building the wallet see the [specific README](wallet/README.md). ### REPRODUCIBLE BUILD Alternatively, you can build using buildah: # each time buildah build --cap-add sys_admin --device /dev/fuse --file build.Containerfile --output build/ . Access to FUSE and the SYS_ADMIN capability are needed for mounting disorderfs in order to sort the directory entries of the project folder. The unsigned APKs are written to the specified output directory.","2k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, enhancement, bug, question, duplicate, wontfix, invalid"
dolphinscheduler,apache/dolphinscheduler,12248,"['Java', 'TypeScript', 'PLpgSQL']","['workflow-schedule', 'azkaban', 'airflow', 'task-scheduler', 'job-scheduler']","# Apache Dolphinscheduler []( []( []( []( [](README_zh_CN.md) ## About Apache DolphinScheduler is the modern data orchestration platform. Agile to create high performance workflow with low-code. It is also provided powerful user interface, dedicated to solving complex task dependencies in the data pipeline and providing various types of jobs available **out of the box** The key features for DolphinScheduler are as follows: - Easy to deploy, provide four ways to deploy which including Standalone, Cluster, Docker and Kubernetes. - Easy to use, workflow can be created and managed by four ways, which including Web UI, [Python SDK]( Yaml file and Open API - Highly reliable and high availability, decentralized architecture with multi-master and multi-worker, native supports horizontal scaling. - High performance, its performance is N times faster than other orchestration platform and it can support tens of millions of tasks per day - Cloud Native, DolphinScheduler supports orchestrating multi-cloud/data center workflow, and supports custom task type - Versioning both workflow and workflow instance(including tasks) - Various state control of workflow and task, support pause/stop/recover them in any time - Multi-tenancy support - Others like backfill support(Web UI native), permission control including project, resource and data source ## QuickStart - For quick experience - Want to [start with standalone]( - Want to [start with Docker]( - For Kubernetes - [Start with Kubernetes]( - For Terraform - [Start with Terraform](deploy/terraform/README.md) ## User Interface Screenshots * **Homepage:** Project and workflow overview, including the latest workflow instance and task instance status statistics. * **Workflow Definition:** Create and manage workflow by drag and drop, easy to build and maintain complex workflow, support [bulk of tasks]( out of box. * **Workflow Tree View:** Abstract tree structure could clearer understanding of the relationship between tasks * **Data source:** Manage support multiple external data sources, provide unified data access capabilities for such as MySQL, PostgreSQL, Hive, Trino, etc. * **Monitor:** View the status of the master, worker and database in real time, including server resource usage and load, do quick health check without logging in to the server. ## Suggestions & Bug Reports Follow [this guide]( to report your suggestions or bugs. ## Contributing The community welcomes everyone to contribute, please refer to this page to find out more: [How to contribute](docs/docs/en/contribute/join/contribute.md), find the good first issue in [here]( if you are new to DolphinScheduler. ## Community Welcome to join the Apache DolphinScheduler community by: - Join the [DolphinScheduler Slack]( to keep in touch with the community - Follow the [DolphinScheduler Twitter]( and get the latest news - Subscribe DolphinScheduler mail list, [users@dolphinscheduler.apache.org](mailto:users-subscribe@dolphinscheduler.apache.org) for user and [dev@dolphinscheduler.apache.org](mailto:dev-subscribe@dolphinscheduler.apache.org) for developer # Landscapes DolphinScheduler enriches the CNCF CLOUD NATIVE Landscape.","4.5k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, feature, Waiting for reply, bug, backend, improvement, help wanted, discussion, UI, question, document, DSIP, good first issue, Python, good idea, priority:middle, first time contributor, enhancement, Waiting for user feedback, priority:high, Stale, need to verify, 3.2.2, plug-in, CI&CD, need more information, 3.2.0, security, priority:low, 3.2.1, e2e"
cryptomator,cryptomator/cryptomator,10760,"['Java', 'CSS', 'FreeMarker']","['cryptomator', 'java', 'cloud-storage', 'cryptography', 'crypto']","[]( []( []( []( []( []( []( []( ## Supporting Cryptomator Cryptomator is provided free of charge as an open-source project despite the high development effort and is therefore dependent on donations. If you are also interested in further development, we offer you the opportunity to support us: - [One-time or recurring donation via Cryptomator's website.]( - [Become a sponsor via Cryptomator's sponsors website.]( ### Gold Sponsors ### Silver Sponsors ### Special Shoutout Continuous integration hosting for ARM64 builds is provided by [MacStadium]( --- ## Introduction Cryptomator offers multi-platform transparent client-side encryption of your files in the cloud. Download native binaries of Cryptomator on [cryptomator.org]( or clone and build Cryptomator using Maven (instructions below). ## Features - Works with Dropbox, Google Drive, OneDrive, MEGA, pCloud, ownCloud, Nextcloud and any other cloud storage service which synchronizes with a local directory - Open Source means: No backdoors, control is better than trust - Client-side: No accounts, no data shared with any online service - Totally transparent: Just work on the virtual drive as if it were a USB flash drive - AES encryption with 256-bit key length - File names get encrypted - Folder structure gets obfuscated - Use as many vaults in your Dropbox as you want, each having individual passwords - Four thousand commits for the security of your data!! :tada: ### Privacy - 256-bit keys (unlimited strength policy bundled with native binaries) - Scrypt key derivation - Cryptographically secure random numbers for salts, IVs and the masterkey of course - Sensitive data is wiped from the heap asap - Lightweight: [Complexity kills security]( ### Consistency - Authenticated encryption is used for file content to recognize changed ciphertext before decryption - I/O operations are transactional and atomic, if the filesystems support it - Each file contains all information needed for decryption (except for the key of course), no common metadata means no [SPOF]( ### Security Architecture For more information on the security details visit [cryptomator.org]( ## Building ### Dependencies * JDK 21 (e.g. temurin, zulu) * Maven 3 ### Run Maven ``` mvn clean install # or mvn clean install -Pwin # or mvn clean install -Pmac # or mvn clean install -Plinux ``` This will build all the jars and bundle them together with their OS-specific dependencies under `target`. This can now be used to build native packages. ## License This project is dual-licensed under the GPLv3 for FOSS projects as well as a commercial license for independent software vendors and resellers. If you want to modify this application under different conditions, feel free to contact our support team.","953, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, type:feature-request, type:bug, os:mac, os:windows, misc:gui, mount:fuse, state:has-workaround, type:upstream-bug, os:linux, good first issue, state:stale, type:minor-bug, type:enhancement, state:blocked, mount:webdav, state:confirmed, misc:filesystem, misc:installer, type:dev-task, java, dependencies, keep, storage:webdav, storage:icloud-drive, storage:dropbox, state:to-be-confirmed, misc:integration, misc:help-wanted, misc:discussion, misc:arch:arm64"
hbase,apache/hbase,5130,"['Java', 'Ruby', 'Perl']","['database', 'java', 'hbase']","[Apache HBase]( is an open-source, distributed, versioned, column-oriented store modeled after Google' [Bigtable]( A Distributed Storage System for Structured Data by Chang et al. Just as Bigtable leverages the distributed data storage provided by the Google File System, HBase provides Bigtable-like capabilities on top of [Apache Hadoop]( # Getting Start To get started using HBase, the full documentation for this release can be found under the doc/ directory that accompanies this README. Using a browser, open the docs/index.html to view the project home page (or browse The hbase '[book]( has a 'quick start' section and is where you should being your exploration of the hbase project. The latest HBase can be downloaded from the [download page]( We use mailing lists to send notice and discuss. The mailing lists and archives are listed [here]( # How to Contribute The source code can be found at The HBase issue tracker is at Notice that, the public registration for has been disabled due to spam. If you want to contribute to HBase, please visit the [Request a jira account]( page to submit your request. Please make sure to select **hbase** as the '_ASF project you want to file a ticket_' so we can receive your request and process it. > **_NOTE:_** we need to process the requests manually so it may take sometime, for example, up to a week, for us to respond to your request. # About Apache HBase is made available under the [Apache License, version 2.0]( The HBase distribution includes cryptographic software. See the export control notice [here](","3.3k, Code, Pull requests, Actions, Security, Insights, backport, feature, enhancement, wontfix, question, python, java, invalid, help wanted, duplicate, dependencies, bug"
seatunnel,apache/seatunnel,7471,"['Java', 'Shell', 'Batchfile']","['data-integration', 'high-performance', 'offline', 'real-time', 'apache']","# Apache SeaTunnel []( []( []( ## Table of Contents - [Overview](#overview) - [Why Choose SeaTunnel](#why-choose-seatunnel) - [Key Features](#key-features) - [SeaTunnel Workflow](#seatunnel-workflow) - [Supported Connectors](#supported-connectors) - [Getting Started](#getting-started) - [Use Cases](#use-cases) - [Code of Conduct](#code-of-conduct) - [Contributors](#contributors) - [How to Compile](#how-to-compile) - [Contact Us](#contact-us) - [Landscapes](#landscapes) - [Apache SeaTunnel Web Project](#apache-seaTunnel-web-project) - [Our Users](#our-users) - [License](#license) - [Frequently Asked Questions](#frequently-asked-questions) ## Overview SeaTunnel is a next-generation, high-performance, distributed data integration tool, capable of synchronizing vast amounts of data daily. It's trusted by numerous companies for its efficiency and stability. ## Why Choose SeaTunnel SeaTunnel addresses common data integration challenges: - **Diverse Data Sources**: Seamlessly integrates with hundreds of evolving data sources. - **Complex Synchronization Scenarios**: Supports various synchronization methods, including real-time, CDC, and full database synchronization. - **Resource Efficiency**: Minimizes computing resources and JDBC connections for real-time synchronization. - **Quality and Monitoring**: Provides data quality and monitoring to prevent data loss or duplication. ## Key Features - **Diverse Connectors**: Offers support for over 100 connectors, with ongoing expansion. - **Batch-Stream Integration**: Easily adaptable connectors simplify data integration management. - **Distributed Snapshot Algorithm**: Ensures data consistency across synchronized data. - **Multi-Engine Support**: Works with SeaTunnel Zeta Engine, Flink, and Spark. - **JDBC Multiplexing and Log Parsing**: Efficiently synchronizes multi-tables and databases. - **High Throughput and Low Latency**: Provides high-throughput data synchronization with low latency. - **Real-Time Monitoring**: Offers detailed insights during synchronization. - **Two Job Development Methods**: Supports coding and visual job management with the [SeaTunnel web project]( ## SeaTunnel Workflow Configure jobs, select execution engines, and parallelize data using Source Connectors. Easily develop and extend connectors to meet your needs. ## Supported Connectors - [Source Connectors]( - [Sink Connectors]( - [Transform Connectors](docs/en/transform-v2) For a list of connectors and their health status, visit the [Connector Status](docs/en/Connector-v2-release-state.md). ## Getting Started Download SeaTunnel from the [official website]( Choose your runtime execution engine: - [SeaTunnel Zeta Engine]( - [Spark]( - [Flink]( ## Use Cases Explore real-world use cases of SeaTunnel, such as Weibo, Tencent Cloud, Sina, Sogou, and Yonghui Superstores. More use cases can be found on the [SeaTunnel blog]( ## Code of Conduct Participate in this project following the Contributor Covenant [Code of Conduct]( ## Contributors We appreciate all developers for their contributions. See the [list of contributors]( ## How to Compile Refer to this [document](docs/en/contribution/setup.md) for compilation instructions. ## Contact Us - Mail list: **dev@seatunnel.apache.org**. Subscribe by sending an email to `dev-subscribe@seatunnel.apache.org`. - Slack: [Join SeaTunnel Slack]( - Twitter: [ASFSeaTunnel on Twitter]( ## Landscapes SeaTunnel enriches the [CNCF CLOUD NATIVE Landscape]( ## Apache SeaTunnel Web Project SeaTunnel Web is a web project that provides visual management of jobs, scheduling, running and monitoring capabilities. It is developed based on the SeaTunnel Connector API and the SeaTunnel Zeta Engine. It is a web project that can be deployed independently. It is also a sub-project of SeaTunnel. For more information, please refer to [SeaTunnel Web]( ## Our Users Companies and organizations worldwide use SeaTunnel for research, production, and commercial products. Visit our [user page]( for more information. ## License [Apache 2.0 License](LICENSE) ## Frequently Asked Questions ### 1. How do I install SeaTunnel? Follow the [installation guide]( on our website to get started. ### 2. How can I contribute to SeaTunnel? We welcome contributions! Please refer to our [Contribution Guidelines]( for details. ### 3. How do I report issues or request features? You can report issues or request features on our [GitHub repository]( ### 4. Can I use SeaTunnel for commercial purposes? Yes, SeaTunnel is available under the Apache 2.0 License, allowing commercial use. ### 5. Where can I find documentation and tutorials? Our [official documentation]( includes detailed guides and tutorials to help you get started. ### 7. Is there a community or support channel? Join our Slack community for support and discussions: [SeaTunnel Slack](","1.6k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, bug, stale, help wanted, feature, discuss, waiting for review, connectors-v1, improve, connectors-v2, First-time contributor, good first issue, document, reviewed, core, Zeta, Waiting for code update, volunteer wanted, need add test case, Waiting for users feedback, Spark, no update, 1.X, jdbc, cdc, Usage Error, web, need more information, docker&k8s, dependencies, clickhouse"
Telegram-FOSS,Telegram-FOSS-Team/Telegram-FOSS,2698,"['Java', 'C++', 'C']",[],"[]( []( []( or `1P8kNcifVAkBWtWmjKY4RvVLy5QwruE2LQ` # Telegram-FOSS [Telegram]( is a messaging app with a focus on speed and security. Its superfast, simple and free. This is an unofficial, FOSS-friendly fork of the original [Telegram App for Android]( This version of Telegram is available on FDroid: []( ## Current Maintainers - [thermatk]( - you? :) ## Contributors - [slp]( - [Bubu]( - [Sudokamikaze]( - [l2dy]( - [maximgrafin]( - [vn971]( - [theel0ja]( - [AnXh3L0]( - [noplanman]( - [vk496]( - [verdulo]( - [anupritaisno1]( - [nekohasekai]( - [kdrag0n]( - [terachad]( - [ppnplus]( - [luvletter2333]( - [23rd]( - [proletarius101]( - [CWJamieson]( - [verdulo]( - [tehcneko]( ## Discussion Join the [Telegram-FOSS Offtopics group]( You can also join `#telegram-foss:matrix.org` via [matrix]( or `#telegram-foss` on freenode. ## Changes: *Replacement of non-FOSS, untrustworthy or suspicious binaries or source code:* - Do location sharing with OpenStreetMap(osmdroid) instead of Google Maps - Use Noto emoji set instead of Apple's emoji - Google Play Services GCM replaced with Telegram's push service - [Has to show a notification on Oreo+, ask Google](Notifications.md) - **SECURITY:** BoringSSL prebuilts are replaced with recent upstream source code built at compile time - **SECURITY:** FFmpeg prebuilts are replaced with recent upstream source code built at compile time - **SECURITY:** libvpx prebuilts are replaced with recent upstream source code built at compile time - **SECURITY:** Bundled libWebP is updated *Removal of non-FOSS, untrustworthy or suspicious binaries or source code and their functionality:* - Google Vision face detection and barcode scanning (Passport) - Google Wallet and Android Pay integration - Google Voice integration - HockeyApp crash reporting and self-updates - Google SMS retrieval - Google ML Kit *Other:* - Added the ability to parse locations from intents containing a `geo:,,` string - Force static map previews from Telegram - No content restrictions ## Versioning This repository contains tags to make tracking versions easier. Versions are in form ""v$UPSTREAM$RELEASE"" where: * $UPSTREAM is the public, visible version of upstream. * $RELEASE is a letter ([a-z]) indicating minor releases between official versions (sometimes, upstream is updated without relating the changes to an specific version). ## API, Protocol documentation Telegram API manuals: MTproto protocol manuals: ## Building **NOTE: Building on Windows is, unfortunately, not supported. Consider using a Linux VM or dual booting.** **Important:** 1. You need the Android NDK, Go(Golang) and [Ninja]( to build the apk. 2. Don't forget to include the submodules when you clone: - `git clone --recursive 3. Build native FFmpeg and BoringSSL dependencies: - Go to the `TMessagesProj/jni` folder and execute the following (define the paths to your NDK and Ninja): ``` export NDK=[PATH_TO_NDK] export NINJA_PATH=[PATH_TO_NINJA] ./build_libvpx_clang.sh ./build_ffmpeg_clang.sh ./patch_ffmpeg.sh ./patch_boringssl.sh ./build_boringssl.sh ``` 4. If you want to publish a modified version of Telegram: - You should get **your own API key** here: and create a file called `API_KEYS` in the source root directory. The contents should look like this: ``` APP_ID = 12345 APP_HASH = aaaaaaaabbbbbbccccccfffffff001122 ``` - Do not use the name Telegram and the standard logo (white paper plane in a blue circle) for your app or make sure your users understand that it is unofficial - Take good care of your users' data and privacy - **Please remember to publish your code too in order to comply with the licenses** The project can be built with Android Studio or from the command line with gradle: `./gradlew assembleAfatRelease` # DIGITAL RESISTANCE","358, Code, Issues, Pull requests, Actions, Security, Insights, upstream-bug, discussion, bug, needinfo, help, feature, wontfix, upstream-source-please, regression, enhancement, question, invalid, duplicate"
VulkanMod,xCollateral/VulkanMod,1382,"['Java', 'GLSL']","['minecraft', 'vulkan', 'minecraft-mod', 'vulkan-renderer']","# VulkanMod This is a fabric mod that introduces a brand new **Vulkan** based voxel rendering engine to **Minecraft java** in order to both replace the default OpenGL renderer and bring performance improvements. ### Why? - Highly experimental project that overhauls and modernizes the internal renderer for Minecraft. - Updates the renderer from OpenGL 3.2 to Vulkan 1.2. - Provides a potential reference for a future-proof Vulkan codebase for Minecraft Java. - Utilizes the VulkanAPI to allow for capabilities not always possible with OpenGL. - Including reduced CPU Overhead and use of newer, modern hardware capabilities. ### Demonstration Video: []( ## FAQ - Remember to check the [Wiki]( we wrote before asking for support! ## Installation ### Download Links: - []( - []( - []( ### Install guide: >1) Install the [fabric modloader]( >1) Download and put the `Vulkanmod.jar` file into `.minecraft/mods` >1) Enjoy ! ## Useful links Discord server Ko-Fi ## Features ### Optimizations: >- [x] Multiple chunk culling algorithms >- [x] Reduced CPU overhead >- [x] Improved GPU performance >- [x] Indirect Draw mode (reduces CPU overhead) >- [x] Chunk rendering optimizations ### New changes: >- [x] Native Wayland support >- [x] GPU selector >- [x] Windowed fullscreen mode >- [x] Revamped graphic settings menu >- [x] Resizable render frame queue >- [ ] Shader support >- [ ] Removed Herobrine ## Notes - This mod is still in development, please report issues in the [issue tab]( with logs attached! - This mode isn't just ""minecraft on vulkan"" (e.g: [zink]( ), it is a full rewrite of the minecraft renderer.","155, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, bug, compatibility, enhancement, duplicate, wontfix, question, invalid, high priority, help wanted, good first issue, documentation, crash"
DependencyCheck,jeremylong/DependencyCheck,5946,"['Java', 'JavaScript', 'CMake']","['security-audit', 'build-tool', 'maven-plugin', 'jenkins-plugin', 'gradle-plugin']","[]( []( []( []( []( []( []( []( []( []( # Dependency-Check Dependency-Check is a Software Composition Analysis (SCA) tool that attempts to detect publicly disclosed vulnerabilities contained within a project's dependencies. It does this by determining if there is a Common Platform Enumeration (CPE) identifier for a given dependency. If found, it will generate a report linking to the associated CVE entries. Documentation and links to production binary releases can be found on the [github pages]( Additionally, more information about the architecture and ways to extend dependency-check can be found on the [wiki]. ## 9.0.0 Upgrade Notice **Upgrading to 9.0.0 or later is mandatory**; previous versions of dependency-check utilize the NVD data feeds which will be deprecated on Dec 15th, 2023. Versions earlier then 9.0.0 are no longer supported and could fail to work after Dec 15th, 2023. ### NVD API Key Highly Recommended With 9.0.0 dependency-check has moved from using the NVD data-feed to the NVD API. Users of dependency-check are **highly** encouraged to obtain an NVD API Key; see Without an NVD API Key dependency-check's updates will be **extremely slow**. Please see the documentation for the cli, maven, gradle, or ant integrations on how to set the NVD API key. #### The NVD API Key, CI, and Rate Limiting The NVD API has enforced rate limits. If you are using a single API KEY and multiple builds occur you could hit the rate limit and receive 403 errors. In a CI environment one must use a caching strategy. ### Breaking Changes 9.0.0 contains breaking changes which requires updates to the database. If using an externally hosted database the schema will need to be updated. When using the embedded H2 database, the schema should be upgraded automatically. However, if issues arise you may need to purge the database: - gradle: `./gradlew dependencyCheckPurge` - maven: `mvn org.owasp:dependency-check-maven:9.0.0:purge` - cli: `dependency-check.sh --purge` #### Gradle build Environment With 9.0.0 users may encounter issues with `NoSuchMethodError` exceptions due to dependency resolution. If you encounter this issue you will need to pin some of the transitive dependencies of dependency-check to specific versions. For example: /buildSrc/build.gradle ```groovy dependencies { constraints { // org.owasp.dependencycheck needs at least this version of jackson. Other plugins pull in older versions.. add(""implementation"", ""com.fasterxml.jackson:jackson-bom:2.16.1"") // org.owasp.dependencycheck needs these versions. Other plugins pull in older versions.. add(""implementation"", ""org.apache.commons:commons-lang3:3.14.0"") add(""implementation"", ""org.apache.commons:commons-text:1.11.0"") } } ``` ## Requirements ### Java Version Minimum Java Version: Java 8 update 251 While dependency-check 9.0.0 and higher will still run on Java 8 - the update version must be higher then 251. ### Internet Access OWASP dependency-check requires access to several externally hosted resources. For more information see [Internet Access Required]( ### Build Tools In order to analyze some technology stacks dependency-check may require other development tools to be installed. Some of the analysis listed below may be experimental and require the experimental analyzers to be enabled. 1. To analyze .NET Assemblies the dotnet 6 run time or SDK must be installed. - Assemblies targeting other run times can be analyzed - but 6 is required to run the analysis. 2. If analyzing GoLang projects `go` must be installed. 3. The analysis of `Elixir` projects requires `mix_audit`. 4. The analysis of `npm`, `pnpm`, and `yarn` projects requires `npm`, `pnpm`, or `yarn` to be installed. - The analysis performed utilize the respective `audit` feature of each. 5. The analysis of Ruby is a wrapper around `bundle-audit`, which must be installed. ## Current Releases ### Jenkins Plugin For instructions on the use of the Jenkins plugin please see the [OWASP Dependency-Check Plugin page]( ### Command Line More detailed instructions can be found on the [dependency-check github pages]( The latest CLI can be downloaded from github in the [releases section]( Downloading the latest release: ``` $ VERSION=$(curl -s $ curl -Ls "" --output dependency-check.zip ``` On *nix ``` $ ./bin/dependency-check.sh -h $ ./bin/dependency-check.sh --out . --scan [path to jar files to be scanned] ``` On Windows ``` > .\bin\dependency-check.bat -h > .\bin\dependency-check.bat --out . --scan [path to jar files to be scanned] ``` On Mac with [Homebrew]( Note - homebrew users upgrading from 5.x to 6.0.0 will need to run `dependency-check.sh --purge`. ``` $ brew update && brew install dependency-check $ dependency-check -h $ dependency-check --out . --scan [path to jar files to be scanned] ``` ### Maven Plugin More detailed instructions can be found on the [dependency-check-maven github pages]( By default, the plugin is tied to the `verify` phase (i.e. `mvn verify`). Alternatively, one can directly invoke the plugin via `mvn org.owasp:dependency-check-maven:check`. The dependency-check plugin can be configured using the following: ```xml ... org.owasp dependency-check-maven check ... ... ... ``` ### Gradle Plugin For instructions on the use of the Gradle Plugin, please see the [dependency-check-gradle github page]( ### Ant Task For instructions on the use of the Ant Task, please see the [dependency-check-ant github page]( ## Development Prerequisites For installation to pass, you must have the following components installed: * Java: `java -version` 1.8 * Maven: `mvn -version` 3.5.0 and higher Tests cases require: * dotnet core version 6.0 * Go: `go version` 1.12 and higher * Ruby [bundler-audit]( * [Yarn]( * [pnpm]( ## Development Usage The following instructions outline how to compile and use the current snapshot. While every intention is to maintain a stable snapshot it is recommended that the release versions listed above be used. The repository has some large files due to test resources. The team has tried to clean up the history as much as possible. However, it is recommended that you perform a shallow clone to save yourself time: ```bash git clone --depth 1 ``` On *nix ``` $ mvn -s settings.xml install $ ./cli/target/release/bin/dependency-check.sh -h $ ./cli/target/release/bin/dependency-check.sh --out . --scan ./src/test/resources ``` On Windows ``` > mvn -s settings.xml install > .\cli\target\release\bin\dependency-check.bat -h > .\cli\target\release\bin\dependency-check.bat --out . --scan ./src/test/resources ``` Then load the resulting 'dependency-check-report.html' into your favorite browser. #### Building without running tests To speed up your turnaround cycle times, you can also compile without running the tests each time: `mvn -s settings.xml install -DskipTests=true` Please remember to at least run the tests once before opening the PR. :) ### IntelliJ Idea To be able to debug your tests in IntelliJ Idea, you can introduce a maven configuration that executes your test and enables debugging with breakpoints etc. Basically, you do whats described in and set the `forkCount` to 0, otherwise debugging wont work. Step by step: - `Run -> Edit Configurations` - `+ (Add new configuration) -> Maven` - Give the Configuration a name, e.g. `Run tests` - Choose working directory, e.g. `core` - In `command line`, enter `-DforkCount=0 -f pom.xml -s ../settings.xml test` - Press `OK` - `Run -> Debug`, then choose the newly created run configuration IntelliJ will now execute the test run for the `core` subproject with enabled debugging. Breakpoints set anywhere in code should work. #### Only test one function or one class If you would like to speed up your turnaround cycle times, you can also just test one function or one test class. This works by adding `-Dtest=MyTestClass` or `-Dtest=MyTestClass#myTestFunction` to the run configuration. The complete command line in the run configuration then would be: `-Dtest=MyTestClass#myTestFunction -DforkCount=0 -f pom.xml -s ../settings.xml test` ### Docker In the following example it is assumed that the source to be checked is in the current working directory and the reports will be written to `$(pwd)/odc-reports`. Persistent data and cache directories are used, allowing you to destroy the container after running. For Linux: ```sh #!/bin/sh DC_VERSION=""latest"" DC_DIRECTORY=$HOME/OWASP-Dependency-Check DC_PROJECT=""dependency-check scan: $(pwd)"" DATA_DIRECTORY=""$DC_DIRECTORY/data"" CACHE_DIRECTORY=""$DC_DIRECTORY/data/cache"" if [ ! -d ""$DATA_DIRECTORY"" ]; then echo ""Initially creating persistent directory: $DATA_DIRECTORY"" mkdir -p ""$DATA_DIRECTORY"" fi if [ ! -d ""$CACHE_DIRECTORY"" ]; then echo ""Initially creating persistent directory: $CACHE_DIRECTORY"" mkdir -p ""$CACHE_DIRECTORY"" fi # Make sure we are using the latest version docker pull owasp/dependency-check:$DC_VERSION docker run --rm \ -e user=$USER \ -u $(id -u ${USER}):$(id -g ${USER}) \ --volume $(pwd):/src:z \ --volume ""$DATA_DIRECTORY"":/usr/share/dependency-check/data:z \ --volume $(pwd)/odc-reports:/report:z \ owasp/dependency-check:$DC_VERSION \ --scan /src \ --format ""ALL"" \ --project ""$DC_PROJECT"" \ --out /report # Use suppression like this: (where /src == $pwd) # --suppression ""/src/security/dependency-check-suppression.xml"" ``` For Windows: ```bat @echo off set DC_VERSION=""latest"" set DC_DIRECTORY=%USERPROFILE%\OWASP-Dependency-Check SET DC_PROJECT=""dependency-check scan: %CD%"" set DATA_DIRECTORY=""%DC_DIRECTORY%\data"" set CACHE_DIRECTORY=""%DC_DIRECTORY%\data\cache"" IF NOT EXIST %DATA_DIRECTORY% ( echo Initially creating persistent directory: %DATA_DIRECTORY% mkdir %DATA_DIRECTORY% ) IF NOT EXIST %CACHE_DIRECTORY% ( echo Initially creating persistent directory: %CACHE_DIRECTORY% mkdir %CACHE_DIRECTORY% ) rem Make sure we are using the latest version docker pull owasp/dependency-check:%DC_VERSION% docker run --rm ^ --volume %CD%:/src ^ --volume %DATA_DIRECTORY%:/usr/share/dependency-check/data ^ --volume %CD%/odc-report... [TRUNCATED]","1.2k, Code, Issues, Pull requests, Actions, Wiki, Security, Insights, question, enhancement, bug, FP Report, maven, pending more information, ossindex, dependencies, jenkins, java, dotnet, unreproducible, duplicate, central, won't fix, nvd, tests, npm, github_actions, experimental, documentation, docker, core, utils, security, pending release, incompatible, help wanted, cli, ant"
javascript-algorithms,trekhleb/javascript-algorithms,183993,"['JavaScript', 'Shell']","['javascript', 'algorithms', 'algorithm', 'javascript-algorithms', 'computer-science']","# JavaScript Algorithms and Data Structures > UKRAINE [IS BEING ATTACKED]( BY RUSSIAN ARMY. CIVILIANS ARE GETTING KILLED. RESIDENTIAL AREAS ARE GETTING BOMBED. > - Help Ukraine via: > - [Serhiy Prytula Charity Foundation]( > - [Come Back Alive Charity Foundation]( > - [National Bank of Ukraine]( > - More info on [war.ukraine.ua]( and [MFA of Ukraine]( []( []( This repository contains JavaScript based examples of many popular algorithms and data structures. Each algorithm and data structure has its own separate README with related explanations and links for further reading (including ones to YouTube videos). _Read this in other languages:_ [__](README.zh-CN.md), [__](README.zh-TW.md), [__](README.ko-KR.md), [__](README.ja-JP.md), [_Polski_](README.pl-PL.md), [_Franais_](README.fr-FR.md), [_Espaol_](README.es-ES.md), [_Portugus_](README.pt-BR.md), [__](README.ru-RU.md), [_Trke_](README.tr-TR.md), [_Italiana_](README.it-IT.md), [_Bahasa Indonesia_](README.id-ID.md), [__](README.uk-UA.md), [_Arabic_](README.ar-AR.md), [_Ting Vit_](README.vi-VN.md), [_Deutsch_](README.de-DE.md) * Note that this project is meant to be used for learning and researching purposes only, and it is **not** meant to be used for production.* ## Data Structures A data structure is a particular way of organizing and storing data in a computer so that it can be accessed and modified efficiently. More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data. `B` - Beginner, `A` - Advanced * `B` [Linked List](src/data-structures/linked-list) * `B` [Doubly Linked List](src/data-structures/doubly-linked-list) * `B` [Queue](src/data-structures/queue) * `B` [Stack](src/data-structures/stack) * `B` [Hash Table](src/data-structures/hash-table) * `B` [Heap](src/data-structures/heap) - max and min heap versions * `B` [Priority Queue](src/data-structures/priority-queue) * `A` [Trie](src/data-structures/trie) * `A` [Tree](src/data-structures/tree) * `A` [Binary Search Tree](src/data-structures/tree/binary-search-tree) * `A` [AVL Tree](src/data-structures/tree/avl-tree) * `A` [Red-Black Tree](src/data-structures/tree/red-black-tree) * `A` [Segment Tree](src/data-structures/tree/segment-tree) - with min/max/sum range queries examples * `A` [Fenwick Tree](src/data-structures/tree/fenwick-tree) (Binary Indexed Tree) * `A` [Graph](src/data-structures/graph) (both directed and undirected) * `A` [Disjoint Set](src/data-structures/disjoint-set) - a unionfind data structure or mergefind set * `A` [Bloom Filter](src/data-structures/bloom-filter) * `A` [LRU Cache](src/data-structures/lru-cache/) - Least Recently Used (LRU) cache ## Algorithms An algorithm is an unambiguous specification of how to solve a class of problems. It is a set of rules that precisely define a sequence of operations. `B` - Beginner, `A` - Advanced ### Algorithms by Topic * **Math** * `B` [Bit Manipulation](src/algorithms/math/bits) - set/get/update/clear bits, multiplication/division by two, make negative etc. * `B` [Binary Floating Point](src/algorithms/math/binary-floating-point) - binary representation of the floating-point numbers. * `B` [Factorial](src/algorithms/math/factorial) * `B` [Fibonacci Number](src/algorithms/math/fibonacci) - classic and closed-form versions * `B` [Prime Factors](src/algorithms/math/prime-factors) - finding prime factors and counting them using Hardy-Ramanujan's theorem * `B` [Primality Test](src/algorithms/math/primality-test) (trial division method) * `B` [Euclidean Algorithm](src/algorithms/math/euclidean-algorithm) - calculate the Greatest Common Divisor (GCD) * `B` [Least Common Multiple](src/algorithms/math/least-common-multiple) (LCM) * `B` [Sieve of Eratosthenes](src/algorithms/math/sieve-of-eratosthenes) - finding all prime numbers up to any given limit * `B` [Is Power of Two](src/algorithms/math/is-power-of-two) - check if the number is power of two (naive and bitwise algorithms) * `B` [Pascal's Triangle](src/algorithms/math/pascal-triangle) * `B` [Complex Number](src/algorithms/math/complex-number) - complex numbers and basic operations with them * `B` [Radian & Degree](src/algorithms/math/radian) - radians to degree and backwards conversion * `B` [Fast Powering](src/algorithms/math/fast-powering) * `B` [Horner's method](src/algorithms/math/horner-method) - polynomial evaluation * `B` [Matrices](src/algorithms/math/matrix) - matrices and basic matrix operations (multiplication, transposition, etc.) * `B` [Euclidean Distance](src/algorithms/math/euclidean-distance) - distance between two points/vectors/matrices * `A` [Integer Partition](src/algorithms/math/integer-partition) * `A` [Square Root](src/algorithms/math/square-root) - Newton's method * `A` [Liu Hui Algorithm](src/algorithms/math/liu-hui) - approximate calculations based on N-gons * `A` [Discrete Fourier Transform](src/algorithms/math/fourier-transform) - decompose a function of time (a signal) into the frequencies that make it up * **Sets** * `B` [Cartesian Product](src/algorithms/sets/cartesian-product) - product of multiple sets * `B` [FisherYates Shuffle](src/algorithms/sets/fisher-yates) - random permutation of a finite sequence * `A` [Power Set](src/algorithms/sets/power-set) - all subsets of a set (bitwise, backtracking, and cascading solutions) * `A` [Permutations](src/algorithms/sets/permutations) (with and without repetitions) * `A` [Combinations](src/algorithms/sets/combinations) (with and without repetitions) * `A` [Longest Common Subsequence](src/algorithms/sets/longest-common-subsequence) (LCS) * `A` [Longest Increasing Subsequence](src/algorithms/sets/longest-increasing-subsequence) * `A` [Shortest Common Supersequence](src/algorithms/sets/shortest-common-supersequence) (SCS) * `A` [Knapsack Problem](src/algorithms/sets/knapsack-problem) - ""0/1"" and ""Unbound"" ones * `A` [Maximum Subarray](src/algorithms/sets/maximum-subarray) - ""Brute Force"" and ""Dynamic Programming"" (Kadane's) versions * `A` [Combination Sum](src/algorithms/sets/combination-sum) - find all combinations that form specific sum * **Strings** * `B` [Hamming Distance](src/algorithms/string/hamming-distance) - number of positions at which the symbols are different * `B` [Palindrome](src/algorithms/string/palindrome) - check if the string is the same in reverse * `A` [Levenshtein Distance](src/algorithms/string/levenshtein-distance) - minimum edit distance between two sequences * `A` [KnuthMorrisPratt Algorithm](src/algorithms/string/knuth-morris-pratt) (KMP Algorithm) - substring search (pattern matching) * `A` [Z Algorithm](src/algorithms/string/z-algorithm) - substring search (pattern matching) * `A` [Rabin Karp Algorithm](src/algorithms/string/rabin-karp) - substring search * `A` [Longest Common Substring](src/algorithms/string/longest-common-substring) * `A` [Regular Expression Matching](src/algorithms/string/regular-expression-matching) * **Searches** * `B` [Linear Search](src/algorithms/search/linear-search) * `B` [Jump Search](src/algorithms/search/jump-search) (or Block Search) - search in sorted array * `B` [Binary Search](src/algorithms/search/binary-search) - search in sorted array * `B` [Interpolation Search](src/algorithms/search/interpolation-search) - search in uniformly distributed sorted array * **Sorting** * `B` [Bubble Sort](src/algorithms/sorting/bubble-sort) * `B` [Selection Sort](src/algorithms/sorting/selection-sort) * `B` [Insertion Sort](src/algorithms/sorting/insertion-sort) * `B` [Heap Sort](src/algorithms/sorting/heap-sort) * `B` [Merge Sort](src/algorithms/sorting/merge-sort) * `B` [Quicksort](src/algorithms/sorting/quick-sort) - in-place and non-in-place implementations * `B` [Shellsort](src/algorithms/sorting/shell-sort) * `B` [Counting Sort](src/algorithms/sorting/counting-sort) * `B` [Radix Sort](src/algorithms/sorting/radix-sort) * `B` [Bucket Sort](src/algorithms/sorting/bucket-sort) * **Linked Lists** * `B` [Straight Traversal](src/algorithms/linked-list/traversal) * `B` [Reverse Traversal](src/algorithms/linked-list/reverse-traversal) * **Trees** * `B` [Depth-First Search](src/algorithms/tree/depth-first-search) (DFS) * `B` [Breadth-First Search](src/algorithms/tree/breadth-first-search) (BFS) * **Graphs** * `B` [Depth-First Search](src/algorithms/graph/depth-first-search) (DFS) * `B` [Breadth-First Search](src/algorithms/graph/breadth-first-search) (BFS) * `B` [Kruskals Algorithm](src/algorithms/graph/kruskal) - finding Minimum Spanning Tree (MST) for weighted undirected graph * `A` [Dijkstra Algorithm](src/algorithms/graph/dijkstra) - finding the shortest paths to all graph vertices from single vertex * `A` [Bellman-Ford Algorithm](src/algorithms/graph/bellman-ford) - finding the shortest paths to all graph vertices from single vertex * `A` [Floyd-Warshall Algorithm](src/algorithms/graph/floyd-warshall) - find the shortest paths between all pairs of vertices * `A` [Detect Cycle](src/algorithms/graph/detect-cycle) - for both directed and undirected graphs (DFS and Disjoint Set based versions) * `A` [Prims Algorithm](src/algorithms/graph/prim) - finding Minimum Spanning Tree (MST) for weighted undirected graph * `A` [Topological Sorting](src/algorithms/graph/topological-sorting) - DFS method * `A` [Articulation Points](src/algorithms/graph/articulation-points) - Tarjan's algorithm (DFS based) * `A` [Bridges](src/algorithms/graph/bridges) - DFS based algorithm * `A` [Eulerian Path and Eulerian Circuit](src/algorithms/graph/eulerian-path) - Fleury's algorithm - Visit every edge exactly once * `A` [Hamiltonian Cycle](src/algorithms/graph/hamiltonian-cycle) - Visit every vertex exactly once * `A` [Strongly Connected Components](src/algorithms/graph/strongly-connected-components) - Kosaraju's algorithm * `A` [Travelling Salesman Problem](src/algorithms/graph/travelling-salesman) - shortest possible route that visits each city and returns to the origin city * **Cryptography** * `B` [Polyn... [TRUNCATED]","29.7k, Code, Issues, Pull requests, Actions, Security, Insights, enhancement, bug, wontfix, question, invalid, help wanted, good first issue, duplicate, dependencies"
hiring-without-whiteboards,poteto/hiring-without-whiteboards,42165,['JavaScript'],"['interview', 'hiring', 'whiteboard', 'jobs', 'tech']","# Hiring Without Whiteboards A list of companies (or teams) that don't do ""whiteboard"" interviews. ""Whiteboards"" is used as a metaphor, and is a _symbol_ for the kinds of CS trivia questions that are associated with bad interview practices. Whiteboards are not bad CS trivia questions are. Using sites like HackerRank/LeetCode _probably_ fall into a similar category. The companies and teams listed here use interview techniques and questions that resemble day-to-day work. For example, pairing on a real world problem or a paid/unpaid take home exercise. Read (and contribute to) [our recommendations](RECOMMENDATIONS.md) for ways to conduct better interviews. ### tl;dr - Discussing a real world problem (with or without whiteboard) is - Solving CS trivia, technical puzzles, riddles, brainteasers (with or without whiteboard) is Please open a [PR]( to be added. ### Duds If you've been through an interview with one of these companies recently, and your experience suggests otherwise from their description, please open a [PR]( to remove them from this list. ### I want to search/sort/filter/group by X! Check out our [Airtable]( Additions to this document that are properly formatted will automatically be pushed and added to Airtable. Keywords from the description will also be extracted. You can see (and contribute!) to the [API here]( Also check out [No Whiteboards]( to search for jobs at these companies. ### Discussion and other reads - Discussion - [HackerNews (2017)]( - [HackerNews (2020)]( - [Finding a better alternative to the whiteboard interview]( - [How to hire engineering talent without the BS]( --- ## 0 - 9 - [1000.software]( | Krakow, Poland and Remote | Series of 2 interviews first on soft skills, second on technical skills (how to build things, how to solve specific, real world problem, best practice) and meeting with a team leader. Sometimes a take home, simple project. ## A - C - [Aalyria]( | Remote | Timeboxed design exercise and related coding exercise, followed by a technical/behavioral discussion with the team, and behavioral interview with leadership - [Able]( | Lima, PE / Remote | Coding interview, Technical interview (Backlog Refinement + System Design), Leadership interview (Behavioural) - [Abstract]( | San Francisco, CA - [Accenture]( | San Francisco, CA / Los Angeles, CA / New York, NY / Kuala Lumpur, Malaysia | Technical phone discussion with architecture manager, followed by behavioral interview focusing on soft skills - [Accredible]( | Cambridge, UK / San Francisco, CA / Remote | Take home project, then a pair-programming and discussion onsite / Skype round. - [Acko]( | Mumbai, India | Phone interview, followed by a small take home problem. Finally a F2F or skype pair programming session - [Acumen]( | London, UK | Small take home test, and sit in on some sprint rituals on-site - [Ad Hoc]( | Remote / Washington, DC | Technical take-home assignment, followed by multiple video calls that are discussions of technical background and experience. - [Adaface]( | Remote/ Singapore, Singapore / Bangalore, India | Conversational on-the-job technical assessment, followed by video calls with technical lead and founders - [AdCellerant]( | Denver, CO | Technical phone screen, 5-day take home code challenge, then on-site interview comprised of cultural and technical discussions - [Adeva]( | New York, USA | 4 steps interviewing process that includes online coding assignment + lead engineer call. - [AdEx Network]( | Sofia, Bulgaria / Remote | Email screening process, followed by a take-home assignment - [Admiral]( | Gainesville, FL / Remote | Intro phone call with hiring manager, take-home assignment, (mostly) non-technical on-site with team/leadership - [Adnymics]( | Munich, DE | Take home project, then work with the team for a day - [Adthena]( | London, UK | Takehome project and discussion on-site - [AdWyze]( | Bangalore, India | Short takehome project + (for fulltime) onsite pairing - [Adyen]( | Amsterdam, NL | Take-home assignment, design discussion based on take home, culture fit etc. Provides visa sponsorship to the Netherlands. - [Affinipay]( | Austin, TX | Short takehome project + video interview about coding with engineering manager - [Agency Enterprise Studio]( | Remote / Los Angeles, CA / Florianpolis, Brazil | Live coding of a task you'd do daily - [Ageno]( | Bielsko-Biala, Poland | Simple Magento Take-home project and discussion on the real world problems. - [AgileMD]( | San Francisco, CA | Takehome project - [AImotive]( | Budapest, Hungary | Small take-home project, then in-person interview about technical background - [Airbase]( | San Francisco, CA; Bangalore, India; Remote | Intro Call with HR or EMs, small take-home project, two tech rounds with Airbase Engineers (based on real world engineering problems), followed by a final values round with the Founder or Director of Engineering. - [Airtable]( | San Francisco, CA; Austin, TX; Mountain View, CA; New York, NY; Remote | Take home project that resembles a problem Airtable solves for. Five hour on-site which includes a discussion of the project, UI design, discussing architectural tradeoffs, and code debugging. - [Aiwip]( | London, UK | Skype/phone interview followed by takehome project or worksample (or whiteboard) - [Albert]( | Los Angeles, CA | Discussion with senior engineer, and then practical pair programming related to my experience + the position - [Algolia]( | Paris, France / San Francisco, CA | Takehome project & Onsite discussions and presentation - [all about apps GmbH]( | Vienna, Austria | 2-phase technical discussion & examination with department heads and management. - [Allegro]( | Warsaw, Poland; Poznan, Poland; Torun, Poland; Wroclaw, Poland; Krakow, Poland | Take home, simple project. Series of 2 technical interviews (how to build things, how to solve specific, real world problem) and meeting with a team leader. - [Alluxi]( | Monterrey, Mexico | Initial skype interview, technical interview with Senior engineer and work sample review. - [Almabase]( | Bengaluru, India | Take-home assignment, design discussion based on take home, low level and high level design rounds based on real life problems, culture fit etc. during onsite. - [AlphaSights]( | London, UK / New York, NY / Remote | Initial interview, pair programming then final round with general technical questions - [AMAGI]( | Makati, Philippines | 1) Review of your resume, portfolio, and/or GitHub profile; 2) 1 hour discussion (in-person or Skype) about your goals, experience, personal culture, and how to apply technical solutions to real problems; - [Analytical Flavor Systems]( | Manhattan, New York | Code sample or take-home project, both with discussion. - [Angaza]( | San Francisco, CA | Take-home assignment with guaranteed feedback, on-site interviews involving actual day-to-day work - [Animech]( | Uppsala, Sweden | Multiple interviews with technical staff with real problem discussions. - [Anyfin]( | Stockholm, Sweden | Takehome project & Onsite discussions and presentation. - [Aparkado]( | Cologne, Germany / Remote | Intro with Co-Founder, team fit with the team plus a small real-world problem to solve, followed by final round with CEO / Co-Founder. - [Apollo Agriculture]( | Nairobi, Kenya / Remote | Takehome project or Worksample (or whiteboard) - [Applied]( | London, UK | Situational judgement tests focusing on real-world soft skills (online then in structured interview) - [Arachnys]( | London, UK | Take home test, real world pair programming - [Articulate]( | Remote | Take-home project & pair program on a problem similar to daily work - [Artsy]( | New York, NY / London, UK / Berlin, Germany / Los Angeles, CA / Hong Kong, Hong Kong / Remote | Our process: 1) Informal chat 2) Application 3) Phone screen 4) In-person interview with 1 lead, 2 individual contributors and 1 non-engineer (30-45 mins each), focusing on your work habits and expertise as demonstrated in your previous work 5) ~4 in-depth professional reference calls (30-45 mins each). - [ASI Data Science]( | London, UK | Project to work at home, general technical questions, pair programming with engineers - [ASOS]( | London, UK | Take home or in-person code refactoring exercise, in-person walk-though of solution including software craftsmanship principles and design decisions, in-person freestyle architecture walk-through - [Ataccama]( | Prague, Czech Republic | Face to face interview (skype or onsite), coding task for 30 min, meeting with team members - [aTech Media]( | London, UK | Face to face interview, review of existing open source contributions or, if none are available, asked to write a library for something that interests them - [Atlan]( | New Delhi, India | A mini project (to be done within 8 days), followed by a discussion with the team you're applying to. Then as the final step, a call with one of the founders. - [Aura Frames]( | New York, NY / San Francisco, CA | Simplified real-world coding task on Coderpad.io, followed by a few hours onsite writing code in our actual codebase. - [Auth0 by Okta]( | Bellevue, WA; San Francisco, CA; Buenos Aires, Argentina; Warsaw, Poland; Toronto, Canada; Remote | Series of interviews, go over technical background and past experiences, take-home project - [Auto1]( | Berlin, DE | Series of Skype interviews which covers general technical questions, followed by a take-home assignment - [Automattic]( | Remote | short take-home code test, then a part-time, paid project. - [AutoScout24]( | Munich, Germany | Skype interview followed by home assignment from our day-to-day business and then on-site interview including lunch with a team - [Avant]( | Chicago, IL | Pair programming interviews. - [Avarteq GmbH]( | Berlin, Germany / Saarbrcken, Germany | Technical interview with our developers on-site or remote followed by a work sample in a pair programming session or a previous take-home project with a follow-up discussion and detailed feedback. - [Axelerant]( | Remote | Take-home ... [TRUNCATED]","3.4k, Code, Pull requests, Actions, Security, Insights, stale, request for feedback, help wanted, removal, question, pending agreement, more details needed, general improvements, format incorrect, duplicate"
Web-Dev-For-Beginners,microsoft/Web-Dev-For-Beginners,81807,"['JavaScript', 'HTML', 'CSS']","['javascript', 'curriculum', 'html', 'css', 'education']","[]( []( []( []( []( []( []( []( []( # Web Development for Beginners - A Curriculum Learn the fundamentals of web development with our 12-week comprehensive course by Microsoft Cloud Advocates. Each of the 24 lessons dive into JavaScript, CSS, and HTML through hands-on projects like terrariums, browser extensions, and space games. Engage with quizzes, discussions, and practical assignments. Enhance your skills and optimize your knowledge retention with our effective project-based pedagogy. Start your coding journey today! #### _Are you a student?_ Visit [**Student Hub page**]( where you will find beginner resources, Student packs and even ways to get a free certificate voucher. This is the page you want to bookmark and check from time to time as we switch out content monthly. ### Announcement - _New Curriculum_ on Generative AI was just released! Don't miss our NEW 12 lesson curriculum on generative AI! Each lesson includes an assignment to complete, knowledge check and challenge to guide you on learning topics like: - prompting and prompt engineering - text and image app generation - search apps Visit [ to get started! ## Getting Started > **Teachers**, we have [included some suggestions](for-teachers.md) on how to use this curriculum. We'd love your feedback [in our discussion forum]( **[Learners]( for each lesson, start with a pre-lecture quiz and follow through with reading the lecture material, completing the various activities and check your understanding with the post-lecture quiz. To enhance your learning experience, connect with your peers to work on the projects together! Discussions are encouraged in our [discussion forum]( where our team of moderators will be available to answer your questions. To further your education, we highly recommend exploring [Microsoft Learn]( for additional study materials. ### Setting up your environment This curriculum has a development environment ready to go! As you get started you can choose to run the curriculum in a [Codespace]( (_a browser-based, no installs needed environment_), or locally on your computer using a text editor such as [Visual Studio Code]( #### Create your repository For you to easily save your work, it is recommended that you create your own copy of this repository. You can do this by clicking the **Use this template** button at the top of the page. This will create a new repository in your GitHub account with a copy of the curriculum. #### Running the curriculum in a Codespace In your copy of this repository that you created, click the **Code** button and select **Open with Codespaces**. This will create a new Codespace for you to work in. #### Running the curriculum locally on your computer To run this curriculum locally on your computer, you will need a text editor, browser and command line tool. Our first lesson, [Introduction to Programming Languages and Tools of the Trade]( will walk you through various options for each of these tools for you to select what works best for you. Our recommendation is to use [Visual Studio Code]( as your editor, which also has a built-in [Terminal]( You can download Visual Studio Code [here]( 1. Clone your repository to your computer. You can do this by clicking the **Code** button and copying the URL: Then, open [Terminal]( within [Visual Studio Code]( and run the following command, replacing `` with the URL you just copied: ```bash git clone ``` 2. Open the folder in Visual Studio Code. You can do this by clicking **File** > **Open Folder** and selecting the folder you just cloned. > Recommended Visual Studio Code extensions: > > * [Live Server]( - to preview HTML pages within Visual Studio Code > * [Copilot]( - to help you write code faster ## Each lesson includes: - optional sketchnote - optional supplemental video - pre-lesson warmup quiz - written lesson - for project-based lessons, step-by-step guides on how to build the project - knowledge checks - a challenge - supplemental reading - assignment - post-lesson quiz > **A note about quizzes**: All quizzes are contained [in this app]( for 48 total quizzes of three questions each. They are linked from within the lessons but the quiz app can be run locally; follow the instruction in the `quiz-app` folder. They are gradually being localized. ## Lessons | | Project Name | Concepts Taught | Learning Objectives | Linked Lesson | Author | | :-: | :------------------------------------------------------: | :--------------------------------------------------------------------: | ----------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------: | :---------------------: | | 01 | Getting Started | Introduction to Programming and Tools of the Trade | Learn the basic underpinnings behind most programming languages and about software that helps professional developers do their jobs | [Intro to Programming Languages and Tools of the Trade](/1-getting-started-lessons/1-intro-to-programming-languages/README.md) | Jasmine | | 02 | Getting Started | Basics of GitHub, includes working with a team | How to use GitHub in your project, how to collaborate with others on a code base | [Intro to GitHub](/1-getting-started-lessons/2-github-basics/README.md) | Floor | | 03 | Getting Started | Accessibility | Learn the basics of web accessibility | [Accessibility Fundamentals](/1-getting-started-lessons/3-accessibility/README.md) | Christopher | | 04 | JS Basics | JavaScript Data Types | The basics of JavaScript data types | [Data Types](/2-js-basics/1-data-types/README.md) | Jasmine | | 05 | JS Basics | Functions and Methods | Learn about functions and methods to manage an application's logic flow | [Functions and Methods](/2-js-basics/2-functions-methods/README.md) | Jasmine and Christopher | | 06 | JS Basics | Making Decisions with JS | Learn how to create conditions in your code using decision-making methods | [Making Decisions](/2-js-basics/3-making-decisions/README.md) | Jasmine | | 07 | JS Basics | Arrays and Loops | Work with data using arrays and loops in JavaScript | [Arrays and Loops](/2-js-basics/4-arrays-loops/README.md) | Jasmine | | 08 | [Terrarium](/3-terrarium/solution/README.md) | HTML in Practice | Build the HTML to create an online terrarium, focusing on building a layout | [Introduction to HTML](/3-terrarium/1-intro-to-html/README.md) | Jen | | 09 | [Terrarium](/3-terrarium/solution/README.md) | CSS in Practice | Build the CSS to style the online terrarium, focusing on the basics of CSS including making the page responsive | [Introduction to CSS](/3-terrarium/2-intro-to-css/README.md) | Jen | | 10 | [Terrarium](/3-terrarium/solution/README.md) | JavaScript Closures, DOM manipulation | Build the JavaScript to make the terrarium function as a drag/drop interface, focusing on closures and DOM manipulation | [JavaScript Closures, DOM manipulation](/3-terrarium/3-intro-to-DOM-and-closures/README.md) | Jen | | 11 | [Typing Game](/4-typing-game/solution/README.md) | Build a Typing Game | Learn how to use keyboard events to drive the logic of your JavaScript app | [Event-Driven Programming](/4-typing-game/typing-game/README.md) | Christopher | | 12 | [Green Browser Extension](/5-browser-extension/solution/README.md) | Working with Browsers | Learn how browsers work, their history, and how to scaffold the first elements of a browser extension | [About Browsers](/5-browser-extension/1-about-browsers/README.md) | Jen | | 13 | [Green Browser Extension](/5-browser-extension/solution/README.md) | Building a form, calling an API and storing variables in local storage | Build the JavaScript elements of your browser extension to call an API using variables stored in local storage | [APIs, Forms, and Local Storage](/5-browser-extension/2-forms-browsers-local-storage/README.md) | Jen | | 14 | [Green Browser Extension](/5-browser-extension/solution/README.md) | Background processes in the browser, web performance | Use the browser's background processes to manage the extension's icon; learn about web performance and some optimizations to make | [Background Tasks and Performance](/5-browser-extension/3-background-tasks-and-performance/README.md) | Jen | | 15 | [Space Game](/6-space-game/solution/README.md) | More Advanced Game Development with JavaScript | Learn about Inheritance using both Classes and Composition and the Pub/Sub pattern, in preparation for building a game | [Introduction to Advanced Game Development](/6-space-game/1-introduction/README.md) | Chris | | 16 | [Space Game](/6-space-game/solution/README.md) | Drawing to canvas | Learn about the Canvas API, used to draw elements to a screen | [Drawing to Canvas](/6-space-game/2-drawing-to-canvas/README.md) | Chris | | 17 | [Space Game](/6-space-game/solution/README.md) | Moving elements around the screen | Discover how elements can gain motion using the cartesian coordinates and the Canvas API | [Moving Elements Around](/6-space-game/3-moving-elements-around/README.md) | Chris | | 18 | [Space Game](/6-space-game/solution/README.md) | Collision detection | Make elements collide and react to each other using keypresses and provide a cooldown function to ensure performance of the game | [Collision Detection](/6-space-game/4-collision-detection/README.md) | Chris | | 19 | [Space Game](/6-space-game/solution/README.md) | Keeping score | Perform math calculations based on the game's status and performance | [Keeping Score](/6-space-game/5-keeping-score/README.md) | Chris | | 20 | [Space Game](/6-space-game/solution/README.md) | Ending and restarting the game | Learn about ending and restarting the game, including cleaning up assets and resetting variable values | [The Ending Condition](/6-space-game/6-end-condition/README.md) | Chris | | 21 | [Banking App](/7-bank-project/solution/README.md) | HTML Templates and Routes in a Web App | Lea... [TRUNCATED]","12.2k, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, no-pr-activity, no-issue-activity, translations, changes requested, question, enhancement, dependencies, wontfix, request for help, invalid, help wanted, good first issue, feedback, duplicate, documentation, bug, additional exercise"
axios,axios/axios,104261,"['JavaScript', 'TypeScript', 'HTML']","['http-client', 'javascript', 'nodejs', 'promise', 'hacktoberfest']","Platinum sponsors Alloy is the integration development platform that makes it simple and fast for SaaS companies to launch critical user-facing integrations. Sign up free Documentation Gold sponsors API-first authentication, authorization, and fraud prevention Website Documentation Node.js Backend SDK Drag-and-drop authentication, authorization, and identity management Website Documentation Community Promise based HTTP client for the browser and node.js Website Documentation []( []( []( []( []( []( []( []( []( []( []( ## Table of Contents - [Features](#features) - [Browser Support](#browser-support) - [Installing](#installing) - [Package manager](#package-manager) - [CDN](#cdn) - [Example](#example) - [Axios API](#axios-api) - [Request method aliases](#request-method-aliases) - [Concurrency ](#concurrency-deprecated) - [Creating an instance](#creating-an-instance) - [Instance methods](#instance-methods) - [Request Config](#request-config) - [Response Schema](#response-schema) - [Config Defaults](#config-defaults) - [Global axios defaults](#global-axios-defaults) - [Custom instance defaults](#custom-instance-defaults) - [Config order of precedence](#config-order-of-precedence) - [Interceptors](#interceptors) - [Multiple Interceptors](#multiple-interceptors) - [Handling Errors](#handling-errors) - [Cancellation](#cancellation) - [AbortController](#abortcontroller) - [CancelToken ](#canceltoken-deprecated) - [Using application/x-www-form-urlencoded format](#using-applicationx-www-form-urlencoded-format) - [URLSearchParams](#urlsearchparams) - [Query string](#query-string-older-browsers) - [ Automatic serialization](#-automatic-serialization-to-urlsearchparams) - [Using multipart/form-data format](#using-multipartform-data-format) - [FormData](#formdata) - [ Automatic serialization](#-automatic-serialization-to-formdata) - [Files Posting](#files-posting) - [HTML Form Posting](#-html-form-posting-browser) - [ Progress capturing](#-progress-capturing) - [ Rate limiting](#-progress-capturing) - [ AxiosHeaders](#-axiosheaders) - [ Fetch adapter](#-fetch-adapter) - [Semver](#semver) - [Promises](#promises) - [TypeScript](#typescript) - [Resources](#resources) - [Credits](#credits) - [License](#license) ## Features - Make [XMLHttpRequests]( from the browser - Make [ requests from node.js - Supports the [Promise]( API - Intercept request and response - Transform request and response data - Cancel requests - Automatic transforms for [JSON]( data - Automatic data object serialization to `multipart/form-data` and `x-www-form-urlencoded` body encodings - Client side support for protecting against [XSRF]( ## Browser Support | | | | | | --- | --- | --- | --- | --- | --- | Latest | Latest | Latest | Latest | Latest | 11 | []( ## Installing ### Package manager Using npm: ```bash $ npm install axios ``` Using bower: ```bash $ bower install axios ``` Using yarn: ```bash $ yarn add axios ``` Using pnpm: ```bash $ pnpm add axios ``` Once the package is installed, you can import the library using `import` or `require` approach: ```js import axios, {isCancel, AxiosError} from 'axios'; ``` You can also use the default export, since the named export is just a re-export from the Axios factory: ```js import axios from 'axios'; console.log(axios.isCancel('something')); ```` If you use `require` for importing, **only default export is available**: ```js const axios = require('axios'); console.log(axios.isCancel('something')); ``` For cases where something went wrong when trying to import a module into a custom or legacy environment, you can try importing the module package directly: ```js const axios = require('axios/dist/browser/axios.cjs'); // browser commonJS bundle (ES2017) // const axios = require('axios/dist/node/axios.cjs'); // node commonJS bundle (ES2017) ``` ### CDN Using jsDelivr CDN (ES5 UMD browser module): ```html ``` Using unpkg CDN: ```html ``` ## Example > **Note**: CommonJS usage > In order to gain the TypeScript typings (for intellisense / autocomplete) while using CommonJS imports with `require()`, use the following approach: ```js import axios from 'axios'; //const axios = require('axios'); // legacy way // Make a request for a user with a given ID axios.get('/user?ID=12345') .then(function (response) { // handle success console.log(response); }) .catch(function (error) { // handle error console.log(error); }) .finally(function () { // always executed }); // Optionally the request above could also be done as axios.get('/user', { params: { ID: 12345 } }) .then(function (response) { console.log(response); }) .catch(function (error) { console.log(error); }) .finally(function () { // always executed }); // Want to use async/await? Add the `async` keyword to your outer function/method. async function getUser() { try { const response = await axios.get('/user?ID=12345'); console.log(response); } catch (error) { console.error(error); } } ``` > **Note**: `async/await` is part of ECMAScript 2017 and is not supported in Internet > Explorer and older browsers, so use with caution. Performing a `POST` request ```js axios.post('/user', { firstName: 'Fred', lastName: 'Flintstone' }) .then(function (response) { console.log(response); }) .catch(function (error) { console.log(error); }); ``` Performing multiple concurrent requests ```js function getUserAccount() { return axios.get('/user/12345'); } function getUserPermissions() { return axios.get('/user/12345/permissions'); } Promise.all([getUserAccount(), getUserPermissions()]) .then(function (results) { const acct = results[0]; const perm = results[1]; }); ``` ## axios API Requests can be made by passing the relevant config to `axios`. ##### axios(config) ```js // Send a POST request axios({ method: 'post', url: '/user/12345', data: { firstName: 'Fred', lastName: 'Flintstone' } }); ``` ```js // GET request for remote image in node.js axios({ method: 'get', url: ' responseType: 'stream' }) .then(function (response) { response.data.pipe(fs.createWriteStream('ada_lovelace.jpg')) }); ``` ##### axios(url[, config]) ```js // Send a GET request (default method) axios('/user/12345'); ``` ### Request method aliases For convenience, aliases have been provided for all common request methods. ##### axios.request(config) ##### axios.get(url[, config]) ##### axios.delete(url[, config]) ##### axios.head(url[, config]) ##### axios.options(url[, config]) ##### axios.post(url[, data[, config]]) ##### axios.put(url[, data[, config]]) ##### axios.patch(url[, data[, config]]) ###### NOTE When using the alias methods `url`, `method`, and `data` properties don't need to be specified in config. ### Concurrency (Deprecated) Please use `Promise.all` to replace the below functions. Helper functions for dealing with concurrent requests. axios.all(iterable) axios.spread(callback) ### Creating an instance You can create a new instance of axios with a custom config. ##### axios.create([config]) ```js const instance = axios.create({ baseURL: ' timeout: 1000, headers: {'X-Custom-Header': 'foobar'} }); ``` ### Instance methods The available instance methods are listed below. The specified config will be merged with the instance config. ##### axios#request(config) ##### axios#get(url[, config]) ##### axios#delete(url[, config]) ##### axios#head(url[, config]) ##### axios#options(url[, config]) ##### axios#post(url[, data[, config]]) ##### axios#put(url[, data[, config]]) ##### axios#patch(url[, data[, config]]) ##### axios#getUri([config]) ## Request Config These are the available config options for making requests. Only the `url` is required. Requests will default to `GET` if `method` is not specified. ```js { // `url` is the server URL that will be used for the request url: '/user', // `method` is the request method to be used when making the request method: 'get', // default // `baseURL` will be prepended to `url` unless `url` is absolute. // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs // to methods of that instance. baseURL: ' // `transformRequest` allows changes to the request data before it is sent to the server // This is only applicable for request methods 'PUT', 'POST', 'PATCH' and 'DELETE' // The last function in the array must return a string or an instance of Buffer, ArrayBuffer, // FormData or Stream // You may modify the headers object. transformRequest: [function (data, headers) { // Do whatever you want to transform the data return data; }], // `transformResponse` allows changes to the response data to be made before // it is passed to then/catch transformResponse: [function (data) { // Do whatever you want to transform the data return data; }], // `headers` are custom headers to be sent headers: {'X-Requested-With': 'XMLHttpRequest'}, // `params` are the URL parameters to be sent with the request // Must be a plain object or a URLSearchParams object params: { ID: 12345 }, // `paramsSerializer` is an optional config that allows you to customize serializing `params`. paramsSerializer: { //Custom encoder function which sends key/value pairs in an iterative fashion. encode?: (param: string): string => { /* Do custom operations here and return transformed string */ }, // Custom serializer function for the entire parameter. Allows user to mimic pre 1.x behaviour. serialize?: (params: Record, options?: ParamsSerializerOptions ), //Configuration for formatting array indexes in the params. indexes: false // Three available options: (1) indexes: null (leads to no brackets), (2) (default) indexes: false (leads to empty brackets), (3) indexes: true (leads to brackets with indexes). }, // `data` is the data to be sent as the request body // Only applicable for request methods 'PUT', 'POST', 'DELETE , and 'PATCH' // When no `transformRequest` is set, must be of one of the following types: // - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams // - Browser only: FormData, File, Blob // - Node only: Stream, Buffer, FormData (form-data package) data: { firstNam... [TRUNCATED]","10.7k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, type::bug, priority::low, type::feature request, type::enhancement, priority::medium, status::needs information, github_actions, dependencies, type::documentation, target::1.x, type::question, priority::high, type::not related, target::0.x, status::to be closed, status::duplicate, status::confirmed, priority::critical, fetch, v1.7.2, v1.7.1, v1.7.0, v1.7.0-beta.2, v1.7.0-beta.1, v1.7.0-beta.0, v1.6.8, v1.6.7, v1.6.6, v1.6.5, v1.6.4"
planka,plankanban/planka,6848,"['JavaScript', 'SCSS', 'Shell']","['trello', 'agile', 'kanban', 'collaboration', 'javascript']","# Planka #### Elegant open source project tracking. [**Client demo**]( (without server features). ## Features - Create projects, boards, lists, cards, labels and tasks - Add card members, track time, set due dates, add attachments, write comments - Markdown support in card description and comments - Filter by members and labels - Customize project backgrounds - Real-time updates - Internal notifications - Multiple interface languages - Single sign-on via OpenID Connect ## How to deploy Planka There are many ways to install Planka, [check them out]( For configuration, please see the [configuration section]( ## Contact - If you want to get a hosted version of Planka, you can contact us via email contact@planka.cloud - For any security issues, please do not create a public issue on GitHub, instead please write to security@planka.cloud We do NOT offer any public support via email, please use GitHub. ## Development See the [development section]( ## Tech stack - React, Redux, Redux-Saga, Redux-ORM, Semantic UI React, react-beautiful-dnd - Sails.js, Knex.js - PostgreSQL ## License Planka is [AGPL-3.0 licensed]( ## Contributors [](","650, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, enhancement, help wanted, bug, question, good first issue, documentation, wontfix, invalid, duplicate, dependencies"
koodo-reader,koodo-reader/koodo-reader,16238,"['JavaScript', 'TypeScript', 'CSS']","['epub', 'reader', 'txt', 'mobi', 'pdf']","[]( | []( |[Portugus]( | English Koodo Reader A cross-platform ebook reader [Download]( | [Preview]( | [Roadmap]( | [Document]( ## Preview ## Feature - Format support: - EPUB (**.epub**) - PDF (**.pdf**) - DRM-free Mobipocket (**.mobi**) and Kindle (**.azw3**, **.azw**) - Plain text (**.txt**) - FictionBook (**.fb2**) - Comic book archive (**.cbr**, **.cbz**, **.cbt**, **.cb7**) - Rich text (**.md**, **.docx**) - Hyper Text (**.html**, **.xml**, **.xhtml**, **.mhtml**, **.htm**, **.htm**) - Platform support: **Windows**, **macOS**, **Linux** and **Web** - Save your data to **OneDrive**, **Google Drive**, **Dropbox**, **FTP**, **SFTP**, **WebDAV**, **S3**, **S3 Compatible** - Customize the source folder and synchronize among multiple devices using OneDrive, iCloud, Dropbox, etc. - Single-column, two-column, or continuous scrolling layouts - Text-to-speech, translation, dictionary, touch screen support, batch import - Add bookmarks, notes, highlights to your books - Adjust font size, font family, line-spacing, paragraph spacing, background color, text color, margins, and brightness - Night mode and theme color - Text highlight, underline, boldness, italics and shadow ## Installation - Desktop Version: - Stable Version (Recommended): [Download]( - Developer version: [Download]( ( With new feature and bug fix, but may induce some unknown bugs) - Web Version[Preview]( - Install with Scoop: ```shell scoop bucket add extras scoop install extras/koodo-reader ``` - Install with Winget: ```shell winget install -e AppbyTroye.KoodoReader ``` - Install with Homebrew: ```shell brew install --cask koodo-reader ``` - Install with Docker: ```bash docker-compose up -d ``` - Install with Flathub: ```shell flatpak install flathub io.github.troyeguo.koodo-reader flatpak run io.github.troyeguo.koodo-reader ``` ## Screenshot List mode Cover mode Reader menu Dark mode ## Develop Make sure that you have installed yarn and git 1. Download the repo ``` git clone ``` 2. Enter desktop mode ``` yarn yarn dev ``` 3. Enter web mode ``` yarn yarn start ``` ## Translation ### Edit current language 1. Select your target language from the following list. 2. Click the view button to examine the source file. The untranslated terms are listed at the bottom of each file. 3. Translate the terms to your target language based on the given English reference 4. Sumbit the translation file or just translation snippets based on the amount of your translation to [this link]( Pull request is also welcomed. | Language(A-Z) | Code | View | | --------------- | ----- | --------------------------------------------------- | | Arabic | ar | [View](./src/assets/locales/ar/translation.json) | | Armenian | hy | [View](./src/assets/locales/hy/translation.json) | | Bengali | bn | [View](./src/assets/locales/bn/translation.json) | | Bulgarian | bg | [View](./src/assets/locales/bg/translation.json) | | Chinese (CN) | zh-CN | [View](./src/assets/locales/zh-CN/translation.json) | | Chinese (MO) | zh-MO | [View](./src/assets/locales/zh-MO/translation.json) | | Chinese (TW) | zh-TW | [View](./src/assets/locales/zh-TW/translation.json) | | Czech | cs | [View](./src/assets/locales/cs/translation.json) | | Danish | da | [View](./src/assets/locales/da/translation.json) | | Dutch | nl | [View](./src/assets/locales/nl/translation.json) | | English | en | [View](./src/assets/locales/en/translation.json) | | Esperanto | eo | [View](./src/assets/locales/eo/translation.json) | | Finnish | fi | [View](./src/assets/locales/fi/translation.json) | | French | fr | [View](./src/assets/locales/fr/translation.json) | | German | de | [View](./src/assets/locales/de/translation.json) | | Greek | el | [View](./src/assets/locales/el/translation.json) | | Indonesian | id | [View](./src/assets/locales/id/translation.json) | | Interlingue | ie | [View](./src/assets/locales/ie/translation.json) | | Italian | it | [View](./src/assets/locales/it/translation.json) | | Japanese | ja | [View](./src/assets/locales/ja/translation.json) | | Korean | ko | [View](./src/assets/locales/ko/translation.json) | | Persian | fa | [View](./src/assets/locales/fa/translation.json) | | Polish | pl | [View](./src/assets/locales/pl/translation.json) | | Portuguese | pt | [View](./src/assets/locales/pt/translation.json) | | Portuguese (BR) | pt-BR | [View](./src/assets/locales/pt-BR/translation.json) | | Romanian | ro | [View](./src/assets/locales/ro/translation.json) | | Russian | ru | [View](./src/assets/locales/ru/translation.json) | | Slovenian | sl | [View](./src/assets/locales/sl/translation.json) | | Spanish | es | [View](./src/assets/locales/es/translation.json) | | Swedish | sv | [View](./src/assets/locales/sv/translation.json) | | Tamil | ta | [View](./src/assets/locales/ta/translation.json) | | Thai | th | [View](./src/assets/locales/th/translation.json) | | Tibetan | bo | [View](./src/assets/locales/bo/translation.json) | | Turkish | tr | [View](./src/assets/locales/tr/translation.json) | | Ukrainian | uk | [View](./src/assets/locales/uk/translation.json) | | Vietnamese | vi | [View](./src/assets/locales/vi/translation.json) | ### Add new language 1. If you can't find your target language from the above list, Download the Engish source file from [this link](./src/assets/locales/en/translation.json) 2. When you finish translation, submit the source file to [this link]( Pull request is also welcomed.","1.2k, Code, Issues, Pull requests, Actions, Security, Insights, feature request, bug, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, dependencies"
UglifyJS,mishoo/UglifyJS,12964,"['JavaScript', 'Shell', 'HTML']",[],"UglifyJS 3 ========== UglifyJS is a JavaScript parser, minifier, compressor and beautifier toolkit. #### Note: - `uglify-js` supports JavaScript and most language features in ECMAScript. - For more exotic parts of ECMAScript, process your source file with transpilers like [Babel]( before passing onto `uglify-js`. - `uglify-js@3` has a simplified [API](#api-reference) and [CLI](#command-line-usage) that is not backwards compatible with [`uglify-js@2`]( Install ------- First make sure you have installed the latest version of [node.js]( (You may need to restart your computer after this step). From NPM for use as a command line app: npm install uglify-js -g From NPM for programmatic use: npm install uglify-js # Command line usage uglifyjs [input files] [options] UglifyJS can take multiple input files. It's recommended that you pass the input files first, then pass the options. UglifyJS will parse input files in sequence and apply any compression options. The files are parsed in the same global scope, that is, a reference from a file to some variable/function declared in another file will be matched properly. If no input file is specified, UglifyJS will read from STDIN. If you wish to pass your options before the input files, separate the two with a double dash to prevent input files being used as option arguments: uglifyjs --compress --mangle -- input.js ### Command line options ``` -h, --help Print usage information. `--help options` for details on available options. -V, --version Print version number. -p, --parse Specify parser options: `acorn` Use Acorn for parsing. `bare_returns` Allow return outside of functions. Useful when minifying CommonJS modules and Userscripts that may be anonymous function wrapped (IIFE) by the .user.js engine `caller`. `spidermonkey` Assume input files are SpiderMonkey AST format (as JSON). -c, --compress [options] Enable compressor/specify compressor options: `pure_funcs` List of functions that can be safely removed when their return values are not used. -m, --mangle [options] Mangle names/specify mangler options: `reserved` List of names that should not be mangled. --mangle-props [options] Mangle properties/specify mangler options: `builtins` Mangle property names that overlaps with standard JavaScript globals. `debug` Add debug prefix and suffix. `domprops` Mangle property names that overlaps with DOM properties. `keep_quoted` Only mangle unquoted properties. `regex` Only mangle matched property names. `reserved` List of names that should not be mangled. -b, --beautify [options] Beautify output/specify output options: `beautify` Enabled with `--beautify` by default. `preamble` Preamble to prepend to the output. You can use this to insert a comment, for example for licensing information. This will not be parsed, but the source map will adjust for its presence. `quote_style` Quote style: 0 - auto 1 - single 2 - double 3 - original `wrap_iife` Wrap IIFEs in parentheses. Note: you may want to disable `negate_iife` under compressor options. -O, --output-opts [options] Specify output options (`beautify` disabled by default). -o, --output Output file path (default STDOUT). Specify `ast` or `spidermonkey` to write UglifyJS or SpiderMonkey AST as JSON to STDOUT respectively. --annotations Process and preserve comment annotations. (`/*@__PURE__*/` or `/*#__PURE__*/`) --no-annotations Ignore and discard comment annotations. --comments [filter] Preserve copyright comments in the output. By default this works like Google Closure, keeping JSDoc-style comments that contain ""@license"" or ""@preserve"". You can optionally pass one of the following arguments to this flag: - ""all"" to keep all comments - a valid JS RegExp like `/foo/` or `/^!/` to keep only matching comments. Note that currently not *all* comments can be kept when compression is on, because of dead code removal or cascading statements into sequences. --config-file Read `minify()` options from JSON file. -d, --define [=value] Global definitions. -e, --enclose [arg[:value]] Embed everything in a big function, with configurable argument(s) & value(s). --expression Parse a single expression, rather than a program (for parsing JSON). --ie Support non-standard Internet Explorer. Equivalent to setting `ie: true` in `minify()` for `compress`, `mangle` and `output` options. By default UglifyJS will not try to be IE-proof. --keep-fargs Do not mangle/drop function arguments. --keep-fnames Do not mangle/drop function names. Useful for code relying on Function.prototype.name. --module Process input as ES module (implies --toplevel) --no-module Avoid optimizations which may alter runtime behavior under prior versions of JavaScript. --name-cache File to hold mangled name mappings. --self Build UglifyJS as a library (implies --wrap UglifyJS) --source-map [options] Enable source map/specify source map options: `base` Path to compute relative paths from input files. `content` Input source map, useful if you're compressing JS that was generated from some other original code. Specify ""inline"" if the source map is included within the sources. `filename` Filename and/or location of the output source (sets `file` attribute in source map). `includeSources` Pass this flag if you want to include the content of source files in the source map as sourcesContent property. `names` Include symbol names in the source map. `root` Path to the original source to be included in the source map. `url` If specified, path to the source map to append in `//# sourceMappingURL`. --timings Display operations run time on STDERR. --toplevel Compress and/or mangle variables in top level scope. --v8 Support non-standard Chrome & Node.js Equivalent to setting `v8: true` in `minify()` for `mangle` and `output` options. By default UglifyJS will not try to be v8-proof. --verbose Print diagnostic messages. --warn Print warning messages. --webkit Support non-standard Safari/Webkit. Equivalent to setting `webkit: true` in `minify()` for `compress`, `mangle` and `output` options. By default UglifyJS will not try to be Safari-proof. --wrap Embed everything in a big function, making the exports and global variables available. You need to pass an argument to this option to specify the name that your module will take when included in, say, a browser. ``` Specify `--output` (`-o`) to declare the output file. Otherwise the output goes to STDOUT. ## CLI source map options UglifyJS can generate a source map file, which is highly useful for debugging your compressed JavaScript. To get a source map, pass `--source-map --output output.js` (source map will be written out to `output.js.map`). Additional options: - `--source-map ""filename=''""` to specify the name of the source map. The value of `filename` is only used to set `file` attribute (see [the spec][sm-spec]) in source map file. - `--source-map ""root=''""` to pass the URL where the original files can be found. - `--source-map ""names=false""` to omit symbol names if you want to reduce size of the source map file. - `--source-map ""url=''""` to specify the URL where the source map can be found. Otherwise UglifyJS assumes HTTP `X-SourceMap` is being used and will omit the `//# sourceMappingURL=` directive. For example: uglifyjs js/file1.js js/file2.js \ -o foo.min.js -c -m \ --source-map ""root=' The above will compress and mangle `file1.js` and `file2.js`, will drop the output in `foo.min.js` and the source map in `foo.min.js.map`. The source mapping will refer to ` and ` (in fact it will list ` as the source map root, and the original files as `js/file1.js` and `js/file2.js`). ### Composed source map When you're compressing JS code that was output by a compiler such as CoffeeScript, mapping to the JS code won't be too helpful. Instead, you'd like to map back to the original code (i.e. CoffeeScript). UglifyJS has an option to take an input source map. Assuming you have a mapping from CoffeeScript compiled JS, UglifyJS can generate a map from CoffeeScript compressed JS by mapping every token in the compiled JS to its original location. To use this feature pass `--source-map ""content='/path/to/input/source.map'""` or `--source-map ""content=inline""` if the source map is included inline with the sources. ## CLI compress options You need to pass `--compress` (`-c`) to enable the compressor. Optionally you can pass a comma-separated list of [compress options](#compress-options). Options are in the form `foo=bar`, or just `foo` (the latter implies a boolean option that you want to set `true`; it's effectively a shortcut for `foo=true`). Example: uglifyjs file.js -c toplevel,sequences=false ## CLI mangle options To enable the mangler you need to pass `--mangle` (`-m`). The following (comma-separated) options are supported: - `eval` (default: `false`) mangle names visible in scopes where `eval` or `with` are used. - `reserved` (default: `[]`) when mangling is enabled but you want to prevent certain names from being mangled, you can declare those names with `--mangle reserved` pass a comma-separated list of names. For example: uglifyjs ... -m reserved=['$','require','exports'] to prevent the `require`, `exports` and `$` names from being changed. ### CLI mangling property names (`--mangle-props`) **Note:** THIS WILL PROBABLY BREAK YOUR CODE. Mangling property names is a separate step, different from variable name mangling. Pass `--mangle-props` to enable it. It will mangle all properties in the input code with the exception of built in DOM properties and properties in core JavaScript classes. For example: ```javascript // example.js var x = { baz_: 0, foo_: 1, calc: function() { return this.foo_ + this.baz_; } }; x.bar_ = 2; x[""baz_""] = 3; console.log(x.calc()); ``` Mangle all properties (except for JavaScript `builtins`): ```bash $ uglifyjs example.js -c -m --mangle-props ``` ```javascript var x={o:0,_:1,l:function(){return this._+this.o}};x.t=2,x.o=3,console.log(x.l()); ``` Mangle all properties except for `reserved` properties: ```bash $ uglifyjs example.js -c -... [TRUNCATED]","1.2k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, enhancement, harmony, source-map, bug, question, wontfix, invalid, duplicate"
fastify,fastify/fastify,30886,"['JavaScript', 'TypeScript', 'Shell']","['webframework', 'performance', 'speed', 'nodejs']","[]( [![Package Manager CI]( [![Web SIte]( []( []( [![NPM version]( [![NPM downloads]( [![Security Responsible Disclosure]( []( []( An efficient server implies a lower cost of the infrastructure, a better responsiveness under load and happy users. How can you efficiently handle the resources of your server, knowing that you are serving the highest number of requests as possible, without sacrificing security validations and handy development? Enter Fastify. Fastify is a web framework highly focused on providing the best developer experience with the least overhead and a powerful plugin architecture. It is inspired by Hapi and Express and as far as we know, it is one of the fastest web frameworks in town. The `main` branch refers to the Fastify `v5` release, which is not released/LTS yet. Check out the [`4.x` branch]( for `v4`. ### Table of Contents - [Quick start](#quick-start) - [Install](#install) - [Example](#example) - [Fastify v1.x and v2.x](#fastify-v1x-and-v2x) - [Core features](#core-features) - [Benchmarks](#benchmarks) - [Documentation](#documentation) - [Ecosystem](#ecosystem) - [Support](#support) - [Team](#team) - [Hosted by](#hosted-by) - [License](#license) ### Quick start Create a folder and make it your current working directory: ```sh mkdir my-app cd my-app ``` Generate a fastify project with `npm init`: ```sh npm init fastify ``` Install dependencies: ```sh npm i ``` To start the app in dev mode: ```sh npm run dev ``` For production mode: ```sh npm start ``` Under the hood `npm init` downloads and runs [Fastify Create]( which in turn uses the generate functionality of [Fastify CLI]( ### Install To install Fastify in an existing project as a dependency: Install with npm: ```sh npm i fastify ``` Install with yarn: ```sh yarn add fastify ``` ### Example ```js // Require the framework and instantiate it // ESM import Fastify from 'fastify' const fastify = Fastify({ logger: true }) // CommonJs const fastify = require('fastify')({ logger: true }) // Declare a route fastify.get('/', (request, reply) => { reply.send({ hello: 'world' }) }) // Run the server! fastify.listen({ port: 3000 }, (err, address) => { if (err) throw err // Server is now listening on ${address} }) ``` with async-await: ```js // ESM import Fastify from 'fastify' const fastify = Fastify({ logger: true }) // CommonJs const fastify = require('fastify')({ logger: true }) fastify.get('/', async (request, reply) => { reply.type('application/json').code(200) return { hello: 'world' } }) fastify.listen({ port: 3000 }, (err, address) => { if (err) throw err // Server is now listening on ${address} }) ``` Do you want to know more? Head to the Getting Started. > ## Note > `.listen` binds to the local host, `localhost`, interface by default > (`127.0.0.1` or `::1`, depending on the operating system configuration). If > you are running Fastify in a container (Docker, > [GCP]( etc.), you may need to bind to `0.0.0.0`. Be > careful when deciding to listen on all interfaces; it comes with inherent > [security > risks]( > See [the documentation](./docs/Reference/Server.md#listen) for more > information. ### Core features - **Highly performant:** as far as we know, Fastify is one of the fastest web frameworks in town, depending on the code complexity we can serve up to 76+ thousand requests per second. - **Extensible:** Fastify is fully extensible via its hooks, plugins and decorators. - **Schema based:** even if it is not mandatory we recommend to use [JSON Schema]( to validate your routes and serialize your outputs, internally Fastify compiles the schema in a highly performant function. - **Logging:** logs are extremely important but are costly; we chose the best logger to almost remove this cost, [Pino]( - **Developer friendly:** the framework is built to be very expressive and help the developer in their daily use, without sacrificing performance and security. ### Benchmarks __Machine:__ EX41S-SSD, Intel Core i7, 4Ghz, 64GB RAM, 4C/8T, SSD. __Method:__: `autocannon -c 100 -d 40 -p 10 localhost:3000` * 2, taking the second average | Framework | Version | Router? | Requests/sec | | :----------------- | :------------------------- | :----------: | ------------: | | Express | 4.17.3 | | 14,200 | | hapi | 20.2.1 | | 42,284 | | Restify | 8.6.1 | | 50,363 | | Koa | 2.13.0 | | 54,272 | | **Fastify** | **4.0.0** | **** | **77,193** | | - | | | | | ` | 16.14.2 | | 74,513 | Benchmarks taken using This is a synthetic, ""hello world"" benchmark that aims to evaluate the framework overhead. The overhead that each framework has on your application depends on your application, you should __always__ benchmark if performance matters to you. ## Documentation * [__`Getting Started`__](./docs/Guides/Getting-Started.md) * [__`Guides`__](./docs/Guides/Index.md) * [__`Server`__](./docs/Reference/Server.md) * [__`Routes`__](./docs/Reference/Routes.md) * [__`Encapsulation`__](./docs/Reference/Encapsulation.md) * [__`Logging`__](./docs/Reference/Logging.md) * [__`Middleware`__](./docs/Reference/Middleware.md) * [__`Hooks`__](./docs/Reference/Hooks.md) * [__`Decorators`__](./docs/Reference/Decorators.md) * [__`Validation and Serialization`__](./docs/Reference/Validation-and-Serialization.md) * [__`Fluent Schema`__](./docs/Guides/Fluent-Schema.md) * [__`Lifecycle`__](./docs/Reference/Lifecycle.md) * [__`Reply`__](./docs/Reference/Reply.md) * [__`Request`__](./docs/Reference/Request.md) * [__`Errors`__](./docs/Reference/Errors.md) * [__`Content Type Parser`__](./docs/Reference/ContentTypeParser.md) * [__`Plugins`__](./docs/Reference/Plugins.md) * [__`Testing`__](./docs/Guides/Testing.md) * [__`Benchmarking`__](./docs/Guides/Benchmarking.md) * [__`How to write a good plugin`__](./docs/Guides/Write-Plugin.md) * [__`Plugins Guide`__](./docs/Guides/Plugins-Guide.md) * [__`HTTP2`__](./docs/Reference/HTTP2.md) * [__`Long Term Support`__](./docs/Reference/LTS.md) * [__`TypeScript and types support`__](./docs/Reference/TypeScript.md) * [__`Serverless`__](./docs/Guides/Serverless.md) * [__`Recommendations`__](./docs/Guides/Recommendations.md) []( ## Ecosystem - [Core](./docs/Guides/Ecosystem.md#core) - Core plugins maintained by the _Fastify_ [team](#team). - [Community](./docs/Guides/Ecosystem.md#community) - Community supported plugins. - [Live Examples]( - Multirepo with a broad set of real working examples. - [Discord]( - Join our discord server and chat with the maintainers. ## Support Please visit [Fastify help]( to view prior support issues and to ask new support questions. ## Contributing Whether reporting bugs, discussing improvements and new ideas or writing code, we welcome contributions from anyone and everyone. Please read the [CONTRIBUTING](./CONTRIBUTING.md) guidelines before submitting pull requests. ## Team _Fastify_ is the result of the work of a great community. Team members are listed in alphabetical order. **Lead Maintainers:** * [__Matteo Collina__]( , * [__Tomas Della Vedova__]( , * [__Manuel Spigolon__]( , * [__James Sumners__]( , ### Fastify Core team * [__Tommaso Allevi__]( , * [__Harry Brundage__]( , * [__David Mark Clements__]( , * [__Matteo Collina__]( , * [__Tomas Della Vedova__]( , * [__Dustin Deus__]( , * [__Ayoub El Khattabi__]( , * [__Denis Fcke__]( , * [__Carlos Fuentes__]( , * [__Rafael Gonzaga__]( , * [__Vincent Le Goff__]( * [__Luciano Mammino__]( , * [__Luis Orbaiceta__]( , * [__Maksim Sinik__]( , * [__Manuel Spigolon__]( , * [__James Sumners__]( , * [__Aras Abbasi__]( * [__Grgn Dayolu__]( ### Fastify Plugins team * [__Matteo Collina__]( , * [__Harry Brundage__]( , * [__Tomas Della Vedova__]( , * [__Ayoub El Khattabi__]( , * [__Carlos Fuentes__]( , * [__Vincent Le Goff__]( * [__Salman Mitha__]( * [__Maksim Sinik__]( , * [__Frazer Smith__]( * [__Manuel Spigolon__]( , * [__Simone Busoli__]( , * [__Grgn Dayolu__]( ### Great Contributors Great contributors on a specific area in the Fastify ecosystem will be invited to join this group by Lead Maintainers. * [__dalisoft__]( , * [__Luciano Mammino__]( , * [__Evan Shortiss__]( , **Past Collaborators** * [__aatay al__]( , * [__Trivikram Kamat__]( , * [__Cemre Mengu__]( , * [__Nathan Woltman__]( , * [__Ethan Arrowood__]( , ## Hosted by []( We are a [At-Large Project]( in the [OpenJS Foundation]( ## Sponsors Support this project by becoming a [SPONSOR](./SPONSORS.md)! Fastify has an [Open Collective]( page where we accept and manage financial contributions. ## Acknowledgements This project is kindly sponsored by: - [NearForm]( - [Platformatic]( Past Sponsors: - [LetzDoIt]( This list includes all companies that support one or more of the team members in the maintenance of this project. ## License Licensed under [MIT](./LICENSE). For your convenience, here is a list of all the licenses of our production dependencies: - MIT - ISC - BSD-3-Clause - BSD-2-Clause","2.2k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, feature request, discussion, documentation, typescript, semver-minor, v5.x, good first issue, bug, semver-major, plugin suggestion, dependencies, test, javascript, help wanted, github actions, bugfix, appreciation, wontfix, v4.x, v3.x, v2.x, v1.x, test-compare, stale, question, plugin, performances, notable-change, need info, missing types"
reactjs-interview-questions,sudheerj/reactjs-interview-questions,37174,"['JavaScript', 'HTML', 'CSS']","['reactjs', 'react-router', 'redux', 'javascript', 'javascript-framework']","# React Interview Questions & Answers > Click :star:if you like the project. Pull Request are highly appreciated. Follow me [@SudheerJonna]( for technical updates. --- --- I recommend this React course if youre serious about learning React and want to go beyond the basics Want to ace your coding interview and get hired at your dream company? Take this coding interview bootcamp --- **Note:** This repository is specific to ReactJS. Please check [Javascript Interview questions]( for core javascript questions and [DataStructures and Algorithms]( for DSA related questions or problems. ### Table of Contents Hide/Show table of contents | No. | Questions | | --- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | | **Core React** | | 1 | [What is React?](#what-is-react) | | 2 | [What is the history behind React evolution?](#What-is-the-history-behind-React-evolution) | | 3 | [What are the major features of React?](#what-are-the-major-features-of-react) | | 4 | [What is JSX?](#what-is-jsx) | | 5 | [What is the difference between Element and Component?](#what-is-the-difference-between-element-and-component) | | 6 | [How to create components in React?](#how-to-create-components-in-react) | | 7 | [When to use a Class Component over a Function Component?](#when-to-use-a-class-component-over-a-function-component) | | 8 | [What are Pure Components?](#what-are-pure-components) | | 9 | [What is state in React?](#what-is-state-in-react) | | 10 | [What are props in React?](#what-are-props-in-react) | | 11 | [What is the difference between state and props?](#what-is-the-difference-between-state-and-props) | | 12 | [What is the difference between HTML and React event handling?](#what-is-the-difference-between-html-and-react-event-handling) | | 13 | [What are synthetic events in React?](#what-are-synthetic-events-in-react) | | 14 | [What are inline conditional expressions?](#what-are-inline-conditional-expressions) | | 15 | [What is ""key"" prop and what is the benefit of using it in arrays of elements?](#what-is-key-prop-and-what-is-the-benefit-of-using-it-in-arrays-of-elements) | | 16 | [What is Virtual DOM?](#what-is-virtual-dom) | | 17 | [How Virtual DOM works?](#how-virtual-dom-works) | | 18 | [What is the difference between Shadow DOM and Virtual DOM?](#what-is-the-difference-between-shadow-dom-and-virtual-dom) | | 19 | [What is React Fiber?](#what-is-react-fiber) | | 20 | [What is the main goal of React Fiber?](#what-is-the-main-goal-of-react-fiber) | | 21 | [What are controlled components?](#what-are-controlled-components) | | 22 | [What are uncontrolled components?](#what-are-uncontrolled-components) | | 23 | [What is the difference between createElement and cloneElement?](#what-is-the-difference-between-createelement-and-cloneelement) | | 24 | [What is Lifting State Up in React?](#what-is-lifting-state-up-in-react) | | 25 | [What are Higher-Order components?](#what-are-higher-order-components) | | 26 | [What is children prop?](#what-is-children-prop) | | 27 | [How to write comments in React?](#how-to-write-comments-in-react) | | 28 | [What is reconciliation?](#what-is-reconciliation) | | 29 | [Does the lazy function support named exports?](#does-the-lazy-function-support-named-exports) | | 30 | [Why React uses className over class attribute?](#why-react-uses-classname-over-class-attribute) | | 31 | [What are fragments?](#what-are-fragments) | | 32 | [Why fragments are better than container divs?](#why-fragments-are-better-than-container-divs) | | 33 | [What are portals in React?](#what-are-portals-in-react) | | 34 | [What are stateless components?](#what-are-stateless-components) | | 35 | [What are stateful components?](#what-are-stateful-components) | | 36 | [How to apply validation on props in React?](#how-to-apply-validation-on-props-in-react) | | 37 | [What are the advantages of React?](#what-are-the-advantages-of-react) | | 38 | [What are the limitations of React?](#what-are-the-limitations-of-react) | | 39 | [What are the recommended ways for static type checking?](#what-are-the-recommended-ways-for-static-type-checking) | | 40 | [What is the use of react-dom package?](#what-is-the-use-of-react-dom-package) | | 41 | [What is ReactDOMServer?](#what-is-reactdomserver) | | 42 | [How to use InnerHtml in React?](#how-to-use-innerhtml-in-react) | | 43 | [How to use styles in React?](#how-to-use-styles-in-react) | | 44 | [How events are different in React?](#how-events-are-different-in-react) | | 45 | [What is the impact of indexes as keys?](#what-is-the-impact-of-indexes-as-keys) | | 46 | [How do you conditionally render components?](#how-do-you-conditionally-render-components) | | 47 | [Why we need to be careful when spreading props on DOM elements??](#why-we-need-to-be-careful-when-spreading-props-on-dom-elements) | | 48 | [How do you memoize a component?](#how-do-you-memoize-a-component) | | 49 | [How you implement Server-Side Rendering or SSR?](#how-you-implement-server-side-rendering-or-ssr) | | 50 | [How to enable production mode in React?](#how-to-enable-production-mode-in-react) | | 51 | [Do Hooks replace render props and higher order components?](#do-hooks-replace-render-props-and-higher-order-components) | | 52 | [What is a switching component?](#what-is-a-switching-component) | | 53 | [What are React Mixins?](#what-are-react-mixins) | | 54 | [What are the Pointer Events supported in React?](#what-are-the-pointer-events-supported-in-react) | | 55 | [Why should component names start with capital letter?](#why-should-component-names-start-with-capital-letter) | | 56 | [Are custom DOM attributes supported in React v16?](#are-custom-dom-attributes-supported-in-react-v16) | | 57 | [How to loop inside JSX?](#how-to-loop-inside-jsx) | | 58 | [How do you access props in attribute quotes?](#how-do-you-access-props-in-attribute-quotes) | | 59 | [What is React PropType array with shape?](#what-is-react-proptype-array-with-shape) | | 60 | [How to conditionally apply class attributes?](#how-to-conditionally-apply-class-attributes) | | 61 | [What is the difference between React and ReactDOM?](#what-is-the-difference-between-react-and-reactdom) | | 62 | [Why ReactDOM is separated from React?](#why-reactdom-is-separated-from-react) | | 63 | [How to use React label element?](#how-to-use-react-label-element) | | 64 | [How to combine multiple inline style objects?](#how-to-combine-multiple-inline-style-objects) | | 65 | [How to re-render the view when the browser is resized?](#how-to-re-render-the-view-when-the-browser-is-resized) | | 66 | [How to pretty print JSON with React?](#how-to-pretty-print-json-with-react) | | 67 | [Why you can't update props in React?](#why-you-cant-update-props-in-react) | | 68 | [How to focus an input element on page load?](#how-to-focus-an-input-element-on-page-load) | | 69 | [How can we find the version of React at runtime in the browser?](#how-can-we-find-the-version-of-react-at-runtime-in-the-browser) | | 70 | [How to add Google Analytics for react-router?](#how-to-add-google-analytics-for-react-router) | | 71 | [How do you apply vendor prefixes to inline styles in React?](#how-do-you-apply-vendor-prefixes-to-inline-styles-in-react) | | 72 | [How to import and export components using react and ES6?](#how-to-import-and-export-components-using-react-and-es6) | | 73 | [What are the exceptions on React component naming?](#what-are-the-exceptions-on-react-component-naming) | | 74 | [Is it possible to use async/await in plain React?](#is-it-possible-to-use-asyncawait-in-plain-react) | | 75 | [What are the common folder structures for React?](#what-are-the-common-folder-structures-for-react) | | 76 | [What are the popular packages for animation?](#what-are-the-popular-packages-for-animation) | | 77 | [What is the benefit of styles modules?](#what-is-the-benefit-of-styles-modules) | | 78 | [What are the popular React-specific linters?](#what-are-the-popular-react-specific-linters) | | | **React Router** | | 79 | [What is React Router?](#what-is-react-router) | | 80 | [How React Router is different from history library?](#how-react-router-is-different-from-history-library) | | 81 | [What are the \ components of React Router v4?](#what-are-the-router-components-of-react-router-v4) | | 82 | [What is the purpose of push and replace methods of history?](#what-is-the-purpose-of-push-and-replace-methods-of-history) | | 83 | [How do you programmatically navigate using React router v4?](#how-do-you-programmatically-navigate-using-react-router-v4) | | 84 | [How to get query parameters in React Router v4](#how-to-get-query-parameters-in-react-router-v4) | | 85 | [Why you get ""Router may have only one child element"" warning?](#why-you-get-router-may-have-only-one-child-element-warning) | | 86 | [How to pass params to history.push method in React Router v4?](#how-to-pass-params-to-historypush-method-in-react-router-v4) | | 87 | [How to implement default or NotFound page?](#how-to-implement-default-or-notfound-page) | | 88 | [How to get history on React Router v4?](#how-to-get-history-on-react-router-v4) | | 89 | [How to perform automatic redirect after login?](#how-to-perform-automatic-redirect-after-login) | | | **React Internationalization** | | 90 | [What is React Intl?](#what-is-react-intl) | | 91 | [What are the main features of React Intl?](#what-are-the-main-features-of-react-intl) | | 92 | [What are the two ways of formatting in React Intl?](#what-are-the-two-ways-of-formatting-in-react-intl) | | 93 | [How to use FormattedMessage as placeholder using React Intl?](#how-to-use-formattedmessage-as-placeholder-using-react-intl) | | 94 | [How to access current locale with React Intl](#how-to-access-current-locale-with-react-intl) | | 95 | [How to format date using React Intl?](#how-to-format-date-using-react-intl) | | | **React Testing** | |... [TRUNCATED]","8.9k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, dependencies, bug"
web,OCA/web,871,"['JavaScript', 'HTML', 'Python']","['hacktoberfest', 'erp', 'odoo', 'python']","[]( []( []( []( []( # web TODO: add repo description. [//]: # (addons) Available addons ---------------- addon | version | maintainers | summary --- | --- | --- | --- [web_action_conditionable](web_action_conditionable/) | 16.0.1.0.0 | | web_action_conditionable [web_advanced_search](web_advanced_search/) | 16.0.1.0.4 | []( | Easier and more powerful searching tools [web_apply_field_style](web_apply_field_style/) | 16.0.1.0.1 | | Apply css class style to fields from a dict parameters [web_calendar_slot_duration](web_calendar_slot_duration/) | 16.0.1.0.1 | []( | Customizable calendar slot durations [web_chatter_position](web_chatter_position/) | 16.0.1.0.2 | | Add an option to change the chatter position [web_company_color](web_company_color/) | 16.0.1.2.0 | | Web Company Color [web_copy_confirm](web_copy_confirm/) | 16.0.1.0.0 | | Show confirmation dialogue before copying records [web_dark_mode](web_dark_mode/) | 16.0.1.0.2 | | Enabled Dark Mode for the Odoo Backend [web_dashboard_tile](web_dashboard_tile/) | 16.0.1.0.2 | []( | Add Overview Dashboards with Tiles [web_dialog_size](web_dialog_size/) | 16.0.1.0.0 | | A module that lets the user expand a dialog box to the full screen width. [web_disable_export_group](web_disable_export_group/) | 16.0.1.0.0 | | Web Disable Export Group [web_domain_field](web_domain_field/) | 16.0.1.0.1 | | Use computed field as domain [web_environment_ribbon](web_environment_ribbon/) | 16.0.1.0.0 | | Web Environment Ribbon [web_field_numeric_formatting](web_field_numeric_formatting/) | 16.0.1.0.0 | | Allow to render float and integer fields without thousands separator [web_field_tooltip](web_field_tooltip/) | 16.0.1.1.0 | | Displays customizable tooltips for fields [web_group_expand](web_group_expand/) | 16.0.1.0.0 | | Group Expand Buttons [web_help](web_help/) | 16.0.2.0.0 | | Help Framework [web_hide_field_with_key](web_hide_field_with_key/) | 16.0.1.0.1 | []( | Hide fields for models [web_ir_actions_act_multi](web_ir_actions_act_multi/) | 16.0.1.0.0 | | Enables triggering of more than one action on ActionManager [web_ir_actions_act_window_message](web_ir_actions_act_window_message/) | 16.0.1.0.1 | | Show a message box to users [web_ir_actions_act_window_page](web_ir_actions_act_window_page/) | 16.0.1.0.0 | | Allows a developer to trigger a pager to show the previous or next next record in the form view [web_ir_actions_close_wizard_refresh_view](web_ir_actions_close_wizard_refresh_view/) | 16.0.1.0.0 | | Allow to refresh view data without reload the page. [web_listview_range_select](web_listview_range_select/) | 16.0.1.0.0 | | Enables selecting a range of records using the shift key [web_m2x_options](web_m2x_options/) | 16.0.1.1.3 | | web_m2x_options [web_no_bubble](web_no_bubble/) | 16.0.1.0.0 | | Remove the bubbles from the web interface [web_notify](web_notify/) | 16.0.2.0.0 | | Send notification messages to user [web_notify_channel_message](web_notify_channel_message/) | 16.0.1.0.0 | | Send an instant notification to channel users when a new message is posted [web_pivot_computed_measure](web_pivot_computed_measure/) | 16.0.1.0.0 | []( | Web Pivot Computed Measure [web_pwa_oca](web_pwa_oca/) | 16.0.1.0.0 | []( | Make Odoo a PWA [web_refresher](web_refresher/) | 16.0.3.1.0 | | Web Refresher [web_remember_tree_column_width](web_remember_tree_column_width/) | 16.0.1.0.2 | []( []( []( | Remember the tree columns' widths across sessions. [web_responsive](web_responsive/) | 16.0.1.2.9 | []( []( | Responsive web client, community-supported [web_save_discard_button](web_save_discard_button/) | 16.0.1.0.2 | []( | Save & Discard Buttons [web_search_with_and](web_search_with_and/) | 16.0.1.0.0 | | Use AND conditions on omnibar search [web_select_all_companies](web_select_all_companies/) | 16.0.1.0.1 | | Allows you to select all companies in one click. [web_send_message_popup](web_send_message_popup/) | 16.0.1.0.0 | | Web Send Message as Popup [web_sheet_full_width](web_sheet_full_width/) | 16.0.1.0.0 | | Use the whole available screen width when displaying sheets [web_theme_classic](web_theme_classic/) | 16.0.1.0.2 | []( | Contrasted style on fields to improve the UI. [web_timeline](web_timeline/) | 16.0.1.1.2 | []( | Interactive visualization chart to show events in time [web_touchscreen](web_touchscreen/) | 16.0.1.0.1 | []( []( | UX improvements for touch screens [web_tree_duplicate](web_tree_duplicate/) | 16.0.1.0.1 | []( | Duplicate records directly from the tree view. [web_tree_many2one_clickable](web_tree_many2one_clickable/) | 16.0.1.0.0 | | Open the linked resource when clicking on their name [web_widget_bokeh_chart](web_widget_bokeh_chart/) | 16.0.1.1.0 | []( []( | This widget allows to display charts using Bokeh library. [web_widget_datepicker_fulloptions](web_widget_datepicker_fulloptions/) | 16.0.1.0.0 | | Web Widget DatePicker Full Options [web_widget_domain_editor_dialog](web_widget_domain_editor_dialog/) | 16.0.1.0.0 | | Recovers the Domain Editor Dialog functionality [web_widget_dropdown_dynamic](web_widget_dropdown_dynamic/) | 16.0.1.0.0 | | This module adds support for dynamic dropdown widget [web_widget_image_webcam](web_widget_image_webcam/) | 16.0.1.0.0 | | Allows to take image with WebCam [web_widget_mpld3_chart](web_widget_mpld3_chart/) | 16.0.1.0.0 | []( []( | This widget allows to display charts using MPLD3 library. [web_widget_numeric_step](web_widget_numeric_step/) | 16.0.1.1.3 | []( []( | Web Widget Numeric Step [web_widget_open_tab](web_widget_open_tab/) | 16.0.2.0.0 | | Allow to open record from trees on new tab from tree views [web_widget_pattern](web_widget_pattern/) | 16.0.1.0.0 | []( | Allows to define a regex for validating input on the backend [web_widget_pattern_partner_autocomplete](web_widget_pattern_partner_autocomplete/) | 16.0.1.0.0 | []( | Allows to define a regex for validating input on the backend [web_widget_plotly_chart](web_widget_plotly_chart/) | 16.0.1.0.0 | []( | Allow to draw plotly charts. [web_widget_x2many_2d_matrix](web_widget_x2many_2d_matrix/) | 16.0.1.1.3 | []( | Show list fields as a matrix [//]: # (end addons) ## Licenses This repository is licensed under [AGPL-3.0](LICENSE). However, each module can have a totally different license, as long as they adhere to Odoo Community Association (OCA) policy. Consult each module's `__manifest__.py` file, which contains a `license` key that explains its license. ---- OCA, or the [Odoo Community Association]( is a nonprofit organization whose mission is to support the collaborative development of Odoo features and promote its widespread use.","1.8k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, bug, stale, enhancement, approved, needs fixing, ready to merge, help wanted, needs review, work in progress, no stale, dependencies, question, migration, wontfix, spam, needs more information, needs information, merged 🎉, invalid, duplicate, bot is merging ⏳, Awaiting CLA, 8.0, 7.0"
Awesome-Love-Code,sun0225SUN/Awesome-Love-Code,2087,"['JavaScript', 'HTML', 'CSS']",[],Awesome Love Code > # Web 001 002 003 004 005 006 007 008 009 010 011 012 013 014 015 016 017 018 019 020 021 022 023 024 025 026 027 028 029 030 031 032 033 034 > 032 fromann > > 034 Kaiser-DMr # Python 001 002 003 004 005 006 007 008 009 # MatLab 001 002 003 004 005 006 007 008 009 > 007--009 slandarer # C/C++ 001 002 003 004 005 006 > 004 # Vbs 001 002 003 004 005 006 # C# 001,"624, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
homepage,gethomepage/homepage,16616,"['JavaScript', 'CSS', 'Dockerfile']","['homepage', 'nextjs', 'node', 'react', 'self-hosted']","A modern, fully static, fast, secure fully proxied, highly customizable application dashboard with integrations for over 100 services and translations into multiple languages. Easily configured via YAML files or through docker label discovery. Homepage builds are kindly powered by DigitalOcean. # Features With features like quick search, bookmarks, weather support, a wide range of integrations and widgets, an elegant and modern design, and a focus on performance, Homepage is your ideal start to the day and a handy companion throughout it. - **Fast** - The site is statically generated at build time for instant load times. - **Secure** - All API requests to backend services are proxied, keeping your API keys hidden. Constantly reviewed for security by the community. - **For Everyone** - Images built for AMD64, ARM64, ARMv7, and ARMv6. - **Full i18n** - Support for over 40 languages. - **Service & Web Bookmarks** - Add custom links to the homepage. - **Docker Integration** - Container status and stats. Automatic service discovery via labels. - **Service Integration** - Over 100 service integrations, including popular starr and self-hosted apps. - **Information & Utility Widgets** - Weather, time, date, search, and more. - **And much more...** ## Docker Integration Homepage has built-in support for Docker, and can automatically discover and add services to the homepage based on labels. See the [Docker Service Discovery]( page for more information. ## Service Widgets Homepage also has support for over 100 3rd party services, including all popular starr apps, and most popular self-hosted apps. Some examples include: Radarr, Sonarr, Lidarr, Bazarr, Ombi, Tautulli, Plex, Jellyfin, Emby, Transmission, qBittorrent, Deluge, Jackett, NZBGet, SABnzbd, etc. As well as service integrations, Homepage also has a number of information providers, sourcing information from a variety of external 3rd party APIs. See the [Service]( page for more information. ## Information Widgets Homepage has built-in support for a number of information providers, including weather, time, date, search, glances and more. System and status information presented at the top of the page. See the [Information Providers]( page for more information. ## Customization Homepage is highly customizable, with support for custom themes, custom CSS & JS, custom layouts, formatting, localization and more. See the [Settings]( page for more information. # Getting Started For configuration options, examples and more, [please check out the homepage documentation]( ## With Docker Using docker compose: ```yaml version: ""3.3"" services: homepage: image: ghcr.io/gethomepage/homepage:latest container_name: homepage environment: PUID: 1000 -- optional, your user id PGID: 1000 -- optional, your group id ports: - 3000:3000 volumes: - /path/to/config:/app/config # Make sure your local config directory exists - /var/run/docker.sock:/var/run/docker.sock:ro # optional, for docker integrations restart: unless-stopped ``` or docker run: ```bash docker run --name homepage \ -e PUID=1000 \ -e PGID=1000 \ -p 3000:3000 \ -v /path/to/config:/app/config \ -v /var/run/docker.sock:/var/run/docker.sock:ro \ --restart unless-stopped \ ghcr.io/gethomepage/homepage:latest ``` ## With Node First, clone the repository: ```bash git clone ``` Then install dependencies and build the production bundle (I'm using pnpm here, you can use npm or yarn if you like): ```bash pnpm install pnpm build ``` If this is your first time starting, copy the `src/skeleton` directory to `config/` to populate initial example config files. Finally, run the server in production mode: ```bash pnpm start ``` or development mode: ```bash pnpm dev ``` # Configuration Please refer to the [homepage documentation]( website for more information. Everything you need to know about configuring Homepage is there. Please read everything carefully before asking for help, as most questions are answered there or are simple YAML configuration issues. # Development Install NPM packages, this project uses [pnpm]( (and so should you!): ```bash pnpm install ``` Start the development server: ```bash pnpm dev ``` Open [ to start. This is a [Next.js]( application, see their documentation for more information. # Documentation The homepage documentation is available at [ Homepage uses Material for MkDocs for documentation. To run the documentation locally, first install the dependencies: ```bash pip install -r requirements.txt ``` Then run the development server: ```bash mkdocs serve # or build, to build the static site ``` # Support & Suggestions If you have any questions, suggestions, or general issues, please start a discussion on the [Discussions]( page. ## Contributing & Contributors Contributions are welcome! Please see the [CONTRIBUTING.md](CONTRIBUTING.md) file for more information. Thanks to the over 200 contributors who have helped make this project what it is today! Especially huge thanks to [@shamoon]( who has been the backbone of this community from the very start.","948, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, wontfix, widget request, upstream, unconfirmed, security, question, python, not enough information, not a bug, javascript, help wanted, good first issue, github_actions, enhancement, duplicate, documentation, dependencies, completed, changes requested, cant reproduce, bug, breaking change"
OldTwitter,dimdenGD/OldTwitter,1655,"['JavaScript', 'CSS', 'HTML']","['chrome-extension', 'firefox-addon', 'firefox-extension', 'twitter', 'twitter-client']","# OldTwitter (2024) Browser extension to return old Twitter layout from 2015 (and option to use 2018 design). This extension doesn't add any CSS on top of original Twitter. It's fully original client that replaces Twitter, making it much faster than alternatives. ## Installation **Chrome, Edge, Opera, Brave & Chromium browsers:** [Chrome Web Store]( **Firefox:** [Addons For Firefox]( ## Donate If you like this extension please consider donating: - - ## Screenshots ## Features - Almost all of Twitter functionality is implemented - Both reverse chronological and algorithmical timelines support. And exclusive: Reverse chronological timeline with friends likes and follows (basically mix of both chrono and algo timelines) - Custom profile link colors supported - You can change custom profile link color and it'll appear for other extension users (priority: oldtwitter color db -> twitter color db -> default color) - Removes all analytics and tracking from Twitter - Track your unfollowers for free - Search, sort and filter your followers - Removes all ads - Easy download of videos and GIFs - Translate tweets without having to open them, also ability to set specific users/languages to autotranslate - Shows why tweets were added to algorthimical timeline - Dark mode support - Ability to enable/disable Twemoji, disable stars (favorites) back to likes (hearts), change font, default link color and any other color in extension - Lot of hotkeys - Mobile support with Kiwi Browser or Firefox - Custom CSS support ## Manual installation For beta version: - You need Github account, please register if you haven't first! - Go to [Actions page]( - Click on latest ""Pack Extension"" workflow run (first from top) - Download `OldTwitterChrome` if you're on Chromium based browsers and `OldTwitterFirefox` if you're on Firefox For stable version: - Go to [Releases page]( - Download `OldTwitterChrome.zip` if you're on Chromium based browsers and `OldTwitterFirefox.zip` if you're on Firefox #### Chromium - Unpack file anywhere - Go to `chrome://extensions` - Turn on Developer mode - Press ""Load unpacked"" and select folder with extension #### Firefox - Go to `about:debugging#/runtime/this-firefox` - Press ""Load Temporary Add-on"" and select zip file you downloaded **Installing this way on Firefox will remove it after closing browser. You need to use [Firefox Developer Edition]( instead for permament installation (see below).** #### Firefox Developer Edition - Go to `about:config` - Set `xpinstall.signatures.required` to `false` - Go to `about:addons` - Press ""Install Add-on From File"" and select zip file you downloaded *This reportedly works with [Firefox Extended Support Release]( and [Nightly]( as well.* ## FAQ #### Can you use this extension on Android? Yes, you can use Kiwi Browser to install it from [Chrome Web Store]( or Firefox Beta/Nightly to install it from [Addons For Firefox]( ([follow these steps for Firefox]( Once installed you can press on ""Add to Home screen"" button in Kiwi Browser to have it as standalone app. #### Is this extension safe? [The source code is available at GitHub]( so you can check everything yourself. It never sends any of your personal info anywhere. #### [insert thing] doesn't look like it was in 2015 Twitter! Extension won't be pixel perfect copy of old Twitter. I just took general look and feel of it. #### I installed extension and my timeline feels kinda unusual You had algorithmical timeline enabled. By default OldTwitter turns on reverse chronological timeline, you can switch it back to algorithmical timeline in settings or using the switch on the right side. #### How do I visit original Twitter client after installing extension? You need to add `?newtwitter=true` to end of your current URL. There's also a ""Open this page in new Twitter"" button on all pages on bottom right. #### Where are the extension settings? Click on your profile picture on top-right and then Settings button. #### I don't like 2015 design, can I have something more modern There's a setting to use design from 2018. ## Hotkeys You can disable all hotkeys in settings. General hotkeys. `F` - focus search bar. `ALT+F` - unfocus search bar (only when search bar is focused). `N` - open new tweet modal. `ALT+N` - close new tweet modal. `ESC` - close any modal. `M` - open/close user menu (use TAB to navigate). `CTRL+ENTER` - send tweet (when typing reply/quote/new tweet). Navigation hotkeys. `CTRL+ALT+O` - switch between old and new Twitter. `G+H` - Home `G+N` - Notifications `G+M` - Mentions `G+P` - Profile `G+L` - Likes `G+I` - Lists `G+M` - Messages `G+S` - Settings `G+B` - Bookmarks Active tweet hotkeys. On bottom-right of tweet element there's blue dot showing tweet is active. `S` - move to next tweet. `W` - move to previous tweet. `L` - (un)favorite/like tweet. `B` - (un)bookmark tweet. `T` - (un)retweet tweet. `R` - open reply box. `Q` - open quote box. `C` - copy tweet image. `D` - download first tweet media. `SPACE` - open full image / pause or resume video. `ENTER` - open tweet in new tab. These hotkeys work only when reply/quote box is opened. `ALT+R` - close reply box. `ALT+Q` - close quote box. These will work when reply/quote/new tweet modal is focused. `ALT+M` - upload media. `ALT+F` - remove first uploaded media. ## Translations [Help to translate this extension to your language.]( English - [dimden]( Russian - [dimden]( Ukrainian - [dimden]( French - [Aurore C.]( [zdimension]( [Pikatchoum]( [adriend]( Portuguese (Brazil) - [kigidere]( [guko]( [prophamoon]( Spanish - [rogerpb98]( [gaelcoral]( [hue]( Beelzenef, [elderreka]( Greek - [VasilisTheChu]( Romanian - [Skyrina]( [AlexSem]( Tagalog - [Eurasian]( [@conc1erge]( [@cheesee_its]( Latvian - [yourfriend]( Hebrew - ""ugh"", qqqq, [kriterin]( Nepali - [DimeDead]( Dutch - Puka1611 Japanese - [Chazuru]( [Nyankodasu]( [kamokakesu]( Korean - [Nyankodasu]( [han_eirin]( Turkish - [KayrabCebll]( [YordemEren]( Italian - [krek]( [Francesco]( Arabic - [Yours Truly,]( Thai - [0.21%BloodAlcohol]( Polish - lele, [nomi]( Vietnamese - [btmxh]( Traditional Chinese - [Oliver Tzeng]( [cirx1e]( Simplified Chinese - [am1006]( [CarimoWuling]( Czech - Menal German - [basti564]( Catalan - [elmees21]( Swedish - [actuallyaridan]( Bulgarian - [Scarlett7447)]( Norwegian - [twistquest]( Indonesian - [lorizade]( [Feerse_]( [DaGamerFiles]( [KuchingNeko](","147, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, bug, enhancement, low priority, question, wontfix, invalid, help wanted, good first issue, duplicate, documentation"
chatgpt-mac,vincelwt/chatgpt-mac,6331,"['JavaScript', 'HTML', 'CSS']","['chatgpt', 'gpt-3', 'macos', 'menubar', 'menubar-app']","Building in AI? My new project is an [open-source toolkit for AI devs]( a star would mean the world --- # ChatGPT for desktop This is a simple app that makes ChatGPT live in your menubar. You can use Cmd+Shift+G (Mac) or Ctrl+Shift+G (Win) to quickly open it from anywhere. Download: - [Mac Arm64 .dmg]( - [Mac Intel .dmg]( No Windows binaries currently offered. Clone the repo, npm install electron-forge and run. ## Credit All credit and copyrights goes to OpenAI. ## Author You can find me on Twitter [@vincelwt](","510, Code, Issues, Pull requests, Actions, Security, Insights, enhancement, help wanted, bug, documentation, wontfix, question, need more info, invalid, good first issue, duplicate"
javascript-interview-questions,sudheerj/javascript-interview-questions,22202,['JavaScript'],"['javascript', 'javascript-interview-questions', 'javascript-applications', 'vanilla-javascript', 'core-javascript']","# JavaScript Interview Questions & Answers > Click :star:if you like the project and follow [@SudheerJonna]( for more updates. Coding questions available [here](#coding-exercise). PDF and Epub versions available at [actions tab]( --- Take this JavaScript Projects course to go from a JS beginner to confidently building your own projects Take this coding interview bootcamp if youre serious about getting hired and dont have a CS degree Take this Advanced JavaScript Course to learn advanced JS concepts and become a top JS developer --- **Note:** Please check [DataStructures and Algorithms]( for DSA related questions or problems. ### Table of Contents | No. | Questions | | --- | ------------------------------------------------------------------------------------------------------------------------------------------------------------- | | 1 | [What are the possible ways to create objects in JavaScript](#what-are-the-possible-ways-to-create-objects-in-javascript) | | 2 | [What is a prototype chain](#what-is-a-prototype-chain) | | 3 | [What is the difference between Call, Apply and Bind](#what-is-the-difference-between-call-apply-and-bind) | | 4 | [What is JSON and its common operations](#what-is-json-and-its-common-operations) | | 5 | [What is the purpose of the array slice method](#what-is-the-purpose-of-the-array-slice-method) | | 6 | [What is the purpose of the array splice method](#what-is-the-purpose-of-the-array-splice-method) | | 7 | [What is the difference between slice and splice](#what-is-the-difference-between-slice-and-splice) | | 8 | [How do you compare an Object with a Map](#how-do-you-compare-object-and-map) | | 9 | [What is the difference between == and === operators](#what-is-the-difference-between--and--operators) | | 10 | [What are lambda expression or arrow functions](#what-are-lambda-or-arrow-functions) | | 11 | [What is a first class function](#what-is-a-first-class-function) | | 12 | [What is a first order function](#what-is-a-first-order-function) | | 13 | [What is a higher order function](#what-is-a-higher-order-function) | | 14 | [What is a unary function](#what-is-a-unary-function) | | 15 | [What is the currying function](#what-is-the-currying-function) | | 16 | [What is a pure function](#what-is-a-pure-function) | | 17 | [What is the purpose of the let keyword](#what-is-the-purpose-of-the-let-keyword) | | 18 | [What is the difference between let and var](#what-is-the-difference-between-let-and-var) | | 19 | [What is the reason to choose the name let as a keyword](#what-is-the-reason-to-choose-the-name-let-as-a-keyword) | | 20 | [How do you redeclare variables in switch block without an error](#how-do-you-redeclare-variables-in-switch-block-without-an-error) | | 21 | [What is the Temporal Dead Zone](#what-is-the-temporal-dead-zone) | | 22 | [What is IIFE(Immediately Invoked Function Expression)](#what-is-iifeimmediately-invoked-function-expression) | | 23 | [How do you decode or encode a URL in JavaScript?](#how-do-you-decode-or-encode-a-url-in-javascript) | | 24 | [What is memoization](#what-is-memoization) | | 25 | [What is Hoisting](#what-is-hoisting) | | 26 | [What are classes in ES6](#what-are-classes-in-es6) | | 27 | [What are closures](#what-are-closures) | | 28 | [What are modules](#what-are-modules) | | 29 | [Why do you need modules](#why-do-you-need-modules) | | 30 | [What is scope in javascript](#what-is-scope-in-javascript) | | 31 | [What is a service worker](#what-is-a-service-worker) | | 32 | [How do you manipulate DOM using a service worker](#how-do-you-manipulate-dom-using-a-service-worker) | | 33 | [How do you reuse information across service worker restarts](#how-do-you-reuse-information-across-service-worker-restarts) | | 34 | [What is IndexedDB](#what-is-indexeddb) | | 35 | [What is web storage](#what-is-web-storage) | | 36 | [What is a post message](#what-is-a-post-message) | | 37 | [What is a cookie](#what-is-a-cookie) | | 38 | [Why do you need a Cookie](#why-do-you-need-a-cookie) | | 39 | [What are the options in a cookie](#what-are-the-options-in-a-cookie) | | 40 | [How do you delete a cookie](#how-do-you-delete-a-cookie) | | 41 | [What are the differences between cookie, local storage and session storage](#What-are-the-differences-between-cookie-local-storage-and-session-storage) | | 42 | [What is the main difference between localStorage and sessionStorage](#what-is-the-main-difference-between-localstorage-and-sessionstorage) | | 43 | [How do you access web storage](#how-do-you-access-web-storage) | | 44 | [What are the methods available on session storage](#what-are-the-methods-available-on-session-storage) | | 45 | [What is a storage event and its event handler](#what-is-a-storage-event-and-its-event-handler) | | 46 | [Why do you need web storage](#why-do-you-need-web-storage) | | 47 | [How do you check web storage browser support](#how-do-you-check-web-storage-browser-support) | | 48 | [How do you check web workers browser support](#how-do-you-check-web-workers-browser-support) | | 49 | [Give an example of a web worker](#give-an-example-of-a-web-worker) | | 50 | [What are the restrictions of web workers on DOM](#what-are-the-restrictions-of-web-workers-on-dom) | | 51 | [What is a promise](#what-is-a-promise) | | 52 | [Why do you need a promise](#why-do-you-need-a-promise) | | 53 | [What are the three states of promise](#what-are-the-three-states-of-promise) | | 54 | [What is a callback function](#what-is-a-callback-function) | | 55 | [Why do we need callbacks](#why-do-we-need-callbacks) | | 56 | [What is a callback hell](#what-is-a-callback-hell) | | 57 | [What are server-sent events](#what-are-server-sent-events) | | 58 | [How do you receive server-sent event notifications](#how-do-you-receive-server-sent-event-notifications) | | 59 | [How do you check browser support for server-sent events](#how-do-you-check-browser-support-for-server-sent-events) | | 60 | [What are the events available for server sent events](#what-are-the-events-available-for-server-sent-events) | | 61 | [What are the main rules of promise](#what-are-the-main-rules-of-promise) | | 62 | [What is callback in callback](#what-is-callback-in-callback) | | 63 | [What is promise chaining](#what-is-promise-chaining) | | 64 | [What is promise.all](#what-is-promiseall) | | 65 | [What is the purpose of the race method in promise](#what-is-the-purpose-of-the-race-method-in-promise) | | 66 | [What is a strict mode in javascript](#what-is-a-strict-mode-in-javascript) | | 67 | [Why do you need strict mode](#why-do-you-need-strict-mode) | | 68 | [How do you declare strict mode](#how-do-you-declare-strict-mode) | | 69 | [What is the purpose of double exclamation](#what-is-the-purpose-of-double-exclamation) | | 70 | [What is the purpose of the delete operator](#what-is-the-purpose-of-the-delete-operator) | | 71 | [What is typeof operator](#what-is-typeof-operator) | | 72 | [What is undefined property](#what-is-undefined-property) | | 73 | [What is null value](#what-is-null-value) | | 74 | [What is the difference between null and undefined](#what-is-the-difference-between-null-and-undefined) | | 75 | [What is eval](#What-is-eval) | | 76 | [What is the difference between window and document](#what-is-the-difference-between-window-and-document) | | 77 | [How do you access history in javascript](#how-do-you-access-history-in-javascript) | | 78 | [How do you detect caps lock key turned on or not](#how-do-you-detect-caps-lock-key-turned-on-or-not) | | 79 | [What is isNaN](#what-is-isnan) | | 80 | [What are the differences between undeclared and undefined variables](#what-are-the-differences-between-undeclared-and-undefined-variables) | | 81 | [What are global variables](#what-are-global-variables) | | 82 | [What are the problems with global variables](#what-are-the-problems-with-global-variables) | | 83 | [What is NaN property](#what-is-nan-property) | | 84 | [What is the purpose of isFinite function](#what-is-the-purpose-of-isfinite-function) | | 85 | [What is an event flow](#what-is-an-event-flow) | | 86 | [What is event bubbling](#what-is-event-bubbling) | | 87 | [What is event capturing](#what-is-event-capturing) | | 88 | [How do you submit a form using JavaScript](#how-do-you-submit-a-form-using-javascript) | | 89 | [How do you find operating system details](#how-do-you-find-operating-system-details) | | 90 | [What is the difference between document load and DOMContentLoaded events](#what-is-the-difference-between-document-load-and-domcontentloaded-events) | | 91 | [What is the difference between native, host and user objects](#what-is-the-difference-between-native-host-and-user-objects) | | 92 | [What are the tools or techniques used for debugging JavaScript code](#what-are-the-tools-or-techniques-used-for-debugging-javascript-code) | | 93 | [What are the pros and cons of promises over callbacks](#what-are-the-pros-and-cons-of-promises-over-callbacks) | | 94 | [What is the difference between an attribute and a property](#what-is-the-difference-between-an-attribute-and-a-property) | | 95 | [What is same-origin policy](#what-is-same-origin-policy) | | 96 | [What is the purpose of void 0](#what-is-the-purpose-of-void-0) | | 97 | [Is JavaScript a compiled or interpreted language](#is-javascript-a-compiled-or-interpreted-language) | | 98 | [Is JavaScript a case-sensitive language](#is-javascript-a-case-sensitive-language) | | 99 | [Is there any relation between Java and JavaScript](#is-there-any-relation-between-java-and-javascript) | | 100 | [What are events](#what-are-events) | | 101 | [Who created javascript](#who-created-javascript) | | 102 | [What is the use of preventDefault method](#what-is-the-use-of-preventdefault-method) | | 103 | [What is the use of stopPropagation method](#what-is-the-use-of-stoppropagation-method) | | 104 | [What are the steps involved in return false usage](#what-are-the-steps-involved-in-return-false-usage) | | 105 | [What is BOM](#what-is-bom) | | 106 | [What is the use of setTimeo... [TRUNCATED]","6.4k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, hacktoberfest-accepted, good first issue, enhancement, duplicate, bug"
meshery,meshery/meshery,4946,"['JavaScript', 'Go', 'Mustache']","['meshery', 'management-plane', 'hacktoberfest', 'kubernetes', 'docker']","If youre using Meshery or if you like the project, please this repository to show your support! MESHERY IS A CLOUD NATIVE COMPUTING FOUNDATION PROJECT A self-service engineering platform, Meshery, is the open source, cloud native manager that enables the design and management of all Kubernetes-based infrastructure and applications (multi-cloud). Among other features, As an extensible platform, Meshery offers visual and collaborative GitOps, freeing you from the chains of YAML while managing Kubernetes multi-cluster deployments. Try Meshery in the Cloud Native Playground (teaser video) - [Functionality](#functionality) - [Meshery Architecture](#meshery-architecture) - [Join the Meshery community!](#join-the-meshery-community) - [Contributing](#contributing) - [Stargazers](#stargazers) - [License](#license) # Functionality Cloud Native Lifecycle Management Meshery manages the provisioning, configuration and operation of your Kubernetes clusters while supporting hundreds of different types of cloud native infrastructure integrations. Meshery also offers a catalog of curated design templates filled with configuration best practices. Using a GitOps-centric approach, visually and collaboratively design and manage your infrastructure and microservices. Extend Meshery as your self-service engineering platform by taking advantage of its [vast set of extensibility features]( including gRPC adapters, hot-loadable Reactjs packages and Golang plugins, subscriptions on NATS topics, consumable _and_ extendable API interfaces via REST and GraphQL. Multi-Cluster Kubernetes, Multi-Cloud, and Cloud Native Configuration Management Meshery supports 250+ integrations. Assess your cloud native infrastructure configuration against deployment and operational best practices with Meshery's configuration validator. Manage your workloads with confidence. Check your Kubernetes configuration for anti-patterns and avoid common pitfalls. Context-Aware Policies For Applications Leverage built-in relationships to enforce configuration best practices consistently from code to Kubernetes. Enhance development process by building custom rules in Open Policy Agent's Rego query language. Manage data plane intelligence with WebAssembly filters Dynamically load and manage your own WebAssembly filters in Envoy-based service meshes. See Image Hub. Performance Management Adhering to Cloud Native Standards In an effort to produce service mesh agnostic tooling, Meshery uses the Service Mesh Performance specification as a common format to capture and measure your infrastructure's performance against a universal cloud native performance index. As an implementation of Service Mesh Interface (SMI), Meshery participates in advancing cloud native infrastructure adoption through the standardization of APIs. Standardized Cloud Native Performance Management Meshery is the cloud native utility for uniformly managing the performance of microservices and the infrastructure that run them. As an implementation of the Service Mesh Performance ([SMP]( Meshery enables you to measure the value provided by Docker, Kubernetes, or a service mesh in the context of the overhead incurred. ## Meshery Architecture You may deploy Meshery internal to your cluster or external to your cluster. Learn more about Meshery's architecture. Get Started with Meshery Using `mesheryctl` Meshery runs as a set of containers inside or outside of your Kubernetes clusters. curl -L | bash - Use the quick start guide. See all supported platforms See the [getting started]( section to quickly deploy Meshery on any of these supported platforms: | Platform | Supported? | | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :---------: | | [Docker]( | | | [Docker - Docker App]( | | | [Docker - Docker Extension]( | | | [Kubernetes]( | | | [Kubernetes - AKS]( | | | [Kubernetes - Docker Desktop]( | | | [Kubernetes - EKS]( | | | [Kubernetes - GKE]( | | | [Kubernetes - Helm]( | | | [Kubernetes - kind]( | | | [Kubernetes - Minikube]( | | | Kubernetes - OpenShift | In Progress | | [Linux]( | | | [Mac]( | | | [Mac - Homebrew]( | | | [Windows]( | | | [Scoop]( | | | [WSL2]( | | | Raspberry Pi | In Progress | [Meshery documentation]( offers thorough installation guides for your platform of choice. ## Join the Meshery community! Our projects are community-built and welcome collaboration. Be sure to see the Contributor Journey Map and Community Handbook for a tour of resources available to you and the Repository Overview for a cursory description of repository by technology and programming language. Jump into community Slack or discussion forum to participate. Find your MeshMate MeshMates are experienced Layer5 community members, who will help you learn your way around, discover live projects, and expand your community network. Connect with a Meshmate today! Find out more on the Layer5 community. Join any or all of the weekly meetings on community calendar. Watch community meeting recordings. Fill-in a community member form to gain access to community resources. Discuss in the Community Forum. Explore more in the Community Handbook. Not sure where to start? Grab an open issue with the help-wanted label. ## Contributing Please do! We're a warm and welcoming community of open source contributors. Please join. All types of contributions are welcome. Be sure to read the [Contributor Guides]( for a tour of resources available to you and how to get started. ### Stargazers If you like Meshery, please star this repository to show your support! ### License This repository and site are available as open-source under the terms of the [Apache 2.0 License](","1.5k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, issue/willfix, kind/enhancement, component/ui, kind/bug, help wanted, language/go, area/models, area/docs, framework/react, component/server, language/javascript, component/mesheryctl, component/extensions, framework/jekyll, language/markdown, issue/remind, good first issue, area/ci, issue/design required, kubernetes, type/visual-design, area/devops, kind/feature, kind/chore, kind/epic, component/catalog, area/ux, go, figma, issue/stale"
simple-icons,simple-icons/simple-icons,18315,"['JavaScript', 'Dockerfile']","['brand', 'branding', 'brands', 'brand-assets', 'icons']","Simple Icons Over 3100 Free SVG icons for popular brands. See them all on one page at SimpleIcons.org. Contributions, corrections & requests can be made on GitHub. ## Usage > [!IMPORTANT]\ > We ask that all users read our [legal disclaimer]( before using icons from Simple Icons. ### General Usage Icons can be downloaded as SVGs directly from [our website]( - simply click the download button of the icon you want, and the download will start automatically. ### CDN Usage Icons can be served from a CDN such as [jsDelivr]( or [Unpkg]( Simply use the `simple-icons` npm package and specify a version in the URL like the following: ```html ``` Where `[ICON SLUG]` is replaced by the [slug] of the icon you want to use, for example: ```html ``` These examples use the latest major version. This means you won't receive any updates following the next major release. You can use `@latest` instead to receive updates indefinitely. However, this will result in a `404` error if the icon is removed. #### CDN with colors We also provide a CDN service which allows you to use colors. ```html ``` Where `[COLOR]` is optional, and can be replaced by the [hex colors]( or [CSS keywords]( of the icon you want to you use. The color is defaulted to the HEX color of the icon shown in [simpleicons.org website]( `[DARK_MODE_COLOR]` is used for dark mode. The [CSS prefers-color-scheme]( will be used when a value is specified. For example: ```html ``` You can use a `viewbox=auto` parameter to get a auto-sized viewbox. This is useful if you want all icons rendered with consistent size: ```html ``` ### Node Usage The icons are also available through our npm package. To install, simply run: ```shell npm install simple-icons ``` All icons are imported from a single file, where `[ICON SLUG]` is replaced by a capitalized [slug]. We highly recommend using a bundler that can tree shake such as [webpack]( to remove the unused icon code: ```javascript // Import a specific icon by its slug as: // import { si[ICON SLUG] } from 'simple-icons' // For example: // use import/esm to allow tree shaking import { siSimpleicons } from 'simple-icons'; // or with require/cjs const { siSimpleicons } = require('simple-icons'); ``` It will return an icon object: ```javascript console.log(siSimpleicons); /* { title: 'Simple Icons', slug: 'simpleicons', hex: '111111', source: ' svg: '...', path: 'M12 12v-1.5c-2.484 ...', guidelines: ' license: { type: '...', url: ' } } NOTE: the `guidelines` entry will be `undefined` if we do not yet have guidelines for the icon. NOTE: the `license` entry will be `undefined` if we do not yet have license data for the icon. */ ``` If you need to iterate over all icons, use: ```javascript import * as icons from 'simple-icons'; ``` #### TypeScript Usage Type definitions are bundled with the package. ```typescript import type { SimpleIcon } from 'simple-icons'; ``` ### PHP Usage The icons are also available through our Packagist package. To install, simply run: ```shell composer require simple-icons/simple-icons ``` The package can then be used as follows, where `[ICON SLUG]` is replaced by a [slug]: ```php ... ?> ``` ## Third-Party Extensions The below are known extensions to third-party tools. | Extension | Author | | :- | :- | | [Blender add-on]( | [@mondeja]( | | [Boxy SVG library]( | [@Jarek]( | | [Drawio library]( | [@mondeja]( | | [Figma plugin]( | [@LitoMore]( | | [Miro app]( | [@LitoMore]( | | [Raycast extension]( | [@LitoMore]( | | [Stream Deck icon pack]( | [@mackenly]( | | | | [Webflow app]( | [@diegoliv]( | Maintain an extension? [Submit a PR][open-pr] to include it in the list above. ## Third-Party Libraries The below are known third-party libraries for use in your own projects. We only keep items in the list that are at least up to date with our previous major version. | Library | Author | License | Simple Icons Version | | :-- | :-- | :-: | :-: | | [Blazor Nuget package]( | [@TimeWarpEngineering]( | | | | [Flutter package]( | [@jlnrrg]( | | | [Framer component]( | [@LitoMore]( | | | | [Hugo module]( | [@foo-dogsquared]( | | | | [Kirby plugin]( | [@runxel]( | | | | [LaTeX package]( | [@ineshbose]( | | | | [Laravel package]( | [@adrian-ub]( | | | | [React package]( | [@wootsbot]( | | | | [Ruby gem]( | [@thepew]( | | | | [Svelte package]( | [@wootsbot]( | | | | [Vue 3 package]( | [@wyatt-herkamp]( | | | Maintain a library? [Submit a PR][open-pr] to include it in the list above. ## Contribute []( []( []( []( Information describing how to contribute can be found in the file [CONTRIBUTING.md]( [slug]: [open-pr]: ## Contributors","2.5k, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, new icon, permission required, vector unavailable, assessing, good first issue, awaiting reply, meta, update icon/data, in discussion, package, pending, incomplete, breaking change, out of scope, abandoned, won't add, skip release note, release, duplicate, docs, dependencies"
33-js-concepts,leonardomso/33-js-concepts,62318,['JavaScript'],"['javascript', 'concepts', 'nodejs', 'react', 'angular']","33 Concepts Every JavaScript Developer Should Know ## Introduction This repository was created with the intention of helping developers master their concepts in JavaScript. It is not a requirement, but a guide for future studies. It is based on an article written by Stephen Curtis and you can read it [here]( ** Considered by GitHub as one of the [top open source projects of 2018!]( ## Community Feel free to submit a PR by adding a link to your own recaps or reviews. If you want to translate the repo into your native language, please feel free to do so. All the translations for this repo will be listed below: - [ (Arabic)]( Amr Elsekilly - [ (Bulgarian)]( - thewebmasterp - [ (Chinese)]( Re Tian - [Portugus do Brasil (Brazilian Portuguese)]( Tiago Boeing - [ (Korean)]( Suin Lee - [Espaol (Spanish)]( Adonis Mendoza - [Trke (Turkish)]( lker Demir - [ (Russian)]( Mihail Gumennii - [Ting Vit (Vietnamese)]( Nguyn Trn Chung - [Polski (Polish)]( Dawid Lipinski - [ (Persian)]( Majid Alavizadeh - [Bahasa Indonesia (Indonesian)]( Rijdzuan Sampoerna - [Franais (French)]( Robin Mtral - [ (Hindi)]( Vikas Chauhan - [ (Greek)]( Dimitris Zarachanis - [ (Japanese)]( oimo23 - [Deutsch (German)]( burhannn - [ (Ukrainian)]( Andrew Savetchuk - [ (Sinhala)]( Udaya Shamendra - [Italiano (Italian)]( Gianluca Fiore - [Latvieu (Latvian)]( - Jnis vns - [Afaan Oromoo (Oromo)]( - Amanuel Dagnachew - [ (Thai)]( Arif Waram - [Catal (Catalan)]( Mario Estrada - [Svenska (Swedish)]( Fenix Hongell - [ (Khmer)]( Chrea Chanchhunneng - [ (Ethiopian)]( - Miniyahil Kebede( ) - [ (Belarussian)]( Dzianis Yafimau - [O'zbekcha (Uzbek)]( Shokhrukh Usmonov - [Urdu ()]( Yasir Nawaz - [Marathi ()]( - Dhruv Chandak - [ (Hindi)]( Mahima Chauhan - [ (Bengali)]( Jisan Mia - [ (Gujarati)]( Vatsal Bhuva - [ (Sindhi)]( Sunny Gandhwani - [ (Bhojpuri)]( Pronay Debnath - [ (Punjabi)]( Harsh Dev Pathak - [ (Tamil)]( - Jaimin Chovatia - [Latin (Latin)]( Harsh Dev Pathak - [ (Malayalam)]( Akshay Manoj --- ## Table of Contents 1. **[Call Stack](#1-call-stack)** 2. **[Primitive Types](#2-primitive-types)** 3. **[Value Types and Reference Types](#3-value-types-and-reference-types)** 4. **[Implicit, Explicit, Nominal, Structuring and Duck Typing](#4-implicit-explicit-nominal-structuring-and-duck-typing)** 5. **[== vs === vs typeof](#5--vs--vs-typeof)** 6. **[Function Scope, Block Scope and Lexical Scope](#6-function-scope-block-scope-and-lexical-scope)** 7. **[Expression vs Statement](#7-expression-vs-statement)** 8. **[IIFE, Modules and Namespaces](#8-iife-modules-and-namespaces)** 9. **[Message Queue and Event Loop](#9-message-queue-and-event-loop)** 10. **[setTimeout, setInterval and requestAnimationFrame](#10-settimeout-setinterval-and-requestanimationframe)** 11. **[JavaScript Engines](#11-javascript-engines)** 12. **[Bitwise Operators, Type Arrays and Array Buffers](#12-bitwise-operators-type-arrays-and-array-buffers)** 13. **[DOM and Layout Trees](#13-dom-and-layout-trees)** 14. **[Factories and Classes](#14-factories-and-classes)** 15. **[this, call, apply and bind](#15-this-call-apply-and-bind)** 16. **[new, Constructor, instanceof and Instances](#16-new-constructor-instanceof-and-instances)** 17. **[Prototype Inheritance and Prototype Chain](#17-prototype-inheritance-and-prototype-chain)** 18. **[Object.create and Object.assign](#18-objectcreate-and-objectassign)** 19. **[map, reduce, filter](#19-map-reduce-filter)** 20. **[Pure Functions, Side Effects, State Mutation and Event Propagation](#20-pure-functions-side-effects-state-mutation-and-event-propagation)** 21. **[Closures](#21-closures)** 22. **[High Order Functions](#22-high-order-functions)** 23. **[Recursion](#23-recursion)** 24. **[Collections and Generators](#24-collections-and-generators)** 25. **[Promises](#25-promises)** 26. **[async/await](#26-asyncawait)** 27. **[Data Structures](#27-data-structures)** 28. **[Expensive Operation and Big O Notation](#28-expensive-operation-and-big-o-notation)** 29. **[Algorithms](#29-algorithms)** 30. **[Inheritance, Polymorphism and Code Reuse](#30-inheritance-polymorphism-and-code-reuse)** 31. **[Design Patterns](#31-design-patterns)** 32. **[Partial Applications, Currying, Compose and Pipe](#32-partial-applications-currying-compose-and-pipe)** 33. **[Clean Code](#33-clean-code)** --- ## 1. Call Stack ### Reference - [Call Stack MDN]( ### Articles - [Understanding Javascript Call Stack, Event Loops Gaurav Pandvia]( - [Understanding the JavaScript Call Stack Charles Freeborn]( - [Javascript: What Is The Execution Context? What Is The Call Stack? Valentino Gagliardi]( - [What is the JS Event Loop and Call Stack? Jess Telford]( - [Understanding Execution Context and Execution Stack in Javascript Sukhjinder Arora]( - [How JavaScript Works Under The Hood: An Overview of JavaScript Engine, Heap and, Call Stack Bipin Rajbhar]( - [The JS Call stack Explained in 9 minutes]( - Colt Steel (YouTube) ### Videos - [Javascript: the Call Stack explained Coding Blocks India]( - [The JS Call Stack Explained In 9 Minutes Colt Steele]( - [What is the Call Stack? Eric Traub]( - [The Call Stack Kevin Drumm]( - [Understanding JavaScript Execution Codesmith]( - [The Ultimate Guide to Execution Contexts, Hoisting, Scopes, and Closures in JavaScript Tyler McGinnis]( - [What the heck is the event loop anyway? Philip Roberts]( - [La PILA DE EJECUCIN (Call Stack) de JavaScript La Cocina del Cdigo]( - [How JavaScript Code is executed? & Call Stack Akshay Saini]( - [Call Stacks - CS50]( - [Learn the JavaScript Call Stack - codecupdev]( - [JavaScript Functions and the Call Stack | How does the Call stack work - Chidre'sTechTutorials]( **[ Back to Top](#table-of-contents)** --- ## 2. Primitive Types ### Reference - [JavaScript data types and data structures MDN]( ### Articles - [Primitive and Non-primitive data-types in JavaScript - GeeksforGeeks]( - [Javascript variables (Beginner thinking)]( - [How numbers are encoded in JavaScript Dr. Axel Rauschmayer]( - [What You Need to Know About JavaScript Number Type Max Wizard K]( - [What Every JavaScript Developer Should Know About Floating Point Numbers Chewxy]( - [The Secret Life of JavaScript Primitives Angus Croll]( - [Primitive Types Flow]( - [(Not) Everything in JavaScript is an Object Daniel Li]( - [JavaScript data types and data structures MDN]( - [Diving Deeper in JavaScripts Objects Arfat Salman]( - [The differences between Object.freeze() vs Const in JavaScript Bolaji Ayodeji]( - [Object to primitive conversion JavaScript.info]( - [Methods of primitives - Javascript.info]( ### Videos - [JavaScript Reference vs Primitive Types Academind]( - [JavaScript Primitive Types Simon Sez IT]( - [Value Types and Reference Types in JavaScript Programming with Mosh]( - [JavaScript Primitive Data Types Avelx]( - [Everything you never wanted to know about JavaScript numbers Bartek Szopka]( - [What are variables in Javascript? JS For Everyone]( - [TIPOS DE DATOS PRIMITIVOS en JAVASCRIPT - La Cocina del Cdigo]( - [Data Type in JavaScript - ScholarHat]( **[ Back to Top](#table-of-contents)** --- ## 3. Value Types and Reference Types ### Articles - [Explaining Value vs. Reference in Javascript Arnav Aggarwal]( - [Primitive Types & Reference Types in JavaScript Bran van der Meer]( - [Value Types, Reference Types and Scope in JavaScript Ben Aston]( - [Back to roots: JavaScript Value vs Reference Miro Koczka]( - [Grasp By Value and By Reference in JavaScript Lna Faure]( - [JavaScript Reference and Copy Variables Vtor Capretz]( - [JavaScript Primitive vs Reference Values]( - [JavaScript by Reference vs. by Value nrabinowitz]( - [JavaScript Interview Prep: Primitive vs. Reference Types Mike Cronin]( - [forEach method in JavaScript - A Comprehensive Guide]( - [JavaScript map vs. forEach: When to Use Each One - Sajal Soni]( ### Videos - [Javascript Pass by Value vs Pass by Reference techsith]( - [JavaScript Value vs Reference Types Programming with Mosh]( - [VALORES vs REFERENCIAS en JAVASCRIPT - La Cocina del Cdigo]( - [JavaScript - Reference vs Primitive Values/ Types - Academind]( - [Value Types and Reference Types in JavaScript - Programming with Mosh]( **[ Back to Top](#table-of-contents)** --- ## 4. Implicit, Explicit, Nominal, Structuring and Duck Typing ### Articles - [What you need to know about Javascript's Implicit Coercion Promise Tochi]( - [JavaScript Type Coercion Explained Alexey Samoshkin]( - [Javascript Coercion Explained Ben Garrison]( - [What exactly is Type Coercion in Javascript? - Stack Overflow]( ### Videos - [== ? === ??? ...#@^% - Shirmung Bielefeld]( - [Coercion in Javascript - Hitesh Choudhary]( - [JavaScript Questions: What is Coercion? - Steven Hancock]( - [Typing: Static vs Dynamic, Weak vs. Strong - Codexpanse]( - [EL SISTEMA de TIPOS DE JAVASCRIPT - La Cocina del Cdigo]( - [Duck Typing in Javascript - Techmaker Studio]( ### Books - [You Don't Know JS, 1st Edition: Types & Grammar Kyle Simpson]( **[ Back to Top](#table-of-contents)** --- ## 5. == vs === vs typeof ### Articles - [JavaScript Double Equals vs. Triple Equals Brandon Morelli]( - [Should I use === or == equality comparison operator in JavaScript? Panu Pitkamaki]( - [Why Use the Triple-Equals Operator in JavaScript? Louis Lazaris]( - [What is the difference between == and === in JavaScript? Craig Buckler]( - [Why javascript's typeof always return ""object""? Stack Overflow]( - [Checking Types in Javascript Toby Ho]( - [How to better check data types in JavaScript Webbjocke]( - [Checking for the Absence of a Value in JavaScript Tomer Aberbach]( - [Difference Between == and === in Javascript]( - [Difference between == and === in JavaScript GeeksforGeeks]( - [=== vs == Comparision in JavaScript FreeCodeCamp]( ### Videos - [JavaScript - The typeof operator Java Brains]( - [Javascript typeof operator DevDelight]( - [JavaScript ""=="" VS ""==="" Web Dev Simplified]( - [=== vs == in javascript - Hitesh Choudhary]( - [The typeof operator in JS - CodeVault]( **[ Back to Top](#table-of-contents)... [TRUNCATED]","8.7k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, hacktoberfest-accepted, good first issue, enhancement, duplicate, bug"
relative-time-element,github/relative-time-element,3216,"['JavaScript', 'TypeScript', 'Dockerfile']","['web-components', 'custom-elements', 'timezone', 'localization', 'keep']","# <relative-time> element Formats a timestamp as a localized string or as relative text that auto-updates in the user's browser. This allows the server to cache HTML fragments containing dates and lets the browser choose how to localize the displayed time according to the user's preferences. For example, the server may have cached the following generated markup: ```html April 1, 2014 4:30pm ``` Every visitor is served the same markup from the server's cache. When it reaches the browser, the custom `relative-time` JavaScript localizes the element's text into the local timezone and formatting. ```html 1 Apr 2014 21:30 ``` Dates are displayed before months, and a 24-hour clock is used, according to the user's browser settings. If the browser's JavaScript is disabled, the default text served in the cached markup is still displayed. ## Installation Available on [npm]( as [**@github/relative-time-element**]( ``` npm install @github/relative-time-element ``` This element uses the `Intl.DateTimeFormat` & `Intl.RelativeTimeFormat` APIs, which are supported by all modern JS engines. If you need to support an older browser, you may need to introduce a polyfill for `Intl.DateTimeFormat` & `Intl.RelativeTimeFormat`. ## Usage Add a `` element to your markup. Provide a default formatted date as the element's text content (e.g. April 1, 2014). It also MUST have a `datetime` attribute set to an ISO 8601 formatted timestamp. ```html April 1, 2014 ``` Depending on how far in the future this is being viewed, the element's text will be replaced with one of the following formats: - 6 years from now - 20 days from now - 4 hours from now - 7 minutes from now - just now - 30 seconds ago - a minute ago - 30 minutes ago - an hour ago - 20 hours ago - a day ago - 20 days ago - on Apr 1, 2014 So, a relative date phrase is used for up to a month and then the actual date is shown. #### Attributes | Property Name | Attribute Name | Possible Values | Default Value | |:---------------|:-----------------|:--------------------------------------------------------------------------------------------|:---------------------------------| | `datetime` | `datetime` | `string` | - | | `format` | `format` | `'datetime'\|'relative'\|'duration'` | `'auto'` | | `date` | - | `Date \| null` | - | | `tense` | `tense` | `'auto'\|'past'\|'future'` | `'auto'` | | `precision` | `precision` | `'year'\|'month'\|'day'\|'hour'\|'minute'\|'second'` | `'second'` | | `threshold` | `threshold` | `string` | `'P30D'` | | `prefix` | `prefix` | `string` | `'on'` | | `formatStyle` | `format-style` | `'long'\|'short'\|'narrow'` | * | | `second` | `second` | `'numeric'\|'2-digit'\|undefined` | `undefined` | | `minute` | `minute` | `'numeric'\|'2-digit'\|undefined` | `undefined` | | `hour` | `hour` | `'numeric'\|'2-digit'\|undefined` | `undefined` | | `weekday` | `weekday` | `'short'\|'long'\|'narrow'\|undefined` | ** | | `day` | `day` | `'numeric'\|'2-digit'\|undefined` | `'numeric'` | | `month` | `month` | `'numeric'\|'2-digit'\|'short'\|'long'\|'narrow'\|undefined` | *** | | `year` | `year` | `'numeric'\|'2-digit'\|undefined` | **** | | `timeZoneName` | `time-zone-name` | `'long'\|'short'\|'shortOffset'\|'longOffset'` `\|'shortGeneric'\|'longGeneric'\|undefined` | `undefined` | *: If unspecified, `formatStyle` will return `'narrow'` if `format` is `'elapsed'` or `'micro'`, `'short'` if the format is `'relative'` or `'datetime'`, otherwise it will be `'long'`. **: If unspecified, `month` will return the same value as `formatStyle` whenever `format` is `'datetime'`, otherwise it will be `'short'`. ***: If unspecified, `weekday` will return the same value as `formatStyle` whenever `format` is `'datetime'`, otherwise it will be `undefined`. ****: If unspecified, `year` will return `'numeric'` if `datetime` represents the same year as the current year. It will return `undefined` if unspecified and if `datetime` represents a different year to the current year. ##### datetime (`string`) This is the datetime that the element is meant to represent. This must be a valid [ISO8601 DateTime]( It is also possible to use the `date` property on the element to set the date. `el.date` expects a `Date` object, while `el.datetime` expects a string. Setting one will override the other. ```html April 1, 2038 ``` ##### format (`'datetime'|'relative'|'duration'|'auto'|'micro'|'elapsed'`) Format can be either `'datetime'`, `'relative'`, or `'duration'`. It can also be one of several deprecated formats of `'auto'`, `'micro'`, or `'elapsed'`. The default format is `auto`, which is an alias for `relative`. In the next major version this will be `relative`. ###### `format=datetime` The `datetime` format will display a localised datetime, based on the other properties of the element. It uses `Intl.DateTimeFormat` to display the `datetime` in a localised format. Unless specified, it will consider `weekday` to be `'long'`, `month` to be `'long'`, and `'year'` to be `numeric` if the `datetime` is the same as the given year. Overriding `formatStyle` will change both `weekday` and `month` default values. Examples of this format with the default options and an `en` locale: - `Wed, 26 Aug 2021` - `Sat, 31 Dec` (assuming the `datetime` is same year as the current year) ###### `format=relative` The default `relative` format will display dates relative to the current time (unless they are past the `threshold` value - see below). The values are rounded to display a single unit, for example if the time between the given `datetime` and the current wall clock time exceeds a day, then the format will _only_ output in days, and will not display hours, minutes or seconds. Some examples of this format with the default options and an `en` locale: - `in 20 days` - `20 days ago` - `in 1 minute` - `on 31 Aug` (assuming the current date is the same year as the current year, and is more than 30 days away from 31 Aug) - `on 26 Aug 2021` (assuming the current date is more than 30 days away from 26 Aug 2021) ###### `format=duration` The `duration` format will display the time remaining (or elapsed time) from the given datetime, counting down the number of years, months, weeks, days, hours, minutes, and seconds. Any value that is `0` will be omitted from the display by default. Examples of this format with the default options and an `en` locale: - `4 hours, 2 minutes, 30 seconds` - `4 hours` - `8 days, 30 minutes, 1 second` ###### Deprecated Formats ###### `format=elapsed` This is similar to the `format=duration`, except the `formatStyle` defaults to `narrow`. Code that uses `format=elapsed` should migrate to `format=duration formatStyle=narrow`, as it will be removed in a later version. ###### `format=auto` This is identical to `format=relative`. Code that uses `format=auto` should migrate to `format=relative` as this will be the new default in a later version. ###### `format=micro` The `micro` format which will display relative dates (within the threshold) in a more compact format. Similar to `relative`, the `micro` format rounds values to the nearest largest value. Additionally, `micro` format will not round _lower_ than 1 minute, as such a `datetime` which is less than a minute from the current wall clock time will display `'1m'`. Code that uses `format=micro` should consider migrating to `format=relative` (perhaps with `formatStyle=narrow`), as `format=micro` can be difficult for users to understand, and can cause issues with assistive technologies. For example some screen readers (such as VoiceOver for mac) will read out `1m` as `1 meter`. ###### Cheatsheet | `format=datetime` | `format=relative` | `format=duration` | `format=micro` | `format=elapsed` | |:-----------------:|:-----------------:|:------------------------------------------------:|:-----------------:|:----------------:| | Wed 26 May 2024 | in 2 years | 2 years, 10 days, 3 hours, 20 minutes, 8 seconds | 2y | 2y 10d 3h 20m 8s | | Wed 26 Aug 2021 | 2 years ago | 2 years, 10 days, 3 hours, 8 seconds | 2y | 2y 10d 3h 8s | | Jan 15 2023 | in 30 days | 30 days, 4 hours, 20 minutes, 8 seconds | 30d | 30d 4h 20m 8s | | Dec 15 2022 | 21 minutes ago | 21 minutes, 30 seconds | 21m | 21m 30s | | Dec 15 2022 | 37 seconds ago | 37 seconds | 1m | 37s | ##### tense (`'auto'|'past'|'future'`, default: `auto`) If `format` is `'datetime'` then this value will be ignored. Tense can be used to prevent `duration` or `relative` formatted dates displaying dates in a tense other than the one specified. Setting `tense=past` will always display future `relative` dates as `now` and `duration` dates as `0 seconds`, while setting it to `future` will always display past dates `relative` as `now` and past `duration` dates as `0 seconds`. For example when the given `datetime` is 40 seconds behind of the current date: | `tense=`| format=duration | format=relative | |:-------:|:----------------:|:---------------:| | future | 0s | now | | past | 40s | 40s ago | | auto | 40s | 40s ago | ```html April 1, 2038 ``` ```html April 1, 2038 ``` #### precision (`'year'|'month'|'day'|'hour'|'minute'|'second'`, default: `'second'`) If `format` is `datetime` then this value will be ignored. Precision can be used to limit the display of an `relative` or `duration` formatted time. By default times will display down to the `second` level of precision. Changing this value will truncate the display by zeroing out any unit lower than the given unit, as such units smaller than the given unit won't be displayed during `duration`, and `relative` will display `now` if the time away from the current time is less than the given precision unit. | `precision=` | format=duration | |:-------------:|:-------------------:| | seconds | 2y 6m 10d 3h 20m 8s | | minutes | 2y 6m 10d 3h 20m | | hours | 2y 6m 10d 3h | | days | 2y 6m 10d | | months | 2y 6m | | years | 2y | | `precision=` | format=relative | |:-------------:|:-------------------:| | seconds | 25 seconds | | minutes | now | | hours | now | | days | now | | months | now | |... [TRUNCATED]","165, Code, Issues, Pull requests, Actions, Security, Insights, help wanted, enhancement, wontfix, spam, question, ospo-dependency-license-alert, invalid, i18n, duplicate, dependencies, bug"
carbon,carbon-design-system/carbon,7507,"['JavaScript', 'TypeScript', 'SCSS']","['scss', 'design-system', 'react', 'javascript', 'hacktoberfest']","Carbon Design System > Carbon is an open-source design system built by IBM. With the IBM Design > Language as its foundation, the system consists of working code, design tools > and resources, human interface guidelines, and a vibrant community of > contributors. ## Getting started If you're just getting started, check out [`@carbon/react`](./packages/react). We also have community-contributed components for the following technologies: - [Angular]( - [Svelte]( - [Vue]( - [Web Components]( If you're trying to find something specific, here's a full list of packages that we support! | Package name | Description | | --------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | [`@carbon/react`](./packages/react) | React components and styles | | [`@carbon/styles`](./packages/styles) | Sass styles for components | | [`@carbon/elements`](./packages/elements) | IBM Design Language elements like colors, type, iconography, and more | | [`@carbon/colors`](./packages/colors) | Work with IBM Design Language colors | | [`@carbon/grid`](./packages/grid) | Build layouts using the new 16 column grid system | | [`@carbon/icons`](./packages/icons) | Iconography assets. We also offer support in: [React](./packages/icons-react), [Angular]( [Vue](./packages/icons-vue), and [Svelte]( | | [`@carbon/pictograms`](./packages/pictograms) | Pictogram assets. We also offer support in: [React](./packages/pictograms-react) and [Svelte]( | | [`@carbon/layout`](./packages/layout) | Layout-based units and spacing scale | | [`@carbon/motion`](./packages/motion) | Productive and expressive motion curves | | [`@carbon/themes`](./packages/themes) | Color tokens available in the Carbon Design System, like `$interactive-01` | | [`@carbon/type`](./packages/type) | New type tokens used alongside IBM Plex | ## :books: Documentation - See our documentation site [here]( for full how-to docs and guidelines - [Contributing](/.github/CONTRIBUTING.md): Guidelines for making contributions to this repo. - Migration Guides - [v10 to v11](./docs/migration/v11.md) - [v9 to v10 (vanilla)](./packages/carbon-components/docs/migration/migrate-to-10.x.md) - [v9 to v10 (v6 to v7 React)](./packages/react/docs/migration/migrate-to-7.x.md) ## Contributing We're always looking for contributors to help us fix bugs, build new features, or help us improve the project documentation. If you're interested, definitely check out our [Contributing Guide](/.github/CONTRIBUTING.md) and our [Developer Guide](./docs/developer-handbook.md)! ## Contributors Taylor Jones TJ Egan Alessandra Davila Andrea N. Cardona Francine Lucca Scott Strubberg Alison Joseph Anna Gonzales Lauren Rice Josh Black DAK Josefina Mancilla emyarod Eric Marcoux Vince Picone jillianhowarth Ricardo Henriquez johnbister Dominik Brugger Jan Hassel Alexander Lyon Rosie Z Nishith P Eric Charpentier Luiza Mendes Akmal Hakimi Mohd Zamri sanjitbauli Laszlo Moczo LMapes conradennis Eric Liu Richard Viansk Lee Chase Anton Panpan Lin Ashley Harrison Jen Downs Abdul Rehman MIchael Dudley David Bradshaw Simon Finney Attila Bartha Yohanna Gadelrab Akira Sudoh Oyinkan Oyetunmibi pbenson322 Abbey Hart Lucas Dylan Klohr Gilli Sigurdsson kennylam Sbastien Dusan Milko Taras Polovyi Chris Connors David Conner Harish Mohanani Frivalszky-Mayer Pter s100 Taranveer Virk Niall Cargill Matt Chapman Boston Cartwright DavidSCChen molyholy Scott Dickerson Evgeniy Podgaetskiy CassidyJensen Zsolt Lattmann Conrad Schmidt Ignacio Becerra Swapnil Patil Fei Z Ignas Ausiejus Ryan O. Mackey Dvid Halsz Bill Guigue szymonbrandys Adam Alston Krithika S Udupa Eshin Griffith @RianTavaresOn ColbyJohnIBM Hkon Tanner Summers Zhen Wang Cathal Kenneally Joel Humberto Gmez Paredes James Nash Jakub Faliszewski Nick Gong Hannele Valtanen Llam4u G. Torres Fiona kindoflew Mario Gueyraud Dongjoon Lee ShankarV-CodeJunkie dario platania Mateusz Krzyanowski jpsorensen jae kaplan Sierra Wetmore kcprevatt Marcin Lewandowski remolueoend Jesse Hull Ashvin Warrier GalvinGao Bianca Sparxs Mahmoud Abdulazim Dave Steinberg Seong-Hyun Ryoo Pratik Karad Gerzon Guilherme Datilio Ribeiro Josef Kubek Sunny Johal Steven Black Mark Judy Anton Tsymuk Mohammed Aslam P. A. Tony ZL Petr Kadlec David Ragsdale Hao Cheng cordesmj Aziz Chebbi Micha Konopski Omkar Ajagunde Aman Lajpal Niraj Sah David Padilla Allison Ishida Alex Lewitt Tresau Daniel Castillo HaRuki Matej Ocovsky SamChinellato stevenpatrick009 HunterXalc Onur zkarde Matias Borghi Alexandr Ovchinnikov J Thomas Garrett Dawson Daniel Adebonojo Anjana M R Joseph Schultz anjaly0606 jesnajoseijk Jawahar S Holly Springsteen Nikhil Tomar Anina Antony Ahmed Semih Erkan Yael Chavoya Kilian Collender This project follows the [all-contributors]( specification. Contributions of any kind welcome! ## License Licensed under the [Apache 2.0 License](/LICENSE).","1.7k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, role: dev 🤖, type: bug 🐛, type: enhancement 💡, severity: 3, type: a11y ♿, proposal: open, proposal: accepted, role: design ✏️, screen-reader: JAWS, component: data-table, planning: umbrella, status: needs triage 🕵️‍♀️, screen-reader: VoiceOver, package: @carbon/react, severity: 2, component: date-picker, package: react, needs: community contribution, type: infrastructure 🤖, severity: 4, version: 11, status: blocked 🙅‍♀️, adopter: PAL, status: waiting for author's response 💬, component: multiselect, status: waiting for maintainer response 💬, component: combobox, version: 12, component: ui-shell, component: file-uploader"
Betterfox,yokoffing/Betterfox,3752,['JavaScript'],"['firefox', 'anti-tracking', 'mozilla', 'privacy', 'security']","[]( # Betterfox 31% faster than regular Firefox[1]( :rocket: [about:config]( tweaks to enhance [Mozilla Firefox]( :new: Now with [ESR support]( ## Made for everyday browsing **A secure, blazing fast browsing experience. Without breakage.** Betterfox is an opinionated preference list inspired by the [law of diminishing returns]( and the [minimum effective dose]( ## Required reading *If you don't have it already: [Get Firefox]( 0) Create a [backup profile]( 1) Download the user.js file [here]( (Right click > `Save Link As`). 2) Review [Common Overrides]( and make any necessary changes. * See also [Optional Hardening]( for other recommendations. 3) Open Firefox. In the URL bar, type `about:profiles` and press **Enter**. 4) For the profile you want to use (or use default), click **Open Folder** in the **Root Directory** section. 5) Move the `user.js` file into the folder. *After restarting Firefox:* 1) Get an **ad blocker** like [uBlock Origin]( with our [recommended filters]( 2) Enable **DNS-level protection** with [NextDNS]( Use the link and support this page! * Check out our configuration [guide]( for the best experience. * See how to [quickly enable]( **secure DNS** in Firefox. ## Simple goals 1) **Minimalism:** get what isn't needed out of the way 2) **Efficiency:** unleash Firefox's ability to be fast and performant 3) **Privacy:** protect your data without causing site breakage ## Simple configs `Fastfox`, `Securefox`, `Peskyfox`, and `Smoothfox` are guides to settings within Firefox. The `user.js` a configuration file that controls Firefox settings is curated from these guides. | List | Description | |:---------:|-------------| | [Fastfox]( | Increase Firefox's browsing speed. Give Chrome a run for its money!| | [Securefox]( | Protect user data without causing site breakage. | | [Peskyfox]( | Provide a clean, distraction-free browsing experience. | | [Smoothfox]( | Get Edge-like smooth scrolling on your favorite browser or choose something more your style. | | [user.js]( | All the essentials. None of the breakage. This is your `user.js`. | ## Recognition ### Browser Integration * [Midori]( | [files]( (Dec 2023?) * [Mercury]( | [files]( (Sep 2023) * [Waterfox]( | [files]( (Sep 2023) * [Floorp]( [1]( [2]( | [files]( (Apr 2023) * [Pulse]( | [files]( (Dec 2021) * [Ghostery Private Browser]( [1]( [2]( | [files]( (Feb 2021) ### YouTube * [The ULTIMATE Browser Tier List]( (Mar 2023) * [I Hate Firefox. But I'm Still Switching Back to It.]( (Nov 2022) * [Espaol] [Optimize and Accelerate Firefox]( (Nov 2022) * [How To Improve Firefox Performance]( (Dec 2021) ### Podcasts * [Italian] [Digitalia.fm]( | 1:41:351:42:41 (July 2023) * [GhoSTORIES with Franz & Pete]( | 17:0518:40 (Feb 2021) ### Articles * [Browsers for Daily Using]( (Jan 2024) * [Avoiding Manifest V3 Escaping the Ad-Pocalypse]( (Dec 2023) * [German] [Pulse Browser Review: Firefox fork with Turbo tweaks and Opera sidebar]( (Apr 2023) * [2023 Browser Showdown: Comparing Chrome, Brave, Firefox, Vivaldi, and Opera]( (Jan 2023) ### Guides * [FMHY Browser Tools: Privacy Tweaks]( * [Firefox-UI-Fix]( * [Narsil/desktop_user.js]( * [pyllyukko/user.js]( [comparator]( ### Reviews * I use this one ... The performance is absolutely amazing. Theres definitely a huge difference when it comes to loading sites. - [DIRIKtv]( * ""BetterFox ... will provide good-enough privacy and help with performance."" - [Qdoit12Super]( * ""...drastically changed the experience with Firefox for me. Improved speed, security, smoothness, and removed clutter."" - [AppDate]( * ""I don't think I could use Firefox without Betterfox."" - [Professional_Fun4616]( * ""The best collection of tweaks available."" - [AuRiMaS]( * ""FF is now much snappier! Thanks a lot for the suggestions!"" - [whotheff]( * ""...the experience is so good now I dont think Ill go back to any of the chromium based browsers."" - [Mr_Compromise]( ## Support If you like the project, leave a :star: (top right) and become a [stargazer]( []( ## Credit * Betterfox mirrors the ongoing work provided by [arkenfox]( Additionally, this repository includes content reproduced or adapted from other sources. Credit for overlapping material goes to the original authors. * Appreciation goes to the [Firefox]( team and developers working on [Bugzilla]( fighting for the open web. * A special thanks to [Alex Kontos]( of [Waterfox]( for his collaboration in v.116. * Many thanks to the 2021 [Ghostery]( team for testing Betterfox at scale in its early days. since 23 July 2022","116, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, documentation, ⬆️ enhancement, wontfix, 🌟 annoucement, ♻️ ongoing, 📝 sticky, invalid, help wanted, ❔ question, good first issue, duplicate, 🪲 bug"
awesome-mac,jaywcjlove/awesome-mac,72083,"['JavaScript', 'Dockerfile']","['macos', 'software', 'mac', 'mac-osx', 'awesome']","Awesome Mac === []( []( [](README-zh.md) []( []( []( []( This project is now very large, and is very different from the original idea. Here, we collect awesome macOS software and arrange them into various categories. Feel free to **star** and **fork**. Any comments, suggestions? [Let us know!]( We love PRs :) Please take a look at the [contributing]( guidelines before opening one. Follow the [awesome]( list. **Explanation** [English](README.md) | [](README-zh.md) ![Open-Source Software][OSS Icon] means **open source**. click the icon to see the item's repository;\ ![Freeware][Freeware Icon] means **free** to use, or **free** personal license;\ ![App Store][app-store Icon] means **App store** hyperlink;\ ![Awesome List][awesome-list Icon] means hyperlink to a corresponding **Awesome list** for the item; My macOS application: ## Contents - [Awesome Mac](#awesome-mac) - [Contents](#contents) - [Reading and Writing Tools](#reading-and-writing-tools) - [Text Editors](#text-editors) - [Office](#office) - [Markdown Tools](#markdown-tools) - [Note-taking](#note-taking) - [Journaling](#journaling) - [Writing](#writing) - [Ebooks](#ebooks) - [RSS](#rss) - [Others](#others) - [Developer Tools](#developer-tools) - [IDEs](#ides) - [Developer Utilities](#developer-utilities) - [Regular Expression Editors](#regular-expression-editors) - [API Development and Analysis](#api-development-and-analysis) - [Network Analysis](#network-analysis) - [Command Line Tools](#command-line-tools) - [Frameworks For Hybrid Applications](#frameworks-for-hybrid-applications) - [Version Control](#version-control) - [Virtualization](#virtualization) - [Databases](#databases) - [Design and Product](#design-and-product) - [Design Tools](#design-tools) - [Prototyping and Mind-Mapping Tools](#prototyping-and-mind-mapping-tools) - [Screencapturing Software](#screencapturing-software) - [Other Tools](#other-tools) - [Communication](#communication) - [Collaboration and Team Tools](#collaboration-and-team-tools) - [Email Clients](#email-clients) - [File Sharing](#file-sharing) - [Data Recovery Tools](#data-recovery-tools) - [Audio and Video Tools](#audio-and-video-tools) - [Audio Record and Process](#audio-record-and-process) - [Download Management Tools](#download-management-tools) - [Cloud Storage](#cloud-storage) - [Input Methods](#input-methods) - [Browsers](#browsers) - [Translation Tools](#translation-tools) - [Education](#education) - [Finance](#finance) - [Encryption](#encryption) - [Security Tools](#security-tools) - [Proxy and VPN Tools](#proxy-and-vpn-tools) - [Utilities](#utilities) - [Clipboard Tools](#clipboard-tools) - [Menu Bar Tools](#menu-bar-tools) - [File Organization Tools](#file-organization-tools) - [General Tools](#general-tools) - [To-Do Lists](#to-do-lists) - [Productivity](#productivity) - [Window Management](#window-management) - [Password Management](#password-management) - [Finder Tools](#finder-tools) - [Quality of Life Improvements](#quality-of-life-improvements) - [System Related Tools](#system-related-tools) - [Gaming Software](#gaming-software) - [Remote Login Software](#remote-login-software) - [QuickLook Plugins](#quicklook-plugins) - [Third Party App Markets](#third-party-app-markets) - [Package Managers](#package-managers) - [Mac App Download Sites](#mac-app-download-sites) - [Genuine Sites](#genuine-sites) - [Pirated software download site blocklist](#pirated-software-download-site-blocklist) - [Podcasts](#podcasts) - [Contributors](#contributors) - [Backers](#backers) - [Sponsors](#sponsors) - [License](#license) ## Reading and Writing Tools *Applications to edit text, I suggest the open-source editors* ### Text Editors * [Bootstrap Studio]( - A powerful desktop app for creating responsive websites using the Bootstrap framework. * [Brackets]( - A modern, open source text editor that understands web design. [ ![Freeware][Freeware Icon] * [CotEditor]( - Lightweight plain-text editor for macOS. [ ![Freeware][Freeware Icon] * [Emacs]( - A popular text editor used mainly on Unix-based systems by programmers, scientists, engineers, students, and system administrators. [ * [Helix]( - A post-modern modal text editor. [ ![Freeware][Freeware Icon] * [Lapce]( - Lightning-fast and powerful code editor. [ ![Freeware][Freeware Icon] * [LightTable]( - The next generation code editor. [ ![Freeware][Freeware Icon] * [micro]( - Modern and intuitive terminal-based text editor. [ ![Freeware][Freeware Icon] * [Nova]( - The beautiful, fast, flexible, native Mac code editor from Panic. * [Plain Text Editor]( - Simple distraction-free notepad. * [Sublime Text]( - Sophisticated text editor for code, markup and prose. You'll love the slick user interface, extraordinary features and amazing performance, [Sublime Text Plugins](editor-plugin.md#sublime-text-plugin). [ * [SubEthaEdit]( - Powerful Text Editing. Write articles, code, notes or meeting minutes with friends wherever they are. Ideal for extreme programming sessions, tutoring and creative writing [![Open-Source Software][OSS Icon]] * [TextMate]( - Editor that brings Apple's approach to operating systems into the world of text editors. [ ![Freeware][Freeware Icon] * [Tot]( - Tot is an elegant, simple way to collect & edit text. Its your tiny text companion! * [Vim]( - Highly configurable text editor built to make creating and changing any kind of text very efficient, [Vim Plugins](editor-plugin.md#vim-plugin). [ * [Vimr]( - Refined Vim Experience for OS X. [ ![Freeware][Freeware Icon] * [Zed]( - A high-performance, multiplayer code editor from the creators of Atom and Tree-sitter. ![Freeware][Freeware Icon] ### Office * [LibreOffice]( - LibreOffice is free and open-source software office software. Software is tested and used daily by a large and devoted user community. [ ![Freeware][Freeware Icon] * [WPS]( - Is a cross-platform office software suite. ![Freeware][Freeware Icon] * [Pages]( - Documents that stand apart. * [Keynote]( - Build stunning presentations. * [Numbers]( - Create impressive spreadsheets. * [Microsoft Office]( - Unmistakably Office, designed for Mac. [ * [OnlyOffice]( - An office suite that combines text, spreadsheet and presentation editors allowing to create, view and edit local documents. [ ![Freeware][Freeware Icon] * [SoftMaker Office]( - A complete office suite that aims for full compatibility with Microsoft Office documents ### Markdown Tools > [ * [EME]( - Open-source Markdown editor with an interface like Chrome. ![Open-Source Software][OSS Icon] * [iA Writer]( - Writing app with an emphasis on simplicity and design. * [LightPaper]( - Simple, beautiful, yet powerful text editor for your Mac. * [MacDown]( - Open-source Markdown editor for OS X. [ ![Freeware][Freeware Icon] * [Marked 2]( - This is the Markdown preview with an elegant and powerful set of tools for all writers. * [MarkText]( - Next generation markdown editor, running on platforms of MacOS Windows and Linux. [ ![Freeware][Freeware Icon] * [Marp]( - Markdown presentation writer with cross-platform support. [ ![Freeware][Freeware Icon] * [Marxico]( - Delicate Markdown editor for Evernote. Reliable storage and sync. * [MWeb]( - Pro Markdown writing, and static blog generator App. * [Obsidian]( - A second brain, for you, forever. * [TextNut]( - Rich-format editor featuring Markdown export and Markdown syntax hints. ![Freeware][Freeware Icon] * [Typora]( - Truly minimal Markdown editor featuring seamless live preview. * [Ulysses]( - The Ultimate Writing App for Mac, iPad and iPhone. * [Zettlr]( - A markdown editor for the 21st century. [ ![Freeware][Freeware Icon] ### Note-taking * [Affine]( - Affine is the next-generation collaborative knowledge base for professionals. [ ![Freeware][Freeware Icon] * [Agenda]( - Date-focused note taking app for both planning and documenting your projects. [ * [AppFlowy]( - Open-source alternative to Notion. [ ![Freeware][Freeware Icon] * [Bear Writer]( - Beautiful, flexible writing app for crafting notes and prose. [ * [Boostnote]( - Note-taking app made for programmers. [ * [Craft]( - Notetaking and writing made beautiful. [ * [Dnote]( - A simple command line notebook with multi-device sync and a web interface. [ ![Freeware][Freeware Icon] * [Email Me]( - Email yourself and much more with just one tap, native on macOS, iOS and WatchOS. [ * [Evernote]( - Infamous note-taking app, available on many platforms. ![Freeware][Freeware Icon] * [FSNotes]( - File System Notes is a modern notes manager, native on macOS and iOS. [ [ * [Gooba]( - Writing app and task manager with a simple and interactive design. * [Inkdrop]( - Notebook app for Markdown lovers built on top of Electron. * [Joplin]( - Cross platform open-source notepad with markdown support and todo list manager with synchronisation capabilities. [ ![Freeware][Freeware Icon] * [Logseq]( - Privacy-first, open-source knowledge base that works on top of local plain-text Markdown and Org-mode files. [ ![Freeware][Freeware Icon] * [MarginNote]( - In-depth PDF and EPUB reading, learning, managing and note taking app. * [massCode]( - Cross platform open-source code snippets manager for developers with markdown and mermaid support. [ ![Freeware][Freeware Icon] * [MiaoYan]( - Lightweight Markdown app to help you write great sentences. * [Notable]( - The markdown-based note-taking app that doesn't suck. * [Notebook]( - Note-taking app. ![Freeware][Freeware Icon] * [Notes]( - Clean, simple note-taking app. [ ![Freeware][Freeware Icon] * [NotePlan 3]( - Your tasks, notes, and calendar, plain-text markdown files. [ * [Noteship]( - Turn notes into knowledge (spreadsheet view, heading summaries, etc.). Works offline, everything is saved locally. [ * [Notion]( - Notion is the all-in-one workspace. From notes, tasks, wikis, to database, Notion is all you need. Works great for teams and individuals. * [Obsidian]( - Obsidian is a powerful knowledge base that works on top of a local folder of plain text Markdown files. * [OneNote]( - ... [TRUNCATED]","6.1k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, addition, vote, help wanted, organization, high-priority, bug, /awesome-mac/, Gitalk, wontfix, removal, question, invalid, enhancement, duplicate, dependencies, /awesome-mac/index.zh.html, /awesome-mac/index.html"
artillery,artilleryio/artillery,7555,"['JavaScript', 'TypeScript', 'EJS']","['serverless', 'load', 'api', 'playwright', 'stress']","Artillerycloud-scale load testing Docs | Discussions | @artilleryio **Artillery is the most advanced load testing platform in the world.** - **Test at cloud scale.** Cloud-native distributed load testing at scale, **out-of-the box and for free**. - Run serverless load tests on AWS Lambda or AWS Fargate. Kubernetes coming soon. - **Batteries-included.** 20+ integrations for monitoring, observability, and CICD. - **Test anything**. HTTP, WebSocket, Socket.io, gRPC, Kinesis, and more. - **Playwright support**. Load test with real headless browsers. - **Powerful workload modeling**. Emulate complex user behavior with request chains, multiple steps, transactions, and more. - **Extensible & hackable**. Artillery has a plugin API to allow extending and customization. - **Open source**. Permissive open source license to let you build on top of Artillery without worry. [Learn more](./packages/artillery#readme)","488, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, enhancement, dependencies, docs, engine:socketio, bug, good-first-pr, investigate, platform:lambda, need-more-info, engine:playwright, discussion, run-aws-tests, proposal, engine:ws, awaiting-user, help wanted, engine:http, in-progress, artilery-pro, question, plugin:expect, wontfix, skytrace, ⛵ next-release, invalid, ✅ fixed, engines, duplicate, debt, artillery-cloud"
drawio-desktop,jgraph/drawio-desktop,47241,"['JavaScript', 'Shell']","['javascript-applications', 'electron-app', 'graphics', 'diagram-editor']","About ----- **drawio-desktop** is a diagramming and whiteboarding desktop app based on [Electron]( that wraps the [core draw.io editor]( Download built binaries from the [releases section]( **Can I use this app for free?** Yes, under the apache 2.0 license. If you don't change the code and accept it is provided ""as-is"", you can use it for any purpose. Security -------- draw.io Desktop is designed to be completely isolated from the Internet, apart from the update process. This checks github.com at startup for a newer version and downloads it from an AWS S3 bucket owned by Github. All JavaScript files are self-contained, the Content Security Policy forbids running remotely loaded JavaScript. No diagram data is ever sent externally, nor do we send any analytics about app usage externally. This means certain functionality for which we do not have a JavaScript implementation do not work in the Desktop build, namely .vsd and Gliffy import. Security and isolating the app are the primarily objectives of draw.io desktop. If you ask for anything that involves external connections enabled in the app by default, the answer will be no. Support ------- Support is provided on a reasonable business constraints basis, but without anything contractually binding. All support is provided via this repo. There is no private ticketing support. Purchasing draw.io for Confluence or Jira does not entitle you to commercial support for draw.io desktop. The draw.io integrations for Atlassian are sold by Seibert Media, they have no involvement with this project. Developing ---------- **draw.io** is a git submodule of **drawio-desktop**. To get both you need to clone recursively: `git clone --recursive To run this: 1. `npm install` (in the root directory of this repo) 2. export DRAWIO_ENV=dev if you want to develop/debug in dev mode. 3. `npm start` _in the root directory of this repo_ runs the app. For debugging, use `npm start --enable-logging`. Note: If a symlink is used to refer to drawio repo (instead of the submodule), then symlink the `node_modules` directory inside `drawio/src/main/webapp` also. To release: 1. Update the draw.io sub-module and push the change. Add version tag before pushing to origin. 2. Wait for the builds to complete ( and 3. Go to edit the preview release. 4. Download the windows exe and windows portable, sign them using `signtool sign /a /tr /td SHA256 c:/path/to/your/file.exe` 5. Re-upload signed file as `draw.io-windows-installer-x.y.z.exe` and `draw.io-windows-no-installer-x.y.z.exe` 6. Add release notes 7. Publish release *Note*: In Windows release, when using both x64 and is32 as arch, the result is one big file with both archs. This is why we split them. Local Storage and Session Storage is stored in the AppData folder: - macOS: `~/Library/Application Support/draw.io` - Windows: `C:\Users\\AppData\Roaming\draw.io\` Not open-contribution --------------------- draw.io is closed to contributions. The level of complexity of this project means that even simple changes can break a _lot_ of other moving parts. The amount of testing required is far more than it first seems. If we were to receive a PR, we'd have to basically throw it away and write it how we want it to be implemented. We are grateful for community involvement, bug reports, & feature requests. We do not wish to come off as anything but welcoming, however, we've made the decision to keep this project closed to contributions for the long term viability of the project.","4.8k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, feature request, bug, blocked/upstream, help wanted, blocked/need-repro, Waiting for response, wontfix, windows-only, lacks details, issue template not filled, declined, question, notstale, no idea, multiple issues, low quality, invalid, good luck, enhancement, electron bug, duplicate, dependencies, completed, blocked/need-info"
register,open-domains/register,982,['JavaScript'],"['dns', 'domain', 'domains', 'free', 'free-domain']","Open Domains Free subdomains for personal sites, open-source projects, and more. Want to find services similar to this? Take a look on Free For Life. ## Notice NS records are no longer supported. Existing domains are unaffected. ## Donate If you like this service and want us to continue running it, please consider donating! []( ### Discord Server Make sure to join our Discord server: ## Domains | Available Domains | |:-:| | [`*.is-cool.dev`]( | | [`*.is-local.org`]( | | [`*.is-not-a.dev`]( | | [`*.localplayer.dev`]( | > [!NOTE] > Wildcard domains (like `*.example.is-not-a.dev`) are supported too, but the reason for their registration should be very clear and described in detail. [badge-cf]: [badge-dnssec]: [badge-ssl]: ### Unsupported Services We currently do not support Netlify (for websites) or Vercel (for websites). This will hopefully be fixed soon. ### Settings | Setting | [`is-cool.dev`]( | [`is-local.org`]( | [`is-not-a.dev`]( | [`localplayer.dev`]( | |-|-|-|-|-| | PSL | | | | | | [DNSSEC][dnssec] | | | | | | Email | | | | | | SSL/TLS* | [Full][ssl-full] | [Full][ssl-full] | [Full][ssl-full] | [Full][ssl-full] | | Always Use HTTPS* | | | | | | HTTP Strict Transport Security (HSTS) | | | | | | Minimum TLS Version* | 1.2 | 1.2 | 1.2 | 1.2 | | Opportunistic Encryption, TLS 1.3* | | | | | | WAF (Web Application Firewall)* | Medium Security Level | Medium Security Level | Medium Security Level | Medium Security Level | | Browser Integrity Check* | | | | | | [Caching Level][caching-levels], Browser Cache TTL* | Standard, 4 hours | Standard, 4 hours | Standard, 4 hours | Standard, 4 hours | \*Only available when your domain has Cloudflare's proxy (`""proxied"": true`) enabled [dnssec]: [ssl-full]: [caching-levels]: ## Register ### Manual 1. **Star** and **[Fork]( this repository. 2. Add a new file called `example.domain.json` in the `/domains` folder to register `example` subdomain. 3. Edit the file (below is just an **example**, provide a **valid** JSON file with your needs, the format is very strict. These records should not show up inside your file. ```json { ""description"": ""Project Description"", ""domain"": ""is-not-a.dev"", ""subdomain"": ""example"", ""owner"": { ""repo"": "" ""email"": ""hello@example.com"" }, ""record"": { ""A"": [""1.1.1.1"", ""1.0.0.1""], ""AAAA"": [""::1"", ""::2""], ""CNAME"": ""example.com"", ""MX"": [""mx1.example.com"", ""mx2.example.com""], ""TXT"": [""example_verification=1234567890""] }, ""proxied"": false } ``` 4. Your pull request will be reviewed and merged. Please don't ignore the pull request checklist. If you ignore the checklist, your pull request will be ignored too. _Make sure to keep an eye on it in case we need you to make any changes!_ 5. After the pull request is merged, please allow up to 24 hours for the changes to propagate _(usually, it takes 5..15 minutes)_ 6. Enjoy your new domain! *Domains used for illegal purposes will be removed and permanently banned. Please, provide a clear description of your resource in the pull request.* ### License This project is under a [MIT License](","641, Code, Issues, Pull requests, Actions, Security, Insights, Waiting: Reasoning, Waiting: Maintainer Decision, Invalid: Records, Invalid: NS Records, Dependencies, Won't Fix, TAKEDOWN, Support, Question (Issues), Invalid: Unsupported Services, Invalid: No Content on Site, Invalid: NSFW Content, Invalid: Inaccessible Site, Invalid: File, Inactivity (7+ Days), Help Wanted (Staff), Enhancement, Documentation, DON'T MERGE, CLI, CLA Required, Bug, Awaiting Response"
awesome-chatgpt-prompts,f/awesome-chatgpt-prompts,105262,"['HTML', 'Shell']","['chatbot', 'chatgpt', 'chatgpt-api', 'language', 'bots']","Awesome ChatGPT Prompts []( []( **[Be my sponsor and your logo will be here and prompts.chat!]( --- Welcome to the ""Awesome ChatGPT Prompts"" repository! This is a collection of prompt examples to be used with the ChatGPT model. The [ChatGPT]( model is a large language model trained by [OpenAI]( that is capable of generating human-like text. By providing it with a prompt, it can generate responses that continue the conversation or expand on the given prompt. In this repository, you will find a variety of prompts that can be used with ChatGPT. We encourage you to [add your own prompts]( to the list, and to use ChatGPT to generate new prompts as well. To get started, simply clone this repository and use the prompts in the README.md file as input for ChatGPT. You can also use the prompts in this file as inspiration for creating your own. We hope you find these prompts useful and have fun using ChatGPT! **[View on GitHub]( **[View on Hugging Face]( --- ### NEW: Awesome ChatGPT Store: A Hub for Custom GPTs Now you can access [Awesome ChatGPT Store]( a dynamic new addition to the ChatGPT ecosystem! With the introduction of customizable GPT models, our store provides a curated collection of specialized ChatGPT GPTs, each tailored for unique applications and use cases. Explore a wide range of GPTs, from those optimized for specific programming languages, to models fine-tuned for creative writing, technical analysis, and more. This repository is not just a store; it's a community-driven platform where developers and enthusiasts can share, discover, and leverage the full potential of ChatGPT's versatility. Dive into the world of customized conversational AI models and enrich your projects with cutting-edge technology. Visit the Awesome ChatGPT Store now at [Awesome ChatGPT Store]( and start exploring the possibilities! --- **Download ChatGPT Desktop App**: **[macOS]( / **[Windows]( / **[Linux]( > **NOTE:** Sometimes, some of the prompts may not be working as you expected or may be rejected by the AI. Please try again, start a new thread, or log out and log back in. If these solutions do not work, please try rewriting the prompt using your own sentences while keeping the instructions same. ### Want to Write Effective Prompts? I've authored a free e-book called **""The Art of ChatGPT Prompting: A Guide to Crafting Clear and Effective Prompts""**. **[Read the free e-book]( ### Want to Learn How to Make Money using ChatGPT Prompts? I've authored an e-book called **""How to Make Money with ChatGPT: Strategies, Tips, and Tactics""**. **[Buy the e-book]( ### Want to secure your ChatGPT apps? [Utku en]( authored an e-book called **""Securing GPT: A Practical Introduction to Attack and Defend ChatGPT Applications""**. **[Buy the e-book]( --- ## Other Prompting Resources ### Want to Learn How to write image prompts for Midjourney AI? I've authored an e-book called **""The Art of Midjourney AI: A Guide to Creating Images from Text""**. **[Read the e-book]( --- ### Using ChatGPT Desktop App The _unofficial_ ChatGPT desktop application provides a convenient way to access and use the prompts in this repository. With the app, you can easily import all the prompts and use them with slash commands, such as `/linux_terminal`. This feature eliminates the need to manually copy and paste prompts each time you want to use them. > **Desktop App is an unofficial [open source project by @lencx]( It's a simple wrapper for ChatGPT web interface with powerful extras.** --- ### Create your own prompt using AI [Merve Noyan]( created an exceptional [ChatGPT Prompt Generator App]( allowing users to generate prompts tailored to their desired persona. The app uses this repository as its training dataset. --- ### Using prompts.chat [prompts.chat]( is designed to provide an enhanced UX when working with prompts. With just a few clicks, you can easily edit and copy the prompts on the site to fit your specific needs and preferences. The copy button will copy the prompt exactly as you have edited it. --- # Prompts ## ChatGPT SEO prompts Contributed by: [StoryChief AI]( Reference: [ > Using WebPilot, create an outline for an article that will be 2,000 words on the keyword Best SEO Prompts based on the top 10 results from Google. > Include every relevant heading possible. Keep the keyword density of the headings high. > For each section of the outline, include the word count. > Include FAQs section in the outline too, based on people also ask section from Google for the keyword. > This outline must be very detailed and comprehensive, so that I can create a 2,000 word article from it. > Generate a long list of LSI and NLP keywords related to my keyword. Also include any other words related to the keyword. > Give me a list of 3 relevant external links to include and the recommended anchor text. Make sure theyre not competing articles. > Split the outline into part 1 and part 2. ## Act as an Ethereum Developer Contributed by: [@ameya-2003]( Reference: [The BlockChain Messenger]( > Imagine you are an experienced Ethereum developer tasked with creating a smart contract for a blockchain messenger. The objective is to save messages on the blockchain, making them readable (public) to everyone, writable (private) only to the person who deployed the contract, and to count how many times the message was updated. Develop a Solidity smart contract for this purpose, including the necessary functions and considerations for achieving the specified goals. Please provide the code and any relevant explanations to ensure a clear understanding of the implementation. ## Act as a Linux Terminal Contributed by: [@f]( Reference: [ > I want you to act as a linux terminal. I will type commands and you will reply with what the terminal should show. I want you to only reply with the terminal output inside one unique code block, and nothing else. do not write explanations. do not type commands unless I instruct you to do so. When I need to tell you something in English, I will do so by putting text inside curly brackets {like this}. My first command is pwd ## Act as an English Translator and Improver Contributed by: [@f]( **Alternative to**: Grammarly, Google Translate > I want you to act as an English translator, spelling corrector and improver. I will speak to you in any language and you will detect the language, translate it and answer in the corrected and improved version of my text, in English. I want you to replace my simplified A0-level words and sentences with more beautiful and elegant, upper level English words and sentences. Keep the meaning same, but make them more literary. I want you to only reply the correction, the improvements and nothing else, do not write explanations. My first sentence is ""istanbulu cok seviyom burada olmak cok guzel"" ## Act as `position` Interviewer Contributed by: [@f]( & [@iltekin]( **Examples**: Node.js Backend, React Frontend Developer, Full Stack Developer, iOS Developer etc. > I want you to act as an interviewer. I will be the candidate and you will ask me the interview questions for the `position` position. I want you to only reply as the interviewer. Do not write all the conservation at once. I want you to only do the interview with me. Ask me the questions and wait for my answers. Do not write explanations. Ask me the questions one by one like an interviewer does and wait for my answers. My first sentence is ""Hi"" ## Act as a JavaScript Console Contributed by: [@omerimzali]( > I want you to act as a javascript console. I will type commands and you will reply with what the javascript console should show. I want you to only reply with the terminal output inside one unique code block, and nothing else. do not write explanations. do not type commands unless I instruct you to do so. when I need to tell you something in english, I will do so by putting text inside curly brackets {like this}. My first command is console.log(""Hello World""); ## Act as an Excel Sheet Contributed by: [@f]( > I want you to act as a text based excel. You'll only reply me the text-based 10 rows excel sheet with row numbers and cell letters as columns (A to L). First column header should be empty to reference row number. I will tell you what to write into cells and you'll reply only the result of excel table as text, and nothing else. Do not write explanations. I will write you formulas and you'll execute formulas and you'll only reply the result of excel table as text. First, reply me the empty sheet. ## Act as a English Pronunciation Helper Contributed by: [@f]( > I want you to act as an English pronunciation assistant for Turkish speaking people. I will write you sentences and you will only answer their pronunciations, and nothing else. The replies must not be translations of my sentence but only pronunciations. Pronunciations should use Turkish Latin letters for phonetics. Do not write explanations on replies. My first sentence is ""how the weather is in Istanbul?"" ## Act as a Spoken English Teacher and Improver Contributed by: [@ATX735]( > I want you to act as a spoken English teacher and improver. I will speak to you in English and you will reply to me in English to practice my spoken English. I want you to keep your reply neat, limiting the reply to 100 words. I want you to strictly correct my grammar mistakes, typos, and factual errors. I want you to ask me a question in your reply. Now let's start practicing, you could ask me a question first. Remember, I want you to strictly correct my grammar mistakes, typos, and factual errors. ## Act as a Travel Guide Contributed by: [@koksalkapucuoglu]( > I want you to act as a travel guide. I will write you my location and you will suggest a place to visit near my location. In some cases, I will also give you the type of places I will visit. You will also suggest me places of similar type that are close to my first location. My first suggestion request is ""I am in Istanbul/Beyolu and I want to visit only museums."" ## Act as a Plagiarism... [TRUNCATED]","14.3k, Code, Pull requests, Actions, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
AWS-Certified-Cloud-Practitioner-Notes,kananinirav/AWS-Certified-Cloud-Practitioner-Notes,1028,"['HTML', 'CSS', 'JavaScript']","['aws', 'certification', 'cloud-practitioner', 'devops', 'cloud']","# AWS Cloud Practitioner Study Notes (CLF-C02) - This will help you for quick revision before exam. - If you are studying for AWS Cloud Practitioner certifications or you already have them but want to have digital notes of what you studied, here it is and you can come back as many times as you need. I share the notes I used to study and pass my exam. Each Section contains a number of units. **Below Table Link** containing information about each sections in detail. ## Table of contents - [Mind Map for outlining essential topics]( - [Study Guide](./study-guide.md) - [Cloud Computing](sections/cloud_computing.md) - What is Cloud Computing?, AWS Global Infrastructure, Shared Responsibility Model - [IAM: Identity Access & Management](sections/iam.md) - What Is IAM?, Multi Factor Authentication - MFA, MFA devices options in AWS, How can users access AWS ?, Whats the AWS CLI?, Whats the AWS SDK? - [EC2: Virtual Machines](sections/ec2.md) - What is Amazon EC2?, Introduction to Security Groups, Classic Ports to know, EC2 Instance Launch Types, Which purchasing option is right for me?, Shared Responsibility Model for EC2 - [EC2 Instance Storage](sections/ec2_storage.md) - EBS Volumes, EFS: Elastic File System, EFS Infrequent Access (EFS-IA), Amazon FSx Overview, EC2 Instance Store, Shared Responsibility Model for EC2 Storage - [Elastic Load Balancing & Auto Scaling Groups](sections/elb_asg.md) - Scalability & High Availability, Vertical Scalability, Horizontal Scalability, High Availability, High Availability & Scalability For EC2, Scalability vs Elasticity (vs Agility), What is load balancing?, Whats an Auto Scaling Group? - [Amazon S3](sections/s3.md) - S3 Use cases, Amazon S3 Overview - Buckets, Amazon S3 Overview - Objects, S3 Websites, S3 Storage Classes, S3 Object Lock & Glacier Vault Lock, Shared Responsibility Model for S3, AWS Snow Family, What is Edge Computing?, Snow Family - Edge Computing, AWS OpsHub, Hybrid Cloud for Storage, AWS Storage Gateway - [Databases & Analytics](sections/databases.md) - Databases Intro, Relational Databases, NoSQL Databases, Databases & Shared Responsibility on AWS, AWS RDS Overview, Amazon Aurora, Amazon ElastiCache Overview, DynamoDB, Redshift Overview, Amazon EMR, Amazon Athena, Amazon QuickSight, DocumentDB, Amazon Neptune, Amazon QLDB - [Other Compute Section](sections/other_compute.md) - What is Docker?, ECS, Fargate, ECR, Whats serverless?, Why AWS Lambda ?, Amazon API Gateway, AWS Batch, Batch vs Lambda, Amazon Lightsail, Lambda Summary - [Deploying and Managing Infrastructure at Scale](sections/deploying.md) - What is CloudFormation?, AWS Cloud Development Kit (CDK), Developer problems on AWS, Typical architecture: Web App 3-tier, AWS Elastic Beanstalk Overview, AWS CodeDeploy, AWS CodeCommit, AWS CodeBuild, AWS CodePipeline, AWS CodeArtifact, AWS CodeStar, AWS Cloud9, AWS Systems Manager (SSM), AWS OpsWorks - [Global Infrastructure](sections/global_infrastructure.md) - Why make a global application?, Amazon Route 53 Overview, Route 53 Routing Policies, AWS CloudFront, AWS Global Accelerator, AWS Outposts, AWS WaveLength, AWS Local Zones - [Cloud Integration](sections/cloud_integration.md) - Amazon SQS - Simple Queue Service, Amazon Kinesis, Amazon SNS, Amazon MQ - [Cloud Monitoring](sections/cloud_monitoring.md) - Amazon CloudWatch, AWS CloudTrail, AWS X-Ray, Amazon CodeGuru, AWS Status - Service Health Dashboard, AWS Personal Health Dashboard - [VPC](sections/vpc.md) - VPC & Subnets Primer, Internet Gateway & NAT Gateways, Network ACL & Security Groups, VPC Flow Logs, VPC Peering, VPC Endpoints, Site to Site VPN & Direct Connect, Transit Gateway - [Security & Compliance](sections/security_compliance.md) - AWS Shared Responsibility Model, DDOS Protection on AWS, AWS Shield, AWS WAF - Web Application Firewall, AWS KMS (Key Management Service), CloudHSM, AWS Certificate Manager (ACM), AWS Secrets Manager, AWS Artifact (not really a service), Amazon GuardDuty, Amazon Inspector, AWS Config, Amazon Macie, AWS Security Hub, Amazon Detective, AWS Abuse, Root user privileges, IAM Access Analyzer - [Machine Learning](sections/machine_learning.md) - Amazon Rekognition, Amazon Transcribe, Amazon Polly, Amazon Translate, Amazon Lex & Connect, Amazon Comprehend, Amazon SageMaker, Amazon Forecast, Amazon Kendra, Amazon Personalize, Amazon Textract - [Account Management, Billing & Support](sections/account_management_billing_support.md) - AWS Organizations, Multi Account Strategies, Service Control Policies (SCP), AWS Organization - Consolidated Billing, AWS Control Tower, AWS Resource Access Manager (AWS RAM), AWS Service Catalog, Pricing Models in AWS, Compute Pricing, Storage Pricing, Database Pricing - RDS, Content Delivery - CloudFront, Networking Costs in AWS per GB - Simplified - [Advanced Identity](sections/advanced_identity.md) - AWS STS (SecurityToken Service), Amazon Cognito (simplified), What is Microsoft Active Directory (AD)?, AWS IAM Identity Center - [Other AWS Services](sections/other_aws_services.md) - Amazon WorkSpaces, Amazon AppStream 2.0, Amazon Sumerian, AWS IoT Core, Amazon Elastic Transcoder, AWS AppSync, AWS Amplify, AWS Device Farm, AWS Backup, AWS Elastic Disaster Recovery (DRS), AWS DataSync, AWS Application Discovery Service, AWS Application Migration Service (MGN), AWS Migration Evaluator, AWS Migration Hub, AWS Fault Injection Simulator (FIS), AWS Step Functions, AWS Ground Station, AWS Pinpoint - [AWS Architecting & Ecosystem](sections/architecting_and_ecosystem.md) - Well Architected Framework General Guiding Principles, AWS Cloud Best Practices - Design Principles, Well Architected Framework 6 Pillars, AWS Well-Architected Tool, AWS Right Sizing, AWS Ecosystem - Free resources, AWS Marketplace ## Practice Exams ( dumps ) - **[Practice Exam List]( ## Buy AWS Cloud Practitioner Study Notes And Practice Exams PDF **[Sample PDF](./images/AWS-Cloud-Practitioner-Study-Notes-Sample.pdf)** **[Buy Study Notes PDF]( **[Buy Practice Exams PDF]( Purchase a PDF on Kindle and adjust your region settings for the most favorable price based on your location: **[Kindle Edition]( (For kindle unlimited users)** Purchase a PDF on **Google Play Book**: [AWS Cloud Practitioner Study Notes PDF]( ## Other AWS And Azure Certification Notes - [AWS Developer Associate (DVA-C02)]( - [AWS Solutions Architect - Associate (SAA-C03)]( - [Microsoft Azure Fundamentals (AZ-900)]( - [Useful Cheat Sheet For Developers]( #### If you find the content of this website interesting and helpful, use the Buy me a Coffee link below to buy me a coffee. ## Star History [](","333, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, dependencies, bug"
tidytuesday,rfordatascience/tidytuesday,6463,"['HTML', 'R', 'CSS']",[],"## About TidyTuesday - `TidyTuesday` is a weekly social data project. All are welcome to participate! Please remember to share the code used to generate your results! - `TidyTuesday` is organized by the [Data Science Learning Community]( [Join our Slack]( for free online help with R, Python, and other data-related topics, or to participate in a data-related book club! ## Goals Our over-arching goal for TidyTuesday is to make learning to work with data easier, by providing real-world datasets. Our goal for 2023-2024 is to increase usage of #TidyTuesday within classrooms. We would like to be used in at least 10 courses by September 2024. If you are using TidyTuesday to teach data-related skills, [please let us know]( *** ## How to Participate - Data is [posted to social media](dataset_announcements.md) every Monday morning. Follow the instructions in the new post for how to download the data. - [Explore the data]( watching out for interesting relationships. We would like to emphasize that you should not draw conclusions about **causation** in the data. There are various moderating variables that affect all data, many of which might not have been captured in these datasets. As such, our suggestion is to use the data provided to practice your data tidying and plotting techniques, and to consider for yourself what nuances might underlie these relationships. - Create a visualization, a model, a [shiny app]( or some other piece of data-science-related output, using R or another programming language. - [Share your output and the code used to generate it](sharing.md) on social media with the #TidyTuesday hashtag. *** ## DataSets ### [2018](data/2018) | [2019](data/2019) | [2020](data/2020) | [2021](data/2021) | [2022](data/2022) | [2023](data/2023) | [2024](data/2024) | Week | Date | Data | Source | Article | :---: | :---: | :--- | :--- | :---| | 1 | `2024-01-02` | Bring your own data to start 2024! | | | | 2 | `2024-01-09` | [Canadian NHL Player Birth Dates](data/2024/2024-01-09/readme.md) | [Statistics Canada]( [NHL team list endpoint]( [NHL API]( | [Are Birth Dates Still Destiny for Canadian NHL Players?]( | | 3 | `2024-01-16` | [US Polling Places 2012-2020](data/2024/2024-01-16/readme.md) | [Center for Public Integrity]( | [National data release sheds light on past polling place changes]( | | 4 | `2024-01-23` | [Educational attainment of young people in English towns](data/2024/2024-01-23/readme.md) | [The UK Office for National Statistics]( | [Why do children and young people in smaller towns do better academically than those in larger towns?]( | | 5 | `2024-01-30` | [Groundhog predictions](data/2024/2024-01-30/readme.md) | [Groundhog-day.com API]( | [Groundhog-day.com Predictions by Year]( | | 6 | `2024-02-06` | [World heritage sites](data/2024/2024-02-06/readme.md) | [UNESCO World Heritage Sites]( | [1 dataset 100 visualizations]( | | 7 | `2024-02-13` | [Valentine's Day consumer data](data/2024/2024-02-13/readme.md) | [Valentine's Days consumer survey data]( | [National Retail Federation Valentine's Day Data Center]( | | 8 | `2024-02-20` | [R Consortium ISC Grants](data/2024/2024-02-20/readme.md) | [R Consortium ISC Funded Projects]( | [R Consortium ISC Call for Proposals 2024]( | | 9 | `2024-02-27` | [Leap Day](data/2024/2024-02-27/readme.md) | [Wikipedia: February 29]( | [Wikipedia: February 29]( | | 10 | `2024-03-05` | [Trash Wheel Collection Data](data/2024/2024-03-05/readme.md) | [Healthy Harbor Trash Wheel Collection Data]( | [Mr. Trash Wheel]( | | 11 | `2024-03-12` | [Fiscal Sponsors](data/2024/2024-03-12/readme.md) | [Fiscal Sponsor Directory]( | [Fiscal Sponsor Directory facts]( | | 12 | `2024-03-19` | [X-Men Mutant Moneyball](data/2024/2024-03-19/readme.md) | [Mutant Moneyball Data]( | [Mutant moneyball: a data-driven ultimate X-Men]( | | 13 | `2024-03-26` | [NCAA Men's March Madness](data/2024/2024-03-26/readme.md) | [Men's March Madness Data]( | [Bracketology: predicting March Madness]( | | 14 | `2024-04-02` | [Du Bois Visualization Challenge 2024](data/2024/2024-04-02/readme.md) | [Week 10 Data ]( | [Du Bois Visualization Challenge: 2024]( | | 15 | `2024-04-09` | [2023 & 2024 US Solar Eclipses](data/2024/2024-04-09/readme.md) | [NASA's Scientific Visualization Studio cities-eclipse-2024.json]( [NASA's Scientific Visualization Studio cities-eclipse-2023.json]( | [The 2023 and 2024 Solar Eclipses: Map and Data]( | | 16 | `2024-04-16` | [Shiny Packages](data/2024/2024-04-16/readme.md) | [shiny on CRAN]( | [ShinyConf2024: The Future is Shiny]( | | 17 | `2024-04-23` | [Objects Launched into Space](data/2024/2024-04-23/readme.md) | [Our World in Data: Annual number of objects launched into space]( | [UN Office for Outer Space Affairs: Online index of objects launched into outer space]( | | 18 | `2024-04-30` | [Worldwide Bureaucracy Indicators](data/2024/2024-04-30/readme.md) | [World Bank Data Catalog: Worldwide Bureaucracy Indicators]( | [Introducing the Worldwide Bureaucracy Indicators]( | | 19 | `2024-05-07` | [Rolling Stone Album Rankings](data/2024/2024-05-07/readme.md) | [Rolling Stone 500]( | [What Makes an Album the Greatest of All Time]( | | 20 | `2024-05-14` | [The Great American Coffee Taste Test](data/2024/2024-05-14/readme.md) | [James Hoffmann and Cometeer Great American Coffee Taste Test Survey]( | [Great American Coffee Taste Test Breakdown]( | | 21 | `2024-05-21` | [Carbon Majors emissions data](data/2024/2024-05-21/readme.md) | [CarbonMajors dataset]( | [CarbonMajors]( | | 22 | `2024-05-28` | [Lisa's Vegetable Garden Data](data/2024/2024-05-28/readme.md) | [{gardenR} package]( | [Macalester College COMP/STAT 112 Tutorials]( | *** ## Citing TidyTuesday To cite the `TidyTuesday` repo/project in publications use: Data Science Learning Community (2024). Tidy Tuesday: A weekly social data project. A BibTeX entry for LaTeX users is ``` @misc{tidytuesday, title = {Tidy Tuesday: A weekly social data project}, author = {Data Science Learning Community}, url = { year = {2024} } ``` Note: If you would like to cite the [tidytuesdayR]( package, you should use `citation(""tidytuesdayR"")` instead. *** ## Submitting Datasets `TidyTuesday` is built around open datasets that are found in the ""wild"" or submitted as [Issues]( on our GitHub. If you find a dataset that you think would be interesting, you can approach it through two ways: ### Submit the dataset as an Issue 1. Find an interesting dataset 2. Find a report, blog post, article, etc relevant to the data 3. Submit the dataset as an [Issue]( along with a link to the article (and, ideally, 2 images from the article, with alt text) ### Create an entire TidyTuesday challenge! 1. Find an interesting dataset 2. Find a report, blog post, article, etc relevant to the data (or create one yourself!) 3. Let us know you've found something interesting and are working on it by filing an [Issue]( on our GitHub 4. Provide a link or the raw data and a cleaning script for the data 5. Write a basic `readme.md` file using a recent `readme.md` as a template. Make sure to give yourself credit!","2.4k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, dataset, data: check img alt text, data: downer-covid, maintenance, data: needs compilation, automation, enhancement, data: has data link, data: provenance, data: no article, data: has images, data: has article, wontfix, question, invalid, help wanted, good first issue, duplicate, data: usable provenance, data: too large, data: not datavizable, data: no images, data: no image alt text, data: no data link, data: needs data dictionary, data: has usable size, data: has img alt, data: has data dictionary, data: downer, data: datavizable"
jekyll-theme-chirpy,cotes2020/jekyll-theme-chirpy,6461,"['HTML', 'SCSS', 'JavaScript']","['jekyll-theme', 'pwa', 'responsive-web-design', 'rubygems', 'jamstack']","# Chirpy Jekyll Theme A minimal, responsive, and feature-rich Jekyll theme for technical writing. [][gem] [][ci] [][codacy] [][license] []( [**Live Demo** ][demo] [][demo] ## Features - Dark Theme - Localized UI language - Pinned Posts on Home Page - Hierarchical Categories - Trending Tags - Table of Contents - Last Modified Date - Syntax Highlighting - Mathematical Expressions - Mermaid Diagrams & Flowcharts - Dark Mode Images - Embed Media - Comment Systems - Built-in Search - Atom Feeds - PWA - Web Analytics - SEO & Performance Optimization ## Documentation To learn how to use, develop, and upgrade the project, please refer to the [Wiki][wiki]. ## Contributing Contributions (_pull requests_, _issues_, and _discussions_) are what make the open-source community such an amazing place to learn, inspire, and create. Any contributions you make are greatly appreciated. For details, see the ""[Contributing Guidelines][contribute-guide]"". ## Credits ### Contributors Thanks to [all the contributors][contributors] involved in the development of the project! [][contributors] Made with [contrib.rocks]( ### Third-Party Assets This project is built on the [Jekyll][jekyllrb] ecosystem and some [great libraries][lib], and is developed using [VS Code][vscode] as well as tools provided by [JetBrains][jetbrains] under a non-commercial open-source software license. The avatar and favicon for the project's website are from [ClipartMAX][clipartmax]. ## License This project is published under [MIT License][license]. [gem]: [ci]: [codacy]: [license]: [jekyllrb]: [clipartmax]: [demo]: [wiki]: [contribute-guide]: [contributors]: [lib]: [vscode]: [jetbrains]:","5.3k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, enhancement, stale, javascript, dependencies, wontfix, security, ruby, released, planning, pending, invalid, in progress, help wanted, github_actions, duplicate, compatibility, bug, 3rd-party_deps"
web-development-resources,markodenic/web-development-resources,6867,['HTML'],"['webdevelopment', 'chrome-extensions', 'website-optimization', 'freelancing-platforms', 'color-palettes']","# Awesome Web Development Resources ![Awesome][awesome-badge] This is an awesome project about Web Development resources. Resources are added frequently! Enjoy! :) If you like this repo, be sure to it. Please read [`contributing guidelines`](./CONTRIBUTING.md) before submitting new resources. --- Initially created by [Marko]( at [Web Development Resources]( ## Table of Contents - [Hosting](#hosting) - [Learning Platforms](#learning-platforms) - [Coding Challenge Platforms](#coding-challenge-platforms) - [Freelancing platforms](#freelancing-platforms) - [Remote Jobs](#remote-jobs) - [Photos](#photos) - [Videos](#videos) - [Illustrations](#illustrations) - [Icons](#icons) - [Fonts](#fonts) - [Youtube Channels](#youtube-channels) - [Podcasts](#podcasts) - [Code Editors](#code-editors) - [Color Palettes](#color-palettes) - [UI Inspiration](#ui-inspiration) - [Docs](#docs) - [Animation Libraries](#animation-libraries) - [Charts](#charts) - [Chrome Extensions](#chrome-extensions) - [Website Optimization Tools](#website-optimization-tools) - [HTML/CSS/JavaScript templates](#htmlcssjavascript-templates) - [Newsletters](#newsletters) - [CSS Generators](#css-generators) - [CSS Games ](#css-games) - [Online Tools](#online-tools) - [UI Components](#ui-components) - [Vue UI libraries](#vue-ui-libraries) - [React UI libraries](#react-ui-libraries) - [Angular UI libraries](#angular-ui-libraries) - [Others](#others) ## Hosting: | Website | Description | | --------------------------------------------- | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | | **Netlify** unites an entire ecosystem of modern tools and services into a single, simple workflow for building high performance sites and apps. | | | **Firebase** helps you build and run successful apps. It is backed by Google and loved by app development teams - from startups to global enterprises | | | **Amazon** Web Services offers a broad set of global cloud-based products and services help organizations move faster, lower IT costs, and scale. | | | **GitHub** Pages are websites for you and your projects. It is hosted directly from your GitHub repository. You just have to edit, push, and your changes are live. | | | **Vercel** combines the best developer experience with an obsessive focus on end-user performance. It enables frontend teams to do their best work. You just have to develop preview and ship. | | | **Surge** is static web publishing for Front-End Developers. It is simple, single-command web publishing. It publishes HTML, CSS, and JS for free, without leaving the command line. | | | **Render** is a unified cloud to build and run all your apps and websites with free TLS certificates, a global CDN, DDoS protection, private networks, and auto deploys from Git. | | | **GitLab** Pages - static websites directly from a repository in GitLab. To publish a website one can use any static site generator or any plain written HTML, CSS, and JavaScript. | | | **Stormkit** can easily manage your frontend infrastructure. It integrates perfectly with your git flow. It helps you build, deploy and scale your web apps seamlessly. | | | **DigitalOcean** has the cloud computing services you need, with predictable pricing, robust documentation, and scalability to support your growth at any stage. It is simpler cloud for happier devs to have better results. | | | **000webhostapp** is zero cost website hosting with PHP, MySQL, Cpanel & no ads. Its servers use advanced firewalls and include DDoS protection. | | | **InfinityFree** is fully featured, completely free website hosting with PHP, MySQL and no ads on site. | | | **Cloudflare Pages** is a JAMstack platform for frontend developers to collaborate and deploy websites. It offers free unlimited bandwidth. | | | **Supabase** is an open source Firebase alternative. Start your project with a Postgres Database, Authentication, instant APIs, Realtime subscriptions and Storage. | | **Railway** is an infrastructure platform where you can provision infrastructure, develop with that infrastructure locally, and then deploy to the cloud.| | | **Fly** is a platform for running full stack apps and databases close to your users. Weve been hammering on this thing since 2017, and we think its pretty great. | | | **Fleek** makes it easy to build websites and apps on the new open web: permissionless, trustless, censorship resistant, and free of centralized gatekeepers. | [ back to top](#table-of-contents) ## Learning Platforms: | Website | | ---------------------------------------------------------------- | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | [ back to top](#table-of-contents) ## Coding Challenge Platforms: | Website | | ---------------------------------- | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | [ back to top](#table-of-contents) ## Freelancing platforms: | Website | | -------------------------- | | | | | | | | | | | | | | | | | | | | | | | | | [ back to top](#table-of-contents) ## Remote Jobs: | Website | | ------------------------------- | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | [ back to top](#table-of-contents) ## Photos: | Website | | -------------------------------- | | | | | | | | | | | | | | | | | | | | | | | [ back to top](#table-of-contents) ## Videos: | Website | | -------------------------- | | | | | | | | | | | | | | | | | | | | | | | | | | | [ back to top](#table-of-contents) ## Illustrations: | Website | | ------------------------------------------ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | [ back to top](#table-of-contents) ## Icons: | Website | | ----------------------------------------- | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | [ back to top](#table-of-contents) ## Fonts: | Website | | ------------------------ | | | | | | | | | | | | | | | | | | | [ back to top](#table-of-contents) ## Youtube Channels: | Website | | ----------------------------------------------------------------------------- | | [Traversy Media]( | | [freeCodeCamp.org]( | | [The Net Ninja]( | | [Google Chrome Developers]( | | [Derek Banas]( | | [Academind]( | | [CodingTech]( | | [Cod Community]( | | [Web Dev Simplified]( | | [Dev Ed]( | | [CodeSTACKr]( | | [Coding Addict]( | | [Kevin Powell]( | | [Code with Ania Kubw]( | | [The Coding Train]( | | [kudvenkat]( | | [Program With Erik]( | | [Coder Coder]( | | [clever programmer]( | | [JavaScript Mastery]( | | [Adrian Twarog]( | | [Wes Bos]( | | [DesignCourse]( | | [codedamn]( | | [ProgrammingWithMosh]( | | [Fireship]( | | [Codevolution]( | | [Buddy]( | | [Leon Noel]( | | [CSS Weekly]( | | [Dave Gray]( | | [Sonny Sangha]( | | [LearnCode.academy]( | | [Corey Schafer]( | [ back to top](#table-of-contents) ## Podcasts: | Website | | --------------------------------------------------------------------------- | | [Syntax]( | | [Fullstack radio]( | | [The Changelog]( | | [The Laracasts Snippet]( | | [Front End Happy Hour]( | | [JavaScript Jabber]( | | [Commit Your Code!]( | | [Shop Talk]( | | [Ladybug Podcast]( | | [CodePen Radio]( | | [JAMStack Radio]( | | [DevDiscuss]( | | [DevNews]( | | [React Native Radio]( | | [Html All The Things]( | | [The CSS Podcast]( | | [The Stack Overflow Podcast]( | [ back to top](#table-of-contents) ## Code Editors: | Website | | -------------------------------------------- | | [VS Code]( | | [Sublime Text]( | | [Brackets]( | | [emacs]( | | [Vim]( | | [Spacemacs]( | | [Emacs]( | | [Neovim]( | | [Fleet]( | | [CodeLobster]( | [ back to top](#table-of-contents) ## Color Palettes: | Website | | ----------------------------- | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | [ back to top](#table-of-contents) ## UI Inspiration: | Website | | ------------------------ | | | | | | | | | | | | | | | | | | [ back to top](#table-of-contents) ## Docs: | Website | | ----------------------------- | | | | | | | | | [ back to top](#table-of-contents) ## Animation Libraries: | Website | | -------------------------------------------------------------- | | [CSShake]( | | [Animate.css]( | | [AnimeJS]( | | [GreenSock (GSAP)]( | | [Magic Animations]( | | [Hover css]( | | [AniJS]( | | [Wicked CSS]( | | [Tuesday]( | | [Mo.js]( | | [AOS]( | | [Velocity.js]( | | [Popmotion]( | | [Snap.svg]( | | [Animista]( | | [Lottie-Player]( | | [Framer motion]( | | [SwiperJS]( | | [Motion One]( | [ back to top](#table-of-contents) ## Charts: | Website | | -------------------------------------- | | [Chart.js]( | | [D3.js]( | | [three.js]( | | [amCharts]( | | [Charts.css]( | | [ECharts]( | [ back to top](#table-of-contents) ## Chrome Extensions: | Website | | -------------------------------------------------------------------------------------------------------------------------------------------------- | | [Web Developer]( | | [CSSViewer]( | | [Wappalyzer]( | | [JSONView]( | | [daily.dev - News for Busy Developers]( | | [Lighthouse]( | | [Checkbot - SEO, speed & security checker]( | | [Performance-Analyser]( | | [WhatFont]( | | [Visbug]( | | [Colorzilla]( | | [Window Resizer]( | | [React Developer Tools]( | | [Hackertab.dev - All Developer news in 1 tab]( | [Vue Developer Tools]( | [ back to top](#table-of-contents) ## Website Optimization Tools: | Website | | ------------------------------------------------------- | | [Google PageSpeed Insights]( | | [GTmetrix]( | | [WebPageTest]( | | [Yslow]( | | [web.dev]( | | [Optimizilla]( | | [SEOTester]( | [ back to top](#table-of-contents) ## HTML/CSS/JavaScript templates: | Website | | ----------------------------- | | | | | | | | | | | | | | | | | | | | | | | | | | | [ back... [TRUNCATED]","1.2k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, report, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug, Hacktoberfest-accepted, Hacktoberfest"
judge0,judge0/judge0,2224,"['HTML', 'Ruby', 'Shell']","['online-judge', 'online-compiler', 'competitive-programming', 'code-executor', 'code-runner']","[]( # Judge0 CE [](LICENSE) []( []( []( The most advanced open-source online code execution system in the world. ## Table of Contents * [About](#about) * [Features](#features) * [Get Started](#get-started) * [Flavors](#flavors) * [Supported Languages](#supported-languages) * [References](#references) * [Citation](#citation) * [Community](#community) * [Author and Contributors](#author-and-contributors) * [Changelog](#changelog) * [Special Thanks](#special-thanks) * [License](#license) ## About [Judge0]( (pronounced like ""judge zero"") is a robust, scalable, and [open-source]( **online code execution system**. You can use it to build a wide range of applications that need online code execution features. Some examples include competitive programming platforms, e-learning platforms, candidate assessment and recruitment platforms, online code editors, online IDEs, and many more. In our research paper [Robust and Scalable Online Code Execution System]( we present Judge0's modern modular architecture that can be easily deployed and scaled. We study its design, comment on the various challenges in building such systems, and compare it with other available online code execution systems and online judge systems. To see Judge0 in action, try [Judge0 IDE]( - our free and open-source online code editor. ## Features - Quick and easy [installation]( - Rich and verbose [API documentation]( - Scalable architecture - Sandboxed compilation and execution - Support for [60+ languages](#supported-languages) - Compilation and execution of multi-file programs - Support for additional files alongside the user's program - Support for custom user-defined compiler options, command-line arguments, and time and memory limits - Detailed execution results - Webhooks (HTTP callbacks) For more information about these and other features, please [read the documentation]( ## Get Started Feel free to start with the [**FREE Basic Plan**]( on RapidAPI or [host it yourself]( You can find our detailed plans and pricing [here]( So far our clients have run with us more than programs. ### Why should you use Judge0 on RapidAPI? Our infrastructure allows you to **focus on building your product** and forget about the know-how of maintaining and scaling Judge0. ### RapidAPI plans are not (good) enough for you? Let's talk. [Contact us](mailto:contact@judge0.com). ## Flavors Judge0 comes in two flavors: [Judge0 CE]( and [Judge0 Extra CE]( They differ mostly in the [supported languages](#supported-languages). You can find the source code for Judge0 CE on the [`master`]( branch, while you can find the source code for Judge0 Extra CE on the [`extra`]( branch. Judge0 Extra CE is also available on [RapidAPI]( ## Supported Languages Judge0 comes in two flavors: [Judge0 CE]( and [Judge0 Extra CE]( They differ mostly in the [supported languages](#supported-languages). ### [Judge0 CE]( Click here to expand the list # Name 1 Assembly (NASM 2.14.02) 2 Bash (5.0.0) 3 Basic (FBC 1.07.1) 4 C (Clang 7.0.1) 5 C (GCC 7.4.0) 6 C (GCC 8.3.0) 7 C (GCC 9.2.0) 8 C# (Mono 6.6.0.161) 9 C++ (Clang 7.0.1) 10 C++ (GCC 7.4.0) 11 C++ (GCC 8.3.0) 12 C++ (GCC 9.2.0) 13 Clojure (1.10.1) 14 COBOL (GnuCOBOL 2.2) 15 Common Lisp (SBCL 2.0.0) 16 D (DMD 2.089.1) 17 Elixir (1.9.4) 18 Erlang (OTP 22.2) 19 Executable 20 F# (.NET Core SDK 3.1.202) 21 Fortran (GFortran 9.2.0) 22 Go (1.13.5) 23 Groovy (3.0.3) 24 Haskell (GHC 8.8.1) 25 Java (OpenJDK 13.0.1) 26 JavaScript (Node.js 12.14.0) 27 Kotlin (1.3.70) 28 Lua (5.3.5) 29 Objective-C (Clang 7.0.1) 30 OCaml (4.09.0) 31 Octave (5.1.0) 32 Pascal (FPC 3.0.4) 33 Perl (5.28.1) 34 PHP (7.4.1) 35 Plain Text 36 Prolog (GNU Prolog 1.4.5) 37 Python (2.7.17) 38 Python (3.8.1) 39 R (4.0.0) 40 Ruby (2.7.0) 41 Rust (1.40.0) 42 Scala (2.13.2) 43 SQL (SQLite 3.27.2) 44 Swift (5.2.3) 45 TypeScript (3.7.4) 46 Visual Basic.Net (vbnc 0.0.0.5943) ### [Judge0 Extra CE]( Click here to expand the list # Name 1 Bosque (latest) 2 C (Clang 10.0.1) 3 C (Clang 9.0.1) 4 C# (.NET Core SDK 3.1.302) 5 C# (Mono 6.10.0.104) 6 C# Test (.NET Core SDK 3.1.302, NUnit 3.12.0) 7 C++ (Clang 10.0.1) 8 C++ (Clang 9.0.1) 9 C++ Test (Clang 10.0.1, Google Test 1.8.1) 10 C++ Test (GCC 8.4.0, Google Test 1.8.1) 11 C3 (latest) 12 F# (.NET Core SDK 3.1.302) 13 Java (OpenJDK 14.0.1) 14 Java Test (OpenJDK 14.0.1, JUnit Platform Console Standalone 1.6.2) 15 MPI (OpenRTE 3.1.3) with C (GCC 8.4.0) 16 MPI (OpenRTE 3.1.3) with C++ (GCC 8.4.0) 17 MPI (OpenRTE 3.1.3) with Python (3.7.7) 18 Nim (stable) 19 Python for ML (3.7.7) 20 Visual Basic.Net (vbnc 0.0.0.5943) ## References ### Companies, Organizations, and Projects [These companies, institutions and organizations use Judge0.]( ### Scientific Articles These scientific articles mention Judge0. A Game-Changing Instructor Tool to Reinforce Coding Concepts Building a Comprehensive Automated Programming Assessment System Voice-Enabled Intelligent IDE in Cloud Big Data based Advanced Lab Analysis System using Apache Spark Online Automatic Assessment System for Program Code: Architecture and Experiences A comparison between online compilers: A Case Study Online Judge System: Requirements, Architecture, and Experiences Nacionalni repozitorij zavrnih i diplomskih radova ZIR Pengembangan Sistem Manajemen Evaluasi Pembelajaran Terintegrasi Dengan Online Judge Rancang Bangun Sistem Online Judge dan Pendeteksian Plagiarisme Menggunakan Arsitektur Serverless Grid-Coding: An Accessible, Efficient, and Structured Coding Paradigm for Blind and Low-Vision Programmers Desarrollo de una plataforma orientada al refuerzo en la evaluacin del nivel de programacin Web aplikacija za provjeru programskog koda Web-aplikacija za obavljanje i dijeljenje programskih odsjeaka u razliitim programskim jezicima Prototip integracije sustava za strojno uenje u sustav Edgar Web-aplikacija za rjeavanje programskih zadataka s elementima drutvene mree Analiza performansi sustava za udaljeno izvravanje programskog kda Repozitorij Fakulteta elektrotehnike i raunarstva Sveuilita u Zagrebu Usability and Security of Trusted Platform Module (TPM) Library APIs Prottipo de uma ferramenta gamificada para a aplicao de atividades prticas em sala de aula em uma disciplina de introduo programao A Strategy Based on Technological Maps for the Identification of the State-of-the-Art Techniques in Software Development Projects: Virtual Judge Projects as a Case Study - WHILE Scaling Automated Programming Assessment Systems Full-stack web development for auto-assessment platform A Secure and Scalable System for Online Code Execution and Evaluation using Containerization and Kubernetes Thinking beyond chatbots' threat to education: Visualizations to elucidate the writing and coding process Advanced lab analysis system using apache spark Programmable Questions in Edgar Automatic Evaluation of Student Software Solutions in a Virtualized Environment Automatic question generation for JavaScript programming courses ### Other Online References Designing Online Judge or Leetcode Make your own online compiler in React Programski jezik Go - FER 2019./2020. - Prvo predavanje Sudjelovanje FER-a na Smotri Sveuilita 2019. Sveana 672. sjednica Fakultetskog vijea FER-a USACO Guide - Running Code Online Web application for authoring and sharing code snippets in different programming languages Lets Deploy our Online Code Executor in Google Cloud Lets Develop an Online Code Editor & Compiler like HackerRank Lets Develop An Online Code Editor/Compiler Like HackerRank Build a Live Code Editor & Playground like HackerRank Using Vue Top 11 Java IDEs and Online Compilers for Productive Development How to Build a Code Editor with React that Compiles and Executes in 40+ Languages How to Build an Online Java Compiler Top 33 Best Cloud IDE For The Developers (2022 Review) 21 Productivity Apps for Programmers Running sqlite on the browser How to self-host Judge0 API on your PC locally | All you need to know Summer Internship Experience '21 Best Websites Every Programmer Should Visit Excellent Online Code Editors A pair programming platform to help you get better at technical interviews: building out the platform 10 Amazing Free Tools For Your Blog Posts And Developer Projects The Easiest Way to Start Coding! How to create a code editor for 40+ languages with React Tutorial isi api key di pc platform ## Citation Please [cite us]( if you found the resources in this repository useful. ``` @INPROCEEDINGS{9245310, author={Doilovi, Herman Zvonimir and Mekterovi, Igor}, booktitle={2020 43rd International Convention on Information, Communication and Electronic Technology (MIPRO)}, title={Robust and Scalable Online Code Execution System}, year={2020}, volume={}, number={}, pages={1627-1632}, doi={10.23919/MIPRO48935.2020.9245310}} ``` ## Community Do you have a question, feature request, or something else on your mind? Or you want to follow Judge0 news? * [Subscribe to Judge0 newsletter]( * [Join our Discord server]( * [Watch asciicasts]( * [Report an issue]( * [Contact us](mailto:contact@judge0.com) * [Schedule an online meeting with us]( ## Author and Contributors Judge0 was created and is maintained by [Herman Zvonimir Doilovi]( Thanks a lot to all [contributors]( for their contributions to this project. ## Changelog You can find the detailed specification of changes between versions in [CHANGELOG.md](CHANGELOG.md). ## Special Thanks Special thanks to open-source projects without whom Judge0 probably wouldn't exist: [Isolate]( [Docker]( [Ruby on Rails]( and others. ## License Judge0 is licensed under the [GNU General Public License v3.0](LICENSE).","425, Code, Issues, Pull requests, Discussions, Projects, Security, Insights, enhancement, question, problem, low-priority, documentation, enterprise, discussion, dependencies, confirmed, bug, wontfix, sponsored, invalid, help wanted, great issue, duplicate, announcement"
al-folio,alshedivat/al-folio,9381,"['HTML', 'SCSS', 'JavaScript']","['jekyll', 'jekyll-theme', 'academic', 'academic-website', 'personal-website']","# al-folio []( **A simple, clean, and responsive [Jekyll]( theme for academics.** --- []( [](#maintainers) []( []( []( []( []( []( []( []( ## User community The vibrant community of **al-folio** users is growing! Academics around the world use this theme for their homepages, blogs, lab pages, as well as webpages for courses, workshops, conferences, meetups, and more. Check out the community webpages below. Feel free to add your own page(s) by sending a PR. Academics Labs Courses CMU PGM (S-19) CMU DeepRL (S-21, F-21, S-22, F-22, S-23, F-23) CMU MMML (F-20, F-22) CMU AMMML (S-22, S-23) CMU ASI (S-23) CMU Distributed Systems (S-24) Conferences & workshops ICLR Blog Post Track (2023, 2024) ML Retrospectives (NeurIPS: 2019, 2020; ICML: 2020) HAMLETS (NeurIPS: 2020) ICBINB (NeurIPS: 2020, 2021) Neural Compression (ICLR: 2021) Score Based Methods (NeurIPS: 2022) Images2Symbols (CogSci: 2022) Medical Robotics Junior Faculty Forum (ISMR: 2023) Beyond Vision: Physics meets AI (ICIAP: 2023) Workshop on Diffusion Models (NeurIPS: 2023) ## Lighthouse PageSpeed Insights ### Desktop []( Run the test yourself: [Google Lighthouse PageSpeed Insights]( ### Mobile []( Run the test yourself: [Google Lighthouse PageSpeed Insights]( ## Table Of Contents - [al-folio](#al-folio) - [User community](#user-community) - [Lighthouse PageSpeed Insights](#lighthouse-pagespeed-insights) - [Desktop](#desktop) - [Mobile](#mobile) - [Table Of Contents](#table-of-contents) - [Getting started](#getting-started) - [Installing and Deploying](#installing-and-deploying) - [Customizing](#customizing) - [Features](#features) - [Light/Dark Mode](#lightdark-mode) - [CV](#cv) - [People](#people) - [Publications](#publications) - [Collections](#collections) - [Layouts](#layouts) - [The iconic style of Distill](#the-iconic-style-of-distill) - [Full support for math \& code](#full-support-for-math--code) - [Photos, Audio, Video and more](#photos-audio-video-and-more) - [Other features](#other-features) - [GitHub's repositories and user stats](#githubs-repositories-and-user-stats) - [Theming](#theming) - [Social media previews](#social-media-previews) - [Atom (RSS-like) Feed](#atom-rss-like-feed) - [Related posts](#related-posts) - [Code quality checks](#code-quality-checks) - [FAQ](#faq) - [Contributing](#contributing) - [Maintainers](#maintainers) - [All Contributors](#all-contributors) - [Star History](#star-history) - [License](#license) ## Getting started Want to learn more about Jekyll? Check out [this tutorial]( Why Jekyll? Read [Andrej Karpathy's blog post]( Why write a blog? Read [Rachel Thomas blog post]( ## Installing and Deploying For installation and deployment details please refer to [INSTALL.md](INSTALL.md). ## Customizing For customization details please refer to [CUSTOMIZE.md](CUSTOMIZE.md). ## Features ### Light/Dark Mode This template has a built-in light/dark mode. It detects the user preferred color scheme and automatically switches to it. You can also manually switch between light and dark mode by clicking on the sun/moon icon in the top right corner of the page. --- ### CV There are currently 2 different ways of generating the CV page content. The first one is by using a json file located in [assets/json/resume.json](assets/json/resume.json). It is a [known standard]( for creating a CV programmatically. The second one, currently used as a fallback when the json file is not found, is by using a yml file located in [\_data/cv.yml](_data/cv.yml). This was the original way of creating the CV page content and since it is more human readable than a json file we decided to keep it as an option. What this means is, if there is no resume data defined in [\_config.yml](_config.yml) and loaded via a json file, it will load the contents of [\_data/cv.yml](_data/cv.yml) as fallback. []( --- ### People You can create a people page if you want to feature more than one person. Each person can have its own short bio, profile picture, and you can also set if every person will appear at the same or opposite sides. []( --- ### Publications Your publications' page is generated automatically from your BibTex bibliography. Simply edit [\_bibliography/papers.bib](_bibliography/papers.bib). You can also add new `*.bib` files and customize the look of your publications however you like by editing [\_pages/publications.md](_pages/publications.md). By default, the publications will be sorted by year and the most recent will be displayed first. You can change this behavior and more in the `Jekyll Scholar` section in [\_config.yml](_config.yml) file. You can add extra information to a publication, like a PDF file in the [assets/pdf/](assets/pdf/) directory and add the path to the PDF file in the BibTeX entry with the `pdf` field. Some of the supported fields are: `abstract`, `altmetric`, `arxiv`, `bibtex_show`, `blog`, `code`, `dimensions`, `doi`, `eprint`, `html`, `isbn`, `pdf`, `pmid`, `poster`, `slides`, `supp`, `video`, and `website`. []( --- ### Collections This Jekyll theme implements `collections` to let you break up your work into categories. The theme comes with two default collections: `news` and `projects`. Items from the `news` collection are automatically displayed on the home page. Items from the `projects` collection are displayed on a responsive grid on projects page. []( You can easily create your own collections, apps, short stories, courses, or whatever your creative work is. To do this, edit the collections in the [\_config.yml](_config.yml) file, create a corresponding folder, and create a landing page for your collection, similar to `_pages/projects.md`. --- ### Layouts **al-folio** comes with stylish layouts for pages and blog posts. #### The iconic style of Distill The theme allows you to create blog posts in the [distill.pub]( style: []( For more details on how to create distill-styled posts using `` tags, please refer to [the example]( #### Full support for math & code **al-folio** supports fast math typesetting through [MathJax]( and code syntax highlighting using [GitHub style]( Also supports [chartjs charts]( [mermaid diagrams]( and [TikZ figures]( #### Photos, Audio, Video and more Photo formatting is made simple using [Bootstrap's grid system]( Easily create beautiful grids within your blog posts and project pages, also with support for [video]( and [audio]( embeds: --- ### Other features #### GitHub's repositories and user stats **al-folio** uses [github-readme-stats]( and [github-profile-trophy]( to display GitHub repositories and user stats on the `/repositories/` page. []( Edit the `_data/repositories.yml` and change the `github_users` and `github_repos` lists to include your own GitHub profile and repositories to the `/repositories/` page. You may also use the following codes for displaying this in any other pages. ```html {% if site.data.repositories.github_users %} {% for user in site.data.repositories.github_users %} {% include repository/repo_user.liquid username=user %} {% endfor %} {% endif %} {% if site.repo_trophies.enabled %} {% for user in site.data.repositories.github_users %} {% if site.data.repositories.github_users.size > 1 %} {{ user }} {% endif %} {% include repository/repo_trophies.liquid username=user %} {% endfor %} {% endif %} {% if site.data.repositories.github_repos %} {% for repo in site.data.repositories.github_repos %} {% include repository/repo.liquid repository=repo %} {% endfor %} {% endif %} ``` --- #### Theming A variety of beautiful theme colors have been selected for you to choose from. The default is purple, but you can quickly change it by editing the `--global-theme-color` variable in the `_sass/_themes.scss` file. Other color variables are listed there as well. The stock theme color options available can be found at [\_sass/\_variables.scss](_sass/_variables.scss). You can also add your own colors to this file assigning each a name for ease of use across the template. --- #### Social media previews **al-folio** supports preview images on social media. To enable this functionality you will need to set `serve_og_meta` to `true` in your [\_config.yml](_config.yml). Once you have done so, all your site's pages will include Open Graph data in the HTML head element. You will then need to configure what image to display in your site's social media previews. This can be configured on a per-page basis, by setting the `og_image` page variable. If for an individual page this variable is not set, then the theme will fall back to a site-wide `og_image` variable, configurable in your [\_config.yml](_config.yml). In both the page-specific and site-wide cases, the `og_image` variable needs to hold the URL for the image you wish to display in social media previews. --- #### Atom (RSS-like) Feed It generates an Atom (RSS-like) feed of your posts, useful for Atom and RSS readers. The feed is reachable simply by typing after your homepage `/feed.xml`. E.g. assuming your website mountpoint is the main folder, you can type `yourusername.github.io/feed.xml` --- #### Related posts By default, there will be a related posts section on the bottom of the blog posts. These are generated by selecting the `max_related` most recent posts that share at least `min_common_tags` tags with the current post. If you do not want to display related posts on a specific post, simply add `related_posts: false` to the front matter of the post. If you want to disable it for all posts, simply set `enabled` to false in the `related_blog_posts` section in [\_config.yml](_config.yml). --- #### Code quality checks Currently, we run some checks to ensure that the code quality and generated site are good. The checks are done using GitHub Actions and the following tools: - [Prettier]( - check if the formatting of the code follows the style guide - [lychee]( - check for broken links - [Axe]( (need to run manually) - do some accessibility testing We decided to keep `Axe` runs manual because fixing the issues are not straightforward and might be hard... [TRUNCATED]","10.5k, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, enhancement, help wanted, bug, plugin, wontfix, windows, troubleshooting, safari, ruby, question, macOS, invalid, ignore-for-release, hacktoberfest-accepted, good first issue, firefox, duplicate, docker, distill, dependency, bug-fix"
foss_photo_libraries,meichthys/foss_photo_libraries,1385,"['HTML', 'SCSS']","['comparison', 'foss', 'list', 'open-source', 'photo-library']","# Free and OpenSource Photo Libraries There are many great free and open-source alternatives to paid photo libraries. This project aims to track and compare the feature set between the many different options with a focus on 'Gratis' (free as in free beer) open source photo libraries. 'Libre' (free as in free speech) projects are also welcome, but will likely need to be submitted via a pull request since the time in testing each different project is significant. ## Comparison ```text = Feature exists in at least a limited fashion = Feature may exist but may not be practical or officially released = Feature does not yet exist # = Subjective measure of feature quality (on scale of 0-10) Tip: Hover over emoji for additional information ( link to related issue, demo credentials, etc) ``` | Feature | [Chevereto]( | [Damselfly]( | [HomeGallery]( | [Immich]( | [Librephotos]( | [Lychee]( | [Nextcloud Photos]( | [Nextcloud Memories]( | [Photonix]( | [Photofield]( | [PiGallery2]( | [Photoprism]( | [Photoview]( | [Piwigo]( | [Snapcrescent]( | | :----------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | Logo | | | | | | | | | | | | | | | | | [Github Stars](features.md#github-stars) | | | | | | | | | | | | | | | | | [Contributors](features.md#contributors) | | | | | | | | | | | | | | | | | [Last Commit](features.md#last-commit) | | | | | | | | | | | | | | | | | [Source Language](features.md#source-language) | | | | | | | | | | | | | | | | | [License](features.md#license) | | | | | | | | | | | | | | | | | [Demo](features.md#demo) | [5]( | | []( | []( | []( ""User:demo Pass:demo1234"")5 | []( ""User:admin Pass:admin"")9 | []( | []( | []( | []( | []( | []( | []( ""User:demo Pass:demo"")9 | []( | []( | | [Freeness](features.md#freeness) | [5]( | | | | | | | | | | | []( | | | | | [Automatic Mobile Upload](features.md#automatic-mobile-upload) | | []( | | 7 | | | 7 | 7 | | | | 6 | []( | 7 | 7 | | [Web App](features.md#web-app) | 8 | 8 | 8 | 8 | 8 | 8 | 7 | 9 | 7 | 9 | 7 | 7 | 8 | 8 | 7 | | [Android App](features.md#android-app) | | | | []( | [7]( | []( | []( | []( | [4]( | | | []( | []( | []( | []( | | [iOS App](features.md#ios-app) | | | | []( | []( | []( | []( ""Nextcloud Files App"")3 | []( ""Nextcloud Files App"")3 | [4]( | | | []( | []( | []( | | | [Desktop App](features.md#desktop-app) | | 9 | 8 | | | | []( ""File sync only"")2 | []( ""File sync only"")2 | []( | | | | | | | | [LivePhotos](features.md#livephotos) | | | | 9 | []( | [6]( | [3]( | 8 | []( | []( | | 7 | []( | []( | | | [Videos](features.md#videos) | []( | []( | 6 | 8 | 8 | 6 | 5 | 7 | []( | 6 | 8 | 7 | 7 | 4 | 7 | | [Geolocation/Map](features.md#geolocation/map) | | 7 | 8 | 7 | 8 | [5]( | 6 | 9 | 9 | 8 | 8 | 6 | 8 | 7 | | | [Discovery](features.md#discovery) | 2 | | | 6 | 7 | 6 | 6 | 7 | | | | 6 | | 1 | | | [Existing Folders](features.md#existing-folders) | | 7 | | [6]( | 4 | []( | 7 | 9 | []( | [4]( | 5 | 9 | 5 | []( | | | [Albums](features.md#albums) | 8 | []( | | 8 | 9 | 8 | 4 | 8 | 5 | | 6 | 8 | 6 | 8 | 5 | | [Slideshow](features.md#slideshow) | | 4 | | 5 | | [4]( | 5 | 5 | []( | 6 | 7 | 6 | []( | 5 | | | [Timeline](features.md#timeline) | 3 | 5 | 3 | 8 | 9 | []( | 4 | 9 | 5 | 6 | 5 | 5 | 9 | 3 | 5 | | [Sharing](features.md#sharing) | 7 | | | 7 | 9 | 9 | 8 | 9 | | | 7 | 7 | 8 | 5 | 5 | | [Search](features.md#search) | 5 | 8 | 7 | 9 | 8 | 5 | 4 | 4 | 8 | 9 | 7 | 8 | 5 | 7 | | | [Duplicate Handling](features.md#duplicate-handling) | 5 | []( | | 6 | []( | []( | [6]( | [6]( | []( | | 5 | [6]( | []( | 6 | 7 | | [User Defined Tags](features.md#photo-tagging) | []( | 7 | 7 | []( | []( | 5 | 3 | []( | 6 | 6 | | 5 | | 7 | | | [Docker Installation](features.md#docker-installation) | [8]( | 8 | 8 | 7 | 7 | 7 | []( | []( | 8 | 7 | 7 | 6 | 8 | []( | 8 | | [Object/Face Recognition](features.md#object/face-recognition) | | 8 | 6 | 6 | 8 | []( | [8]( | [8]( | 8 | 7 | 6 | 9 | 6 | []( | | | [Basic Editing](features.md#basic-editing) | | | | | | | 6 | 6 | | | | | | | | | [EXIF Data](features.md#exif-data) | 3 | 9 | 7 | 6 | []( | 7 | []( | 8 | 7 | 3 | 7 | 9 | 7 | 6 | 7 | | [Multiple User Support](features.md#multiple-user-support) | 8 | 7 | | 8 | 8 | 6 | 9 | 9 | 7 | []( | 7 | []( | 6 | 8 | 5 | | [Authentication Providers](features.md#authentication-providers) | 5 | | | 7 | []( | []( | 9 | 9 | []( | | []( | []( | []( | 5 | | **Note:** This list is by no means comprehensive and is provided on a best efforts basis. No guarantees are made to it's accuracy or completeness. If you see an error or inaccuracy, please report it and contribute a fix if you can! For links to other photo library projects, see: - [Awesome Self-Hosted]( - [Awesome Privacy]( An HTML version of this comparison table is here: ## Contributing Please contribute additions and corrections! When contributing, please add links to the source of the information. (i.e. link to an issue that indicates that a feature does not exist) ## Support Maintaining this list of projects takes a lot of time. If you found this comparison helpful, please let me know by considering supporting me. This lets me know that someone is finding this project useful and gives me an incentive to keep it up to date. You can support me on Liberapay or Github Sponsors:","38, Code, Issues, Pull requests, Actions, Projects, Security, Insights, help wanted, on hold, enhancement, good first issue, documentation, wontfix, question, invalid, duplicate, bug"
thedev.id,thedev-id/thedev.id,998,['HTML'],"['identity', 'domain', 'dns', 'developer-tools', 'namespace']","# thedev.id An identity for developers on the web. ## What is thedev.id **thedev.id** is a free identity for developers on the web. This service offers a handy subdomain like `foo.thedev.id` or `bar.thedev.id` for use on your static sites via [CNAME record]( Fork, add subdomain and send a Pull Request. We will make it work. ## How to get one - Star this repo. - Fork this repo. - Set a custom domain to your [GitHub Pages]( - Add your subdomain under `subdomains.json` file. - Run `npm install` and `npm run sort` to sort the keys alphabetically. - Send Pull Request. ### Similar Services - [Open Domains]( - [cluster.ws & wip.la]( - [is-a.dev]( - [is-a-good.dev]( - [is-really.cool]( - [js.org]( (*JavaScript projects only*) - [merahputih.moe](","649, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, need-contributor-action, need-verification, cname-added, site-verified, need-more-info, enhancement, wontfix, subdomain-active, ssl-problem, removed, invalid-no-response, invalid, help wanted, good first issue, duplicate, documentation, dependencies, canceled, announcement"
lab-css-flexbox-slack,ironhack-labs/lab-css-flexbox-slack,33,"['HTML', 'CSS']",[],"# CSS | Flexbox Slack Clone Learning Goals This exercise allows you to practice and apply the concepts and techniques taught in class. Upon completion of this exercise, you will be able to: - Develop a fully responsive webpage using the provided designs as a guide. - Use CSS _media queries_ to adapt the page layout to different screen sizes. - Use _Flexbox_ to layout and position elements on a webpage dynamically as either rows or columns. - Use the CSS `position` property to position elements on a webpage. - Display images on a webpage and make them responsive according to the viewport size. - Submit completed work using Git and GitHub by creating a Pull Request. ## Introduction **Slack** is a cloud-based set of team collaboration tools and services, or in simpler terms, an online chat application. Slack app is used in daily communications within different teams in companies, but today we will be focusing on their landing page. In today's lab, we'll recreate Slack's landing page while ensuring it's responsive and adapts well to different screens. You can see the _desktop (large) screen_ version of the web page we will be cloning [here](). The lab's goal is to create a _responsive_ landing page using **CSS** and **Flexbox**, starting with the styles for the mobile (small) screens first and then adapting the layout to larger screens using _media queries_. We have provided you with the all the HTML and the images you will need for the page, as well as the screenshots to guide you with the styles and layout for each screen size. ## Getting Started - Fork this repo - Clone this repo ## Submission - Upon completion, run the following commands: ```bash git add . git commit -m ""done"" git push origin master ``` - Create a Pull Request and submit your assignment. ## Instructions The `starter_code` folder contains all the files you'll need. The `images` folder contains all the images you'll need for your page, although most of them are already displayed on the page. **The `index.html` already contains all the text and content needed. We will be focusing on the CSS and styling!** During each iteration, the first step you should do is to inspect the provided screenshots. These are included in each iteration, along with a preview of the final result. Use these as a starting point for implementing your styles. --- ### Iteration 1 | Mobile Screens (width < 768px) Mobile first, right? :wink: We will start by focusing on the styles for mobile screens first! :iphone: Oh! Remember to use **Flexbox** to create the layout and display the content in rows or columns from the start. You'll be working on adapting the layout to different screen sizes in the following iterations, so it's essential that you start using Flexbox from beginning to end! When done, your page should look like this: [Preview - Mobile]() Use the following page screenshot as the guide: Screenshot - Mobile Screens [Back to top](#iteration-1--mobile-screens-width--768px) --- ### Iteration 2 | Small Screens (width > 768px and width < 1024px) Let's start growing our screen size. In this iteration, you will work on making the website look great on small screens (iPads, tablets, or larger smartphones). You will have to use CSS [media queries]( to apply the style and layout changes. Take a look at the preview and the screenshot to see the changes that are needed. Your task is to work on the following: - The **header** should go from 1 column to display 2 columns: one with the content and buttons and the other with the image. - In the **section ""TRUSTED BY COMPANIES...""**, the **company logos** should be displayed in a single row. - The **section ""Teams large and small rely on Slack""** should have the **list elements** displayed horizontally as rows. - In the **footer**, the **list elements** that were previously displayed as a column should now be displayed horizontally in a row. When done, your page should look like this: [Preview - Small Screens]() Use the following page screenshot as the guide: Screenshot - Small Screens [Back to top](#iteration-2--small-screens-width--768px-and-width--1024px) --- ### BONUS: Iteration 3 | Medium Screens (width > 1024px and width < 1440px) We'll continue by focusing on devices with medium-sized screens (notebooks and bigger tablets). Similar to the previous iteration, you will have to use CSS media queries to apply the style and layout changes. The most noticeable changes in this viewport size are: - The **navbar** should now display **all the menu links**. The previously displayed **menu icon** should now be hidden. - The **section ""Welcome to your new digital HQ""** should now display the buttons horizontally next to each other. When done, your page should look like this: [Preview - Medium Screens]() Use the following page screenshot as the guide: Screenshot - Medium Screens [Back to top](#iteration-3--medium-screens-width--1024px-and-width--1440px) --- ### BONUS: Iteration 4 | Large Screens (width > 1440px) Last one! Some small changes and we are done! In this iteration we are targeting large-screen devices such as desktops and laptops: - The **signup buttons** in the **header** should now be displayed horizontally, next to each other. - Additionally, the **image** in the **header** should be centered and fully visible. When done, your page should look like this: [Preview - Large Screens]() Use the following page screenshot as the guide: Screenshot - Large Screens [Back to top](#iteration-4--large-screens-width--1440px) **Happy coding!** :blue_heart: ## FAQs I am stuck in the exercise and don't know how to solve the problem or where to start. If you are stuck in your code and don't know how to solve the problem or where to start, you should take a step back and try to form a clear question about the specific issue you are facing. This will help you narrow down the problem and come up with potential solutions. For example, is it a concept that you don't understand, or are you receiving an error message that you don't know how to fix? It is usually helpful to try to state the problem as clearly as possible, including any error messages you are receiving. This can help you communicate the issue to others and potentially get help from classmates or online resources. Once you have a clear understanding of the problem, you will be able to start working toward the solution. [Back to top](#faqs) How do I center align HTML text elements? To center align HTML _text elements_, you can use the `text-align` property and set it to `center`. This property can be applied to any _inline_ or _block-level_ element. Here is an example of how you can use the `text-align` property to center align multiple text elements: **HTML** ```html This is a title This is some text in here ``` **CSS** ```css /* CSS */ p { text-align: center; /* Center align all p elements */ } h2 { text-align: center; /* Center align all h2 elements */ } ``` This will center align all `p` and `h2` elements within the parent `div`. For more information, check: [W3C: Centering Things]( [Back to top](#faqs) How do I center align HTML block elements? To center align a block-level element, such as a `div`, `h1`, etc., you can use the `margin` property and set it to `auto`. This will center the element horizontally within its parent container. Here is an example of how you can do this: **HTML** ```html Lorem ipsum dolor sit amet consectetur, adipisicing elit. ``` **CSS** ```css /* CSS */ div { width: 500px; margin: 0 auto; } ``` This will set the `width` property of the `div` to 500 pixels and we set the left and right margins to be equal by using `margin: 0 auto;`. [Back to top](#faqs) How do I center align an HTML image element? There are a few ways you can center align an image element. ##### 1. Align an image using `text-align` To center an image element in HTML, you can use the `text-align` property on the parent element, such as `div`. Example: **HTML** ```html ``` **CSS** ```css div { text-align: center; } ``` This will center align all the children elements within the `section` element, including the `img` element. ##### 2. Align an image as a block element The other way is converting the image into a block element and using `margin: 0 auto`. Here is an example: **HTML** ```html ``` **CSS** ```css img { display: block; margin: 0 auto; } ``` This will center the image horizontally within the parent `section` element. The `display: block` property is used to make the image a _block-level_ element, allowing the `margin: 0 auto` property to work. The `margin: 0 auto` property sets the left and right margins to be equal, centering the element within its parent container. [Back to top](#faqs) How can I center align elements within a Flexbox container? To center align elements within a Flexbox parent container, you can use the `justify-content` property and set it to `center`. This will horizontally center the elements within the Flexbox container. **Example:** ```css .container { display: flex; justify-content: center; /* Center elements horizontally */ } ``` You can also use the `align-items` property and set it to `center` to vertically center align the elements within the Flexbox container. Example: ```css .container { display: flex; justify-content: center; /* Center elements horizontally */ align-items: center; /* Center elements vertically */ } ``` For more information and an interactive Flexbox guide, check: [An Interactive Guide to Flexbox]( [Back to top](#faqs) How can I change the header from having 1 column to having 2 columns using Flexbox? To change the header of an HTML page from having one column to having two columns using Flexbox, you should do the following in your CSS: 1. Use the `display` property and set it to `flex`. 2. Add the `flex-direction` property and set it to `column` to arrange the elements in a column. 3. Add the `justify-content` property to align the elements horizontally 4. Use the `align-items` property to align them vertically. ```css header { displ... [TRUNCATED]","3.6k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, stale, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, bug"
okta-help,okta/okta-help,1,"['HTML', 'CSS', 'JavaScript']",[],# Okta Help This repository contains H.O.C. content.,"1, Code, Issues, Pull requests, Projects, Security, Insights, dependencies, product_Workflows, product_OIE, product_OCE, product_OAG, product_Enduser, product_ASA, lang_Japanese, lang_English, Barbara"
server-ux,OCA/server-ux,145,"['HTML', 'Python', 'JavaScript']","['erp', 'hacktoberfest', 'odoo', 'python']","[]( []( []( []( []( # server-ux TODO: add repo description. [//]: # (addons) Available addons ---------------- addon | version | maintainers | summary --- | --- | --- | --- [announcement](announcement/) | 16.0.1.0.0 | | Notify internal users about relevant organization stuff [announcement_dialog_size](announcement_dialog_size/) | 16.0.1.0.0 | | Allow set announcement dialogs fullsized by default [barcode_action](barcode_action/) | 16.0.1.0.0 | | Allows to use barcodes as a launcher [base_archive_security](base_archive_security/) | 16.0.1.0.1 | []( []( | Controls who can archive or unarchive records [base_binary_url_import](base_binary_url_import/) | 16.0.1.0.0 | | Wizard to import binary files from URL on existing records [base_cancel_confirm](base_cancel_confirm/) | 16.0.1.0.0 | []( | Base Cancel Confirm [base_custom_filter](base_custom_filter/) | 16.0.1.1.0 | []( []( | Add custom filters in standard filters and group by dropdowns [base_export_manager](base_export_manager/) | 16.0.1.0.0 | | Manage model export profiles [base_import_security_group](base_import_security_group/) | 16.0.1.0.0 | | Group-based permissions for importing CSV files [base_menu_visibility_restriction](base_menu_visibility_restriction/) | 16.0.1.0.0 | []( | Restrict (with groups) menu visibilty [base_optional_quick_create](base_optional_quick_create/) | 16.0.1.0.0 | | Avoid ""quick create"" on m2o fields, on a ""by model"" basis [base_revision](base_revision/) | 16.0.1.0.2 | | Keep track of revised document [base_search_custom_field_filter](base_search_custom_field_filter/) | 16.0.1.0.0 | []( | Add custom filters for fields via UI [base_substate](base_substate/) | 16.0.1.0.0 | | Base Sub State [base_technical_features](base_technical_features/) | 16.0.1.0.0 | | Access to technical features without activating debug mode [base_tier_validation](base_tier_validation/) | 16.0.1.6.0 | []( | Implement a validation process based on tiers. [base_tier_validation_definition_server_action](base_tier_validation_definition_server_action/) | 16.0.1.0.0 | | Server action for Base tier validation [base_tier_validation_formula](base_tier_validation_formula/) | 16.0.1.0.2 | | Formulas for Base tier validation [base_tier_validation_forward](base_tier_validation_forward/) | 16.0.1.1.2 | []( | Forward option for base tiers [base_tier_validation_report](base_tier_validation_report/) | 16.0.1.0.1 | []( | Reports related to tier validation [base_tier_validation_server_action](base_tier_validation_server_action/) | 16.0.1.0.0 | []( | Add option to call server action when a tier is validated [base_tier_validation_waiting](base_tier_validation_waiting/) | 16.0.1.0.0 | | Base Tier Validation Extension to add waiting status [base_user_locale](base_user_locale/) | 16.0.1.1.0 | | User Locale Settings [date_range](date_range/) | 16.0.1.0.9 | []( | Manage all kind of date range [date_range_account](date_range_account/) | 16.0.1.0.1 | []( | Add Date Range menu entry in Invoicing app [developer_menu](developer_menu/) | 16.0.1.0.0 | []( | Menu Shortcut for developer usage [filter_multi_user](filter_multi_user/) | 16.0.1.0.1 | []( | Allows to share user-defined filters filters among several users. [multi_step_wizard](multi_step_wizard/) | 16.0.1.0.0 | | Multi-Steps Wizards [sequence_reset_period](sequence_reset_period/) | 16.0.1.0.0 | | Auto-generate yearly/monthly/weekly/daily sequence period ranges [server_action_mass_edit](server_action_mass_edit/) | 16.0.2.0.3 | | Mass Editing [template_content_swapper](template_content_swapper/) | 16.0.1.0.1 | | Template Content Swapper [test_base_binary_url_import](test_base_binary_url_import/) | 16.0.1.0.1 | | Unittests for Base Binary URL Import module [user_all_groups](user_all_groups/) | 16.0.1.0.1 | []( | Automatically add admin user to all the groups [//]: # (end addons) ## Licenses This repository is licensed under [AGPL-3.0](LICENSE). However, each module can have a totally different license, as long as they adhere to Odoo Community Association (OCA) policy. Consult each module's `__manifest__.py` file, which contains a `license` key that explains its license. ---- OCA, or the [Odoo Community Association]( is a nonprofit organization whose mission is to support the collaborative development of Odoo features and promote its widespread use.","491, Code, Issues, Pull requests, Actions, Projects, Security, Insights, approved, stale, work in progress, ready to merge, no stale, help wanted, enhancement, bug, wontfix, question, needs review, needs more information, needs fixing, migration, merged 🎉, invalid, good first issue, duplicate, bot is merging ⏳"
1Hosts,badmojr/1Hosts,1363,"['HTML', 'JavaScript']","['adblock', 'blocklist', 'blacklist', 'ads', 'trackers']","# ***Safeguard your device(s) against pesky ads, trackers, and malware.*** 1Hosts (mini) variant 1: lenient; unblocks a number of ads & trackers for in-app rewards, anti-AdBlock, etc. Client mirror 1 mirror 2 mirror 3 mirror 4 mirror 5 mirror 6 mirror 7 AdAway view view view view view dl view Pi-hole . OpenSnitch view view view view view dl view dnscrypt-proxy . personalDNSfilter . InviZible Pro dl view dl view view dl dl uBlock Origin . AdGuardHome view view view view view dl view DNSCloak view view view view view dl view dnsmasq dl view dl view view dl view Knot . Bind9 . PowerDNS view view view view view dl view Unbound dl view dl view view dl view Windows dl view dl view view dl dl Little Snitch dl view dl view view dl dl 1Hosts (Lite) variant 2: balanced; set & forget, doesn't hamper user experience (UX), recommended. Client mirror 1 mirror 2 mirror 3 mirror 4 mirror 5 mirror 6 mirror 7 AdAway view view view view view dl view Pi-hole . OpenSnitch view view view view view dl view dnscrypt-proxy . personalDNSfilter . InviZible Pro dl view dl view view dl dl uBlock Origin . AdGuardHome view view view view view dl view DNSCloak view view view view view dl view dnsmasq dl view dl view view dl view Knot . Bind9 . PowerDNS view view view view view dl view Unbound dl view dl view view dl view Windows dl view dl view view dl dl Little Snitch dl view dl view view dl dl 1Hosts (Pro) variant 3: strict; has some minimal breakages, prioritizes privacy & safety (adblocking) over UX e.g blocks graph.facebook.com. Client mirror 1 mirror 2 mirror 3 mirror 4 mirror 5 mirror 6 mirror 7 AdAway view view view view view dl view Pi-hole . OpenSnitch view view view view view dl view dnscrypt-proxy . personalDNSfilter . InviZible Pro dl view dl view view dl dl uBlock Origin . AdGuardHome view view view view view dl view DNSCloak view view view view view dl view dnsmasq dl view dl view view dl view Knot . Bind9 . PowerDNS view view view view view dl view Unbound dl view dl view view dl view Windows dl view dl view view dl dl Little Snitch dl view dl view view dl dl **Quickstart Guide** ---------------- To ensure the best user experience, 1Hosts has 4 versions each with varying levels of protection. Our Lite version is designed not to impact UX, whereas the Pro and Xtra versions cater to users with advanced blocking needs. Start with ***Lite*** first. If you decide that ***Lite*** isn't for you, then move upwards or downwards the chain. - If **Lite** is too harsh for your taste, downgrade to ***mini***. - If **Lite** doesn't block enough, upgrade to ***Pro***. - ***Pro*** still not enough? **Xtra** is the way to go. **Use these free DNS resolvers to start using 1Hosts right away:** ControlD: updates every hour; supports subdomain/wildcard & CNAME blocking; unlimited queries. Name IPv4 IPv6 DNS-over-HTTPS DNS-over-TLS 1Hosts (Lite) 76.76.2.38 76.76.10.38 2606:1a40::38 2606:1a40:1::38 x-1hosts-lite.freedns.controld.com 1Hosts (Pro) 76.76.2.39 76.76.10.39 2606:1a40::39 2606:1a40:1::39 x-1hosts-pro.freedns.controld.com nextDNS: updates every 30 minutes; customizable; supports subdomain/wildcard & CNAME blocking; capped at 300k queries per month (free users); sign up required. Click here. RethinkDNS: updates weekly; supports subdomain/wildcard & CNAME blocking; unlimited queries; open-source. Name DNS-over-HTTPS DNS-over-TLS 1Hosts (mini) 1-aacacaa.max.rethinkdns.com 1Hosts (Lite) 1-aacaeaa.max.rethinkdns.com 1Hosts (Pro) 1-aababaa.max.rethinkdns.com Credits & : Dear list maintainers, thank you! softwares: AdAway Pi-hole Blokada dnscrypt-proxy personalDNSfilter RethinkDNS + Firewall InviZible Pro DNSCloak uBlock Origin AdGuardHome OpenSnitch Knot Bind9 PowerDNS dnsmasq Unbound users. fans. mentions. forum.xda-developers.com/posts/74708195 github.com/yokoffing/NextDNS-Config docs.controld.com/docs/free-dns comments: 1Hosts ---------------- _Help us create a better experience <3!_ **Support us, donate or share.**","77, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, .💬, allow, ¯\_(ツ)_/¯, block, resolved, question, declined"
free-for-dev,ripienaar/free-for-dev,84793,['HTML'],"['free-for-developers', 'awesome-list']","# free-for.dev Developers and Open Source authors now have many services offering free tiers, but finding them all takes time to make informed decisions. This is a list of software (SaaS, PaaS, IaaS, etc.) and other offerings with free developer tiers. The scope of this particular list is limited to things that infrastructure developers (System Administrator, DevOps Practitioners, etc.) are likely to find useful. We love all the free services out there, but it would be good to keep it on topic. It's a grey line sometimes, so this is opinionated; please don't feel offended if I don't accept your contribution. This list results from Pull Requests, reviews, ideas, and work done by 1100+ people. You can also help by sending [Pull Requests]( to add more services or remove ones whose offerings have changed or been retired. []( **NOTE**: This list is only for as-a-Service offerings, not for self-hosted software. To be eligible, a service must offer a free tier, not just a free trial. The free tier must be for at least a year if it is time-bucketed. We also consider the free tier from a security perspective, so SSO is fine, but I will not accept services that restrict TLS to paid-only tiers. # Table of Contents * [Major Cloud Providers' Always-Free Limits](#major-cloud-providers) * [Cloud management solutions](#cloud-management-solutions) * [Analytics, Events, and Statistics](#analytics-events-and-statistics) * [APIs, Data and ML](#apis-data-and-ml) * [Artifact Repos](#artifact-repos) * [BaaS](#baas) * [Low-code Platform](#low-code-platform) * [CDN and Protection](#cdn-and-protection) * [CI and CD](#ci-and-cd) * [CMS](#cms) * [Code Generation](#code-generation) * [Code Quality](#code-quality) * [Code Search and Browsing](#code-search-and-browsing) * [Crash and Exception Handling](#crash-and-exception-handling) * [Data Visualization on Maps](#data-visualization-on-maps) * [Managed Data Services](#managed-data-services) * [Design and UI](#design-and-ui) * [Design Inspiration](#design-inspiration) * [Dev Blogging Sites](#dev-blogging-sites) * [DNS](#dns) * [Docker Related](#docker-related) * [Domain](#domain) * [Education and Career Development](#education-and-career-development) * [Email](#email) * [Feature Toggles Management Platforms](#feature-toggles-management-platforms) * [Font](#font) * [Forms](#forms) * [Generative AI](#generative-ai) * [IaaS](#iaas) * [IDE and Code Editing](#ide-and-code-editing) * [International Mobile Number Verification API and SDK](#international-mobile-number-verification-api-and-sdk) * [Issue Tracking and Project Management](#issue-tracking-and-project-management) * [Log Management](#log-management) * [Mobile App Distribution and Feedback](#mobile-app-distribution-and-feedback) * [Management Systems](#management-system) * [Messaging and Streaming](#messaging-and-streaming) * [Miscellaneous](#miscellaneous) * [Monitoring](#monitoring) * [PaaS](#paas) * [Package Build System](#package-build-system) * [Payment and Billing Integration](#payment-and-billing-integration) * [Privacy Management](#privacy-management) * [Screenshot APIs](#screenshot-apis) * [Flutter Related and Building IOS Apps without Mac](#flutter-related-and-building-ios-apps-without-mac) * [Search](#search) * [Security and PKI](#security-and-pki) * [Authentication, Authorization, and User Management](#authentication-authorization-and-user-management) * [Source Code Repos](#source-code-repos) * [Storage and Media Processing](#storage-and-media-processing) * [Tunneling, WebRTC, Web Socket Servers and Other Routers](#tunneling-webrtc-web-socket-servers-and-other-routers) * [Testing](#testing) * [Tools for Teams and Collaboration](#tools-for-teams-and-collaboration) * [Translation Management](#translation-management) * [Vagrant Related](#vagrant-related) * [Visitor Session Recording](#visitor-session-recording) * [Web Hosting](#web-hosting) * [Commenting Platforms](#commenting-platforms) * [Browser based hardware emulation](#browser-based-hardware-emulation-written-in-javascript) * [Remote Desktop Tools](#remote-desktop-tools) * [Game Development](#game-development) * [Other Free Resources](#other-free-resources) ## Major Cloud Providers * [Google Cloud Platform]( * App Engine - 28 frontend instance hours per day, nine backend instance hours per day * Cloud Firestore - 1GB storage, 50,000 reads, 20,000 writes, 20,000 deletes per day * Compute Engine - 1 non-preemptible e2-micro, 30GB HDD, 5GB snapshot storage (restricted to certain regions), 1 GB network egress from North America to all region destinations (excluding China and Australia) per month * Cloud Storage - 5GB, 1GB network egress * Cloud Shell - Web-based Linux shell/primary IDE with 5GB of persistent storage. 60 hours limit per week * Cloud Pub/Sub - 10GB of messages per month * Cloud Functions - 2 million invocations per month (includes both background and HTTP invocations) * Cloud Run - 2 million requests per month, 360,000 GB-seconds memory, 180,000 vCPU-seconds of compute time, 1 GB network egress from North America per month * Google Kubernetes Engine - No cluster management fee for one zonal cluster. Each user node is charged at standard Compute Engine pricing * BigQuery - 1 TB of querying per month, 10 GB of storage each month * Cloud Build - 120 build-minutes per day * Cloud Source Repositories - Up to 5 Users, 50 GB Storage, 50 GB Egress * [Google Colab]( - Free Jupyter Notebooks development environment. * Full, detailed list - * [Amazon Web Services]( * [CloudFront]( - 1TB egress per month and 2M Function invocations per month * [Cloudwatch]( - 10 custom metrics and ten alarms * [CodeBuild]( - 100min of build time per month * [CodeCommit]( - 5 active users,50GB storage, and 10000 requests per month * [CodePipeline]( - 1 active pipeline per month * [DynamoDB]( - 25GB NoSQL DB * [EC2]( - 750 hours per month of t2.micro or t3.micro(12mo). 100GB egress per month * [EBS]( - 30GB per month of General Purpose (SSD) or Magnetic(12mo) * [Elastic Load Balancing]( - 750 hours per month(12mo) * [RDS]( - 750 hours per month of db.t2.micro, db.t3.micro, or db.t4g.micro, 20GB of General Purpose (SSD) storage, 20GB of storage backups * [Glacier]( - 10GB long-term object storage * [Lambda]( - 1 million requests per month * [SNS]( - 1 million publishes per month * [SES]( - 3.000 messages per month (12mo) * [SQS]( - 1 million messaging queue requests * Full, detailed list - * [Microsoft Azure]( * [Virtual Machines]( - 1 B1S Linux VM, 1 B1S Windows VM (12mo) * [App Service]( - 10 web, mobile, or API apps (60 CPU minutes/day) * [Functions]( - 1 million requests per month * [DevTest Labs]( - Enable fast, easy, and lean dev-test environments * [Active Directory]( - 500,000 objects * [Active Directory B2C]( - 50,000 monthly stored users * [Azure DevOps]( - 5 active users, unlimited private Git repos * [Azure Pipelines]( 10 free parallel jobs with unlimited minutes for open source for Linux, macOS, and Windows * [Microsoft IoT Hub]( - 8,000 messages per day * [Load Balancer]( - 1 free public load-balanced IP (VIP) * [Notification Hubs]( - 1 million push notifications * [Bandwidth]( - 15GB Inbound(12mo) & 5GB egress per month * [Cosmos DB]( - 25GB storage and 1000 RUs of provisioned throughput * [Static Web Apps]( Build, deploy, and host static apps and serverless functions with free SSL, Authentication/Authorization, and custom domains * [Storage]( - 5GB LRS File or Blob storage (12mo) * [Cognitive Services]( - AI/ML APIs (Computer Vision, Translator, Face detection, Bots, etc) with free tier including limited transactions * [Cognitive Search]( - AI-based search and indexation service, free for 10,000 documents * [Azure Kubernetes Service]( - Managed Kubernetes service, free cluster management * [Event Grid]( - 100K ops/month * Full, detailed list - * [Oracle Cloud]( * Compute - 2 AMD-based Compute VMs with 1/8 OCPU and 1 GB memory each - 4 Arm-based Ampere A1 cores and 24 GB of memory usable as one VM or up to 4 VMs - Instances will be reclaimed when [deemed idle]( * Block Volume - 2 volumes, 200 GB total (used for compute) * Object Storage - 10 GB * Load balancer - 1 instance with 10 Mbps * Databases - 2 DBs, 20 GB each * Monitoring - 500 million ingestion data points, 1 billion retrieval datapoints * Bandwidth - 10 TB egress per month, speed limited to 50 Mbps on x64-based VM, 500 Mbps * core count on ARM-based VM * Public IP - 2 IPv4 for VMs, 1 IPv4 for load balancer * Notifications - 1 million delivery options per month, 1000 emails sent per month * Full, detailed list - * [IBM Cloud]( * Object Storage - 25GB per month * Cloudant database - 1 GB of data storage * Db2 database - 100MB of data storage * API Connect - 50,000 API calls per month * Availability Monitoring - 3 million data points per month * Log Analysis - 500MB of daily log * Full, detailed list - * [Cloudflare]( * [Application Services]( - Free DNS for an unlimited number of domains, DDoS Protection, CDN along with free SSL, Firewall rules and page rules, WAF, Bot Mitigation, Free Unmetered Rate Limiting - 1 rule per domain, Analytics, Email forwarding * [Zero Trust & SASE]( - Up to 50 Users, 24 hours of activity logging, three network locations * [Cloudflare Tunnel]( - You can expose locally running HTTP port over a tunnel to a random subdomain on trycloudflare.com use [Quick Tunnels]( No account required. More features (TCP tunnel, Load balancing, VPN) in [Zero Trust]( Free Plan. * [Workers]( - Deploy serverless code for free on Cloudflare's global network100k daily requests. * [Workers KV]( - 100k read requests per day, 1000 write requests per day, 1000 delete requests per day, 1000 list requests per day, 1 GB stored data * [R2]( - 10 GB per month, 1 million Class A operations per month, 10 million Class B operations per month * [D1]( - 5 million rows read per day, 100k rows written per day, 1 GB storage * [Pages]( - Develop and deploy your web apps on Cloudflare's fast, secure global network. Five hundred monthly ... [TRUNCATED]","9.2k, Code, Pull requests, Security, Insights, work-in-progress, triage, question, invalid, help wanted, hacktoberfest-accepted, duplicate, Ready to merge, Do not merge, Checks: ❌, Checks: ✅, Change Sent to Author"
BotBuilder-Samples,microsoft/BotBuilder-Samples,4293,"['HTML', 'C#', 'JavaScript']","['bots', 'bot-framework', 'sdk', 'dotnet', 'javascript']","# ## [Click here to find out what's new with Bot Framework]( ## Overview This branch contains samples for the released version of the **Microsoft Bot Framework V4 SDK** for [.NET]( [JS]( and [Python]( If you need samples for the Bot Framework _V3_ SDK, go [here]( ## Getting the samples To use the samples, clone this GitHub repository using Git. ```bash git clone cd BotBuilder-Samples ``` ## Sample lists Samples are designed to illustrate functionality you'll need to implement to build great bots! - [!Bot Framework Samples](#) - [Click here to find out what's new with Bot Framework](#click-here-to-find-out-whats-new-with-bot-framework) - [Overview](#overview) - [Getting the samples](#getting-the-samples) - [Sample lists](#sample-lists) - [Bot essentials](#bot-essentials) - [Advanced bots](#advanced-bots) - [Authentication samples](#authentication-samples) - [Custom question answering samples](#Custom-question-answering-samples) - [Teams samples site]( - [Custom adapter samples](#custom-adapter-samples) - [Skills samples](#skills-samples) - [Experimental / preview samples](#experimental--preview-samples) - [Contributing](#contributing) - [Reporting security issues](#reporting-security-issues) ### Bot essentials | | Sample Name | Description | .NET | JavaScript | Python | Java | |:--:|:----------------------|:---------------------------------------------------------------------------------|:--------|:-------------|:--------|:--------| |2|Echo bot | Demonstrates how to receive and send messages. |[.NETCore][cs#2] |[JavaScript][js#2], [TypeScript][ts#2]|[Python][py#2]|[Java][java#2] |3|Welcome user | Introduces activity types and provides a welcome message on conversation update activity. |[.NETCore][cs#3] |[JavaScript][js#3], [TypeScript][ts#3]|[Python][py#3]|[Java][java#3] |5|Multiturnprompts | Demonstrates how to use waterfall dialog, prompts, and component dialog to create a simple interaction that asks the user for name, age, and prints back that information. |[.NETCore][cs#5] |[JavaScript][js#5], [TypeScript][ts#5] |[Python][py#5]|[Java][java#5] |6|Using cards | Introduces all card types including thumbnail, audio, media etc. Builds on Welcoming user + multi-prompt bot by presenting a card with buttons in welcome message that route to appropriate dialog. |[.NETCore][cs#6] |[JavaScript][js#6], [TypeScript][ts#6] |[Python][py#6]|[Java][java#6] |7|Adaptive cards | Demonstrates how the multi-turn dialog can use a card to get user input for name and age. |[.NETCore][cs#7] |[JavaScript][js#7] |[Python][py#7]|[Java][java#7] |8|Suggested actions | Demonstrates how to enable your bot to present buttons that the user can tap to provide input. |[.NETCore][cs#8] |[JavaScript][js#8] |[Python][py#8]|[Java][java#8] |13|Core bot | Core bot shows how to use cards, dialog, and Language Understanding (LUIS). |[.NETCore][cs#13], [.NETWeb][wa#13]|[JavaScript][js#13], [TypeScript][ts#13]|[Python][py#13]|[Java][java#13] |15|Handlingattachments| Demonstrates how to listen for/handle user provided attachments. |[.NETCore][cs#15]|[JavaScript][js#15]|[Python][py#15]|[Java][java#15] |40|TIMEX resolution | Demonstrates various ways to parse and manipulate the TIMEX expressions you get from LUIS and the [DateTimeRecognizer]( used by the DateTimePrompt. |[.NETCore][cs#40] |[JavaScript][js#40]|[Python][py#40]|[Java][java#40] |43|Complex dialogs | Demonstrates different ways for composing dialogs. |[.NETCore][cs#43]|[JavaScript][js#43] |[Python][py#43]|[Java][java#43] |45|State management | Demonstrates how to use state management and storage objects to manage and persist state. | [.NETCore][cs#45] | [JavaScript][js#45] |[Python][py#45]|[Java][java#45] ### Advanced bots | | Sample Name | Description | .NET | JavaScript | Python | Java | |:--:|:----------------------|:---------------------------------------------------------------------------------|:--------|:-------------|:--------|:--------| |1|Consoleechobot | Introduces the concept of adapter and demonstrates a simple echo bot on console adapter and how to send a reply and access the incoming message. |[.NETCore][cs#1] |[JavaScript][js#1], [TypeScript][ts#1] |[Python][py#1] |1|Browser echo bot | Demonstrates how to host a bot in the browser using Web Chat and a custom Web Chat Adapter. | | [ECMAScript6][es#1] | |16|Proactivemessages | Demonstrates how to send proactive messages to users. |[.NETCore][cs#16]|[JavaScript][js#16], [TypeScript][ts#16]|[Python][py#16]|[Java][java#16] |17|Multilingual bot | Using translate middleware to support a multi-lingual bot. Demonstrates custom middleware. |[.NETCore][cs#17]|[JavaScript][js#17]|[Python][py#17]|[Java][java#17] |19|Custom dialogs | Demonstrates complex conversation flow using the Dialogs library. |[.NETCore][cs#19]|[JavaScript][js#19]|[Python][py#19]|[Java][java#19] |21|ApplicationInsights | Demonstrates how to add telemetry logging to your bot, storing telemetry within Application Insights.|[.NETCore][cs#21] |[JavaScript][js#21] ||[Java][java#21] |23|Facebook events | Integrate and consume Facebook specific payloads, such as post-backs, quick replies and opt-in events.|[.NETCore][cs#23] |[JavaScript][js#23] |[Python][py#23]|[Java][java#23] |42|Scale out | Demonstrates how you can build your own state solution from the ground up that supports scaled out deployment with ETag based optimistic locking. |[.NETCore][cs#42] | |[Python][py#42]|[Java][java#42] |44|Basic custom prompts | Demonstrates how to implement your own _basic_ prompts to ask the user for information. |[.NETCore][cs#44]|[JavaScript][js#44]|[Python][py#44]|[Java][java#44] |47|Inspectionmiddleware | Demonstrates how to use middleware to allow the Bot Framework Emulator to debug traffic into and out of the bot in addition to looking at the current state of the bot. | [.NETCore][cs#47] | [JavaScript][js#47] |[Python][py#47]|[Java][java#47] |70|Styling webchat | This sample shows how to create a web page with custom Web Chat component.| | [ECMAScript6][es#70] | ### Authentication samples | | Sample Name | Description | .NET | JavaScript | Python | Java | |:--:|:----------------------|:---------------------------------------------------------------------------------|:--------|:-------------|:--------|:--------| |18|OAuth authentication | Bot that demonstrates how to integrate OAuth providers. |[.NETCore][cs#18]|[JavaScript][js#18]|[Python][py#18]|[Java][java#18] |24|MSGraphauthentication | Demonstrates bot authentication capabilities of Azure Bot Service. Demonstrates utilizing the Microsoft Graph API to retrieve data about the user.|[.NETCore][cs#24] |[JavaScript][js#24] |[Python][py#24]|[Java][java#24] |46|Teams authentication | Demonstrates how to use authentication for a bot running in Microsoft Teams. | [.NETCore]( | [JavaScript]( |[Python]( |84|Certificate authentication | Demonstrates how to use Certificates to authenticate the bot | [.NETCore][cs#84] |[JavaScript][js#84] | | |85|Subject name/issuer authentication | Demonstrates how to use the subject name/issuer authentication in a bot | [.NETCore][cs#85] | [JavaScript][js#85] | | ### Custom question answering samples | | Sample Name | Description | .NET | JavaScript | Python | Java | |:--:|:----------------------|:---------------------------------------------------------------------------------|:--------|:-------------|:--------|:--------| |12|Custom question answering(simple) | Demonstrates how to use Custom question answering to have simple single-turn conversations |[.NETCore][cs#12]|[JavaScript][js#12] | | |48|Custom question answering(advanced) | Demonstrates how to integrate Multiturn and Active learning in a Custom question answering bot |[.NETCore][cs#48]|[JavaScript][js#48] | | ### Teams samples | | Sample Name | Description | .NET | JavaScript | Python | Java | |:--:|:----------------------|:---------------------------------------------------------------------------------|:--------|:-------------|:--------|:--------| |25| Message Reactions | Demonstrates how to create a simple bot that responds to Message Reactions | [.NETCore]( | [JavaScript]( ||[Java]( |46|Authentication | Demonstrates how to use authentication for a bot running in Microsoft Teams. | [.NETCore]( | [JavaScript]( |[Python]( |[Java]( |50|Messagingextensions- search | A Messaging Extension that accepts search requests and returns results.|[.NETCore]( |[Python]( |[Java]( |51|Messagingextensions- action | A Messaging Extension that accepts parameters and returns a card. Also, how to receive a forwarded message as a parameter in a Messaging Extension.|[.NETCore]( |[Python]( |[Java]( |52|Messagingextensions- auth and config | A Messaging Extension that has a configuration page, accepts search requests and returns results after the user has signed in.|[.NETCore]( | | |53|Messagingextensions- action preview | Demonstrates how to create a Preview and Edit flow for a Messaging Extension.|[.NETCore]( |[Python]( |[Java]( |54|Task module | Demonstrates how to retrieve a Task Module, and values from cards in the Task Module, for a Messaging Extension.|[.NETCore]( |[Python]( |[Java]( |55|Link unfurling | A Messaging Extension that performs link unfurling.|[.NETCore]( |[Python]( |[Java]( |56|File upload | Demonstrates how to obtain file consent, and upload files to Teams from a bot. Also, how to receive a file sent to a bot.|[.NETCore]( |[Python]( |[Java]( |57|Conversation bot | Demonstrates various features of bots on Teams: message all members in a Team or Channel, @mention a user from a bot, update previously sent messages, etc. |[.NETCore]( |[Python]( |[Java]( |58|Start new thread in a channel | Demonstrates creating a new thread in a channel. |[.NETCore]( |[Python]( |[Java]( ### Skills samples | | Sample Name | Description | .NET | JavaScript | Python | Java |:--:|:----------------------|:---------------------------------------------------------------------------------|:--------|:-------------|:--------|:-------- |80|Skills-simplebottobot | This sample show... [TRUNCATED]","4.8k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, feature-request, needs-triage, bug, generated, ExemptFromDailyDRIReport, backlog, customer-reported, Bot Services, .NET, MINDTREE, Area: Skills, python, investigate, dependencies, P2, P1, Area: Testing framework, technical-debt, supportability, customer-replied-to, Area: LG, Area: Engineering, Area: Adaptive, Area: Adaptive expression, team-agility, stale, question, parity, needs-team-attention, needs-author-feedback"
elixir,whos-evan/elixir,56,"['HTML', 'CSS', 'JavaScript']","['proxy', 'ultraviolet', 'unblock', 'unblocked', 'unblocker']","## Features - A very nice looking proxy built using Tailwind CSS! - Super fast! (most of the time) - Constant updates! - Easy to use shortcut buttons! - Ability to disable analytics for those that actually care about their privacy. - Customizable search engine (Google, DuckDuckGo, Brave Search, or Bing). - about:blank or tab cloaking! - Installable as a PWA (Progressive Web App)! ## Official Links - ## Screenshots","466, Code, Issues, Pull requests, Actions, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
blazorbootstrap,vikramlearning/blazorbootstrap,517,"['HTML', 'JavaScript', 'C#']","['blazor', 'bootstrap', 'bootstrap5', 'bootstrap-5', 'blazor-webassembly']","Blazor Bootstrap Component Library An Enterprise-class Blazor Bootstrap Component library built on the Blazor and Bootstrap CSS frameworks. Getting Started **NOTE:** We strongly recommend all BlazorBootstrap users migrate to version 2.x.x. [Read more...]( ## Status []( []( [](#backers) [](#sponsors) ## Docs & Demos - [Docs Website]( - [Demo Website - Blazor Server]( - [Demo Website - Blazor WebAssembly]( ## Table of contents - [Install](#install) - [Install Blazor Bootstrap templates](#install-blazor-bootstrap-templates) - [Components](#blazor-bootstrap-components) - [Documentation](#documentation) - [Creators](#creators) - [Copyright and license](#copyright-and-license) ## Install Install with [NuGet]( `Install-Package Blazor.Bootstrap -Version 2.2.1` ## Install Blazor Bootstrap templates Install [Blazor Bootstrap templates]( with **.NET CLI**: `dotnet new install Blazor.Bootstrap.Templates::1.10.0` - Read the [Getting started page]( for information on the framework installation, contents, examples, and more. ## Blazor Bootstrap Components | Component Name | Docs | Demos | |:--|:--|:--| | Accordion | [Docs]( | [Demos]( | | Alerts | [Docs]( | [Demos]( | | AutoComplete | [Docs]( | [Demos]( | | Badge | [Docs]( | [Demos]( | | Breadcrumb | [Docs]( | [Demos]( | | Buttons | [Docs]( | [Demos]( | | Callout | [Docs]( | [Demos]( | | Card | [Docs]( | [Demos]( | | Charts: Bar chart | [Docs]( | [Demos]( | | Charts: Doughnut chart | [Docs]( | [Demos]( | | Charts: Line chart | [Docs]( | [Demos]( | | Charts: Pie chart | [Docs]( | [Demos]( | | Collapse | [Docs]( | [Demos]( | | Confirm Dialog | [Docs]( | [Demos]( | | Currency Input | [Docs]( | [Demos]( | | Date Input | [Docs]( | [Demos]( | | Dropdown | [Docs]( | [Demos]( | | Grid | [Docs]( | [Demos]( | | Icons | [Docs]( | [Demos]( | | Modals | [Docs]( | [Demos]( | | Number Input | [Docs]( | [Demos]( | | Offcanvas | [Docs]( | [Demos]( | | Pagination | [Docs]( | [Demos]( | | PDF Viewer | [Docs]( | [Demos]( | | Placeholders | [Docs]( | [Demos]( | | Preload | [Docs]( | [Demos]( | | Progress | [Docs]( | [Demos]( | | RangeInput | [Docs]( | [Demos]( | | Ribbon | [Docs]( | [Demos]( | | Script Loader | [Docs]( | [Demos]( | | Sidebar | [Docs]( | [Demos]( | | Sidebar2 | [Docs]( | [Demos]( | | Sortable List | [Docs]( | [Demos]( | | Spinners | [Docs]( | [Demos]( | | Switch | [Docs]( | [Demos]( | | Tabs | [Docs]( | [Demos]( | | Time Input | [Docs]( | [Demos]( | | Toasts | [Docs]( | [Demos]( | | Tooltips | [Docs]( | [Demos]( | More components coming... ## Documentation Blazor Bootstrap's documentation, which is included in this repository's root directory, is built with [Docusaurus]( and publicly hosted on GitHub Pages at . The docs may also be run locally. ## Screenshots ### Blazor Bootstrap - Accordion ### Blazor Bootstrap - Alerts ### Blazor Bootstrap - Auto Complete ### Blazor Bootstrap - Badge ### Blazor Bootstrap - Buttons ### Blazor Bootstrap - Callout ### Blazor Bootstrap - Charts: Bar Chart ### Blazor Bootstrap - Charts: Doughnut Chart ### Blazor Bootstrap - Charts: Line Chart ### Blazor Bootstrap - Charts: Pie Chart ### Blazor Bootstrap - Collapse ### Blazor Bootstrap - Confirm Dialog ### Blazor Bootstrap - Currency Input ### Blazor Bootstrap - Date Input ### Blazor Bootstrap - Grid ### Blazor Bootstrap - Modal ### Blazor Bootstrap - Number Input ### Blazor Bootstrap - Offcanvas ### Blazor Bootstrap - Pagination ### Blazor Bootstrap - PDF Viewer ### Blazor Bootstrap - Preload ### Blazor Bootstrap - Progress ### Blazor Bootstrap - Range Input ### Blazor Bootstrap - Ribbon ### Blazor Bootstrap - Script Loader ### Blazor Bootstrap - Sidebar ### Blazor Bootstrap - Sidebar2 ### Blazor Bootstrap - Sortable List ### Blazor Bootstrap - Switch ### Blazor Bootstrap - Tabs ### Blazor Bootstrap - Time Input ### Blazor Bootstrap - Toasts ## Creators **Vikram Reddy** - ## Sponsors Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor]( []( []( []( []( []( []( []( []( []( []( ## Backers Thank you to all our backers! [[Become a backer]( []( ## Copyright and license Code and documentation copyright 2024 [Blazor Bootstrap]( Code released under the [Apache-2.0 License](","13, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, enhancement, area-grid, area-charts, investigate, area-autocomplete, new-feature, new component, needs-more-info, area-sidebar, area-modal, area-toasts, area-pdf-viewer, help wanted, bug, area-templates, area-sidebar-2, area-dropdown-buttons, area-date-input, area-currency-input, area-confirm-dialog, .NET 8, rtl, question, pie-chart, good first issue, feedback, examples, documentation, area-tooltip, area-tabs"
boilerplate-project-urlshortener,freeCodeCamp/boilerplate-project-urlshortener,61,"['HTML', 'JavaScript', 'CSS']",[],# URL Shortener Microservice This is the boilerplate code for the URL Shortener Microservice project. Instructions for building your project can be found at,"1.5k, Code, Pull requests, Actions, Security, Insights, wontfix, status: blocked, question, invalid, help wanted, enhancement, duplicate, bug"
knowledge,OCA/knowledge,147,"['HTML', 'Python', 'JavaScript']","['erp', 'hacktoberfest', 'odoo', 'python']","[]( []( []( []( []( # knowledge Knowlesge management addons. Also has some usefull tools to handle attachments [//]: # (addons) Available addons ---------------- addon | version | maintainers | summary --- | --- | --- | --- [attachment_zipped_download](attachment_zipped_download/) | 16.0.2.0.2 | | Attachment Zipped Download [document_knowledge](document_knowledge/) | 16.0.1.1.0 | | Documents Knowledge [document_page](document_page/) | 16.0.1.4.0 | | Document Page [document_page_access_group](document_page_access_group/) | 16.0.1.0.0 | | Choose groups to access document pages [document_page_approval](document_page_approval/) | 16.0.1.1.1 | | Document Page Approval [document_page_group](document_page_group/) | 16.0.1.0.1 | | Define access groups on documents [document_page_partner](document_page_partner/) | 16.0.1.0.0 | | Allows to link doucment pages to a partner [document_page_project](document_page_project/) | 16.0.1.0.0 | | This module links document pages to projects [document_page_reference](document_page_reference/) | 16.0.1.0.1 | []( | Include references on document pages [document_page_tag](document_page_tag/) | 16.0.1.0.0 | | Allows you to assign tags or keywords to pages and search for them afterwards [document_url](document_url/) | 16.0.1.0.4 | | URL attachment [document_url_google_drive](document_url_google_drive/) | 16.0.1.0.1 | | Attach Google Drive link to Odoo document using Google Drive Picker [//]: # (end addons) ## Licenses This repository is licensed under [AGPL-3.0](LICENSE). However, each module can have a totally different license, as long as they adhere to Odoo Community Association (OCA) policy. Consult each module's `__manifest__.py` file, which contains a `license` key that explains its license. ---- OCA, or the [Odoo Community Association]( is a nonprofit organization whose mission is to support the collaborative development of Odoo features and promote its widespread use.","320, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, help wanted, bug, work in progress, no stale, needs review, enhancement, wontfix, stale, ready to merge, question, needs more information, needs fixing, migration, merged 🎉, invalid, duplicate, bot is merging ⏳, approved, 8.0, 7.0"
boilerplate-project-exercisetracker,freeCodeCamp/boilerplate-project-exercisetracker,46,"['HTML', 'CSS', 'JavaScript']",[],# Exercise Tracker This is the boilerplate for the Exercise Tracker project. Instructions for building your project can be found at,"1.5k, Code, Pull requests, Actions, Security, Insights, wontfix, status: blocked, question, invalid, help wanted, enhancement, duplicate, bug"
boilerplate-project-headerparser,freeCodeCamp/boilerplate-project-headerparser,41,"['HTML', 'JavaScript', 'CSS']",[],# Request Header Parser Microservice This is the boilerplate for the Request Header Parser Microservice project. Instructions for building your project can be found at,"1.6k, Code, Pull requests, Actions, Security, Insights, wontfix, status: blocked, question, invalid, help wanted, enhancement, duplicate, bug"
crm,OCA/crm,143,"['HTML', 'Python']","['crm', 'erp', 'hacktoberfest', 'odoo', 'python']","[]( []( []( []( []( # crm TODO: add repo description. [//]: # (addons) Available addons ---------------- addon | version | maintainers | summary --- | --- | --- | --- [crm_claim](crm_claim/) | 15.0.1.1.0 | | Track your customers/vendors claims and grievances. [crm_claim_type](crm_claim_type/) | 15.0.1.0.0 | | Claim types for CRM [crm_industry](crm_industry/) | 15.0.1.1.1 | | Link leads/opportunities to industries [crm_lead_code](crm_lead_code/) | 15.0.1.0.0 | | Sequential Code for Leads / Opportunities [crm_lead_firstname](crm_lead_firstname/) | 15.0.1.0.1 | | Specify split names for contacts in leads [crm_lead_vat](crm_lead_vat/) | 15.0.1.1.0 | | Add VAT field to leads [crm_location](crm_location/) | 15.0.1.0.2 | | CRM location [crm_multicompany_reporting_currency](crm_multicompany_reporting_currency/) | 15.0.1.0.3 | []( | Adds Amount in multicompany reporting currency to CRM Lead [crm_partner_assign](crm_partner_assign/) | 15.0.0.2.0 | []( | Assign a Partner to an Opportunity/Lead/Partner to indicate Partnership [crm_phonecall](crm_phonecall/) | 15.0.1.1.2 | | CRM Phone Calls [crm_phonecall_planner](crm_phonecall_planner/) | 15.0.1.0.2 | | Schedule phone calls according to some criteria [crm_phonecall_summary_predefined](crm_phonecall_summary_predefined/) | 15.0.1.0.0 | | Allows to choose from a defined summary list [crm_project](crm_project/) | 15.0.1.0.3 | | Create Tasks from Leads/Opportunities [crm_project_task](crm_project_task/) | 15.0.1.1.1 | []( | Create tasks from lead or opportunity [crm_salesperson_planner](crm_salesperson_planner/) | 15.0.3.0.0 | | Crm Salesperson Planner [crm_salesperson_planner_sale](crm_salesperson_planner_sale/) | 15.0.1.0.0 | | Crm Salesperson Planner Sale [crm_security_group](crm_security_group/) | 15.0.1.2.0 | []( | Add new group in Sales to show only CRM [crm_stage_probability](crm_stage_probability/) | 15.0.1.0.0 | | Define fixed probability on the stages [crm_won_reason](crm_won_reason/) | 15.0.1.0.0 | []( | CRM won reason [crm_won_restrict_per_stage](crm_won_restrict_per_stage/) | 15.0.1.0.0 | []( | CRM Won Restrict Per Stage [marketing_crm_partner](marketing_crm_partner/) | 15.0.1.0.0 | | Copy tracking fields from leads to partners [//]: # (end addons) ## Licenses This repository is licensed under [AGPL-3.0](LICENSE). However, each module can have a totally different license, as long as they adhere to Odoo Community Association (OCA) policy. Consult each module's `__manifest__.py` file, which contains a `license` key that explains its license. ---- OCA, or the [Odoo Community Association]( is a nonprofit organization whose mission is to support the collaborative development of Odoo features and promote its widespread use.","382, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, work in progress, ready to merge, no stale, help wanted, approved, stale, wontfix, question, needs review, needs more information, needs fixing, migration, merged 🎉, invalid, enhancement, duplicate, bug, bot is merging ⏳, 8.0, 7.0"
boilerplate-project-timestamp,freeCodeCamp/boilerplate-project-timestamp,104,"['HTML', 'JavaScript', 'CSS']",[],# Timestamp Microservice This is the boilerplate code for the Timestamp Microservice project. Instructions for building your project can be found at,"2.2k, Code, Pull requests, Actions, Security, Insights, wontfix, status: blocked, question, invalid, help wanted, enhancement, duplicate, bug"
management-system,OCA/management-system,180,"['HTML', 'Python']","['erp', 'hacktoberfest', 'odoo', 'python', 'iso']","[]( []( []( []( []( # Management System Odoo modules to support management systems [//]: # (addons) Available addons ---------------- addon | version | maintainers | summary --- | --- | --- | --- [document_page_procedure](document_page_procedure/) | 17.0.1.0.0 | | Document Management - Wiki - Procedures [mgmtsystem](mgmtsystem/) | 17.0.1.0.0 | | Management System [//]: # (end addons) ## Licenses This repository is licensed under [AGPL-3.0](LICENSE). However, each module can have a totally different license, as long as they adhere to Odoo Community Association (OCA) policy. Consult each module's `__manifest__.py` file, which contains a `license` key that explains its license. ---- OCA, or the [Odoo Community Association]( is a nonprofit organization whose mission is to support the collaborative development of Odoo features and promote its widespread use.","288, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, migration, needs review, no stale, help wanted, work in progress, ready to merge, enhancement, bug, approved, wontfix, stale, question, needs more information, needs fixing, merged 🎉, invalid, duplicate, codeclimate, bot is merging ⏳, blocked by dependency"
purchase-workflow,OCA/purchase-workflow,188,"['HTML', 'Python']","['erp', 'hacktoberfest', 'odoo', 'python']","[]( []( []( []( []( # purchase-workflow TODO: add repo description. [//]: # (addons) Available addons ---------------- addon | version | maintainers | summary --- | --- | --- | --- [procurement_purchase_no_grouping](procurement_purchase_no_grouping/) | 16.0.1.0.0 | | Procurement Purchase No Grouping [product_supplier_code_purchase](product_supplier_code_purchase/) | 16.0.1.0.0 | | This module adds to the purchase order line the supplier code defined in the product. [product_supplierinfo_qty_multiplier](product_supplierinfo_qty_multiplier/) | 16.0.1.0.0 | []( []( | Product supplierinfo qty multiplier [purchase_advance_payment](purchase_advance_payment/) | 16.0.1.0.1 | | Allow to add advance payments on purchase orders [purchase_all_shipments](purchase_all_shipments/) | 16.0.1.0.0 | | Purchase All Shipments [purchase_allowed_product](purchase_allowed_product/) | 16.0.2.1.0 | | This module allows to select only products that can be supplied by the vendor [purchase_blanket_order](purchase_blanket_order/) | 16.0.2.1.0 | | Purchase Blanket Orders [purchase_commercial_partner](purchase_commercial_partner/) | 16.0.1.0.0 | []( | Add stored related field 'Commercial Supplier' on POs [purchase_default_terms_conditions](purchase_default_terms_conditions/) | 16.0.1.0.3 | | This module allows purchase default terms & conditions [purchase_delivery_split_date](purchase_delivery_split_date/) | 16.0.1.0.2 | | Allows Purchase Order you confirm to generate one Incoming Shipment for each expected date indicated in the Purchase Order Lines [purchase_deposit](purchase_deposit/) | 16.0.1.0.1 | | Option to create deposit from purchase order [purchase_discount](purchase_discount/) | 16.0.1.2.1 | | Purchase order lines with discounts [purchase_exception](purchase_exception/) | 16.0.1.0.1 | | Custom exceptions on purchase order [purchase_fop_shipping](purchase_fop_shipping/) | 16.0.1.0.1 | | Purchase Free-Of-Payment shipping [purchase_force_invoiced](purchase_force_invoiced/) | 16.0.1.0.1 | | Allows to force the billing status of the purchase order to ""Invoiced"" [purchase_invoice_method](purchase_invoice_method/) | 16.0.1.0.0 | | Allow to force the invoice method of a purchase [purchase_invoice_plan](purchase_invoice_plan/) | 16.0.1.0.0 | []( | Add to purchases order, ability to manage future invoice plan [purchase_landed_cost](purchase_landed_cost/) | 16.0.1.0.0 | | Purchase cost distribution [purchase_last_price_info](purchase_last_price_info/) | 16.0.1.0.1 | []( | Purchase Product Last Price Info [purchase_line_procurement_group](purchase_line_procurement_group/) | 16.0.1.0.0 | | Group purchase order line according to procurement group [purchase_location_by_line](purchase_location_by_line/) | 16.0.1.0.0 | | Allows to define a specific destination location on each PO line [purchase_lot](purchase_lot/) | 16.0.1.0.0 | []( | Purchase Lot [purchase_manual_delivery](purchase_manual_delivery/) | 16.0.1.1.1 | | Prevents pickings to be auto generated upon Purchase Order confirmation and adds the ability to manually generate them as the supplier confirms the different purchase order lines. [purchase_merge](purchase_merge/) | 16.0.1.0.1 | | Wizard to merge purchase with required conditions [purchase_no_rfq](purchase_no_rfq/) | 16.0.1.0.0 | []( | Purchase Order - No Request For Quotation [purchase_only_by_packaging](purchase_only_by_packaging/) | 16.0.1.0.1 | | Manage purchase of packaging [purchase_open_qty](purchase_open_qty/) | 16.0.2.0.1 | | Allows to identify the purchase orders that have quantities pending to invoice or to receive. [purchase_order_approved](purchase_order_approved/) | 16.0.1.0.0 | | Add a new state 'Approved' in purchase orders. [purchase_order_archive](purchase_order_archive/) | 16.0.1.0.0 | | Archive Purchase Orders [purchase_order_downpayment](purchase_order_downpayment/) | 16.0.1.0.0 | | Allow to add payments from Purchase order view [purchase_order_general_discount](purchase_order_general_discount/) | 16.0.1.0.0 | | General discount per purchase order [purchase_order_hide_receipt_status](purchase_order_hide_receipt_status/) | 16.0.1.0.1 | | Purchase Order Hide Receipt Status [purchase_order_line_menu](purchase_order_line_menu/) | 16.0.2.1.0 | | Adds Purchase Order Lines Menu [purchase_order_line_receipt_status](purchase_order_line_receipt_status/) | 16.0.1.0.0 | | Manage customizations on purchase order line [purchase_order_no_zero_price](purchase_order_no_zero_price/) | 16.0.1.0.1 | | Prevent zero price lines on Purchase Orders [purchase_order_owner](purchase_order_owner/) | 16.0.1.0.0 | | Purchase Order Owner [purchase_order_price_recalculation](purchase_order_price_recalculation/) | 16.0.1.0.0 | []( | Price recalculation in purchases orders [purchase_order_product_attachment_mgmt](purchase_order_product_attachment_mgmt/) | 16.0.1.0.0 | []( | Purchase Order Product Attachment Mgmt [purchase_order_product_recommendation](purchase_order_product_recommendation/) | 16.0.1.1.0 | | Recommend products to buy to supplier based on history [purchase_order_purchase_manager](purchase_order_purchase_manager/) | 16.0.1.0.1 | []( | Purchase Manager from Supplier in Purchase Order [purchase_order_qty_change_no_recompute](purchase_order_qty_change_no_recompute/) | 16.0.1.0.0 | []( | Prevent recompute if only quantity has changed in purchase order line [purchase_order_supplier_return](purchase_order_supplier_return/) | 16.0.1.0.0 | | Return product to supplier and update quantiy received [purchase_order_supplierinfo_update](purchase_order_supplierinfo_update/) | 16.0.1.0.1 | []( | Update product supplierinfo with the last purchase price [purchase_order_type](purchase_order_type/) | 16.0.1.0.1 | | Purchase Order Type [purchase_order_type_dashboard](purchase_order_type_dashboard/) | 16.0.1.0.0 | []( | Purchase Order Type Dashboard [purchase_order_uninvoiced_amount](purchase_order_uninvoiced_amount/) | 16.0.1.0.1 | | Purchase Order Univoiced Amount [purchase_order_weight_volume](purchase_order_weight_volume/) | 16.0.2.2.0 | []( | Display purchase order weight and volume [purchase_packaging_default](purchase_packaging_default/) | 16.0.1.0.0 | | Set default packaging in purchase [purchase_packaging_level_qty](purchase_packaging_level_qty/) | 16.0.1.0.0 | | Display purchase order packaging level quantity [purchase_partner_incoterm](purchase_partner_incoterm/) | 16.0.1.0.0 | []( []( | Add a an incoterm field for supplier and use it on purchase order [purchase_partner_selectable_option](purchase_partner_selectable_option/) | 16.0.1.0.3 | []( | Purchase Partner Selectable Option [purchase_product_packaging_container_deposit](purchase_product_packaging_container_deposit/) | 16.0.1.0.0 | | Purchase Product Packaging Container Deposit [purchase_reception_status](purchase_reception_status/) | 16.0.1.0.1 | []( | Add reception status on purchase orders [purchase_reorder_control](purchase_reorder_control/) | 16.0.1.0.0 | | Restrict reordering unpurchaseable product [purchase_request](purchase_request/) | 16.0.1.2.0 | | Use this module to have notification of requirements of materials and/or external services and keep track of such requirements. [purchase_request_tier_validation](purchase_request_tier_validation/) | 16.0.1.0.0 | | Extends the functionality of Purchase Requests to support a tier validation process. [purchase_request_type](purchase_request_type/) | 16.0.1.0.0 | | Purchase Request Type [purchase_requisition_tier_validation](purchase_requisition_tier_validation/) | 16.0.1.0.0 | | Extends the functionality of Purchase Agreements to support a tier validation process. [purchase_return](purchase_return/) | 16.0.1.0.0 | []( | Manage return orders. [purchase_sale_link_by_origin](purchase_sale_link_by_origin/) | 16.0.1.0.0 | | Link PO/SO by the PO's Origin in addition to the default behavior that only links them by their lines [purchase_security](purchase_security/) | 16.0.2.0.0 | []( | See only your purchase orders [purchase_stock_packaging](purchase_stock_packaging/) | 16.0.1.0.0 | []( | Allows to transmit the product packaging from the procurement values to the generated purchase order line [purchase_stock_price_unit_sync](purchase_stock_price_unit_sync/) | 16.0.1.0.0 | | Update cost price in stock moves already done [purchase_tag](purchase_tag/) | 16.0.1.1.0 | | Allows to add multiple tags to purchase orders [purchase_tier_validation](purchase_tier_validation/) | 16.0.1.1.0 | | Extends the functionality of Purchase Orders to support a tier validation process. [purchase_triple_discount](purchase_triple_discount/) | 16.0.1.0.0 | | Manage triple discount on purchase order lines [purchase_warn_message](purchase_warn_message/) | 16.0.1.0.0 | | Add a popup warning on purchase to ensure warning is populated [purchase_work_acceptance](purchase_work_acceptance/) | 16.0.1.0.0 | []( | Purchase Work Acceptance [sale_purchase_force_vendor](sale_purchase_force_vendor/) | 16.0.1.0.0 | []( | Sale Purchase Force Vendor [supplier_calendar](supplier_calendar/) | 16.0.1.0.1 | []( | Supplier Calendar [//]: # (end addons) ## Licenses This repository is licensed under [AGPL-3.0](LICENSE). However, each module can have a totally different license, as long as they adhere to Odoo Community Association (OCA) policy. Consult each module's `__manifest__.py` file, which contains a `license` key that explains its license. ---- OCA, or the [Odoo Community Association]( is a nonprofit organization whose mission is to support the collaborative development of Odoo features and promote its widespread use.","741, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, bug, stale, approved, no stale, enhancement, work in progress, help wanted, needs review, ready to merge, needs fixing, bot is merging ⏳, wontfix, question, needs test, needs more information, migration, merged 🎉, invalid, hacktoberfest-accepted, duplicate"
authelia,authelia/authelia,20061,"['Go', 'TypeScript', 'HTML']","['totp', 'u2f', 'ldap', 'sso-authentication', 'yubikey']","[]( []( []( []( []( []( []( []( []( [][Apache 2.0] []( []( []( **Authelia** is an open-source authentication and authorization server providing two-factor authentication and single sign-on (SSO) for your applications via a web portal. It acts as a companion for [reverse proxies](#proxy-support) by allowing, denying, or redirecting requests. Documentation is available at [ The following is a simple diagram of the architecture: **Authelia** can be installed as a standalone service from the [AUR]( [APT]( [FreeBSD Ports]( or using a [static binary]( [.deb package](( as a container on [Docker] or [Kubernetes]. Deployment can be orchestrated via the Helm [Chart]( (beta) leveraging ingress controllers and ingress configurations. Here is what Authelia's portal looks like: ## Features summary This is a list of the key features of Authelia: * Several second factor methods: * **[Security Keys]( that support [FIDO2][WebAuthn] with devices like a [YubiKey]. * **[Time-based One-Time password]( with compatible authenticator applications. * **[Mobile Push Notifications]( with [Duo]( * Password reset with identity verification using email confirmation. * Access restriction after too many invalid authentication attempts. * Fine-grained access control using rules which match criteria like subdomain, user, user group membership, request uri, request method, and network. * Choice between one-factor and two-factor policies per-rule. * Support of basic authentication for endpoints protected by the one-factor policy. * Highly available using a remote database and Redis as a highly available KV store. * Compatible with [Traefik]( out of the box using the [ForwardAuth]( middleware. * Curated configuration from [LinuxServer]( via their [SWAG]( container as well as a [guide]( * Compatible with [Caddy] using the [forward_auth]( directive. * Kubernetes Support: * Compatible with several Kubernetes ingress controllers: * [ingress-nginx]( * [Traefik Kubernetes CRD]( * [Traefik Kubernetes Ingress]( * [Istio]( * Beta support for installing via Helm using our [Charts]( * Beta support for [OAuth 2.0 and OpenID Connect 1.0]( For more details take a look at the [Overview]( If you want to know more about the roadmap, follow [Roadmap]( ## Proxy support Authelia works in combination with [nginx], [Traefik], [Caddy], [Skipper], [Envoy], or [HAProxy]. ## Getting Started See the [Get Started Guide]( or one of the curated examples below. ### docker-compose The `docker-compose` bundles act as a starting point for anyone wanting to see Authelia in action. You will have to customize them to your needs as they come with self-signed certificates. #### [Local]( The Local compose bundle is intended to test Authelia without worrying about configuration. It's meant to be used for scenarios where the server is not be exposed to the internet. Domains will be defined in the local hosts file and self-signed certificates will be utilised. #### [Lite]( The Lite compose bundle is intended for scenarios where the server will be exposed to the internet, domains and DNS will need to be setup accordingly and certificates will be generated through LetsEncrypt. The Lite element refers to minimal external dependencies; File based user storage, SQLite based configuration storage. In this configuration, the service will not scale well. ## Deployment Now that you have tested **Authelia** and you want to try it out in your own infrastructure, you can learn how to deploy and use it with [Deployment]( This guide will show you how to deploy it on bare metal as well as on [Kubernetes]( ## Security Authelia takes security very seriously. If you discover a vulnerability in Authelia, please see our [Security Policy]( For more information about [security]( related matters, please read [the documentation]( ## Contact Options Several contact options exist for our community, the primary one being [Matrix](#matrix). These are in addition to [GitHub issues]( for creating a [new issue]( ### Matrix Community members are invited to join the [Matrix Space]( which includes both the [Support Room]( and the [Contributing Room]( - The core team members are identified as administrators in the Space and individual Rooms. - All channels are linked to [Discord](#discord). ### Discord Community members are invited to join the [Discord Server]( - The core team members are identified by the **CORE TEAM** role in Discord. - The [#support] and [#contributing] channels are linked to [Matrix](#matrix). ### Email You can contact the core team by email via [team@authelia.com](mailto:team@authelia.com). Please note the [security@authelia.com](mailto:security@authelia.com) is also available but is strictly reserved for [security] related matters. ## Breaking changes Since Authelia is still under active development, it is subject to breaking changes. It's recommended to pin a version tag instead of using the `latest` tag and reading the [release notes]( before upgrading. This is where you will find information about breaking changes and what you should do to overcome said changes. ## Why Open Source? You might wonder why Authelia is open source while it adds a great deal of security and user experience to your infrastructure at zero cost. It is open source because we firmly believe that security should be available for all to benefit in the face of the battlefield which is the Internet, with near zero effort. Additionally, keeping the code open source is a way to leave it auditable by anyone who is willing to contribute. This way, you can be confident that the product remains secure and does not act maliciously. It's important to keep in mind Authelia is not directly exposed on the Internet (your reverse proxies are) however, it's still the control plane for your internal security so take care of it! ## Contribute If you want to contribute to Authelia, please read our [contribution guidelines](CONTRIBUTING.md). Authelia exists thanks to all the people who contribute so don't be shy, come chat with us on either [Matrix](#matrix) or [Discord](#discord) and start contributing too. Thanks goes to these wonderful people ([emoji key]( Clment Michaud Amir Zarrinkafsh James Elliott Antoine Favre BankaiNoJutsu Philipp Rintz Callan Bryant Ian FrozenDragoon vdot0x23 alexw1982 Sohalt Stoica Tedy Dylan Smith Lukas Klass Philipp Staiger James Hodgkinson Chris Smith Mihly Silver Bullet Paul Williams Timo Andrew Kliskey Kristof Mattei ZMiguel Valdiviesso akusei Daniel Miller Dustin Sweigart Shawn Haggard Kevyn Bruyere Daniel Sutton Valentin Hbel thehedgefrog Victor Chris Whisker nasatome Begley Brothers (Development) Mike Kusold Dimitris Zervas TheCatLady Lauri Vsandi Kennard Vermeiren ThinkChaos Hasan David Chidell Marcel Marquardt Ian Gallagher Wu Han lavih Jon B. Alex Gustafsson Arsenovi Arsen dakriy Dave Nicolas Reymundo polandy yossbg Michael Campbell Justin Sievenpiper Aram Akhavan Shadow Patrick Ruckstuhl Andrew Moore Dennis Gaida Alestrix bgh-github Manuel Nuez protvis74 Jamie (Bear) Murphy Robin van Boven alphabet5 Robert Meredith Adrian Gsior James White Zhao Xiang Lim Auzborn123 SvanGlan HannesJo0139 andreas-berg Clment Radenac boomam Northguy Brennan Kinney Micha Mieszczak Paul Ohl Stephen Kent Ohelig Dinh Bao Dang levkoburburas tiuub Josh Gordon silasfrancisco Ricardo Pesqueira Harold This project follows the [all-contributors]( specification. Contributions of any kind welcome! ### Sponsors ***Help Wanted:*** We are actively looking for sponsorship to obtain either a code security audit, penetration testing, or other audits related to improving the security of Authelia. Any company can become a sponsor by donating or providing any benefit to the project or the team helping improve Authelia. #### Balto Thank you to [ Balto]( for hosting our apt repository. #### JetBrains Thank you to [ JetBrains]( for providing us with free licenses to their great tools. * [ IDEA]( * [ GoLand]( * [ WebStorm]( #### Microsoft Our pipeline agents which we rely on for productivity are hosted on [Azure]( and our [git repositories]( are hosted on [GitHub]( which are both [Microsoft]( products. []( []( ### Open Collective #### Backers Thank you to all our backers! [Become a backer]( and help us sustain our community. The money we currently receive is dedicated to bootstrap a bug bounty program to give us as many eyes as we can to detect potential vulnerabilities. #### Sponsorship Companies contributing to Authelia via Open Collective will have a special mention below. [Become a sponsor]( ## License **Authelia** is **licensed** under the **[Apache 2.0]** license. The terms of the license are detailed in [LICENSE](LICENSE). []( [Apache 2.0]: [TOTP]: [FIDO2]: [YubiKey]: [WebAuthn]: [auth_request]: [config.template.yml]: ./config.template.yml [nginx]: [Traefik]: [Caddy]: [Skipper]: [Envoy]: [HAProxy]: [Docker]: [Kubernetes]: [security]: [#support]: [#contributing]:","1k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, type/feature, priority/4/normal, status/needs-design, type/enhancement, area/security, area/ui, area/openid-connect, priority/3/medium, area/ldap, dependencies, type/bug/unconfirmed, priority/5/low, type/docs, priority/2/high, javascript, area/storage, area/session, area/email, area/config, type/question, status/roadmap, status/needs-triage, status/in-progress, area/webauthn, area/regulation, area/logs, area/i18n, type/proof-of-concept, status/ready, status/needs-information"
lazydocker,jesseduffield/lazydocker,34244,"['Go', 'Shell', 'Dockerfile']",[],"Special thanks to: Warp is a modern, Rust-based terminal with AI built in so you and your team can build great software, faster. Visitwarp.devto learn more. I (Jesse) co-founded Subble to save your company time and money by helping you manage its software subscriptions. Check it out! A simple terminal UI for both docker and docker-compose, written in Go with the [gocui]( 'gocui') library. []( []( []( []( []( []( [Demo]( ## Sponsors Maintenance of this project is made possible by all the contributors and sponsors. If you'd like to sponsor this project and have your avatar or company logo appear below click here. ## Elevator Pitch Minor rant incoming: Something's not working? Maybe a service is down. `docker-compose ps`. Yep, it's that microservice that's still buggy. No issue, I'll just restart it: `docker-compose restart`. Okay now let's try again. Oh wait the issue is still there. Hmm. `docker-compose ps`. Right so the service must have just stopped immediately after starting. I probably would have known that if I was reading the log stream, but there is a lot of clutter in there from other services. I could get the logs for just that one service with `docker compose logs --follow myservice` but that dies everytime the service dies so I'd need to run that command every time I restart the service. I could alternatively run `docker-compose up myservice` and in that terminal window if the service is down I could just `up` it again, but now I've got one service hogging a terminal window even after I no longer care about its logs. I guess when I want to reclaim the terminal realestate I can do `ctrl+P,Q`, but... wait, that's not working for some reason. Should I use ctrl+C instead? I can't remember if that closes the foreground process or kills the actual service. What a headache! Memorising docker commands is hard. Memorising aliases is slightly less hard. Keeping track of your containers across multiple terminal windows is near impossible. What if you had all the information you needed in one terminal window with every common command living one keypress away (and the ability to add custom commands as well). Lazydocker's goal is to make that dream a reality. - [Requirements]( - [Installation]( - [Usage]( - [Keybindings](/docs/keybindings) - [Cool Features]( - [Contributing]( - [Video Tutorial]( - [Config Docs](/docs/Config.md) - [Twitch Stream]( - [FAQ]( ## Requirements - Docker >= **1.13** (API >= **1.25**) - Docker-Compose >= **1.23.2** (optional) ## Installation ### Homebrew Normally `lazydocker` formula can be found in the Homebrew core but we suggest you to tap our formula to get frequently updated one. It works with Linux, too. **Tap**: ```sh brew install jesseduffield/lazydocker/lazydocker ``` **Core**: ```sh brew install lazydocker ``` ### Scoop (Windows) You can install `lazydocker` using [scoop]( ```sh scoop install lazydocker ``` ### Chocolatey (Windows) You can install `lazydocker` using [Chocolatey]( ```sh choco install lazydocker ``` ### asdf-vm You can install [asdf-lazydocker plugin]( using [asdf-vm]( #### Setup (Once) ```sh asdf plugin add lazydocker ``` #### For Install / Upgrade ```sh asdf list all lazydocker asdf install lazydocker latest asdf global lazydocker latest ``` ### Binary Release (Linux/OSX/Windows) You can manually download a binary release from [the release page]( Automated install/update, don't forget to always verify what you're piping into bash: ```sh curl | bash ``` The script installs downloaded binary to `$HOME/.local/bin` directory by default, but it can be changed by setting `DIR` environment variable. ### Go Required Go Version >= **1.19** ```sh go install github.com/jesseduffield/lazydocker@latest ``` Required Go version >= **1.8**, <= **1.17** ```sh go get github.com/jesseduffield/lazydocker ``` ### Arch Linux AUR You can install lazydocker using the [AUR]( by running: ```sh yay -S lazydocker ``` ### Docker []( []( []( 1. Click if you have an ARM device - If you have a ARM 32 bit v6 architecture ```sh docker build -t lazyteam/lazydocker \ --build-arg BASE_IMAGE_BUILDER=arm32v6/golang \ --build-arg GOARCH=arm \ --build-arg GOARM=6 \ ``` - If you have a ARM 32 bit v7 architecture ```sh docker build -t lazyteam/lazydocker \ --build-arg BASE_IMAGE_BUILDER=arm32v7/golang \ --build-arg GOARCH=arm \ --build-arg GOARM=7 \ ``` - If you have a ARM 64 bit v8 architecture ```sh docker build -t lazyteam/lazydocker \ --build-arg BASE_IMAGE_BUILDER=arm64v8/golang \ --build-arg GOARCH=arm64 \ ``` 1. Run the container ```sh docker run --rm -it -v \ /var/run/docker.sock:/var/run/docker.sock \ -v /yourpath:/.config/jesseduffield/lazydocker \ lazyteam/lazydocker ``` - Don't forget to change `/yourpath` to an actual path you created to store lazydocker's config - You can also use this [docker-compose.yml]( - You might want to create an alias, for example: ```sh echo ""alias lzd='docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock -v /yourpath/config:/.config/jesseduffield/lazydocker lazyteam/lazydocker'"" >> ~/.zshrc ``` For development, you can build the image using: ```sh git clone cd lazydocker docker build -t lazyteam/lazydocker \ --build-arg BUILD_DATE=`date -u +""%Y-%m-%dT%H:%M:%SZ""` \ --build-arg VCS_REF=`git rev-parse --short HEAD` \ --build-arg VERSION=`git describe --abbrev=0 --tag` \ . ``` If you encounter a compatibility issue with Docker bundled binary, try rebuilding the image with the build argument `--build-arg DOCKER_VERSION=""v$(docker -v | cut -d"" "" -f3 | rev | cut -c 2- | rev)""` so that the bundled docker binary matches your host docker binary version. ## Usage Call `lazydocker` in your terminal. I personally use this a lot so I've made an alias for it like so: ``` echo ""alias lzd='lazydocker'"" >> ~/.zshrc ``` (you can substitute .zshrc for whatever rc file you're using) - Basic video tutorial [here]( - List of keybindings [here](/docs/keybindings). ## Cool features everything is one keypress away (or one click away! Mouse support FTW): - viewing the state of your docker or docker-compose container environment at a glance - viewing logs for a container/service - viewing ascii graphs of your containers' metrics so that you can not only feel but also look like a developer - customising those graphs to measure nearly any metric you want - attaching to a container/service - restarting/removing/rebuilding containers/services - viewing the ancestor layers of a given image - pruning containers, images, or volumes that are hogging up disk space ## Contributing There is still a lot of work to go! Please check out the [contributing guide](CONTRIBUTING.md). For contributor discussion about things not better discussed here in the repo, join the discord channel ## Donate If you would like to support the development of lazydocker, consider [sponsoring me]( (github is matching all donations dollar-for-dollar for 12 months) ## Social If you want to see what I (Jesse) am up to in terms of development, follow me on [twitter]( or watch me program on [twitch]( ## FAQ ### How do I edit my config? By opening lazydocker, clicking on the 'project' panel in the top left, and pressing 'o' (or 'e' if your editor is vim). See [Config Docs](/docs/Config.md) ### How do I get text to wrap in my main panel? In the future I want to make this the default, but for now there are some CPU issues that arise with wrapping. If you want to enable wrapping, use `gui.wrapMainPanel: true` ### How do you select text? Because we support mouse events, you will need to hold option while dragging the mouse to indicate you're trying to select text rather than click on something. Alternatively you can disable mouse events via the `gui.ignoreMouseEvents` config value. Mac Users: See [Issue #190]( for other options. ### Why can't I see my container's logs? By default we only show logs from the last hour, so that we're not putting too much strain on the machine. This may be why you can't see logs when you first start lazydocker. This can be overwritten in the config's `commandTemplates` If you are running lazydocker in Docker container, it is a know bug, that you can't see logs or CPU usage. ### Why isn't my docker-compose environment being used? By default Compose V1 (`docker-compose` with the hyphen) is used as the docker-compose command. You will need to make sure you have the `docker-compose` command available for lazydocker to be able to use. If you use Compose V2 (`docker compose` without the hyphen), alternatively, you can change the docker-compose command used via the `commandTemplates.dockerCompose` config value. ## Alternatives - [docui]( - Skanehira beat me to the punch on making a docker terminal UI, so definitely check out that repo as well! I think the two repos can live in harmony though: lazydocker is more about managing existing containers/services, and docui is more about creating and configuring them. - [Portainer]( - Portainer tries to solve the same problem but it's accessed via your browser rather than your terminal. It also supports docker swarm. - See [Awesome Docker list]( for similar tools to work with Docker.","1.1k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, enhancement, bug, discussion, hacktoberfest, good first issue, docker-image, dependencies, wontfix, question, invalid, ignore-for-release, help wanted, duplicate, brew-packaging, binary-release"
skopeo,containers/skopeo,7512,"['Go', 'Shell', 'Makefile']",[],"---- `skopeo` is a command line utility that performs various operations on container images and image repositories. `skopeo` does not require the user to be running as root to do most of its operations. `skopeo` does not require a daemon to be running to perform its operations. `skopeo` can work with [OCI images]( as well as the original Docker v2 images. Skopeo works with API V2 container image registries such as [docker.io]( and [quay.io]( registries, private registries, local directories and local OCI-layout directories. Skopeo can perform operations which consist of: * Copying an image from and to various storage mechanisms. For example you can copy images from one registry to another, without requiring privilege. * Inspecting a remote image showing its properties including its layers, without requiring you to pull the image to the host. * Deleting an image from an image repository. * Syncing an external image repository to an internal registry for air-gapped deployments. * When required by the repository, skopeo can pass the appropriate credentials and certificates for authentication. Skopeo operates on the following image and repository types: * containers-storage:docker-reference An image located in a local containers/storage image store. Both the location and image store are specified in /etc/containers/storage.conf. (This is the backend for [Podman]( [CRI-O]( [Buildah]( and friends) * dir:path An existing local directory path storing the manifest, layer tarballs and signatures as individual files. This is a non-standardized format, primarily useful for debugging or noninvasive container inspection. * docker://docker-reference An image in a registry implementing the ""Docker Registry HTTP API V2"". By default, uses the authorization state in `$XDG_RUNTIME_DIR/containers/auth.json`, which is set using `skopeo login`. * docker-archive:path[:docker-reference] An image is stored in a `docker save`-formatted file. docker-reference is only used when creating such a file, and it must not contain a digest. * docker-daemon:docker-reference An image docker-reference stored in the docker daemon internal storage. docker-reference must contain either a tag or a digest. Alternatively, when reading images, the format can also be docker-daemon:algo:digest (an image ID). * oci:path:tag An image tag in a directory compliant with ""Open Container Image Layout Specification"" at path. [Obtaining skopeo](./install.md) - For a detailed description how to install or build skopeo, see [install.md](./install.md). Skopeo is also available as a Container Image on [quay.io]( For more information, see the [Skopeo Image]( page. ## Inspecting a repository `skopeo` is able to _inspect_ a repository on a container registry and fetch images layers. The _inspect_ command fetches the repository's manifest and it is able to show you a `docker inspect`-like json output about a whole repository or a tag. This tool, in contrast to `docker inspect`, helps you gather useful information about a repository or a tag before pulling it (using disk space). The inspect command can show you which tags are available for the given repository, the labels the image has, the creation date and operating system of the image and more. Examples: #### Show properties of fedora:latest ```console $ skopeo inspect docker://registry.fedoraproject.org/fedora:latest { ""Name"": ""registry.fedoraproject.org/fedora"", ""Digest"": ""sha256:0f65bee641e821f8118acafb44c2f8fe30c2fc6b9a2b3729c0660376391aa117"", ""RepoTags"": [ ""34-aarch64"", ""34"", ""latest"", ... ], ""Created"": ""2022-11-24T13:54:18Z"", ""DockerVersion"": ""1.10.1"", ""Labels"": { ""license"": ""MIT"", ""name"": ""fedora"", ""vendor"": ""Fedora Project"", ""version"": ""37"" }, ""Architecture"": ""amd64"", ""Os"": ""linux"", ""Layers"": [ ""sha256:2a0fc6bf62e155737f0ace6142ee686f3c471c1aab4241dc3128904db46288f0"" ], ""LayersData"": [ { ""MIMEType"": ""application/vnd.docker.image.rootfs.diff.tar.gzip"", ""Digest"": ""sha256:2a0fc6bf62e155737f0ace6142ee686f3c471c1aab4241dc3128904db46288f0"", ""Size"": 71355009, ""Annotations"": null } ], ""Env"": [ ""DISTTAG=f37container"", ""FGC=f37"", ""container=oci"" ] } ``` #### Show container configuration from `fedora:latest` ```console $ skopeo inspect --config docker://registry.fedoraproject.org/fedora:latest | jq { ""created"": ""2020-04-29T06:48:16Z"", ""architecture"": ""amd64"", ""os"": ""linux"", ""config"": { ""Env"": [ ""DISTTAG=f32container"", ""FGC=f32"", ""container=oci"" ], ""Cmd"": [ ""/bin/bash"" ], ""Labels"": { ""license"": ""MIT"", ""name"": ""fedora"", ""vendor"": ""Fedora Project"", ""version"": ""32"" } }, ""rootfs"": { ""type"": ""layers"", ""diff_ids"": [ ""sha256:a4c0fa2b217d3fd63d51e55a6fd59432e543d499c0df2b1acd48fbe424f2ddd1"" ] }, ""history"": [ { ""created"": ""2020-04-29T06:48:16Z"", ""comment"": ""Created by Image Factory"" } ] } ``` #### Show unverified image's digest ```console $ skopeo inspect docker://registry.fedoraproject.org/fedora:latest | jq '.Digest' ""sha256:655721ff613ee766a4126cb5e0d5ae81598e1b0c3bcf7017c36c4d72cb092fe9"" ``` ## Copying images `skopeo` can copy container images between various storage mechanisms, including: * Container registries - The Quay, Docker Hub, OpenShift, GCR, Artifactory ... * Container Storage backends - [github.com/containers/storage]( (Backend for [Podman]( [CRI-O]( [Buildah]( and friends) - Docker daemon storage * Local directories * Local OCI-layout directories ```console $ skopeo copy docker://quay.io/buildah/stable docker://registry.internal.company.com/buildah $ skopeo copy oci:busybox_ocilayout:latest dir:existingemptydirectory ``` ## Deleting images ```console $ skopeo delete docker://localhost:5000/imagename:latest ``` ## Syncing registries ```console $ skopeo sync --src docker --dest dir registry.example.com/busybox /media/usb ``` ## Authenticating to a registry #### Private registries with authentication skopeo uses credentials from the --creds (for skopeo inspect|delete) or --src-creds|--dest-creds (for skopeo copy) flags, if set; otherwise it uses configuration set by skopeo login, podman login, buildah login, or docker login. ```console $ skopeo login --username USER myregistrydomain.com:5000 Password: $ skopeo inspect docker://myregistrydomain.com:5000/busybox {""Tag"":""latest"",""Digest"":""sha256:473bb2189d7b913ed7187a33d11e743fdc2f88931122a44d91a301b64419f092"",""RepoTags"":[""latest""],""Comment"":"""",""Created"":""2016-01-15T18:06:41.282540103Z"",""ContainerConfig"":{""Hostname"":""aded96b43f48"",""Domainname"":"""",""User"":"""",""AttachStdin"":false,""AttachStdout"":false,""AttachStderr"":false,""Tty"":false,""OpenStdin"":false,""StdinOnce"":false,""Env"":null,""Cmd"":[""/bin/sh"",""-c"",""#(nop) CMD [\""sh\""]""],""Image"":""9e77fef7a1c9f989988c06620dabc4020c607885b959a2cbd7c2283c91da3e33"",""Volumes"":null,""WorkingDir"":"""",""Entrypoint"":null,""OnBuild"":null,""Labels"":null},""DockerVersion"":""1.8.3"",""Author"":"""",""Config"":{""Hostname"":""aded96b43f48"",""Domainname"":"""",""User"":"""",""AttachStdin"":false,""AttachStdout"":false,""AttachStderr"":false,""Tty"":false,""OpenStdin"":false,""StdinOnce"":false,""Env"":null,""Cmd"":[""sh""],""Image"":""9e77fef7a1c9f989988c06620dabc4020c607885b959a2cbd7c2283c91da3e33"",""Volumes"":null,""WorkingDir"":"""",""Entrypoint"":null,""OnBuild"":null,""Labels"":null},""Architecture"":""amd64"",""Os"":""linux""} $ skopeo logout myregistrydomain.com:5000 ``` #### Using --creds directly ```console $ skopeo inspect --creds=testuser:testpassword docker://myregistrydomain.com:5000/busybox {""Tag"":""latest"",""Digest"":""sha256:473bb2189d7b913ed7187a33d11e743fdc2f88931122a44d91a301b64419f092"",""RepoTags"":[""latest""],""Comment"":"""",""Created"":""2016-01-15T18:06:41.282540103Z"",""ContainerConfig"":{""Hostname"":""aded96b43f48"",""Domainname"":"""",""User"":"""",""AttachStdin"":false,""AttachStdout"":false,""AttachStderr"":false,""Tty"":false,""OpenStdin"":false,""StdinOnce"":false,""Env"":null,""Cmd"":[""/bin/sh"",""-c"",""#(nop) CMD [\""sh\""]""],""Image"":""9e77fef7a1c9f989988c06620dabc4020c607885b959a2cbd7c2283c91da3e33"",""Volumes"":null,""WorkingDir"":"""",""Entrypoint"":null,""OnBuild"":null,""Labels"":null},""DockerVersion"":""1.8.3"",""Author"":"""",""Config"":{""Hostname"":""aded96b43f48"",""Domainname"":"""",""User"":"""",""AttachStdin"":false,""AttachStdout"":false,""AttachStderr"":false,""Tty"":false,""OpenStdin"":false,""StdinOnce"":false,""Env"":null,""Cmd"":[""sh""],""Image"":""9e77fef7a1c9f989988c06620dabc4020c607885b959a2cbd7c2283c91da3e33"",""Volumes"":null,""WorkingDir"":"""",""Entrypoint"":null,""OnBuild"":null,""Labels"":null},""Architecture"":""amd64"",""Os"":""linux""} ``` ```console $ skopeo copy --src-creds=testuser:testpassword docker://myregistrydomain.com:5000/private oci:local_oci_image ``` Contributing - Please read the [contribution guide](CONTRIBUTING.md) if you want to collaborate in the project. ## Commands | Command | Description | | -------------------------------------------------- | ---------------------------------------------------------------------------------------------| | [skopeo-copy(1)](/docs/skopeo-copy.1.md) | Copy an image (manifest, filesystem layers, signatures) from one location to another. | | [skopeo-delete(1)](/docs/skopeo-delete.1.md) | Mark the image-name for later deletion by the registry's garbage collector. | | [skopeo-generate-sigstore-key(1)](/docs/skopeo-generate-sigstore-key.1.md) | Generate a sigstore public/private key pair. | | [skopeo-inspect(1)](/docs/skopeo-inspect.1.md) | Return low-level information about image-name in a registry. | | [skopeo-list-tags(1)](/docs/skopeo-list-tags.1.md) | Return a list of tags for the transport-specific image repository. | | [skopeo-login(1)](/docs/skopeo-login.1.md) | Login to a container registry. | | [skopeo-logout(1)](/docs/skopeo-logout.1.md) | Logout of a container registry. | | [skopeo-manifest-digest(1)](/docs/skopeo-manifest-digest.1.md) | Compute a manifest digest for a manifest-file and write it to standard output. | | [skopeo-standalone-sign(1)](/docs/skopeo-standalone-sign.1.md) | Debugging tool - Sign an image locally without uploading. | | [skopeo-standalone-verify(1)](/docs/skopeo-standalone-verify.1.md)| Debugging tool - Verify an image signature from local files. | | [skopeo-sync(1)](/docs/skopeo-sync.1.md) | Synchron... [TRUNCATED]","742, Code, Issues, Pull requests, Actions, Security, Insights, kind/feature, stale-issue, good first issue, stale-pr, kind/bug, help wanted, dependencies, volunteers-wanted, experimental-image-proxy, wontfix, ubuntu, security, question, packaging, locked - please file new issue/PR, invalid, hold/donotmerge, duplicate, debian, breaking-change"
katana,projectdiscovery/katana,8851,"['Go', 'Shell', 'Makefile']","['crawler', 'web-spider', 'gocrawler', 'spider-framework', 'cli']","A next-generation crawling and spidering framework Features Installation Usage Scope Config Filters Join Discord # Features - Fast And fully configurable web crawling - **Standard** and **Headless** mode - **Active** and **Passive** mode - **JavaScript** parsing / crawling - Customizable **automatic form filling** - **Scope control** - Preconfigured field / Regex - **Customizable output** - Preconfigured fields - INPUT - **STDIN**, **URL** and **LIST** - OUTPUT - **STDOUT**, **FILE** and **JSON** ## Installation katana requires **Go 1.18** to install successfully. To install, just run the below command or download pre-compiled binary from [release page]( ```console go install github.com/projectdiscovery/katana/cmd/katana@latest ``` **More options to install / run katana-** Docker > To install / update docker to latest tag - ```sh docker pull projectdiscovery/katana:latest ``` > To run katana in standard mode using docker - ```sh docker run projectdiscovery/katana:latest -u ``` > To run katana in headless mode using docker - ```sh docker run projectdiscovery/katana:latest -u -system-chrome -headless ``` Ubuntu > It's recommended to install the following prerequisites - ```sh sudo apt update sudo snap refresh sudo apt install zip curl wget git sudo snap install golang --classic wget -q -O - | sudo apt-key add - sudo sh -c 'echo ""deb stable main"" >> /etc/apt/sources.list.d/google.list' sudo apt update sudo apt install google-chrome-stable ``` > install katana - ```sh go install github.com/projectdiscovery/katana/cmd/katana@latest ``` ## Usage ```console katana -h ``` This will display help for the tool. Here are all the switches it supports. ```console Katana is a fast crawler focused on execution in automation pipelines offering both headless and non-headless crawling. Usage: ./katana [flags] Flags: INPUT: -u, -list string[] target url / list to crawl -resume string resume scan using resume.cfg -e, -exclude string[] exclude host matching specified filter ('cdn', 'private-ips', cidr, ip, regex) CONFIGURATION: -r, -resolvers string[] list of custom resolver (file or comma separated) -d, -depth int maximum depth to crawl (default 3) -jc, -js-crawl enable endpoint parsing / crawling in javascript file -jsl, -jsluice enable jsluice parsing in javascript file (memory intensive) -ct, -crawl-duration value maximum duration to crawl the target for (s, m, h, d) (default s) -kf, -known-files string enable crawling of known files (all,robotstxt,sitemapxml), a minimum depth of 3 is required to ensure all known files are properly crawled. -mrs, -max-response-size int maximum response size to read (default 9223372036854775807) -timeout int time to wait for request in seconds (default 10) -aff, -automatic-form-fill enable automatic form filling (experimental) -fx, -form-extraction extract form, input, textarea & select elements in jsonl output -retry int number of times to retry the request (default 1) -proxy string proxy to use -H, -headers string[] custom header/cookie to include in all http request in header:value format (file) -config string path to the katana configuration file -fc, -form-config string path to custom form configuration file -flc, -field-config string path to custom field configuration file -s, -strategy string Visit strategy (depth-first, breadth-first) (default ""depth-first"") -iqp, -ignore-query-params Ignore crawling same path with different query-param values -tlsi, -tls-impersonate enable experimental client hello (ja3) tls randomization -dr, -disable-redirects disable following redirects (default false) DEBUG: -health-check, -hc run diagnostic check up -elog, -error-log string file to write sent requests error log HEADLESS: -hl, -headless enable headless hybrid crawling (experimental) -sc, -system-chrome use local installed chrome browser instead of katana installed -sb, -show-browser show the browser on the screen with headless mode -ho, -headless-options string[] start headless chrome with additional options -nos, -no-sandbox start headless chrome in --no-sandbox mode -cdd, -chrome-data-dir string path to store chrome browser data -scp, -system-chrome-path string use specified chrome browser for headless crawling -noi, -no-incognito start headless chrome without incognito mode -cwu, -chrome-ws-url string use chrome browser instance launched elsewhere with the debugger listening at this URL -xhr, -xhr-extraction extract xhr request url,method in jsonl output PASSIVE: -ps, -passive enable passive sources to discover target endpoints -pss, -passive-source string[] passive source to use for url discovery (waybackarchive,commoncrawl,alienvault) SCOPE: -cs, -crawl-scope string[] in scope url regex to be followed by crawler -cos, -crawl-out-scope string[] out of scope url regex to be excluded by crawler -fs, -field-scope string pre-defined scope field (dn,rdn,fqdn) or custom regex (e.g., '(company-staging.io|company.com)') (default ""rdn"") -ns, -no-scope disables host based default scope -do, -display-out-scope display external endpoint from scoped crawling FILTER: -mr, -match-regex string[] regex or list of regex to match on output url (cli, file) -fr, -filter-regex string[] regex or list of regex to filter on output url (cli, file) -f, -field string field to display in output (url,path,fqdn,rdn,rurl,qurl,qpath,file,ufile,key,value,kv,dir,udir) -sf, -store-field string field to store in per-host output (url,path,fqdn,rdn,rurl,qurl,qpath,file,ufile,key,value,kv,dir,udir) -em, -extension-match string[] match output for given extension (eg, -em php,html,js) -ef, -extension-filter string[] filter output for given extension (eg, -ef png,css) -mdc, -match-condition string match response with dsl based condition -fdc, -filter-condition string filter response with dsl based condition RATE-LIMIT: -c, -concurrency int number of concurrent fetchers to use (default 10) -p, -parallelism int number of concurrent inputs to process (default 10) -rd, -delay int request delay between each request in seconds -rl, -rate-limit int maximum requests to send per second (default 150) -rlm, -rate-limit-minute int maximum number of requests to send per minute UPDATE: -up, -update update katana to latest version -duc, -disable-update-check disable automatic katana update check OUTPUT: -o, -output string file to write output to -sr, -store-response store http requests/responses -srd, -store-response-dir string store http requests/responses to custom directory -or, -omit-raw omit raw requests/responses from jsonl output -ob, -omit-body omit response body from jsonl output -j, -jsonl write output in jsonl format -nc, -no-color disable output content coloring (ANSI escape codes) -silent display output only -v, -verbose display verbose output -debug display debug output -version display project version ``` ## Running Katana ### Input for katana **katana** requires **url** or **endpoint** to crawl and accepts single or multiple inputs. Input URL can be provided using `-u` option, and multiple values can be provided using comma-separated input, similarly **file** input is supported using `-list` option and additionally piped input (stdin) is also supported. #### URL Input ```sh katana -u ``` #### Multiple URL Input (comma-separated) ```sh katana -u ``` #### List Input ```bash $ cat url_list.txt ``` ``` katana -list url_list.txt ``` #### STDIN (piped) Input ```sh echo | katana ``` ```sh cat domains | | katana ``` Example running katana - ```console katana -u __ __ / /_____ _/ /____ ____ ___ _ / '_/ _ / __/ _ / _ \/ _ / /_/\_\\_,_/\__/\_,_/_//_/\_,_/ v0.0.1 projectdiscovery.io [WRN] Use with caution. You are responsible for your actions. [WRN] Developers assume no liability and are not responsible for any misuse or damage. ``` ## Crawling Mode ### Standard Mode Standard crawling modality uses the standard go http library under the hood to handle HTTP requests/responses. This modality is much faster as it doesn't have the browser overhead. Still, it analyzes HTTP responses body as is, without any javascript or DOM rendering, potentially missing post-dom-rendered endpoints or asynchronous endpoint calls that might happen in complex web applications depending, for example, on browser-specific events. ### Headless Mode Headless mode hooks internal headless calls to handle HTTP requests/responses directly within the browser context. This offers two advantages: - The HTTP fingerprint (TLS and user agent) fully identify the client as a legitimate browser - Better coverage since the endpoints are discovered analyzing the standard raw response, as in the previous modality, and also the browser-rendered one with javascript enabled. Headless crawling is optional and can be enabled using `-headless` option. Here are other headless CLI options - ```console katana -h headless Flags: HEADLESS: -hl, -headless enable headless hybrid crawling (experimental) -sc, -system-chrome use local installed chrome browser instead of katana installed -sb, -show-browser show the browser on the screen with headless mode -ho, -headless-options string[] start headless chrome with additional options -nos, -no-sandbox start headless chrome in --no-sandbox mode -cdd, -chrome-data-dir string path to store chrome browser data -scp, -system-chrome-path string use specified chrome browser for headless crawling -noi, -no-incognito start headless chrome without incognito mode -cwu, -chrome-ws-url string use chrome browser instance launched elsewhere with the debugger listening at this URL -xhr, -xhr-extraction extract xhr requests ``` *`-no-sandbox`* ---- Runs headless chrome browser with **no-sandbox** option, useful when running as root user. ```console katana -u -headless -no-sandbox ``` *`-no-incognito`* ---- Runs headless chrome browser without incognito mode, useful when using the local browser. ```console katana -u -headless -no-incognito ``` *`-headless-options`* ---- When crawling in headless mode, additional chrome options can be specified using `-headless-options`, for exa... [TRUNCATED]","472, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, Type: Enhancement, Type: Bug, Priority: Low, headless, Priority: Medium, Type: Question, Status: In Progress, Status: Completed, Investigation, Type: Discussion, Status: Blocked, regression, go, epic, dependencies, Type: Optimization, Type: Maintenance, Status: Revision Needed, Status: Review Needed, Status: On Hold, Status: Available, Status: Accepted, Status: Abandoned, Priority: High, Priority: Critical, Community ✅"
croc,schollz/croc,26546,"['Go', 'Shell', 'Makefile']","['file-sharing', 'tcp', 'golang', 'peer-to-peer', 'data-transfer']","This project is supported by Github sponsors. `croc` is a tool that allows any two computers to simply and securely transfer files and folders. AFAIK, *croc* is the only CLI file-transfer tool that does **all** of the following: - allows **any two computers** to transfer data (using a relay) - provides **end-to-end encryption** (using PAKE) - enables easy **cross-platform** transfers (Windows, Linux, Mac) - allows **multiple file** transfers - allows **resuming transfers** that are interrupted - local server or port-forwarding **not needed** - **ipv6-first** with ipv4 fallback - can **use proxy**, like tor For more information about `croc`, see [my blog post]( or read a [recent interview I did]( ## Install Download [the latest release for your system]( or install a release from the command-line: ``` curl | bash ``` On macOS you can install the latest release with [Homebrew]( ``` brew install croc ``` On macOS you can also install the latest release with [MacPorts]( ``` sudo port selfupdate sudo port install croc ``` On Windows you can install the latest release with [Scoop]( [Chocolatey]( or [Winget]( ``` scoop install croc ``` ``` choco install croc ``` ``` winget install schollz.croc ``` On Unix you can install the latest release with [Nix]( ``` nix-env -i croc ``` On Alpine Linux you have to install dependencies first: ``` apk add bash coreutils wget -qO- | bash ``` On Arch Linux you can install the latest release with `pacman`: ``` pacman -S croc ``` On Fedora you can install with `dnf`: ``` dnf install croc ``` On Gentoo you can install with `portage`: ``` emerge net-misc/croc ``` On Termux you can install with `pkg`: ``` pkg install croc ``` On FreeBSD you can install with `pkg`: ``` pkg install croc ``` Or, you can [install Go]( and build from source (requires Go 1.17+): ``` go install github.com/schollz/croc/v10@latest ``` On Android there is a 3rd party F-Droid app [available to download]( ## Usage To send a file, simply do: ``` $ croc send [file(s)-or-folder] Sending 'file-or-folder' (X MB) Code is: code-phrase ``` Then to receive the file (or folder) on another computer, you can just do ``` croc code-phrase ``` The code phrase is used to establish password-authenticated key agreement ([PAKE]( which generates a secret key for the sender and recipient to use for end-to-end encryption. There are a number of configurable options (see `--help`). A set of options (like custom relay, ports, and code phrase) can be set using `--remember`. ### Custom code phrase You can send with your own code phrase (must be more than 6 characters). ``` croc send --code [code-phrase] [file(s)-or-folder] ``` ### Allow overwriting without prompt By default, croc will prompt whether to overwrite a file. You can automatically overwrite files by using the `--overwrite` flag (recipient only). For example, receive a file to automatically overwrite: ``` croc --yes --overwrite ``` ### Use pipes - stdin and stdout You can pipe to `croc`: ``` cat [filename] | croc send ``` In this case `croc` will automatically use the stdin data and send and assign a filename like ""croc-stdin-123456789"". To receive to `stdout` at you can always just use the `--yes` will automatically approve the transfer and pipe it out to `stdout`. ``` croc --yes [code-phrase] > out ``` All of the other text printed to the console is going to `stderr` so it will not interfere with the message going to `stdout`. ### Send text Sometimes you want to send URLs or short text. In addition to piping, you can easily send text with `croc`: ``` croc send --text ""hello world"" ``` This will automatically tell the receiver to use `stdout` when they receive the text so it will be displayed. ### Use a proxy You can use a proxy as your connection to the relay by adding a proxy address with `--socks5`. For example, you can send via a tor relay: ``` croc --socks5 ""127.0.0.1:9050"" send SOMEFILE ``` ### Change encryption curve You can choose from several different elliptic curves to use for encryption by using the `--curve` flag. Only the recipient can choose the curve. For example, receive a file using the P-521 curve: ``` croc --curve p521 ``` Available curves are P-256, P-348, P-521 and SIEC. P-256 is the default curve. ### Change hash algorithm You can choose from several different hash algorithms. The default is the `xxhash` algorithm which is fast and thorough. If you want to optimize for speed you can use the `imohash` algorithm which is even faster, but since it samples files (versus reading the whole file) it can mistakenly determine that a file is the same on the two computers transferring - though this is only a problem if you are syncing files versus sending a new file to a computer. ``` croc send --hash imohash SOMEFILE ``` ### Self-host relay The relay is needed to staple the parallel incoming and outgoing connections. By default, `croc` uses a public relay but you can also run your own relay: ``` croc relay ``` By default it uses TCP ports 9009-9013. Make sure to open those up. You can customize the ports (e.g. `croc relay --ports 1111,1112`), but you must have a minimum of **2** ports for the relay. The first port is for communication and the subsequent ports are used for the multiplexed data transfer. You can send files using your relay by entering `--relay` to change the relay that you are using if you want to custom host your own. ``` croc --relay ""myrelay.example.com:9009"" send [filename] ``` Note, when sending, you only need to include the first port (the communication port). The subsequent ports for data transfer will be transmitted back to the user from the relay. #### Self-host relay (docker) If it's easier you can also run a relay with Docker: ``` docker run -d -p 9009-9013:9009-9013 -e CROC_PASS='YOURPASSWORD' schollz/croc ``` Be sure to include the password for the relay otherwise any requests will be rejected. ``` croc --pass YOURPASSWORD --relay ""myreal.example.com:9009"" send [filename] ``` Note: when including `--pass YOURPASSWORD` you can instead pass a file with the password, e.g. `--pass FILEWITHPASSWORD`. ## License MIT ## Acknowledgements `croc` has gone through many iterations, and I am awed by all the great contributions! If you feel like contributing, in any way, by all means you can send an Issue, a PR, or ask a question. Thanks [@warner]( for the [idea]( [@tscholl2]( for the [encryption gists]( [@skorokithakis]( for [code on proxying two connections]( Finally thanks for making pull requests [@maximbaz]( [@meyermarcel]( [@Girbons]( [@techtide]( [@heymatthew]( [@Lunsford94]( [@lummie]( [@jesuiscamille]( [@threefjord]( [@marcossegovia]( [@csleong98]( [@afotescu]( [@callmefever]( [@El-JojA]( [@anatolyyyyyy]( [@goggle]( [@smileboywtu]( [@nicolashardy]( [@fbartels]( [@rkuprov]( [@hreese]( [@xenrox]( and [Ipar](","1.1k, Code, Issues, Pull requests, Actions, Security, Insights, will-accept-pr, bug, enhancement, wontfix, security, question, not an issue, no-issue-activity, need more information, invalid, in-progress, help wanted, hacktoberfest, good first issue, go, github_actions, duplicate, dependencies"
websocket,gorilla/websocket,21360,"['Go', 'Makefile']","['go', 'websocket', 'golang', 'gorilla', 'gorilla-web-toolkit']",# gorilla/websocket []( []( []( Gorilla WebSocket is a [Go]( implementation of the [WebSocket]( protocol. ### Documentation * [API Reference]( * [Chat example]( * [Command example]( * [Client and server example]( * [File watch example]( * [Write buffer pool example]( ### Status The Gorilla WebSocket package provides a complete and tested implementation of the [WebSocket]( protocol. The package API is stable. ### Installation go get github.com/gorilla/websocket ### Protocol Compliance The Gorilla WebSocket package passes the server tests in the [Autobahn Test Suite]( using the application in the [examples/autobahn subdirectory](,"3.4k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, bug, feature request, enhancement, size/L, size/XS, size/M, question, size/S, documentation, wontfix, waiting on new maintainer, stale, size/XXL, size/XL, proposal, needs review, help wanted, duplicate, dependencies, build system, breaking change, beginnner friendly"
incubator-answer,apache/incubator-answer,11627,"['Go', 'TypeScript', 'HTML']","['community', 'golang', 'react', 'forum', 'question']","# Apache Answer - Build Q&A platform A Q&A platform software for teams at any scales. Whether its a community forum, help center, or knowledge management platform, you can always count on Answer. To learn more about the project, visit [answer.apache.org]( []( []( []( []( []( ## Screenshots ## Quick start ### Running with docker ```bash docker run -d -p 9080:80 -v answer-data:/data --name answer apache/answer:1.3.1 ``` For more information, see [Installation]( ### Plugins Answer provides a plugin system for developers to create custom plugins and expand Answers features. You can find the [plugin documentation here]( We value your feedback and suggestions to improve our documentation. If you have any comments or questions, please feel free to contact us. Were excited to see what you can create using our plugin system! You can also check out the [plugins here]( ## Building from Source ### Prerequisites - Golang >= 1.18 - Node.js >= 16.17 - pnpm >= 8 - mockgen >= 1.6.0 - wire >= 0.5.0 ### Build ```bash # install wire and mockgen for building $ make generate # install frontend dependencies and build $ make ui # install backend dependencies and build $ make build ``` ## Contributing Contributions are always welcome! See [CONTRIBUTING]( for ways to get started. ## License [Apache License 2.0](","828, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, feature, bug, enhancement, duplicate, question, help wanted, good first issue, wontfix, security, invalid, hacktoberfest-accepted, hacktoberfest, documentation, dependencies, LGTM"
weaviate,weaviate/weaviate,9820,"['Go', 'Assembly', 'Shell']","['search-engine', 'semantic-search', 'semantic-search-engine', 'vector-search', 'vector-search-engine']","Weaviate []( []( []( []( []( []( ## Overview Weaviate is a cloud-native, **open source vector database** that is robust, fast, and scalable. To get started quickly, have a look at one of these pages: - [Quickstart tutorial]( To see Weaviate in action - [Contributor guide]( To contribute to this project For more details, read through the summary on this page or see the system [documentation]( --- ## Why Weaviate? Weaviate uses state-of-the-art machine learning (ML) models to turn your data - text, images, and more - into a searchable vector database. Here are some highlights. ### Speed Weaviate is fast. The core engine can run a 10-NN nearest neighbor search on millions of objects in milliseconds. See [benchmarks]( ### Flexibility Weaviate can **vectorize your data at import time**. Or, if you have already vectorized your data, you can **upload your own vectors** instead. Modules give you the flexibility to tune Weaviate for your needs. More than two dozen modules connect you to popular services and model hubs such as [OpenAI]( [Cohere]( [VoyageAI]( and [HuggingFace]( Use custom modules to work with your own models or third party services. ### Production-readiness Weaviate is built with [scaling]( [replication]( and [security]( in mind so you can go smoothly from **rapid prototyping** to **production at scale**. ### Beyond search Weaviate doesn't just power lightning-fast vector searches. Other superpowers include **recommendation**, **summarization**, and **integration with neural search frameworks**. ## Who uses Weaviate? - **Software Engineers** - Weaviate is an ML-first database engine - Out-of-the-box modules for AI-powered searches, automatic classification, and LLM integration - Full CRUD support - Cloud-native, distributed system that runs well on Kubernetes - Scales with your workloads - **Data Engineers** - Weaviate is a fast, flexible vector database - Use your own ML model or third party models - Run locally or with an inference service - **Data Scientists** - Seamless handover of Machine Learning models to engineers and MLOps - Deploy and maintain your ML models in production reliably and efficiently - Easily package custom trained models ## What can you build with Weaviate? A Weaviate vector database can search text, images, or a combination of both. Fast vector search provides a foundation for chatbots, recommendation systems, summarizers, and classification systems. Here are some examples that show how Weaviate integrates with other AI and ML tools: ### Use Weaviate with third part embeddings - [Cohere]( ([blogpost]( - [Hugging Face]( - [OpenAI]( ### Use Weaviate as a document store - [DocArray]( - [Haystack]( ([blogpost]( ### Use Weaviate as a memory backend - [Auto-GPT]( ([blogpost]( - [LangChain]( ([blogpost]( - [LlamaIndex]( ([blogpost]( - [OpenAI - ChatGPT retrieval plugin]( ### Demos These demos are working applications that highlight some of Weaviate's capabilities. Their source code is available on GitHub. - [Verba, the Golden RAGtreiver]( ([GitHub]( - [Healthsearch]( ([GitHub]( - [Awesome-Moviate]( ([GitHub]( ## How can you connect to Weaviate? Weaviate exposes a [GraphQL API]( and a [REST API]( Starting in v1.23, a new [gRPC API]( provides even faster access to your data. Weaviate provides client libraries for several popular languages: - [Python]( - [JavaScript/TypeScript]( - [Go]( - [Java]( There are also [community supported libraries]( for additional languages. ## Where can You learn more? Free, self-paced courses in [Weaviate Academy]( teach you how to use Weaviate. The [Tutorials repo]( has code for example projects. The [Recipes repo]( has even more project code to get you started. The [Weaviate blog]( and [podcast]( regularly post stories on Weaviate and AI. Here are some popular posts: ### Blogs - [What to expect from Weaviate in 2023]( - [Why is vector search so fast?]( - [Cohere Multilingual ML Models with Weaviate]( - [Vamana vs. HNSW - Exploring ANN algorithms Part 1]( - [HNSW+PQ - Exploring ANN algorithms Part 2.1]( - [The Tile Encoder - Exploring ANN algorithms Part 2.2]( - [How GPT4.0 and other Large Language Models Work]( - [Monitoring Weaviate in Production]( - [The ChatGPT Retrieval Plugin - Weaviate as a Long-term Memory Store for Generative AI]( - [Combining LangChain and Weaviate]( - [How to build an Image Search Application with Weaviate]( - [Cohere Multilingual ML Models with Weaviate]( - [Building Multimodal AI in TypeScript]( - [Giving Auto-GPT Long-Term Memory with Weaviate]( ### Podcasts - [Neural Magic in Weaviate]( - [BERTopic]( - [Jina AI's Neural Search Framework]( ### Other reading - [Weaviate is an open-source search engine powered by ML, vectors, graphs, and GraphQL (ZDNet)]( - [Weaviate, an ANN Database with CRUD support (DB-Engines.com)]( - [A sub-50ms neural search with DistilBERT and Weaviate (Towards Datascience)]( - [Getting Started with Weaviate Python Library (Towards Datascience)]( ## Join our community! At Weaviate, we love to connect with our community. We love helping amazing people build cool things. And, we love to talk with you about you passion for vector databases and AI. Please reach out, and join our community: - [Community forum]( - [GitHub]( - [Slack]( - [X (Twitter)]( To keep up to date with new releases, meetup news, and more, subscribe to our [newsletter](","670, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, bug, backlog, feature request, autoclosed, Module System, API design & UX, DX, Bad UX, good-first-issue, enhancement, 💎 Bounty, 🙋 Bounty claim, Technical Debt, Developer Experience, planned-1.26, planned-1.21, planned-1.19, graphql, Proposal, type-epic, planned-1.20, needs-investigation, Filtering / Sorting / Aggregation, sre, reliability, planned-1.27, planned-1.25, planned-1.23, planned-1.22, pinned"
awesome-go,avelino/awesome-go,122519,['Go'],"['golang', 'golang-library', 'go', 'awesome', 'awesome-list']","# Awesome Go []( []( []( []( []( We use the _[Golang Bridge]( community Slack for instant communication, follow the [form here to join]( **Sponsorships:** _Special thanks to_ Your app, enterprise-ready. Start selling to enterprise customers with just a few lines of code. Add Single Sign-On (and more) in minutes instead of months. An open, source-available software licensing and distribution API. Securely license and distribute Go applications with a single API. Add auto updates with only a few lines of code. **Awesome Go has no monthly fee**_, but we have employees who **work hard** to keep it running. With money raised, we can repay the effort of each person involved! You can see how we calculate our billing and distribution as it is open to the entire community. Want to be a supporter of the project click [here](mailto:avelinorun+oss@gmail.com?subject=awesome-go%3A%20project%20support)._ > A curated list of awesome Go frameworks, libraries, and software. Inspired by [awesome-python]( **Contributing:** Please take a quick gander at the [contribution guidelines]( first. Thanks to all [contributors]( you rock! > _If you see a package or project here that is no longer maintained or is not a good fit, please submit a pull request to improve this file. Thank you!_ ## Contents - [Awesome Go](#awesome-go) - [Contents](#contents) - [Artificial Intelligence](#artificial-intelligence) - [Audio and Music](#audio-and-music) - [Authentication and OAuth](#authentication-and-oauth) - [Blockchain](#blockchain) - [Bot Building](#bot-building) - [Build Automation](#build-automation) - [Command Line](#command-line) - [Advanced Console UIs](#advanced-console-uis) - [Standard CLI](#standard-cli) - [Configuration](#configuration) - [Continuous Integration](#continuous-integration) - [CSS Preprocessors](#css-preprocessors) - [Data Structures and Algorithms](#data-structures-and-algorithms) - [Bit-packing and Compression](#bit-packing-and-compression) - [Bit Sets](#bit-sets) - [Bloom and Cuckoo Filters](#bloom-and-cuckoo-filters) - [Data Structure and Algorithm Collections](#data-structure-and-algorithm-collections) - [Iterators](#iterators) - [Maps](#maps) - [Miscellaneous Data Structures and Algorithms](#miscellaneous-data-structures-and-algorithms) - [Nullable Types](#nullable-types) - [Queues](#queues) - [Sets](#sets) - [Text Analysis](#text-analysis) - [Trees](#trees) - [Pipes](#pipes) - [Database](#database) - [Caches](#caches) - [Databases Implemented in Go](#databases-implemented-in-go) - [Database Schema Migration](#database-schema-migration) - [Database Tools](#database-tools) - [SQL Query Builders](#sql-query-builders) - [Database Drivers](#database-drivers) - [Interfaces to Multiple Backends](#interfaces-to-multiple-backends) - [Relational Database Drivers](#relational-database-drivers) - [NoSQL Database Drivers](#nosql-database-drivers) - [Search and Analytic Databases](#search-and-analytic-databases) - [Date and Time](#date-and-time) - [Distributed Systems](#distributed-systems) - [Dynamic DNS](#dynamic-dns) - [Email](#email) - [Embeddable Scripting Languages](#embeddable-scripting-languages) - [Error Handling](#error-handling) - [File Handling](#file-handling) - [Financial](#financial) - [Forms](#forms) - [Functional](#functional) - [Game Development](#game-development) - [Generators](#generators) - [Geographic](#geographic) - [Go Compilers](#go-compilers) - [Goroutines](#goroutines) - [GUI](#gui) - [Hardware](#hardware) - [Images](#images) - [IoT (Internet of Things)](#iot-internet-of-things) - [Job Scheduler](#job-scheduler) - [JSON](#json) - [Logging](#logging) - [Machine Learning](#machine-learning) - [Messaging](#messaging) - [Microsoft Office](#microsoft-office) - [Microsoft Excel](#microsoft-excel) - [Miscellaneous](#miscellaneous) - [Dependency Injection](#dependency-injection) - [Project Layout](#project-layout) - [Strings](#strings) - [Uncategorized](#uncategorized) - [Natural Language Processing](#natural-language-processing) - [Language Detection](#language-detection) - [Morphological Analyzers](#morphological-analyzers) - [Slugifiers](#slugifiers) - [Tokenizers](#tokenizers) - [Translation](#translation) - [Transliteration](#transliteration) - [Networking](#networking) - [HTTP Clients](# - [OpenGL](#opengl) - [ORM](#orm) - [Package Management](#package-management) - [Performance](#performance) - [Query Language](#query-language) - [Resource Embedding](#resource-embedding) - [Science and Data Analysis](#science-and-data-analysis) - [Security](#security) - [Serialization](#serialization) - [Server Applications](#server-applications) - [Stream Processing](#stream-processing) - [Template Engines](#template-engines) - [Testing](#testing) - [Testing Frameworks](#testing-frameworks) - [Mock](#mock) - [Fuzzing and delta-debugging/reducing/shrinking](#fuzzing-and-delta-debuggingreducingshrinking) - [Selenium and browser control tools](#selenium-and-browser-control-tools) - [Fail injection](#fail-injection) - [Text Processing](#text-processing) - [Formatters](#formatters) - [Markup Languages](#markup-languages) - [Parsers/Encoders/Decoders](#parsersencodersdecoders) - [Regular Expressions](#regular-expressions) - [Sanitation](#sanitation) - [Scrapers](#scrapers) - [RSS](#rss) - [Utility/Miscellaneous](#utilitymiscellaneous) - [Third-party APIs](#third-party-apis) - [Utilities](#utilities) - [UUID](#uuid) - [Validation](#validation) - [Version Control](#version-control) - [Video](#video) - [Web Frameworks](#web-frameworks) - [Middlewares](#middlewares) - [Actual middlewares](#actual-middlewares) - [Libraries for creating HTTP middlewares](#libraries-for-creating- - [Routers](#routers) - [WebAssembly](#webassembly) - [Windows](#windows) - [XML](#xml) - [Zero Trust](#zero-trust) - [Code Analysis](#code-analysis) - [Editor Plugins](#editor-plugins) - [Go Generate Tools](#go-generate-tools) - [Go Tools](#go-tools) - [Software Packages](#software-packages) - [DevOps Tools](#devops-tools) - [Other Software](#other-software) - [Resources](#resources) - [Benchmarks](#benchmarks) - [Conferences](#conferences) - [E-Books](#e-books) - [E-books for purchase](#e-books-for-purchase) - [Free e-books](#free-e-books) - [Gophers](#gophers) - [Meetups](#meetups) - [Style Guides](#style-guides) - [Social Media](#social-media) - [Twitter](#twitter) - [Reddit](#reddit) - [Websites](#websites) - [Tutorials](#tutorials) - [Guided Learning](#guided-learning) **[ back to top](#contents)** ## Artificial Intelligence _Libraries for building programs that leverage AI._ - [langchaingo]( - LangChainGo is a framework for developing applications powered by language models. - [LocalAI]( - Open Source OpenAI alternative, self-host AI models. - [Ollama]( - Run large language models locally. **[ back to top](#contents)** ## Audio and Music _Libraries for manipulating audio._ - [flac]( - Native Go FLAC encoder/decoder with support for FLAC streams. - [gaad]( - Native Go AAC bitstream parser. - [GoAudio]( - Native Go Audio Processing Library. - [gosamplerate]( - libsamplerate bindings for go. - [id3v2]( - ID3 decoding and encoding library for Go. - [malgo]( - Mini audio library. - [minimp3]( - Lightweight MP3 decoder library. - [Oto]( - A low-level library to play sound on multiple platforms. - [PortAudio]( - Go bindings for the PortAudio audio I/O library. **[ back to top](#contents)** ## Authentication and OAuth _Libraries for implementing authentication schemes._ - [authboss]( - Modular authentication system for the web. It tries to remove as much boilerplate and ""hard things"" as possible so that each time you start a new web project in Go, you can plug it in, configure it, and start building your app without having to build an authentication system each time. - [branca]( - branca token [specification implementation]( for Golang 1.15+. - [casbin]( - Authorization library that supports access control models like ACL, RBAC, and ABAC. - [cookiestxt]( - provides a parser of cookies.txt file format. - [go-guardian]( - Go-Guardian is a golang library that provides a simple, clean, and idiomatic way to create powerful modern API and web authentication that supports LDAP, Basic, Bearer token, and Certificate based authentication. - [go-jose]( - Fairly complete implementation of the JOSE working group's JSON Web Token, JSON Web Signatures, and JSON Web Encryption specs. - [gologin]( - chainable handlers for login with OAuth1 and OAuth2 authentication providers. - [gorbac]( - provides a lightweight role-based access control (RBAC) implementation in Golang. - [gosession]( - This is quick session for net/http in GoLang. This package is perhaps the best implementation of the session mechanism, or at least it tries to become one. - [goth]( - provides a simple, clean, and idiomatic way to use OAuth and OAuth2. Handles multiple providers out of the box. - [jeff]( - Simple, flexible, secure, and idiomatic web session management with pluggable backends. - [jwt]( - Lightweight JSON Web Token (JWT) library. - [jwt]( - Safe, simple, and fast JSON Web Tokens for Go. - [jwt-auth]( - JWT middleware for Golang http servers with many configuration options. - [jwt-go]( - A full featured implementation of JSON Web Tokens (JWT). This library supports the parsing and verification as well as the generation and signing of JWTs. - [keto]( - Open Source (Go) implementation of ""Zanzibar: Google's Consistent, Global Authorization System"". Ships gRPC, REST APIs, newSQL, and an easy and granular permission language. Supports ACL, RBAC, and other access models. - [loginsrv]( - JWT login microservice with pluggable backends such as OAuth2 (Github), htpasswd, osiam. - [oauth2]( - Successor of goauth2. Generic OAuth 2.0 package that comes with JWT, Google APIs, Compute Engine, and App Engine support. - [oidc]( - Easy to use OpenID Connect client and server library written for Go and certified by the OpenID Foundation - [openfga]( - Implementation of fine-grained authorization based on the ""Z... [TRUNCATED]","11.6k, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, pending-submitter-response, quality standard, awesome-go.com, stale, need coverage, needs links, need readme english, missed, help wanted, good-first-issue, suggestion, spam, removal, readme content, question, pending-review, overdue, off-topic, not-in-a-right-category, not alphabetical, new-package, new feature, needs tests, needs docs, markdown format, just one package, hacktoberfest-accepted, go, duplicate, done"
volcano,volcano-sh/volcano,3824,"['Go', 'Shell', 'Makefile']","['batch-systems', 'kubernetes', 'golang', 'hpc', 'bigdata']","------- []( []( []( []( []( []( [Volcano]( is a batch system built on Kubernetes. It provides a suite of mechanisms that are commonly required by many classes of batch & elastic workload including: machine learning/deep learning, bioinformatics/genomics and other ""big data"" applications. These types of applications typically run on generalized domain frameworks like TensorFlow, Spark, Ray, PyTorch, MPI, etc, which Volcano integrates with. Volcano builds upon a decade and a half of experience running a wide variety of high performance workloads at scale using several systems and platforms, combined with best-of-breed ideas and practices from the open source community. Until June 2021, Volcano has been widely used around the world at a variety of industries such as Internet/Cloud/Finance/ Manufacturing/Medical. More than 20 companies or institutions are not only end users but also active contributors. Hundreds of contributors are taking active part in the code commit/PR review/issue discussion/docs update and design provision. We are looking forward to your participation. **NOTE**: the scheduler is built based on [kube-batch]( refer to [#241]( and [#288]( for more detail. Volcano is an incubating project of the [Cloud Native Computing Foundation]( (CNCF). Please consider joining the CNCF if you are an organization that wants to take an active role in supporting the growth and evolution of the cloud native ecosystem. ## Overall Architecture ## Talks - [Intro: Kubernetes Batch Scheduling @ KubeCon 2019 EU]( - [Volcano Kubernetes @ ArchSummit 2019]( - [Volcano @ Huawei Connection 2019]( - [Improving Performance of Deep Learning Workloads With Volcano @ KubeCon 2019 NA]( - [Batch Capability of Kubernetes Intro @ KubeCon 2019 NA]( - [Intro: Kubernetes Batch Scheduling @ KubeCon 2019 EU]( ## Ecosystem - [spark-operator]( - [kubeflow/tf-operator]( - [kubeflow/arena]( - [Horovod/MPI]( - [paddlepaddle]( - [cromwell]( - [KubeRay]( ## Quick Start Guide ### Prerequisites - Kubernetes 1.12+ with CRD support You can try Volcano by one of the following two ways. Note: * For Kubernetes v1.17+ use CRDs under config/crd/bases (recommended) * For Kubernetes versions < v1.16 use CRDs under config/crd/v1beta1 (deprecated) ### Install with YAML files Install Volcano on an existing Kubernetes cluster. This way is both available for x86_64 and arm64 architecture. ``` kubectl apply -f ``` Enjoy! Volcano will create the following resources in `volcano-system` namespace. ``` NAME READY STATUS RESTARTS AGE pod/volcano-admission-5bd5756f79-dnr4l 1/1 Running 0 96s pod/volcano-admission-init-4hjpx 0/1 Completed 0 96s pod/volcano-controllers-687948d9c8-nw4b4 1/1 Running 0 96s pod/volcano-scheduler-94998fc64-4z8kh 1/1 Running 0 96s NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE service/volcano-admission-service ClusterIP 10.98.152.108 443/TCP 96s NAME READY UP-TO-DATE AVAILABLE AGE deployment.apps/volcano-admission 1/1 1 1 96s deployment.apps/volcano-controllers 1/1 1 1 96s deployment.apps/volcano-scheduler 1/1 1 1 96s NAME DESIRED CURRENT READY AGE replicaset.apps/volcano-admission-5bd5756f79 1 1 1 96s replicaset.apps/volcano-controllers-687948d9c8 1 1 1 96s replicaset.apps/volcano-scheduler-94998fc64 1 1 1 96s NAME COMPLETIONS DURATION AGE job.batch/volcano-admission-init 1/1 48s 96s ``` ### Install via helm To install official release, please visit to [helm-charts]( for details. ```bash helm repo add volcano-sh helm install volcano volcano-sh/volcano -n volcano-system --create-namespace ``` Install from source code for developers: ```bash helm install volcano installer/helm/chart/volcano --namespace volcano-system --create-namespace # list helm release helm list -n volcano-system ``` ### Install from code If you don't have a kubernetes cluster, try one-click install from code base: ```bash ./hack/local-up-volcano.sh ``` This way is only available for x86_64 temporarily. ### Install monitoring system If you want to get prometheus and grafana volcano dashboard after volcano installed, try following commands: ```bash make TAG=latest generate-yaml kubectl create -f _output/release/volcano-monitoring-latest.yaml ``` ## Kubernetes compatibility | | Kubernetes 1.17 | Kubernetes 1.18 | Kubernetes 1.19 | Kubernetes 1.20 | Kubernetes 1.21 | Kubernetes 1.22 | Kubernetes 1.23 | Kubernetes 1.24 | Kubernetes 1.25 | Kubernetes 1.26 | Kubernetes 1.27 | Kubernetes 1.28 | Kubernetes 1.29 | |------------------------|-----------------|-----------------|-----------------|-----------------|-----------------|-----------------|-----------------|-----------------|-----------------|-----------------|-----------------|-----------------|-----------------| | Volcano v1.6 | | | | | | | | - | - | - | - | - | - | | Volcano v1.7 | - | - | | | | | | | | | | | - | | Volcano v1.8 | - | - | | | | | | | | | | | - | | Volcano HEAD (master) | - | - | - | - | | | | | | | | | | Key: * `` Volcano and the Kubernetes version are exactly compatible. * `+` Volcano has features or API objects that may not be present in the Kubernetes version. * `-` The Kubernetes version has features or API objects that Volcano can't use. ## Meeting Community weekly meeting for Asia: 15:00 - 16:00 (UTC+8) Friday. ([Convert to your timezone.]( Community biweekly meeting for America: 08:30 - 09:30 (UTC-8) Thursday. ([Convert to your timezone.]( Community meeting for Europe is ongoing on demand now. If you have some ideas or topics to discuss, please leave message in the [slack]( Maintainers will contact with you and book an open meeting for that. Resources: - [Meeting notes and agenda]( - [Meeting link]( - [Meeting Calendar]( | [Subscribe]( ## Contact If you have any question, feel free to reach out to us in the following ways: [Volcano Slack Channel]( | [Join]( [Mailing List]( Wechat: Add WeChat account `k8s2222` (2) to let her pull you into the group.","881, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, kind/bug, kind/feature, lifecycle/stale, needs-rebase, size/L, size/M, help wanted, good first issue, size/S, lgtm, ok-to-test, size/XS, size/XL, retest-not-required-docs-only, priority/important-soon, dependencies, size/XXL, kind/cleanup, do-not-merge/hold, area/scheduling, area/controllers, priority/important-longterm, do-not-merge/work-in-progress, approved, weekly meeting topic, v1.4, v1.3.0, v1.2.0, v1.1.1, tide/merge-method-squash"
juicefs,juicedata/juicefs,9902,"['Go', 'Java', 'Shell']","['filesystem', 'cloud-native', 'golang', 'redis', 'distributed-systems']","**JuiceFS** is a high-performance [POSIX]( file system released under Apache License 2.0, particularly designed for the cloud-native environment. The data, stored via JuiceFS, will be persisted in Object Storage _(e.g. Amazon S3)_, and the corresponding metadata can be persisted in various compatible database engines such as Redis, MySQL, and TiKV based on the scenarios and requirements. With JuiceFS, massive cloud storage can be directly connected to big data, machine learning, artificial intelligence, and various application platforms in production environments. Without modifying code, the massive cloud storage can be used as efficiently as local storage. **Document**: [Quick Start Guide]( ## Highlighted Features 1. **Fully POSIX-compatible**: Use as a local file system, seamlessly docking with existing applications without breaking business workflow. 2. **Fully Hadoop-compatible**: JuiceFS' [Hadoop Java SDK]( is compatible with Hadoop 2.x and Hadoop 3.x as well as a variety of components in the Hadoop ecosystems. 3. **S3-compatible**: JuiceFS' [S3 Gateway]( provides an S3-compatible interface. 4. **Cloud Native**: A [Kubernetes CSI Driver]( is provided for easily using JuiceFS in Kubernetes. 5. **Shareable**: JuiceFS is a shared file storage that can be read and written by thousands of clients. 6. **Strong Consistency**: The confirmed modification will be immediately visible on all the servers mounted with the same file system. 7. **Outstanding Performance**: The latency can be as low as a few milliseconds, and the throughput can be expanded nearly unlimitedly _(depending on the size of the Object Storage)_. [Test results]( 8. **Data Encryption**: Supports data encryption in transit and at rest (please refer to [the guide]( for more information). 9. **Global File Locks**: JuiceFS supports both BSD locks (flock) and POSIX record locks (fcntl). 10. **Data Compression**: JuiceFS supports [LZ4]( or [Zstandard]( to compress all your data. --- [Architecture](#architecture) | [Getting Started](#getting-started) | [Advanced Topics](#advanced-topics) | [POSIX Compatibility](#posix-compatibility) | [Performance Benchmark](#performance-benchmark) | [Supported Object Storage](#supported-object-storage) | [Who is using](#who-is-using) | [Roadmap](#roadmap) | [Reporting Issues](#reporting-issues) | [Contributing](#contributing) | [Community](#community) | [Usage Tracking](#usage-tracking) | [License](#license) | [Credits](#credits) | [FAQ](#faq) --- ## Architecture JuiceFS consists of three parts: 1. **JuiceFS Client**: Coordinates Object Storage and metadata storage engine as well as implementation of file system interfaces such as POSIX, Hadoop, Kubernetes, and S3 gateway. 2. **Data Storage**: Stores data, with supports of a variety of data storage media, e.g., local disk, public or private cloud Object Storage, and HDFS. 3. **Metadata Engine**: Stores the corresponding metadata that contains information of file name, file size, permission group, creation and modification time and directory structure, etc., with supports of different metadata engines, e.g., Redis, MySQL, SQLite and TiKV. JuiceFS can store the metadata of file system on different metadata engines, like Redis, which is a fast, open-source, in-memory key-value data storage, particularly suitable for storing metadata; meanwhile, all the data will be stored in Object Storage through JuiceFS client. [Learn more]( Each file stored in JuiceFS is split into **""Chunk""** s at a fixed size with the default upper limit of 64 MiB. Each Chunk is composed of one or more **""Slice""**(s), and the length of the slice varies depending on how the file is written. Each slice is composed of size-fixed **""Block""** s, which are 4 MiB by default. These blocks will be stored in Object Storage in the end; at the same time, the metadata information of the file and its Chunks, Slices, and Blocks will be stored in metadata engines via JuiceFS. [Learn more]( When using JuiceFS, files will eventually be split into Chunks, Slices and Blocks and stored in Object Storage. Therefore, the source files stored in JuiceFS cannot be found in the file browser of the Object Storage platform; instead, there are only a chunks directory and a bunch of digitally numbered directories and files in the bucket. Don't panic! This is just the secret of the high-performance operation of JuiceFS! ## Getting Started Before you begin, make sure you have: 1. One supported metadata engine, see [How to Set Up Metadata Engine]( 2. One supported Object Storage for storing data blocks, see [Supported Object Storage]( 3. [JuiceFS Client]( downloaded and installed Please refer to [Quick Start Guide]( to start using JuiceFS right away! ### Command Reference Check out all the command line options in [command reference]( ### Containers JuiceFS can be used as a persistent volume for Docker and Podman, please check [here]( for details. ### Kubernetes It is also very easy to use JuiceFS on Kubernetes. Please find more information [here]( ### Hadoop Java SDK If you wanna use JuiceFS in Hadoop, check [Hadoop Java SDK]( ## Advanced Topics - [Redis Best Practices]( - [How to Setup Object Storage]( - [Cache]( - [Fault Diagnosis and Analysis]( - [FUSE Mount Options]( - [Using JuiceFS on Windows]( - [S3 Gateway]( Please refer to [JuiceFS Document Center]( for more information. ## POSIX Compatibility JuiceFS has passed all of the compatibility tests (8813 in total) in the latest [pjdfstest]( . ``` All tests successful. Test Summary Report ------------------- /root/soft/pjdfstest/tests/chown/00.t (Wstat: 0 Tests: 1323 Failed: 0) TODO passed: 693, 697, 708-709, 714-715, 729, 733 Files=235, Tests=8813, 233 wallclock secs ( 2.77 usr 0.38 sys + 2.57 cusr 3.93 csys = 9.65 CPU) Result: PASS ``` Aside from the POSIX features covered by pjdfstest, JuiceFS also provides: - **Close-to-open consistency**. Once a file is written _and_ closed, it is guaranteed to view the written data in the following opens and reads from any client. Within the same mount point, all the written data can be read immediately. - Rename and all other metadata operations are atomic, which are guaranteed by supported metadada engine transaction. - Opened files remain accessible after unlink from same mount point. - Mmap (tested with FSx). - Fallocate with punch hole support. - Extended attributes (xattr). - BSD locks (flock). - POSIX record locks (fcntl). ## Performance Benchmark ### Basic benchmark JuiceFS provides a subcommand that can run a few basic benchmarks to help you understand how it works in your environment: ### Throughput A sequential read/write benchmark has also been performed on JuiceFS, [EFS]( and [S3FS]( by [fio]( Above result figure shows that JuiceFS can provide 10X more throughput than the other two (see [more details]( ### Metadata IOPS A simple mdtest benchmark has been performed on JuiceFS, [EFS]( and [S3FS]( by [mdtest]( The result shows that JuiceFS can provide significantly more metadata IOPS than the other two (see [more details]( ### Analyze performance See [Real-Time Performance Monitoring]( if you encountered performance issues. ## Supported Object Storage - Amazon S3 _(and other S3 compatible Object Storage services)_ - Google Cloud Storage - Azure Blob Storage - Alibaba Cloud Object Storage Service (OSS) - Tencent Cloud Object Storage (COS) - Qiniu Cloud Object Storage (Kodo) - QingStor Object Storage - Ceph RGW - MinIO - Local disk - Redis - ... JuiceFS supports numerous Object Storage services. [Learn more]( ## Who is using JuiceFS is production ready and used by thousands of machines in production. A list of users has been assembled and documented [here]( In addition JuiceFS has several collaborative projects that integrate with other open source projects, which we have documented [here]( If you are also using JuiceFS, please feel free to let us know, and you are welcome to share your specific experience with everyone. The storage format is stable, and will be supported by all future releases. ## Roadmap - User and group quotas - Snapshots - Write once read many (WORM) ## Reporting Issues We use [GitHub Issues]( to track community reported issues. You can also [contact](#community) the community for any questions. ## Contributing Thank you for your contribution! Please refer to the [JuiceFS Contributing Guide]( for more information. ## Community Welcome to join the [Discussions]( and the [Slack channel]( to connect with JuiceFS team members and other users. ## Usage Tracking JuiceFS collects **anonymous** usage data by default to help us better understand how the community is using JuiceFS. Only core metrics (e.g. version number) will be reported, and user data and any other sensitive data will not be included. The related code can be viewed [here](pkg/usage/usage.go). You could also disable reporting easily by command line option `--no-usage-report`: ```bash juicefs mount --no-usage-report ``` ## License JuiceFS is open-sourced under Apache License 2.0, see [LICENSE](LICENSE). ## Credits The design of JuiceFS was inspired by [Google File System]( [HDFS]( and [MooseFS]( Thanks for their great work! ## FAQ ### Why doesn't JuiceFS support XXX Object Storage? JuiceFS supports many Object Storage services. Please check out [this list]( first. If the Object Storage you want to use is compatible with S3, you could treat it as S3. Otherwise, try reporting any issue. ### Can I use Redis Cluster as metadata engine? Yes. Since [v1.0.0 Beta3]( JuiceFS supports the use of [Redis Cluster]( as the metadata engine, but it should be noted that Redis Cluster requires that the keys of all operations in a transaction must be in the same hash slot, so a JuiceFS file system can only use one hash slot. See [""Redis Best Practices""]( for more information. ### What's the difference between JuiceFS and XXX? See [""Comparison with Others""]( for more information. For more FAQs, please see the [full list]( ## Stargazers over time [](","877, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, kind/feature, priority/low, kind/enhancement, kind/question, area/ci, need-more-info, kind/bug, kind/documentation, area/code-quality, area/performance, area/metadata, waiting, priority/wishlist, priority/normal, priority/high, pending, kind/help-wanted, kind/good-first-issue, kind/benchmark, javascript, java, go, dependencies, backport-1.2, backport-1.1, backport-1.0, area/tool, area/third-party, area/sdk, area/object-storage"
node_exporter,prometheus/node_exporter,10432,"['Go', 'Shell', 'C']","['prometheus-exporter', 'prometheus', 'node-metrics', 'machine-metrics', 'host-metrics']","# Node exporter [][circleci] []( [][quay] [][hub] [][goreportcard] Prometheus exporter for hardware and OS metrics exposed by \*NIX kernels, written in Go with pluggable metric collectors. The [Windows exporter]( is recommended for Windows users. To expose NVIDIA GPU metrics, [prometheus-dcgm ]( can be used. ## Installation and Usage If you are new to Prometheus and `node_exporter` there is a [simple step-by-step guide]( The `node_exporter` listens on HTTP port 9100 by default. See the `--help` output for more options. ### Ansible For automated installs with [Ansible]( there is the [Prometheus Community role]( ### Docker The `node_exporter` is designed to monitor the host system. Deploying in containers requires extra care in order to avoid monitoring the container itself. For situations where containerized deployment is needed, some extra flags must be used to allow the `node_exporter` access to the host namespaces. Be aware that any non-root mount points you want to monitor will need to be bind-mounted into the container. If you start container for host monitoring, specify `path.rootfs` argument. This argument must match path in bind-mount of host root. The node\_exporter will use `path.rootfs` as prefix to access host filesystem. ```bash docker run -d \ --net=""host"" \ --pid=""host"" \ -v ""/:/host:ro,rslave"" \ quay.io/prometheus/node-exporter:latest \ --path.rootfs=/host ``` For Docker compose, similar flag changes are needed. ```yaml --- version: '3.8' services: node_exporter: image: quay.io/prometheus/node-exporter:latest container_name: node_exporter command: - '--path.rootfs=/host' network_mode: host pid: host restart: unless-stopped volumes: - '/:/host:ro,rslave' ``` On some systems, the `timex` collector requires an additional Docker flag, `--cap-add=SYS_TIME`, in order to access the required syscalls. ## Collectors There is varying support for collectors on each operating system. The tables below list all existing collectors and the supported systems. Collectors are enabled by providing a `--collector.` flag. Collectors that are enabled by default can be disabled by providing a `--no-collector.` flag. To enable only some specific collector(s), use `--collector.disable-defaults --collector. ...`. ### Include & Exclude flags A few collectors can be configured to include or exclude certain patterns using dedicated flags. The exclude flags are used to indicate ""all except"", while the include flags are used to say ""none except"". Note that these flags are mutually exclusive on collectors that support both. Example: ```txt --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/) ``` List: Collector | Scope | Include Flag | Exclude Flag --- | --- | --- | --- arp | device | --collector.arp.device-include | --collector.arp.device-exclude cpu | bugs | --collector.cpu.info.bugs-include | N/A cpu | flags | --collector.cpu.info.flags-include | N/A diskstats | device | --collector.diskstats.device-include | --collector.diskstats.device-exclude ethtool | device | --collector.ethtool.device-include | --collector.ethtool.device-exclude ethtool | metrics | --collector.ethtool.metrics-include | N/A filesystem | fs-types | N/A | --collector.filesystem.fs-types-exclude filesystem | mount-points | N/A | --collector.filesystem.mount-points-exclude hwmon | chip | --collector.hwmon.chip-include | --collector.hwmon.chip-exclude netdev | device | --collector.netdev.device-include | --collector.netdev.device-exclude qdisk | device | --collector.qdisk.device-include | --collector.qdisk.device-exclude sysctl | all | --collector.sysctl.include | N/A systemd | unit | --collector.systemd.unit-include | --collector.systemd.unit-exclude ### Enabled by default Name | Description | OS ---------|-------------|---- arp | Exposes ARP statistics from `/proc/net/arp`. | Linux bcache | Exposes bcache statistics from `/sys/fs/bcache/`. | Linux bonding | Exposes the number of configured and active slaves of Linux bonding interfaces. | Linux btrfs | Exposes btrfs statistics | Linux boottime | Exposes system boot time derived from the `kern.boottime` sysctl. | Darwin, Dragonfly, FreeBSD, NetBSD, OpenBSD, Solaris conntrack | Shows conntrack statistics (does nothing if no `/proc/sys/net/netfilter/` present). | Linux cpu | Exposes CPU statistics | Darwin, Dragonfly, FreeBSD, Linux, Solaris, OpenBSD cpufreq | Exposes CPU frequency statistics | Linux, Solaris diskstats | Exposes disk I/O statistics. | Darwin, Linux, OpenBSD dmi | Expose Desktop Management Interface (DMI) info from `/sys/class/dmi/id/` | Linux edac | Exposes error detection and correction statistics. | Linux entropy | Exposes available entropy. | Linux exec | Exposes execution statistics. | Dragonfly, FreeBSD fibrechannel | Exposes fibre channel information and statistics from `/sys/class/fc_host/`. | Linux filefd | Exposes file descriptor statistics from `/proc/sys/fs/file-nr`. | Linux filesystem | Exposes filesystem statistics, such as disk space used. | Darwin, Dragonfly, FreeBSD, Linux, OpenBSD hwmon | Expose hardware monitoring and sensor data from `/sys/class/hwmon/`. | Linux infiniband | Exposes network statistics specific to InfiniBand and Intel OmniPath configurations. | Linux ipvs | Exposes IPVS status from `/proc/net/ip_vs` and stats from `/proc/net/ip_vs_stats`. | Linux loadavg | Exposes load average. | Darwin, Dragonfly, FreeBSD, Linux, NetBSD, OpenBSD, Solaris mdadm | Exposes statistics about devices in `/proc/mdstat` (does nothing if no `/proc/mdstat` present). | Linux meminfo | Exposes memory statistics. | Darwin, Dragonfly, FreeBSD, Linux, OpenBSD netclass | Exposes network interface info from `/sys/class/net/` | Linux netdev | Exposes network interface statistics such as bytes transferred. | Darwin, Dragonfly, FreeBSD, Linux, OpenBSD netisr | Exposes netisr statistics | FreeBSD netstat | Exposes network statistics from `/proc/net/netstat`. This is the same information as `netstat -s`. | Linux nfs | Exposes NFS client statistics from `/proc/net/rpc/nfs`. This is the same information as `nfsstat -c`. | Linux nfsd | Exposes NFS kernel server statistics from `/proc/net/rpc/nfsd`. This is the same information as `nfsstat -s`. | Linux nvme | Exposes NVMe info from `/sys/class/nvme/` | Linux os | Expose OS release info from `/etc/os-release` or `/usr/lib/os-release` | _any_ powersupplyclass | Exposes Power Supply statistics from `/sys/class/power_supply` | Linux pressure | Exposes pressure stall statistics from `/proc/pressure/`. | Linux (kernel 4.20+ and/or [CONFIG\_PSI]( rapl | Exposes various statistics from `/sys/class/powercap`. | Linux schedstat | Exposes task scheduler statistics from `/proc/schedstat`. | Linux selinux | Exposes SELinux statistics. | Linux sockstat | Exposes various statistics from `/proc/net/sockstat`. | Linux softnet | Exposes statistics from `/proc/net/softnet_stat`. | Linux stat | Exposes various statistics from `/proc/stat`. This includes boot time, forks and interrupts. | Linux tapestats | Exposes statistics from `/sys/class/scsi_tape`. | Linux textfile | Exposes statistics read from local disk. The `--collector.textfile.directory` flag must be set. | _any_ thermal | Exposes thermal statistics like `pmset -g therm`. | Darwin thermal\_zone | Exposes thermal zone & cooling device statistics from `/sys/class/thermal`. | Linux time | Exposes the current system time. | _any_ timex | Exposes selected adjtimex(2) system call stats. | Linux udp_queues | Exposes UDP total lengths of the rx_queue and tx_queue from `/proc/net/udp` and `/proc/net/udp6`. | Linux uname | Exposes system information as provided by the uname system call. | Darwin, FreeBSD, Linux, OpenBSD vmstat | Exposes statistics from `/proc/vmstat`. | Linux watchdog | Exposes statistics from `/sys/class/watchdog` | Linux xfs | Exposes XFS runtime statistics. | Linux (kernel 4.4+) zfs | Exposes [ZFS]( performance statistics. | FreeBSD, [Linux]( Solaris ### Disabled by default `node_exporter` also implements a number of collectors that are disabled by default. Reasons for this vary by collector, and may include: * High cardinality * Prolonged runtime that exceeds the Prometheus `scrape_interval` or `scrape_timeout` * Significant resource demands on the host You can enable additional collectors as desired by adding them to your init system's or service supervisor's startup configuration for `node_exporter` but caution is advised. Enable at most one at a time, testing first on a non-production system, then by hand on a single production node. When enabling additional collectors, you should carefully monitor the change by observing the ` scrape_duration_seconds` metric to ensure that collection completes and does not time out. In addition, monitor the `scrape_samples_post_metric_relabeling` metric to see the changes in cardinality. Name | Description | OS ---------|-------------|---- buddyinfo | Exposes statistics of memory fragments as reported by /proc/buddyinfo. | Linux cgroups | A summary of the number of active and enabled cgroups | Linux cpu\_vulnerabilities | Exposes CPU vulnerability information from sysfs. | Linux devstat | Exposes device statistics | Dragonfly, FreeBSD drm | Expose GPU metrics using sysfs / DRM, `amdgpu` is the only driver which exposes this information through DRM | Linux drbd | Exposes Distributed Replicated Block Device statistics (to version 8.4) | Linux ethtool | Exposes network interface information and network driver statistics equivalent to `ethtool`, `ethtool -S`, and `ethtool -i`. | Linux interrupts | Exposes detailed interrupts statistics. | Linux, OpenBSD ksmd | Exposes kernel and system statistics from `/sys/kernel/mm/ksm`. | Linux lnstat | Exposes stats from `/proc/net/stat/`. | Linux logind | Exposes session counts from [logind]( | Linux meminfo\_numa | Exposes memory statistics from `/sys/devices/system/node/node[0-9]*/meminfo`, `/sys/devices/system/node/node[0-9]*/numastat`. | Linux mountstats | Exposes filesyst... [TRUNCATED]","2.3k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, enhancement, accepted, help wanted, bug, platform/Linux, good first issue, pending/close, mixins, require/feedback, collector/systemd, test-infra, platform/FreeBSD, wontfix, question, platform/OpenBSD, platform/Dragonfly, platform/Darwin, platform/BSD, invalid, fixed, duplicate, dependencies"
milvus,milvus-io/milvus,27433,"['Go', 'Python', 'C++']","['anns', 'nearest-neighbor-search', 'faiss', 'vector-search', 'image-search']","## What is Milvus? Milvus is an open-source vector database built to power embedding similarity search and AI applications. Milvus makes unstructured data search more accessible, and provides a consistent user experience regardless of the deployment environment. Milvus 2.0 is a cloud-native vector database with storage and computation separated by design. All components in this refactored version of Milvus are stateless to enhance elasticity and flexibility. For more architecture details, see [Milvus Architecture Overview]( Milvus was released under the [open-source Apache License 2.0]( in October 2019. It is currently a graduate project under [LF AI & Data Foundation]( ## Key features Millisecond search on trillion vector datasets Average latency measured in milliseconds on trillion vector datasets. Simplified unstructured data management Rich APIs designed for data science workflows.Consistent user experience across laptop, local cluster, and cloud.Embed real-time search and analytics into virtually any application. Reliable, always on vector database Milvus built-in replication and failover/failback features ensure data and applications can maintain business continuity in the event of a disruption. Highly scalable and elastic Component-level scalability makes it possible to scale up and down on demand. Milvus can autoscale at a component level according to the load type, making resource scheduling much more efficient. Hybrid search In addition to vectors, Milvus supports data types such as Boolean, integers, floating-point numbers, and more. A collection in Milvus can hold multiple fields for accommodating different data features or properties. Milvus pairs scalar filtering with powerful vector similarity search to offer a modern, flexible platform for analyzing unstructured data. Check for examples and boolean expression rules. Unified Lambda structure Milvus combines stream and batch processing for data storage to balance timeliness and efficiency. Its unified interface makes vector similarity search a breeze. Community supported, industry recognized With over 1,000 enterprise users, 9,000+ stars on GitHub, and an active open-source community, youre not alone when you use Milvus. As a graduate project under the LF AI & Data Foundation, Milvus has institutional support. ## Quick start ### Start with Zilliz Cloud Zilliz Cloud is a fully managed service on cloud and the simplest way to deploy LF AI Milvus, See [Zilliz Cloud]( and start your [free trial]( ### Install Milvus - [Standalone Quick Start Guide]( - [Cluster Quick Start Guide]( - [Advanced Deployment]( ### Build Milvus from source code Check the requirements first. Linux systems (Ubuntu 20.04 or later recommended): ```bash go: >= 1.21 cmake: >= 3.26.4 gcc: 7.5 ``` MacOS systems with x86_64 (Big Sur 11.5 or later recommended): ```bash go: >= 1.21 cmake: >= 3.26.4 llvm: >= 15 ``` MacOS systems with Apple Silicon (Monterey 12.0.1 or later recommended): ```bash go: >= 1.21 (Arch=ARM64) cmake: >= 3.26.4 llvm: >= 15 ``` Clone Milvus repo and build. ```bash # Clone github repository. $ git clone # Install third-party dependencies. $ cd milvus/ $ ./scripts/install_deps.sh # Compile Milvus. $ make ``` For the full story, see [developer's documentation]( > **IMPORTANT** The master branch is for the development of Milvus v2.0. On March 9th, 2021, we released Milvus v1.0, the first stable version of Milvus with long-term support. To use Milvus v1.0, switch to [branch 1.0]( ## Milvus 2.0 vs. 1.x: Cloud-native, distributed architecture, highly scalable, and more See [Milvus 2.0 vs. 1.x]( for more information. ## Real world demos Image search Chatbots Chemical structure search #### Image Search Images made searchable. Instantaneously return the most similar images from a massive database. #### Chatbots Interactive digital customer service that saves users time and businesses money. #### Chemical Structure Search Blazing fast similarity search, substructure search, or superstructure search for a specified molecule. ## Bootcamps Milvus [bootcamp]( is designed to expose users to both the simplicity and depth of the vector database. Discover how to run benchmark tests as well as build similarity search applications spanning chatbots, recommendation systems, reverse image search, molecular search, and much more. ## Contributing Contributions to Milvus are welcome from everyone. See [Guidelines for Contributing]( for details on submitting patches and the contribution workflow. See our [community repository]( to learn about our governance and access more community resources. ### All contributors ## Documentation For guidance on installation, development, deployment, and administration, check out [Milvus Docs]( For technical milestones and enhancement proposals, check out [milvus confluence]( ### SDK The implemented SDK and its API documentation are listed below: - [PyMilvus SDK]( - [Java SDK]( - [Go SDK]( - [Cpp SDK]( development) - [Node SDK]( - [Rust SDK]( development) - [CSharp SDK]( development) ### Attu Attu provides an intuitive and efficient GUI for Milvus. - [Quick start]( ## Community Join the Milvus community on [Discord]( to share your suggestions, advice, and questions with our engineering team. You can also check out our [FAQ page]( to discover solutions or answers to your issues or questions. Subscribe to Milvus mailing lists: - [Technical Steering Committee]( - [Technical Discussions]( - [Announcement]( Follow Milvus on social media: - [Medium]( - [X]( - [Youtube]( ## Reference Reference to cite when you use Milvus in a research paper: ``` @inproceedings{2021milvus, title={Milvus: A Purpose-Built Vector Data Management System}, author={Wang, Jianguo and Yi, Xiaomeng and Guo, Rentong and Jin, Hai and Xu, Peng and Li, Shengjun and Wang, Xiangyu and Guo, Xiangzhou and Li, Chengming and Xu, Xiaohai and others}, booktitle={Proceedings of the 2021 International Conference on Management of Data}, pages={2614--2627}, year={2021} } @article{2022manu, title={Manu: a cloud native vector database management system}, author={Guo, Rentong and Luan, Xiaofan and Xiang, Long and Yan, Xiao and Yi, Xiaomeng and Luo, Jigao and Cheng, Qianya and Xu, Weizhi and Luo, Jiarui and Liu, Frank and others}, journal={Proceedings of the VLDB Endowment}, volume={15}, number={12}, pages={3548--3561}, year={2022}, publisher={VLDB Endowment} } ``` ## Acknowledgments Milvus adopts dependencies from the following: - Thanks to [FAISS]( for the excellent search library. - Thanks to [etcd]( for providing great open-source key-value store tools. - Thanks to [Pulsar]( for its wonderful distributed pub-sub messaging system. - Thanks to [Tantivy]( for its full-text search engine library written in Rust. - Thanks to [RocksDB]( for the powerful storage engines. Milvus is adopted by following opensource project: - [Towhee]( a flexible, application-oriented framework for computing embedding vectors over unstructured data. - [Haystack]( an open source NLP framework that leverages Transformer models - [Langchain]( Building applications with LLMs through composability - [LLamaIndex]( a data framework for your LLM applications - [GPTCache]( a library for creating semantic cache to store responses from LLM queries.","2.6k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, kind/bug, kind/feature, triage/accepted, kind/enhancement, dco-passed, test/benchmark, stale, triage/needs-information, ci-passed, 2.4-features, good first issue, size/XXL, priority/critical-urgent, size/XS, sig/testing, area/test, size/L, severity/critical, needs-triage, size/M, approved, help wanted, area/compilation, do-not-merge/missing-related-issue, test/integration, hacktoberfest, size/XL, do-not-merge/invalid-pr-format, do-not-merge/hold, area/dependency"
lazygit,jesseduffield/lazygit,46678,"['Go', 'Shell', 'Makefile']","['cli', 'git', 'terminal']","Special thanks to: Warp is a modern, Rust-based terminal with AI built in so you and your team can build great software, faster. Visitwarp.devto learn more. I (Jesse) co-founded Subble to save your company time and money by helping you manage its software subscriptions. Check it out! A simple terminal UI for git commands []( []( []( []( []( []( []( ## Sponsors Maintenance of this project is made possible by all the contributors and sponsors. If you'd like to sponsor this project and have your avatar or company logo appear below click here. ## Elevator Pitch Rant time: You've heard it before, git is _powerful_, but what good is that power when everything is so damn hard to do? Interactive rebasing requires you to edit a goddamn TODO file in your editor? _Are you kidding me?_ To stage part of a file you need to use a command line program to step through each hunk and if a hunk can't be split down any further but contains code you don't want to stage, you have to edit an arcane patch file _by hand_? _Are you KIDDING me?!_ Sometimes you get asked to stash your changes when switching branches only to realise that after you switch and unstash that there weren't even any conflicts and it would have been fine to just checkout the branch directly? _YOU HAVE GOT TO BE KIDDING ME!_ If you're a mere mortal like me and you're tired of hearing how powerful git is when in your daily life it's a powerful pain in your ass, lazygit might be for you. ## Table of contents - [Sponsors](#sponsors) - [Elevator Pitch](#elevator-pitch) - [Table of contents](#table-of-contents) - [Features](#features) - [Stage individual lines](#stage-individual-lines) - [Interactive Rebase](#interactive-rebase) - [Cherry-pick](#cherry-pick) - [Bisect](#bisect) - [Nuke the working tree](#nuke-the-working-tree) - [Amend an old commit](#amend-an-old-commit) - [Filter](#filter) - [Invoke a custom command](#invoke-a-custom-command) - [Worktrees](#worktrees) - [Rebase magic (custom patches)](#rebase-magic-custom-patches) - [Rebase from marked base commit](#rebase-from-marked-base-commit) - [Undo](#undo) - [Commit graph](#commit-graph) - [Compare two commits](#compare-two-commits) - [Tutorials](#tutorials) - [Installation](#installation) - [Binary Releases](#binary-releases) - [Homebrew](#homebrew) - [MacPorts](#macports) - [Void Linux](#void-linux) - [Scoop (Windows)](#scoop-windows) - [Arch Linux](#arch-linux) - [Fedora and RHEL](#fedora-and-rhel) - [Solus Linux](#solus-linux) - [Ubuntu](#ubuntu) - [Funtoo Linux](#funtoo-linux) - [Gentoo Linux](#gentoo-linux) - [FreeBSD](#freebsd) - [Termux](#termux) - [Conda](#conda) - [Go](#go) - [Chocolatey (Windows)](#chocolatey-windows) - [Winget (Windows 10 1709 or later)](#winget-windows-10-1709-or-later) - [Manual](#manual) - [Usage](#usage) - [Keybindings](#keybindings) - [Changing Directory On Exit](#changing-directory-on-exit) - [Undo/Redo](#undoredo) - [Configuration](#configuration) - [Custom Pagers](#custom-pagers) - [Custom Commands](#custom-commands) - [Git flow support](#git-flow-support) - [Contributing](#contributing) - [Debugging Locally](#debugging-locally) - [Donate](#donate) - [FAQ](#faq) - [What do the commit colors represent?](#what-do-the-commit-colors-represent) - [Shameless Plug](#shameless-plug) - [Alternatives](#alternatives) Lazygit is not my fulltime job but it is a hefty part time job so if you want to support the project please consider [sponsoring me]( ## Features ### Stage individual lines Press space on the selected line to stage it, or press `v` to start selecting a range of lines. You can also press `a` to select the entirety of the current hunk. ### Interactive Rebase Press `i` to start an interactive rebase. Then squash (`s`), fixup (`f`), drop (`d`), edit (`e`), move up (`ctrl+i`) or move down (`ctrl+j`) any of TODO commits, before continuing the rebase by bringing up the rebase options menu with `m` and then selecting `continue`. You can also perform any these actions as a once-off (e.g. pressing `s` on a commit to squash it) without explicitly starting a rebase. This demo also uses shift+down to select a range of commits to move and fixup. ### Cherry-pick Press `shift+c` on a commit to copy it and press `shift+v` to paste (cherry-pick) it. ### Bisect Press `b` in the commits view to mark a commit as good/bad in order to begin a git bisect. ### Nuke the working tree For when you really want to just get rid of anything that shows up when you run `git status` (and yes that includes dirty submodules) [kidpix style]( press `shift+d` to bring up the reset options menu and then select the 'nuke' option. ### Amend an old commit Pressing `shift+a` on any commit will amend that commit with the currently staged changes (running an interactive rebase in the background). ### Filter You can filter a view with `/`. Here we filter down our branches view and then hit `enter` to view its commits. ### Invoke a custom command Lazygit has a very flexible [custom command system](docs/Custom_Command_Keybindings.md). In this example a custom command is defined which emulates the built-in branch checkout action. ### Worktrees You can create worktrees to have multiple branches going at once without the need for stashing or creating WIP commits when switching between them. Press `w` in the branches view to create a worktree from the selected branch and switch to it. ### Rebase magic (custom patches) You can build a custom patch from an old commit and then remove the patch from the commit, split out a new commit, apply the patch in reverse to the index, and more. In this example we have a redundant comment that we want to remove from an old commit. We hit `` on the commit to view its files, then `` on a file to focus the patch, then `` to add the comment line to our custom patch, and then `ctrl+p` to view the custom patch options; selecting to remove the patch from the current commit. Learn more in the [Rebase magic Youtube tutorial]( ### Rebase from marked base commit Say you're on a feature branch that was itself branched off of the develop branch, and you've decided you'd rather be branching off the master branch. You need a way to rebase only the commits from your feature branch. In this demo we check to see which was the last commit on the develop branch, then press `shift+b` to mark that commit as our base commit, then press `r` on the master branch to rebase onto it, only bringing across the commits from our feature branch. Then we push our changes with `shift+p`. ### Undo You can undo the last action by pressing 'z' and redo with `ctrl+z`. Here we drop a couple of commits and then undo the actions. Undo uses the reflog which is specific to commits and branches so we can't undo changes to the working tree or stash. [More info](/docs/Undoing.md) ### Commit graph When viewing the commit graph in an enlarged window (use `+` and `_` to cycle window sizes), the commit graph is shown. Colours correspond to the commit authors, and as you navigate down the graph, the parent commits of the selected commit are highlighted. ### Compare two commits If you press `shift+w` on a commit (or branch/ref) a menu will open that allows you to mark that commit so that any other commit you select will be diffed against it. Once you've selected the second commit, you'll see the diff in the main view and if you press `` you'll see the files of the diff. You can press `shift+w` to view the diff menu again to see options like reversing the diff direction or exiting diff mode. You can also exit diff mode by pressing ``. ## Tutorials []( - [15 Lazygit Features in 15 Minutes]( - [Basics Tutorial]( - [Rebase Magic Tutorial]( ## Installation []( _Most of the above packages are maintained by third parties so be sure to vet them yourself and confirm that the maintainer is a trustworthy looking person who attends local sports games and gives back to their communities with barbeque fundraisers etc_ ### Binary Releases For Windows, Mac OS(10.12+) or Linux, you can download a binary release [here](../../releases). ### Homebrew Normally the lazygit formula can be found in the Homebrew core but we suggest you tap our formula to get the frequently updated one. It works with Linux, too. Tap: ``` brew install jesseduffield/lazygit/lazygit ``` Core: ``` brew install lazygit ``` ### MacPorts Latest version built from github releases. Tap: ``` sudo port install lazygit ``` ### Void Linux Packages for Void Linux are available in the distro repo They follow upstream latest releases ```sh sudo xbps-install -S lazygit ``` ### Scoop (Windows) You can install `lazygit` using [scoop]( It's in the `extras` bucket: ```sh # Add the extras bucket scoop bucket add extras # Install lazygit scoop install lazygit ``` ### Arch Linux Packages for Arch Linux are available via pacman and AUR (Arch User Repository). There are two packages. The stable one which is built with the latest release and the git version which builds from the most recent commit. - Stable: `sudo pacman -S lazygit` - Development: Instruction of how to install AUR content can be found here: ### Fedora and RHEL Packages for Fedora/RHEL and CentOS Stream are available via [Copr]( (Cool Other Package Repo). ```sh sudo dnf copr enable atim/lazygit -y sudo dnf install lazygit ``` ### Solus Linux ```sh sudo eopkg install lazygit ``` ### Ubuntu ```sh LAZYGIT_VERSION=$(curl -s "" | grep -Po '""tag_name"": ""v\K[^""]*') curl -Lo lazygit.tar.gz "" tar xf lazygit.tar.gz lazygit sudo install lazygit /usr/local/bin ``` Verify the correct installation of lazygit: ```sh lazygit --version ``` ### Funtoo Linux Funtoo Linux has an autogenerated lazygit package in [dev-kit]( ```sh sudo emerge dev-vcs/lazygit ``` ### Gentoo Linux Lazygit is not (yet) in main Gentoo portage, however an ebuild is available in [GURU overlay]( You can either add the overlay to your system and install lazygit as usual: ```sh sudo eselect repository enable guru sudo emaint sync -r guru sudo emerge dev-vcs/lazygit ``` ### openSUSE The lazygi... [TRUNCATED]","1.7k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, bug, enhancement, discussion, good first issue, usability, hacktoberfest, git-config, maintenance, gocui, compatibility, subprocesses, streaming-output, requires-maintainer-signoff, i18n, docs, dependency, credentials, performance, ignore-for-release, dont-panic, blocked, wontfix, windows, question, proposal, needs comment, installation, help wanted, hacktoberfest-accepted, git"
memos,usememos/memos,27876,"['Go', 'TypeScript', 'PowerShell']","['react', 'go', 'sqlite', 'markdown', 'self-hosted']","A privacy-first, lightweight note-taking service. Easily capture and share your great thoughts. Home Page Blogs Docs Live Demo ## Key points - **Open source and free to use**. Embrace a future where creativity knows no boundaries with our open-source solution. All features are free to use and will never be charged in any form or content. - **Self-hosting with Docker in just seconds**. Enjoy the flexibility, scalability, and ease of setup that Docker provides, allowing you to have full control over your data and privacy. - **Pure text with added Markdown support.** Say goodbye to the overwhelming mental burden of rich formatting and embrace a minimalist approach. - **Customize and share your notes effortlessly**. With our intuitive sharing features, you can easily collaborate and distribute your notes with others. - **RESTful API for third-party services.** Embrace the power of integration and unleash new possibilities with our RESTful API support. ## Deploy with Docker in seconds ```bash docker run -d --name memos -p 5230:5230 -v ~/.memos/:/var/opt/memos neosmemo/memos:stable ``` > [!NOTE] > This command is only applicable for Unix/Linux systems. For Windows, please refer to the detailed [documentation]( > > The `~/.memos/` directory will be used as the data directory on your local machine, while `/var/opt/memos` is the directory of the volume in Docker and should not be modified. Learn more about [other installation methods]( ## Contribution Contributions are what make the open-source community such an amazing place to learn, inspire, and create. We greatly appreciate any contributions you make. Thank you for being a part of our community! ## Internationalization Memos supports multiple languages. You can help us translate Memos into your language. We use Weblate to manage translations. ## Star history []( ## Other projects - [**Slash**]( An open source, self-hosted bookmarks and link sharing platform. Save and share your links very easily. - [**Gomark**]( A markdown parser written in Go for Memos. And its [WebAssembly version]( is also available.","2k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, enhancement, bug, Stale, need more context, PR welcome, javascript, go, github_actions, dependencies"
cloudnative-pg,cloudnative-pg/cloudnative-pg,3555,"['Go', 'Shell', 'Makefile']","['postgres', 'postgresql', 'kubernetes', 'k8s', 'database']","[]( [][latest-release] [][license] [![Documentation][documentation-badge]][documentation] [][stackoverflow] # Welcome to the CloudNativePG project! **CloudNativePG** is a comprehensive open source platform designed to seamlessly manage [PostgreSQL]( databases within Kubernetes environments, covering the entire operational lifecycle from initial deployment to ongoing maintenance. The main component is the CloudNativePG operator. CloudNativePG was originally built and sponsored by [EDB]( ## Table of content - [Code of conduct](CODE_OF_CONDUCT.md) - [Governance policies]( - [Contributing](CONTRIBUTING.md) - [Adopters](ADOPTERS.md) - [License](LICENSE) ## Getting Started The best way to get started is with the [""Quickstart""](docs/src/quickstart.md) section in the documentation. ## Scope The goal of CloudNativePG is to increase the adoption of PostgreSQL, one of the most loved DBMS in traditional VM and bare metal environments, inside Kubernetes, thus making the database an integral part of the development process and GitOps CI/CD automated pipelines. ### In scope CloudNativePG has been designed by Postgres experts with Kubernetes administrators in mind. Put simply, it leverages Kubernetes by extending its controller and by defining, in a programmatic way, all the actions that a good DBA would normally do when managing a highly available PostgreSQL database cluster. Since the inception, our philosophy has been to adopt a Kubernetes native approach to PostgreSQL cluster management, making incremental decisions that would answer the fundamental question: ""What would a Kubernetes user expect from a Postgres operator?"". The most important decision we made is to have the status of a PostgreSQL cluster directly available in the `Cluster` resource, so to inspect it through the Kubernetes API. We've fully embraced the operator pattern and eventual consistency, two of the core principles upon which Kubernetes is built for managing complex applications. As a result, the operator is responsible for managing the status of the `Cluster` resource, keeping it up to date with the information that each PostgreSQL instance manager regularly reports back through the API server. Changes to the cluster status might trigger, for example, actions like: * a PostgreSQL failover where, after an unexpected failure of a cluster's primary instance, the operator itself elects the new primary, updates the status, and directly coordinates the operation through the reconciliation loop, by relying on the instance managers * scaling up or down the number of read-only replicas, based on a positive or negative variation in the number of desired instances in the cluster, so that the operator creates or removes the required resources to run PostgreSQL, such as persistent volumes, persistent volume claims, pods, secrets, config maps, and then coordinates cloning and streaming replication tasks * updates of the endpoints of the PostgreSQL services that applications rely on to interact with the database, as Kubernetes represents the single source of truth and authority * updates of container images in a rolling fashion, following a change in the image name, by first updating the pods where replicas are running, and then the primary, issuing a switchover first The latter example is based on another pillar of CloudNativePG: immutable application containers - as explained in the [blog article ""Why EDB Chose Immutable Application Containers""]( The above list can be extended. However, the gist is that CloudNativePG exclusively relies on the Kubernetes API server and the instance manager to coordinate the complex operations that need to take place in a business continuity PostgreSQL cluster, without requiring any assistance from an intermediate management tool responsible for high availability and failover management like similar open source operators. CloudNativePG also manages additional resources to help the `Cluster` resource manage PostgreSQL - currently `Backup`, `ClusterImageCatalog`, `ImageCatalog`, `Pooler`, and `ScheduledBackup`. Fully embracing Kubernetes means adopting a hands-off approach during temporary failures of the Kubernetes API server. In such instances, the operator refrains from taking action, deferring decisions until the API server is operational again. Meanwhile, Postgres instances persist, maintaining operations based on the latest known state of the cluster. ### Out of scope CloudNativePG is exclusively focused on the PostgreSQL database management system maintained by the PostgreSQL Global Development Group (PGDG). We are not currently considering adding to CloudNativePG extensions or capabilities that are included in forks of the PostgreSQL database management system, unless in the form of extensible or pluggable frameworks. CloudNativePG doesn't intend to pursue database independence (e.g. control a MariaDB cluster). ## Communications - [Slack Channel]( - [Github Discussions]( - [Twitter]( ## Resources - [Roadmap]( - [Website]( - [FAQ](docs/src/faq.md) - [Blog]( ## Adopters A list of publicly known users of the CloudNativePG operator is in [ADOPTERS.md](ADOPTERS.md). Help us grow our community and CloudNativePG by adding yourself and your organization to this list! ### CloudNativePG at KubeCon - March 21 2024, KubeCon Europe 2024 in Paris: [""Scaling Heights: Mastering Postgres Database Vertical Scalability with Kubernetes Storage Magic""]( (Gari Singh, Google & Gabriele Bartolini, EDB) - March 19 2024, Data on Kubernetes Day at KubeCon Europe 2024 in Paris: [""From Zero to Hero: Scaling Postgres in Kubernetes Using the Power of CloudNativePG""]( (Gabriele Bartolini, EDB) - 7 November 2023, KubeCon North America 2023 in Chicago: [""Disaster Recovery with Very Large Postgres Databases (in Kubernetes)""]( (Michelle Au, Google & Gabriele Bartolini, EDB) - 27 October 2022, KubeCon North America 2022 in Detroit: [""Data On Kubernetes, Deploying And Running PostgreSQL And Patterns For Databases In a Kubernetes Cluster""]( (Chris Milsted, Ondat & Gabriele Bartolini, EDB) ### Useful links - [Data on Kubernetes (DoK) Community]( - [""How to migrate your PostgreSQL database in Kubernetes with ~0 downtime from anywhere"" by Gabriele Bartolini]( (March 2024) - [""Maximizing Microservice Databases with Kubernetes, Postgres, and CloudNativePG"" by Gabriele Bartolini]( (February 2024) - [""Recommended Architectures for PostgreSQL in Kubernetes"" by Gabriele Bartolini]( (September 2023) - [""The Current State of Major PostgreSQL Upgrades with CloudNativePG"" by Gabriele Bartolini]( (August 2023) - [""The Rise of the Kubernetes Native Database"" by Jeff Carpenter]( (December 2022) - [""Why Run Postgres in Kubernetes?"" by Gabriele Bartolini]( (May 2022) - [""Shift-Left Security: The Path To PostgreSQL On Kubernetes"" by Gabriele Bartolini]( (April 2021) - [""Local Persistent Volumes and PostgreSQL usage in Kubernetes"" by Gabriele Bartolini]( (June 2020) ## Star History []( ## Trademarks *[Postgres, PostgreSQL and the Slonik Logo]( are trademarks or registered trademarks of the PostgreSQL Community Association of Canada, and used with their permission.* [stackoverflow]: [latest-release]: [documentation]: [license]: [documentation-badge]:","248, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, triage, release-1.21, backport-requested ◀️, release-1.22, enhancement 🪄, release-1.20, documentation 📖, release-1.23, bug 🐛, help wanted 🆘, good first issue, no-issue, risk 💥, release-1.19, ok to merge 👌, do not merge 🙅, do not backport, automated, security 👮, groomed, observability 🔍, question ❓, chore, wontfix 🚫, release-1.18, release-1.17, release-1.16, release, regression bug, ready to test 🐘"
fzf,junegunn/fzf,60631,"['Go', 'Ruby', 'Shell']","['fzf', 'go', 'bash', 'zsh', 'fish']","Special thanks to: Warp is a modern, Rust-based terminal with AI built in so you and your team can build great software, faster. Visit warp.dev to learn more. []( === fzf is a general-purpose command-line fuzzy finder. It's an interactive Unix filter for command-line that can be used with any list; files, command history, processes, hostnames, bookmarks, git commits, etc. Pros ---- - Portable, no dependencies - Blazingly fast - The most comprehensive feature set - Flexible layout - Batteries included - Vim/Neovim plugin, key bindings, and fuzzy auto-completion Sponsors ----------- I would like to thank all the sponsors of this project who make it possible for me to continue to improve fzf. If you'd like to sponsor this project, please visit Table of Contents ----------------- * [Installation](#installation) * [Using Homebrew](#using-homebrew) * [Using git](#using-git) * [Using Linux package managers](#using-linux-package-managers) * [Windows](#windows) * [Setting up shell integration](#setting-up-shell-integration) * [As Vim plugin](#as-vim-plugin) * [Upgrading fzf](#upgrading-fzf) * [Building fzf](#building-fzf) * [Usage](#usage) * [Using the finder](#using-the-finder) * [Layout](#layout) * [Search syntax](#search-syntax) * [Environment variables](#environment-variables) * [Options](#options) * [Demo](#demo) * [Examples](#examples) * [`fzf-tmux` script](#fzf-tmux-script) * [Key bindings for command-line](#key-bindings-for-command-line) * [Fuzzy completion for bash and zsh](#fuzzy-completion-for-bash-and-zsh) * [Files and directories](#files-and-directories) * [Process IDs](#process-ids) * [Host names](#host-names) * [Environment variables / Aliases](#environment-variables--aliases) * [Settings](#settings) * [Supported commands](#supported-commands) * [Custom fuzzy completion](#custom-fuzzy-completion) * [Vim plugin](#vim-plugin) * [Advanced topics](#advanced-topics) * [Performance](#performance) * [Executing external programs](#executing-external-programs) * [Turning into a different process](#turning-into-a-different-process) * [Reloading the candidate list](#reloading-the-candidate-list) * [1. Update the list of processes by pressing CTRL-R](#1-update-the-list-of-processes-by-pressing-ctrl-r) * [2. Switch between sources by pressing CTRL-D or CTRL-F](#2-switch-between-sources-by-pressing-ctrl-d-or-ctrl-f) * [3. Interactive ripgrep integration](#3-interactive-ripgrep-integration) * [Preview window](#preview-window) * [Previewing an image](#previewing-an-image) * [Tips](#tips) * [Respecting `.gitignore`](#respecting-gitignore) * [Fish shell](#fish-shell) * [fzf Theme Playground](#fzf-theme-playground) * [Related projects](#related-projects) * [License](#license) Installation ------------ fzf project consists of the following components: - `fzf` executable - `fzf-tmux` script for launching fzf in a tmux pane - Shell integration - Key bindings (`CTRL-T`, `CTRL-R`, and `ALT-C`) (bash, zsh, fish) - Fuzzy completion (bash, zsh) - Vim/Neovim plugin You can [download fzf executable][bin] alone if you don't need the extra stuff. [bin]: ### Using Homebrew You can use [Homebrew]( (on macOS or Linux) to install fzf. ```sh brew install fzf # To build fzf from the latest source: brew install --HEAD fzf ``` > [!IMPORTANT] > To set up shell integration (key bindings and fuzzy completion), > see [the instructions below](#setting-up-shell-integration). fzf is also available [via MacPorts][portfile]: `sudo port install fzf` [portfile]: ### Using git Alternatively, you can ""git clone"" this repository to any directory and run [install]( script. ```sh git clone --depth 1 ~/.fzf ~/.fzf/install ``` The install script will add lines to your shell configuration file to modify `$PATH` and set up shell integration. ### Using Linux package managers | Package Manager | Linux Distribution | Command | | --------------- | ----------------------- | ---------------------------------- | | APK | Alpine Linux | `sudo apk add fzf` | | APT | Debian 9+/Ubuntu 19.10+ | `sudo apt install fzf` | | Conda | | `conda install -c conda-forge fzf` | | DNF | Fedora | `sudo dnf install fzf` | | Nix | NixOS, etc. | `nix-env -iA nixpkgs.fzf` | | Pacman | Arch Linux | `sudo pacman -S fzf` | | pkg | FreeBSD | `pkg install fzf` | | pkgin | NetBSD | `pkgin install fzf` | | pkg_add | OpenBSD | `pkg_add fzf` | | Portage | Gentoo | `emerge --ask app-shells/fzf` | | Spack | | `spack install fzf` | | XBPS | Void Linux | `sudo xbps-install -S fzf` | | Zypper | openSUSE | `sudo zypper install fzf` | > [!IMPORTANT] > To set up shell integration (key bindings and fuzzy completion), > see [the instructions below](#setting-up-shell-integration). []( ### Windows Pre-built binaries for Windows can be downloaded [here][bin]. fzf is also available via [Chocolatey][choco], [Scoop][scoop], [Winget][winget], and [MSYS2][msys2]: | Package manager | Command | | --------------- | ------------------------------------- | | Chocolatey | `choco install fzf` | | Scoop | `scoop install fzf` | | Winget | `winget install fzf` | | MSYS2 (pacman) | `pacman -S $MINGW_PACKAGE_PREFIX-fzf` | [choco]: [scoop]: [winget]: [msys2]: Known issues and limitations on Windows can be found on [the wiki page][windows-wiki]. [windows-wiki]: ### Setting up shell integration Add the following line to your shell configuration file. * bash ```sh # Set up fzf key bindings and fuzzy completion eval ""$(fzf --bash)"" ``` * zsh ```sh # Set up fzf key bindings and fuzzy completion source <(fzf --zsh) ``` * fish ```fish # Set up fzf key bindings fzf --fish | source ``` > [!NOTE] > `--bash`, `--zsh`, and `--fish` options are only available in fzf 0.48.0 or > later. If you have an older version of fzf, or want finer control, you can > source individual script files in the [/shell](/shell) directory. The > location of the files may vary depending on the package manager you use. > Please refer to the package documentation for more information. > (e.g. `apt show fzf`) > [!TIP] > You can disable CTRL-T or ALT-C binding by setting `FZF_CTRL_T_COMMAND` or > `FZF_ALT_C_COMMAND` to an empty string when sourcing the script. > For example, to disable ALT-C binding: > > * bash: `FZF_ALT_C_COMMAND= eval ""$(fzf --bash)""` > * zsh: `FZF_ALT_C_COMMAND= source <(fzf --zsh)` > * fish: `fzf --fish | FZF_ALT_C_COMMAND= source` > > Setting the variables after sourcing the script will have no effect. ### As Vim plugin If you use [vim-plug]( add this line to your Vim configuration file: ```vim Plug 'junegunn/fzf', { 'do': { -> fzf#install() } } ``` `fzf#install()` makes sure that you have the latest binary, but it's optional, so you can omit it if you use a plugin manager that doesn't support hooks. For more installation options, see [README-VIM.md](README-VIM.md). Upgrading fzf ------------- fzf is being actively developed, and you might want to upgrade it once in a while. Please follow the instruction below depending on the installation method used. - git: `cd ~/.fzf && git pull && ./install` - brew: `brew update; brew upgrade fzf` - macports: `sudo port upgrade fzf` - chocolatey: `choco upgrade fzf` - vim-plug: `:PlugUpdate fzf` Building fzf ------------ See [BUILD.md](BUILD.md). Usage ----- fzf will launch interactive finder, read the list from STDIN, and write the selected item to STDOUT. ```sh find * -type f | fzf > selected ``` Without STDIN pipe, fzf will traverse the file system under the current directory to get the list of files. ```sh vim $(fzf) ``` > [!NOTE] > You can override the default behavior > * Either by setting `$FZF_DEFAULT_COMMAND` to a command that generates the desired list > * Or by setting `--walker`, `--walker-root`, and `--walker-skip` options in `$FZF_DEFAULT_OPTS` > [!WARNING] > A more robust solution would be to use `xargs` but we've presented > the above as it's easier to grasp > ```sh > fzf --print0 | xargs -0 -o vim > ``` > [!TIP] > fzf also has the ability to turn itself into a different process. > > ```sh > fzf --bind 'enter:become(vim {})' > ``` > > *See [Turning into a different process](#turning-into-a-different-process) > for more information.* ### Using the finder - `CTRL-K` / `CTRL-J` (or `CTRL-P` / `CTRL-N`) to move cursor up and down - `Enter` key to select the item, `CTRL-C` / `CTRL-G` / `ESC` to exit - On multi-select mode (`-m`), `TAB` and `Shift-TAB` to mark multiple items - Emacs style key bindings - Mouse: scroll, click, double-click; shift-click and shift-scroll on multi-select mode ### Layout fzf by default starts in fullscreen mode, but you can make it start below the cursor with `--height` option. ```sh vim $(fzf --height 40%) ``` Also, check out `--reverse` and `--layout` options if you prefer ""top-down"" layout instead of the default ""bottom-up"" layout. ```sh vim $(fzf --height 40% --reverse) ``` You can add these options to `$FZF_DEFAULT_OPTS` so that they're applied by default. For example, ```sh export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border' ``` ### Search syntax Unless otherwise specified, fzf starts in ""extended-search mode"" where you can type in multiple search terms delimited by spaces. e.g. `^music .mp3$ sbtrkt !fire` | Token | Match type | Description | | --------- | -------------------------- | ------------------------------------ | | `sbtrkt` | fuzzy-match | Items that match `sbtrkt` | | `'wild` | exact-match (quoted) | Items that include `wild` | | `^music` | prefix-exact-match | Items that start with `music` | | `.mp3$` | suffix-exact-match | Items that end with `.mp3` | | `!fire` | inverse-exact-match | Items that do not include `fire` | | `!^music` | inverse-prefix-exact-match | Items that do not start with `music` | | `!.mp3$` | inverse-suffix-exact-match | Items that do not end with `.mp3` | If you don't prefer fuzzy matching and do not wish to ""quote"" every word, start fzf with `-e` or `--exact` option. Note that when `--exact` is set, `'`-prefix ""unquotes"" the term. A single bar character term acts as an OR operator. For example, the following query match... [TRUNCATED]","2.3k, Code, Issues, Pull requests, Discussions, Actions, Wiki, Security, Insights, windows, help-needed, not-reproducible, feature, enhancement, cygwin, bug, neovim, doc, tip, question, outdated, go, discussion, wontfix, pending, no-response, invalid, invalid: missing template, github_actions, duplicate, dependencies"
act,nektos/act,51026,"['Go', 'JavaScript', 'Shell']","['github-actions', 'golang', 'ci', 'devops']","# Overview []( []( []( []( > ""Think globally, `act` locally"" Run your [GitHub Actions]( locally! Why would you want to do this? Two reasons: - **Fast Feedback** - Rather than having to commit/push every time you want to test out the changes you are making to your `.github/workflows/` files (or for any changes to embedded GitHub actions), you can use `act` to run the actions locally. The [environment variables]( and [filesystem]( are all configured to match what GitHub provides. - **Local Task Runner** - I love [make](). However, I also hate repeating myself. With `act`, you can use the GitHub Actions defined in your `.github/workflows/` to replace your `Makefile`! # How Does It Work? When you run `act` it reads in your GitHub Actions from `.github/workflows/` and determines the set of actions that need to be run. It uses the Docker API to either pull or build the necessary images, as defined in your workflow files and finally determines the execution path based on the dependencies that were defined. Once it has the execution path, it then uses the Docker API to run containers for each action based on the images prepared earlier. The [environment variables]( and [filesystem]( are all configured to match what GitHub provides. Let's see it in action with a [sample repo]( # Act User Guide Please look at the [act user guide]( for more documentation. # Support Need help? Ask on [Gitter]( # Contributing Want to contribute to act? Awesome! Check out the [contributing guidelines](CONTRIBUTING.md) to get involved. ## Manually building from source - Install Go tools 1.20+ - () - Clone this repo `git clone git@github.com:nektos/act.git` - Run unit tests with `make test` - Build and install: `make install`","1.3k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, kind/bug, kind/feature-request, stale-exempt, needs-work, area/runner, area/cli, size/M, conflict, stale, size/S, kind/discussion, area/workflow, size/L, area/docs, size/XS, meta/workaround, meta/need-more-info, kind/question, area/image, area/action, size/XXL, size/XL, meta/wontfix, meta/resolved, meta/invalid, meta/duplicate, kind/external, hacktoberfest-accepted, go, github_actions"
karmada,karmada-io/karmada,4175,"['Go', 'Shell', 'Smarty']","['cloud-native', 'kubernetes', 'multicloud', 'cloud-computing', 'containers']","# Karmada [](/LICENSE) []( []( []( []( []( ## Karmada: Open, Multi-Cloud, Multi-Cluster Kubernetes Orchestration Karmada (Kubernetes Armada) is a Kubernetes management system that enables you to run your cloud-native applications across multiple Kubernetes clusters and clouds, with no changes to your applications. By speaking Kubernetes-native APIs and providing advanced scheduling capabilities, Karmada enables truly open, multi-cloud Kubernetes. Karmada aims to provide turnkey automation for multi-cluster application management in multi-cloud and hybrid cloud scenarios, with key features such as centralized multi-cloud management, high availability, failure recovery, and traffic scheduling. Karmada is an incubation project of the [Cloud Native Computing Foundation]( (CNCF). ## Why Karmada: - __K8s Native API Compatible__ - Zero change upgrade, from single-cluster to multi-cluster - Seamless integration of existing K8s tool chain - __Out of the Box__ - Built-in policy sets for scenarios, including: Active-active, Remote DR, Geo Redundant, etc. - Cross-cluster applications auto-scaling, failover and load-balancing on multi-cluster. - __Avoid Vendor Lock-in__ - Integration with mainstream cloud providers - Automatic allocation, migration across clusters - Not tied to proprietary vendor orchestration - __Centralized Management__ - Location agnostic cluster management - Support clusters in Public cloud, on-prem or edge - __Fruitful Multi-Cluster Scheduling Policies__ - Cluster Affinity, Multi Cluster Splitting/Rebalancing - Multi-Dimension HA: Region/AZ/Cluster/Provider - __Open and Neutral__ - Jointly initiated by Internet, finance, manufacturing, teleco, cloud providers, etc. - Target for open governance with CNCF **Notice: this project is developed in continuation of Kubernetes [Federation v1]( and [v2]( Some basic concepts are inherited from these two versions.** ## Architecture The Karmada Control Plane consists of the following components: - Karmada API Server - Karmada Controller Manager - Karmada Scheduler ETCD stores the Karmada API objects, the API Server is the REST endpoint all other components talk to, and the Karmada Controller Manager performs operations based on the API objects you create through the API server. The Karmada Controller Manager runs the various controllers, the controllers watch Karmada objects and then talk to the underlying clusters' API servers to create regular Kubernetes resources. 1. Cluster Controller: attach Kubernetes clusters to Karmada for managing the lifecycle of the clusters by creating cluster objects. 2. Policy Controller: the controller watches PropagationPolicy objects. When the PropagationPolicy object is added, it selects a group of resources matching the resourceSelector and creates ResourceBinding with each single resource object. 3. Binding Controller: the controller watches ResourceBinding object and create Work object corresponding to each cluster with a single resource manifest. 4. Execution Controller: the controller watches Work objects. When Work objects are created, it will distribute the resources to member clusters. ## Concepts **Resource template**: Karmada uses Kubernetes Native API definition for federated resource template, to make it easy to integrate with existing tools that already adopt on Kubernetes **Propagation Policy**: Karmada offers a standalone Propagation(placement) Policy API to define multi-cluster scheduling and spreading requirements. - Support 1:n mapping of Policy: workload, users don't need to indicate scheduling constraints every time creating federated applications. - With default policies, users can just interact with K8s API **Override Policy**: Karmada provides standalone Override Policy API for specializing cluster relevant configuration automation. E.g.: - Override image prefix according to member cluster region - Override StorageClass according to cloud provider The following diagram shows how Karmada resources are involved when propagating resources to member clusters. ## Quick Start This guide will cover: - Install `karmada` control plane components in a Kubernetes cluster which is known as `host cluster`. - Join a member cluster to `karmada` control plane. - Propagate an application by using `karmada`. ### Prerequisites - [Go]( version v1.21+ - [kubectl]( version v1.19+ - [kind]( version v0.14.0+ ### Install the Karmada control plane #### 1. Clone this repo to your machine: ```bash git clone ``` #### 2. Change to the karmada directory: ```bash cd karmada ``` #### 3. Deploy and run Karmada control plane: run the following script: ```bash hack/local-up-karmada.sh ``` This script will do the following tasks for you: - Start a Kubernetes cluster to run the Karmada control plane, aka. the `host cluster`. - Build Karmada control plane components based on a current codebase. - Deploy Karmada control plane components on the `host cluster`. - Create member clusters and join Karmada. If everything goes well, at the end of the script output, you will see similar messages as follows: ```bash Local Karmada is running. To start using your Karmada environment, run: export KUBECONFIG=""$HOME/.kube/karmada.config"" Please use 'kubectl config use-context karmada-host/karmada-apiserver' to switch the host and control plane cluster. To manage your member clusters, run: export KUBECONFIG=""$HOME/.kube/members.config"" Please use 'kubectl config use-context member1/member2/member3' to switch to the different member cluster. ``` There are two contexts in Karmada: - karmada-apiserver `kubectl config use-context karmada-apiserver` - karmada-host `kubectl config use-context karmada-host` The `karmada-apiserver` is the **main kubeconfig** to be used when interacting with the Karmada control plane, while `karmada-host` is only used for debugging Karmada installation with the host cluster. You can check all clusters at any time by running: `kubectl config view`. To switch cluster contexts, run `kubectl config use-context [CONTEXT_NAME]` ### Demo ### Propagate application In the following steps, we are going to propagate a deployment by Karmada. #### 1. Create nginx deployment in Karmada. First, create a [deployment](samples/nginx/deployment.yaml) named `nginx`: ```bash kubectl create -f samples/nginx/deployment.yaml ``` #### 2. Create PropagationPolicy that will propagate nginx to member cluster Then, we need to create a policy to propagate the deployment to our member cluster. ```bash kubectl create -f samples/nginx/propagationpolicy.yaml ``` #### 3. Check the deployment status from Karmada You can check deployment status from Karmada, don't need to access member cluster: ```bash $ kubectl get deployment NAME READY UP-TO-DATE AVAILABLE AGE nginx 2/2 2 2 20s ``` ## Kubernetes compatibility | | Kubernetes 1.16 | Kubernetes 1.17 | Kubernetes 1.18 | Kubernetes 1.19 | Kubernetes 1.20 | Kubernetes 1.21 | Kubernetes 1.22 | Kubernetes 1.23 | Kubernetes 1.24 | Kubernetes 1.25 | Kubernetes 1.26 | Kubernetes 1.27 | Kubernetes 1.28 | Kubernetes 1.29 | |-----------------------|-----------------|-----------------|-----------------|-----------------|-----------------|-----------------|-----------------|-----------------|-----------------|-----------------|-----------------|-----------------|-----------------|-----------------| | Karmada v1.7 | | | | | | | | | | | | | | | | Karmada v1.8 | | | | | | | | | | | | | | | | Karmada v1.9 | | | | | | | | | | | | | | | | Karmada HEAD (master) | | | | | | | | | | | | | | | Key: * `` Karmada and the Kubernetes version are exactly compatible. * `+` Karmada has features or API objects that may not be present in the Kubernetes version. * `-` The Kubernetes version has features or API objects that Karmada can't use. ## Meeting Regular Community Meeting: * Tuesday at 14:30 UTC+8 (Chinese)(biweekly). [Convert to your timezone]( * Tuesday at 08:00 Pacific Time (English)(biweekly). [Convert to your timezone]( Resources: - [Meeting Notes and Agenda]( - [Meeting Calendar]( | [Subscribe]( - [Meeting Link]( ## Contact If you have questions, feel free to reach out to us in the following ways: - [mailing list]( - [slack]( | [Join]( - [twitter]( ## Talks and References | | Link | |------------------|-------------------------------------------------------------------------------------------------------------------------| | KubeCon(EU 2021) | [Beyond federation: automating multi-cloud workloads with K8s native APIs]( | | KubeCon(EU 2022) | [Sailing Multi Cloud Traffic Management With Karmada]( | | KubeDay(Israel 2023)| [Simplifying Multi-cluster Kubernetes Management with Karmada]( | | KubeCon(China 2023) | [Multi-Cloud Multi-Cluster HPA Helps Trip.com Group Deal with Business Downturn and Rapid Recovery]( | | KubeCon(China 2023) | [Break Through Cluster Boundaries to Autoscale Workloads Across Them on a Large Scale]( | | KubeCon(China 2023) | [Cross-Cluster Traffic Orchestration with eBPF]( | | KubeCon(China 2023) | [Non-Intrusively Enable OpenKruise and Argo Workflow in a Multi-Cluster Federation]( | For blogs, please refer to [website]( ## Contributing If you're interested in being a contributor and want to get involved in developing the Karmada code, please see [CONTRIBUTING](CONTRIBUTING.md) for details on submitting patches and the contribution workflow. ## License Karmada is under the Apache 2.0 license. See the [LICENSE](LICENSE) file for details.","819, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, kind/feature, kind/bug, kind/question, size/L, size/M, kind/cleanup, do-not-merge/work-in-progress, size/XS, lgtm, kind/design, help wanted, size/XL, size/S, kind/documentation, size/XXL, kind/flake, kind/failing-test, kind/api-change, do-not-merge/hold, priority/important-longterm, do-not-merge/contains-merge-commits, priority/important-soon, ok-to-test, good first issue, approved, wontfix, tide/merge-method-squash, tide/merge-method-rebase, tide/merge-method-merge, release-note-none"
buildkit,moby/buildkit,7728,"['Go', 'Dockerfile', 'Shell']","['buildkit', 'dockerfile', 'docker', 'oci-image', 'oci']","[]( # BuildKit []( []( []( []( []( []( BuildKit is a toolkit for converting source code to build artifacts in an efficient, expressive and repeatable manner. Key features: - Automatic garbage collection - Extendable frontend formats - Concurrent dependency resolution - Efficient instruction caching - Build cache import/export - Nested build job invocations - Distributable workers - Multiple output formats - Pluggable architecture - Execution without root privileges Read the proposal from Introductory blog post Join `#buildkit` channel on [Docker Community Slack]( > **Note** > > If you are visiting this repo for the usage of BuildKit-only Dockerfile features > like `RUN --mount=type=(bind|cache|tmpfs|secret|ssh)`, please refer to the > [Dockerfile reference]( > **Note** > > `docker build` [uses Buildx and BuildKit by default]( since Docker Engine 23.0. > You don't need to read this document unless you want to use the full-featured > standalone version of BuildKit. - [Used by](#used-by) - [Quick start](#quick-start) - [Linux Setup](#linux-setup) - [Windows Setup](#windows-setup) - [macOS Setup](#macos-setup) - [Build from source](#build-from-source) - [Exploring LLB](#exploring-llb) - [Exploring Dockerfiles](#exploring-dockerfiles) - [Building a Dockerfile with `buildctl`](#building-a-dockerfile-with-buildctl) - [Building a Dockerfile using external frontend](#building-a-dockerfile-using-external-frontend) - [Output](#output) - [Image/Registry](#imageregistry) - [Local directory](#local-directory) - [Docker tarball](#docker-tarball) - [OCI tarball](#oci-tarball) - [containerd image store](#containerd-image-store) - [Cache](#cache) - [Garbage collection](#garbage-collection) - [Export cache](#export-cache) - [Inline (push image and cache together)](#inline-push-image-and-cache-together) - [Registry (push image and cache separately)](#registry-push-image-and-cache-separately) - [Local directory](#local-directory-1) - [GitHub Actions cache (experimental)](#github-actions-cache-experimental) - [S3 cache (experimental)](#s3-cache-experimental) - [Azure Blob Storage cache (experimental)](#azure-blob-storage-cache-experimental) - [Consistent hashing](#consistent-hashing) - [Metadata](#metadata) - [Systemd socket activation](#systemd-socket-activation) - [Expose BuildKit as a TCP service](#expose-buildkit-as-a-tcp-service) - [Load balancing](#load-balancing) - [Containerizing BuildKit](#containerizing-buildkit) - [Podman](#podman) - [Nerdctl](#nerdctl) - [Kubernetes](#kubernetes) - [Daemonless](#daemonless) - [OpenTelemetry support](#opentelemetry-support) - [Running BuildKit without root privileges](#running-buildkit-without-root-privileges) - [Building multi-platform images](#building-multi-platform-images) - [Configuring `buildctl`](#configuring-buildctl) - [Color Output Controls](#color-output-controls) - [Number of log lines (for active steps in tty mode)](#number-of-log-lines-for-active-steps-in-tty-mode) - [Contributing](#contributing) ## Used by BuildKit is used by the following projects: - [Moby & Docker]( (`DOCKER_BUILDKIT=1 docker build`) - [img]( - [OpenFaaS Cloud]( - [container build interface]( - [Tekton Pipelines]( (formerly [Knative Build Templates]( - [the Sanic build tool]( - [vab]( - [Rio]( - [kim]( - [PouchContainer]( - [Docker buildx]( - [Okteto Cloud]( - [Earthly earthfiles]( - [Gitpod]( - [Dagger]( - [envd]( - [Depot]( - [Namespace]( - [Unikraft]( ## Quick start :information_source: For Kubernetes deployments, see [`examples/kubernetes`](./examples/kubernetes). BuildKit is composed of the `buildkitd` daemon and the `buildctl` client. While the `buildctl` client is available for Linux, macOS, and Windows, the `buildkitd` daemon is only available for Linux and *Windows currently. The latest binaries of BuildKit are available [here]( for Linux, macOS, and Windows. ### Linux Setup The `buildkitd` daemon requires the following components to be installed: - [runc]( or [crun]( - [containerd]( (if you want to use containerd worker) **Starting the `buildkitd` daemon:** You need to run `buildkitd` as the root user on the host. ```bash $ sudo buildkitd ``` To run `buildkitd` as a non-root user, see [`docs/rootless.md`](docs/rootless.md). The buildkitd daemon supports two worker backends: OCI (runc) and containerd. By default, the OCI (runc) worker is used. You can set `--oci-worker=false --containerd-worker=true` to use the containerd worker. We are open to adding more backends. To start the buildkitd daemon using systemd socket activation, you can install the buildkit systemd unit files. See [Systemd socket activation](#systemd-socket-activation) The buildkitd daemon listens gRPC API on `/run/buildkit/buildkitd.sock` by default, but you can also use TCP sockets. See [Expose BuildKit as a TCP service](#expose-buildkit-as-a-tcp-service). ### Windows Setup See instructions and notes at [`docs/windows.md`](./docs/windows.md). ### macOS Setup [Homebrew formula]( (unofficial) is available for macOS. ```console $ brew install buildkit ``` The Homebrew formula does not contain the daemon (`buildkitd`). For example, [Lima]( can be used for launching the daemon inside a Linux VM. ```console brew install lima limactl start template://buildkit export BUILDKIT_HOST=""unix://$HOME/.lima/buildkit/sock/buildkitd.sock"" ``` ### Build from source To build BuildKit from source, see [`.github/CONTRIBUTING.md`](./.github/CONTRIBUTING.md). For a `buildctl` reference, see [this document](./docs/reference/buildctl.md). ### Exploring LLB BuildKit builds are based on a binary intermediate format called LLB that is used for defining the dependency graph for processes running part of your build. tl;dr: LLB is to Dockerfile what LLVM IR is to C. - Marshaled as Protobuf messages - Concurrently executable - Efficiently cacheable - Vendor-neutral (i.e. non-Dockerfile languages can be easily implemented) See [`solver/pb/ops.proto`](./solver/pb/ops.proto) for the format definition, and see [`./examples/README.md`](./examples/README.md) for example LLB applications. Currently, the following high-level languages have been implemented for LLB: - Dockerfile (See [Exploring Dockerfiles](#exploring-dockerfiles)) - [Buildpacks]( - [Mockerfile]( - [Gockerfile]( - [bldr (Pkgfile)]( - [HLB]( - [Earthfile (Earthly)]( - [Cargo Wharf (Rust)]( - [Nix]( - [mopy (Python)]( - [envd (starlark)]( - [Blubber]( - [Bass]( - [kraft.yaml (Unikraft)]( - (open a PR to add your own language) ### Exploring Dockerfiles Frontends are components that run inside BuildKit and convert any build definition to LLB. There is a special frontend called gateway (`gateway.v0`) that allows using any image as a frontend. During development, Dockerfile frontend (`dockerfile.v0`) is also part of the BuildKit repo. In the future, this will be moved out, and Dockerfiles can be built using an external image. #### Building a Dockerfile with `buildctl` ```bash buildctl build \ --frontend=dockerfile.v0 \ --local context=. \ --local dockerfile=. # or buildctl build \ --frontend=dockerfile.v0 \ --local context=. \ --local dockerfile=. \ --opt target=foo \ --opt build-arg:foo=bar ``` `--local` exposes local source files from client to the builder. `context` and `dockerfile` are the names Dockerfile frontend looks for build context and Dockerfile location. If the Dockerfile has a different filename it can be specified with `--opt filename=./Dockerfile-alternative`. #### Building a Dockerfile using external frontend External versions of the Dockerfile frontend are pushed to and and can be used with the gateway frontend. The source for the external frontend is currently located in `./frontend/dockerfile/cmd/dockerfile-frontend` but will move out of this repository in the future ([#163]( For automatic build from master branch of this repository `docker/dockerfile-upstream:master` or `docker/dockerfile-upstream:master-labs` image can be used. ```bash buildctl build \ --frontend gateway.v0 \ --opt source=docker/dockerfile \ --local context=. \ --local dockerfile=. buildctl build \ --frontend gateway.v0 \ --opt source=docker/dockerfile \ --opt context= \ --opt build-arg:APT_MIRROR=cdn-fastly.deb.debian.org ``` ### Output By default, the build result and intermediate cache will only remain internally in BuildKit. An output needs to be specified to retrieve the result. #### Image/Registry ```bash buildctl build ... --output type=image,name=docker.io/username/image,push=true ``` To export the image to multiple registries: ```bash buildctl build ... --output type=image,\""name=docker.io/username/image,docker.io/username2/image2\"",push=true ``` To export the cache embed with the image and pushing them to registry together, type `registry` is required to import the cache, you should specify `--export-cache type=inline` and `--import-cache type=registry,ref=...`. To export the cache to a local directly, you should specify `--export-cache type=local`. Details in [Export cache](#export-cache). ```bash buildctl build ...\ --output type=image,name=docker.io/username/image,push=true \ --export-cache type=inline \ --import-cache type=registry,ref=docker.io/username/image ``` Keys supported by image output: * `name=`: specify image name(s) * `push=true`: push after creating the image * `push-by-digest=true`: push unnamed image * `registry.insecure=true`: push to insecure HTTP registry * `oci-mediatypes=true`: use OCI mediatypes in configuration JSON instead of Docker's * `unpack=true`: unpack image after creation (for use with containerd) * `dangling-name-prefix=`: name image with `prefix@`, used for anonymous images * `name-canonical=true`: add additional canonical name `name@` * `compression=`: choose compression type for layers newly created and cached, gzip is default value. estargz should be used with `oci-mediatypes=true`. * `compression-level=`: compression level for gzip, estargz (0-9) and zstd (0-22) * `rewrite-timestamp=true`: rewrite the file timestamps to the `SOURCE_DATE_EPOCH` value. See [`docs/build-r... [TRUNCATED]","1.1k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, kind/enhancement, area/dockerfile, kind/bug, kind/question, status/needs-more-info, help wanted, kind/docs, area/testing, area/windows, area/rootless, status/needs-investigation, area/kubernetes, area/feature-parity, area/ux, area/windows-wcow, area/reproducible-builds, area/moby-integration, status/code-review, exp/beginner, area/security, area/llb, area/containerd, area/cache, status/do-not-merge, exp/expert, area/attestations, needs/follow-up, area/windows-lcow, area/qemu, area/cli"
trivy,aquasecurity/trivy,21664,"['Go', 'Mustache', 'Smarty']","['security', 'security-tools', 'docker', 'containers', 'vulnerability-scanners']","[![GitHub Release][release-img]][release] [![Test][test-img]][test] [![Go Report Card][go-report-img]][go-report] [![License: Apache-2.0][license-img]][license] [![GitHub Downloads][github-downloads-img]][release] ![Docker Pulls][docker-pulls] [ Documentation][docs] Trivy ([pronunciation][pronunciation]) is a comprehensive and versatile security scanner. Trivy has *scanners* that look for security issues, and *targets* where it can find those issues. Targets (what Trivy can scan): - Container Image - Filesystem - Git Repository (remote) - Virtual Machine Image - Kubernetes - AWS Scanners (what Trivy can find there): - OS packages and software dependencies in use (SBOM) - Known vulnerabilities (CVEs) - IaC issues and misconfigurations - Sensitive information and secrets - Software licenses Trivy supports most popular programming languages, operating systems, and platforms. For a complete list, see the [Scanning Coverage] page. To learn more, go to the [Trivy homepage][homepage] for feature highlights, or to the [Documentation site][docs] for detailed information. ## Quick Start ### Get Trivy Trivy is available in most common distribution channels. The full list of installation options is available in the [Installation] page. Here are a few popular examples: - `brew install trivy` - `docker run aquasec/trivy` - Download binary from - See [Installation] for more Trivy is integrated with many popular platforms and applications. The complete list of integrations is available in the [Ecosystem] page. Here are a few popular examples: - [GitHub Actions]( - [Kubernetes operator]( - [VS Code plugin]( - See [Ecosystem] for more ### Canary builds There are canary builds ([Docker Hub]( [GitHub]( [ECR]( images and [binaries]( as generated every push to main branch. Please be aware: canary builds might have critical bugs, it's not recommended for use in production. ### General usage ```bash trivy [--scanners ] ``` Examples: ```bash trivy image python:3.4-alpine ``` Result ```bash trivy fs --scanners vuln,secret,misconfig myproject/ ``` Result ```bash trivy k8s --report summary cluster ``` Result ## FAQ ### How to pronounce the name ""Trivy""? `tri` is pronounced like **tri**gger, `vy` is pronounced like en**vy**. ## Want more? Check out Aqua If you liked Trivy, you will love Aqua which builds on top of Trivy to provide even more enhanced capabilities for a complete security management offering. You can find a high level comparison table specific to Trivy users [here]( In addition check out the website for more information about our products and services. If you'd like to contact Aqua or request a demo, please use this form: ## Community Trivy is an [Aqua Security][aquasec] open source project. Learn about our open source work and portfolio [here][oss]. Contact us about any matter by opening a GitHub Discussion [here][discussions] Join our [Slack community][slack] to stay up to date with community efforts. Please ensure to abide by our [Code of Conduct][code-of-conduct] during all interactions. [test]: [test-img]: [go-report]: [go-report-img]: [release]: [release-img]: [github-downloads-img]: [docker-pulls]: [license]: [license-img]: [homepage]: [docs]: [pronunciation]: #how-to-pronounce-the-name-trivy [slack]: [code-of-conduct]: [Installation]: [Ecosystem]: [Scanning Coverage]: [alpine]: [rego]: [sigstore]: [aquasec]: [oss]: [discussions]:","2.1k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, kind/feature, priority/backlog, kind/bug, target/kubernetes, scan/misconfiguration, help wanted, scan/vulnerability, lifecycle/frozen, priority/important-longterm, triage/support, scan/sbom, priority/important-soon, lifecycle/active, good first issue, target/container-image, scan/secret, lifecycle/stale, scan/license, kind/testing, kind/documentation, target/vm, triage/discuss, target/cloud, kind/deprecation, kind/breaking, github_actions, bug, triage/unresolved, triage/obsolete, triage/not-reproducible"
VictoriaMetrics,VictoriaMetrics/VictoriaMetrics,11026,"['Go', 'TypeScript', 'SCSS']","['tsdb', 'prometheus', 'promql', 'influxdb', 'graphite']","# VictoriaMetrics []( []( []( []( []( []( []( []( VictoriaMetrics is a fast, cost-effective and scalable monitoring solution and time series database. See [case studies for VictoriaMetrics]( VictoriaMetrics is available in [binary releases]( [Docker images]( [Snap packages]( and [source code]( Documentation for the cluster version of VictoriaMetrics is available [here]( Learn more about [key concepts]( of VictoriaMetrics and follow the [quick start guide]( for a better experience. If you have questions about VictoriaMetrics, then feel free asking them in the [VictoriaMetrics community Slack chat]( you can join it via [Slack Inviter]( [Contact us](mailto:info@victoriametrics.com) if you need enterprise support for VictoriaMetrics. See [features available in enterprise package]( Enterprise binaries can be downloaded and evaluated for free from [the releases page]( You can also [request a free trial license]( VictoriaMetrics is developed at a fast pace, so it is recommended to check the [CHANGELOG]( periodically, and to perform [regular upgrades](#how-to-upgrade-victoriametrics). [VictoriaMetrics enterprise]( provides long-term support lines of releases (LTS releases) - see [these docs]( VictoriaMetrics has achieved security certifications for Database Software Development and Software-Based Monitoring Services. We apply strict security measures in everything we do. See [Security page]( for more details. ## Prominent features VictoriaMetrics has the following prominent features: * It can be used as long-term storage for Prometheus. See [these docs](#prometheus-setup) for details. * It can be used as a drop-in replacement for Prometheus in Grafana, because it supports the [Prometheus querying API](#prometheus-querying-api-usage). * It can be used as a drop-in replacement for Graphite in Grafana, because it supports the [Graphite API](#graphite-api-usage). VictoriaMetrics allows reducing infrastructure costs by more than 10x comparing to Graphite - see [this case study]( * It is easy to setup and operate: * VictoriaMetrics consists of a single [small executable]( without external dependencies. * All the configuration is done via explicit command-line flags with reasonable defaults. * All the data is stored in a single directory specified by the `-storageDataPath` command-line flag. * Easy and fast backups from [instant snapshots]( can be done with [vmbackup]( / [vmrestore]( tools. See [this article]( for more details. * It implements a PromQL-like query language - [MetricsQL]( which provides improved functionality on top of PromQL. * It provides a global query view. Multiple Prometheus instances or any other data sources may ingest data into VictoriaMetrics. Later this data may be queried via a single query. * It provides high performance and good vertical and horizontal scalability for both [data ingestion]( and [data querying]( It [outperforms InfluxDB and TimescaleDB by up to 20x]( * It [uses 10x less RAM than InfluxDB]( and [up to 7x less RAM than Prometheus, Thanos or Cortex]( when dealing with millions of unique time series (aka [high cardinality]( * It is optimized for time series with [high churn rate]( * It provides high data compression: up to 70x more data points may be stored into limited storage compared with TimescaleDB according to [these benchmarks]( and up to 7x less storage space is required compared to Prometheus, Thanos or Cortex. according to [this benchmark]( * It is optimized for storage with high-latency IO and low IOPS (HDD and network storage in AWS, Google Cloud, Microsoft Azure, etc). See [disk IO graphs from these benchmarks]( * A single-node VictoriaMetrics may substitute moderately sized clusters built with competing solutions such as Thanos, M3DB, Cortex, InfluxDB or TimescaleDB. See [vertical scalability benchmarks]( [comparing Thanos to VictoriaMetrics cluster]( and [Remote Write Storage Wars]( talk from [PromCon 2019]( * It protects the storage from data corruption on unclean shutdown (i.e. OOM, hardware reset or `kill -9`) thanks to [the storage architecture]( * It supports metrics scraping, ingestion and [backfilling](#backfilling) via the following protocols: * [Metrics scraping from Prometheus exporters](#how-to-scrape-prometheus-exporters-such-as-node-exporter). * [Prometheus remote write API](#prometheus-setup). * [Prometheus exposition format](#how-to-import-data-in-prometheus-exposition-format). * [InfluxDB line protocol](#how-to-send-data-from-influxdb-compatible-agents-such-as-telegraf) over HTTP, TCP and UDP. * [Graphite plaintext protocol](#how-to-send-data-from-graphite-compatible-agents-such-as-statsd) with [tags]( * [Statsd plaintext protocol](#how-to-send-data-from-statsd-compatible-clients) * [OpenTSDB put message](#sending-data-via-telnet-put-protocol). * [HTTP OpenTSDB /api/put requests](#sending-opentsdb-data-via- * [JSON line format](#how-to-import-data-in-json-line-format). * [Arbitrary CSV data](#how-to-import-csv-data). * [Native binary format](#how-to-import-data-in-native-format). * [DataDog agent or DogStatsD](#how-to-send-data-from-datadog-agent). * [NewRelic infrastructure agent](#how-to-send-data-from-newrelic-agent). * [OpenTelemetry metrics format](#sending-data-via-opentelemetry). * It supports powerful [stream aggregation]( which can be used as a [statsd]( alternative. * It supports metrics [relabeling](#relabeling). * It can deal with [high cardinality issues]( and [high churn rate]( issues via [series limiter](#cardinality-limiter). * It ideally works with big amounts of time series data from APM, Kubernetes, IoT sensors, connected cars, industrial telemetry, financial data and various [Enterprise workloads]( * It has an open source [cluster version]( * It can store data on [NFS-based storages]( such as [Amazon EFS]( and [Google Filestore]( See [case studies for VictoriaMetrics]( and [various Articles about VictoriaMetrics]( ## Components VictoriaMetrics ecosystem contains the following components additionally to [single-node VictoriaMetrics]( - [vmagent]( - lightweight agent for receiving metrics via [pull-based]( and [push-based]( protocols, transforming and sending them to the configured Prometheus-compatible remote storage systems such as VictoriaMetrics. - [vmalert]( - a service for processing Prometheus-compatible alerting and recording rules. - [vmalert-tool]( - a tool for validating alerting and recording rules. - [vmauth]( - authorization proxy and load balancer optimized for VictoriaMetrics products. - [vmgateway]( - authorization proxy with per-[tenant]( rate limiting cababilities. - [vmctl]( - a tool for migrating and copying data between different storage systems for metrics. - [vmbackup]( [vmrestore]( and [vmbackupmanager]( - tools for creating backups and restoring from backups for VictoriaMetrics data. - `vminsert`, `vmselect` and `vmstorage` - components of [VictoriaMetrics cluster]( - [VictoriaLogs]( - user-friendly cost-efficient database for logs. ## Operation ### Install To quickly try VictoriaMetrics, just download the [VictoriaMetrics executable]( or [Docker image]( and start it with the desired command-line flags. See also [QuickStart guide]( for additional information. VictoriaMetrics can also be installed via these installation methods: * [Helm charts for single-node and cluster versions of VictoriaMetrics]( * [Kubernetes operator for VictoriaMetrics]( * [Ansible role for installing cluster VictoriaMetrics (by VictoriaMetrics)]( * [Ansible role for installing cluster VictoriaMetrics (by community)]( * [Ansible role for installing single-node VictoriaMetrics (by community)]( * [Snap package for VictoriaMetrics]( ### How to start VictoriaMetrics The following command-line flags are used the most: * `-storageDataPath` - VictoriaMetrics stores all the data in this directory. The default path is `victoria-metrics-data` in the current working directory. * `-retentionPeriod` - retention for stored data. Older data is automatically deleted. Default retention is 1 month (31 days). The minimum retention period is 24h or 1d. See [these docs](#retention) for more details. Other flags have good enough default values, so set them only if you really need to. Pass `-help` to see [all the available flags with description and default values](#list-of-command-line-flags). The following docs may be useful during initial VictoriaMetrics setup: * [How to set up scraping of Prometheus-compatible targets]( * [How to ingest data to VictoriaMetrics](#how-to-import-time-series-data) * [How to set up Prometheus to write data to VictoriaMetrics]( * [How to query VictoriaMetrics via Grafana](#grafana-setup) * [How to query VictoriaMetrics via Graphite API](#graphite-api-usage) * [How to handle alerts](#alerting) VictoriaMetrics accepts [Prometheus querying API requests](#prometheus-querying-api-usage) on port `8428` by default. It is recommended setting up [monitoring](#monitoring) for VictoriaMetrics. ### Environment variables All the VictoriaMetrics components allow referring environment variables in `yaml` configuration files (such as `-promscrape.config`) and in command-line flags via `%{ENV_VAR}` syntax. For example, `-metricsAuthKey=%{METRICS_AUTH_KEY}` is automatically expanded to `-metricsAuthKey=top-secret` if `METRICS_AUTH_KEY=top-secret` environment variable exists at VictoriaMetrics startup. This expansion is performed by VictoriaMetrics itself. VictoriaMetrics recursively expands `%{ENV_VAR}` references in environment variables on startup. For example, `FOO=%{BAR}` environment variable is expanded to `FOO=abc` if `BAR=a%{BAZ}` and `BAZ=bc`. Additionally, all the VictoriaMetrics components allow setting flag values via environment variables according to these rules: * The `-envflag.enable` flag must be set. * Each `.` char in flag name must be substituted with `_` (for example `-insert.maxQueueDuration ` will translate to `insert_maxQueueDuration=`). * For repeating flags an alternative syntax can be used by joining the different values... [TRUNCATED]","1.1k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, enhancement, question, bug, vmagent, vmalert, victorialogs, need more info, help wanted, vmui, metricsql, TBD, streamaggr, enterprise, vmauth, vmctl, vmbackup, performance, docs, vmgateway, backup, k8s, graphite, vmrestore, security, dashboard, packages, operator, good first issue, windows, snap"
containerd,containerd/containerd,16487,"['Go', 'Shell', 'Makefile']","['containerd', 'oci', 'containers', 'docker', 'cncf']","[]( []( []( []( []( []( containerd is an industry-standard container runtime with an emphasis on simplicity, robustness, and portability. It is available as a daemon for Linux and Windows, which can manage the complete container lifecycle of its host system: image transfer and storage, container execution and supervision, low-level storage and network attachments, etc. containerd is a member of CNCF with ['graduated']( status. containerd is designed to be embedded into a larger system, rather than being used directly by developers or end-users. ## Announcements ### Now Recruiting We are a large inclusive OSS project that is welcoming help of any kind shape or form: * Documentation help is needed to make the product easier to consume and extend. * We need OSS community outreach/organizing help to get the word out; manage and create messaging and educational content; and help with social media, community forums/groups, and google groups. * We are actively inviting new [security advisors]( to join the team. * New subprojects are being created, core and non-core that could use additional development help. * Each of the [containerd projects]( has a list of issues currently being worked on or that need help resolving. - If the issue has not already been assigned to someone or has not made recent progress, and you are interested, please inquire. - If you are interested in starting with a smaller/beginner-level issue, look for issues with an `exp/beginner` tag, for example [containerd/containerd beginner issues.]( ## Getting Started See our documentation on [containerd.io]( * [for ops and admins](docs/ops.md) * [namespaces](docs/namespaces.md) * [client options](docs/client-opts.md) To get started contributing to containerd, see [CONTRIBUTING](CONTRIBUTING.md). If you are interested in trying out containerd see our example at [Getting Started](docs/getting-started.md). ## Nightly builds There are nightly builds available for download [here]( Binaries are generated from `main` branch every night for `Linux` and `Windows`. Please be aware: nightly builds might have critical bugs, it's not recommended for use in production and no support provided. ## Kubernetes (k8s) CI Dashboard Group The [k8s CI dashboard group for containerd]( contains test results regarding the health of kubernetes when run against main and a number of containerd release branches. - [containerd-periodics]( ## Runtime Requirements Runtime requirements for containerd are very minimal. Most interactions with the Linux and Windows container feature sets are handled via [runc]( and/or OS-specific libraries (e.g. [hcsshim]( for Microsoft). The current required version of `runc` is described in [RUNC.md](docs/RUNC.md). There are specific features used by containerd core code and snapshotters that will require a minimum kernel version on Linux. With the understood caveat of distro kernel versioning, a reasonable starting point for Linux is a minimum 4.x kernel version. The overlay filesystem snapshotter, used by default, uses features that were finalized in the 4.x kernel series. If you choose to use btrfs, there may be more flexibility in kernel version (minimum recommended is 3.18), but will require the btrfs kernel module and btrfs tools to be installed on your Linux distribution. To use Linux checkpoint and restore features, you will need `criu` installed on your system. See more details in [Checkpoint and Restore](#checkpoint-and-restore). Build requirements for developers are listed in [BUILDING](BUILDING.md). ## Supported Registries Any registry which is compliant with the [OCI Distribution Specification]( is supported by containerd. For configuring registries, see [registry host configuration documentation](docs/hosts.md) ## Features ### Client containerd offers a full client package to help you integrate containerd into your platform. ```go import ( ""context"" containerd ""github.com/containerd/containerd/v2/client"" ""github.com/containerd/containerd/v2/pkg/cio"" ""github.com/containerd/containerd/v2/pkg/namespaces"" ) func main() { client, err := containerd.New(""/run/containerd/containerd.sock"") defer client.Close() } ``` ### Namespaces Namespaces allow multiple consumers to use the same containerd without conflicting with each other. It has the benefit of sharing content while maintaining separation with containers and images. To set a namespace for requests to the API: ```go context = context.Background() // create a context for docker docker = namespaces.WithNamespace(context, ""docker"") containerd, err := client.NewContainer(docker, ""id"") ``` To set a default namespace on the client: ```go client, err := containerd.New(address, containerd.WithDefaultNamespace(""docker"")) ``` ### Distribution ```go // pull an image image, err := client.Pull(context, ""docker.io/library/redis:latest"") // push an image err := client.Push(context, ""docker.io/library/redis:latest"", image.Target()) ``` ### Containers In containerd, a container is a metadata object. Resources such as an OCI runtime specification, image, root filesystem, and other metadata can be attached to a container. ```go redis, err := client.NewContainer(context, ""redis-master"") defer redis.Delete(context) ``` ### OCI Runtime Specification containerd fully supports the OCI runtime specification for running containers. We have built-in functions to help you generate runtime specifications based on images as well as custom parameters. You can specify options when creating a container about how to modify the specification. ```go redis, err := client.NewContainer(context, ""redis-master"", containerd.WithNewSpec(oci.WithImageConfig(image))) ``` ### Root Filesystems containerd allows you to use overlay or snapshot filesystems with your containers. It comes with built-in support for overlayfs and btrfs. ```go // pull an image and unpack it into the configured snapshotter image, err := client.Pull(context, ""docker.io/library/redis:latest"", containerd.WithPullUnpack) // allocate a new RW root filesystem for a container based on the image redis, err := client.NewContainer(context, ""redis-master"", containerd.WithNewSnapshot(""redis-rootfs"", image), containerd.WithNewSpec(oci.WithImageConfig(image)), ) // use a readonly filesystem with multiple containers for i := 0; i < 10; i++ { id := fmt.Sprintf(""id-%s"", i) container, err := client.NewContainer(ctx, id, containerd.WithNewSnapshotView(id, image), containerd.WithNewSpec(oci.WithImageConfig(image)), ) } ``` ### Tasks Taking a container object and turning it into a runnable process on a system is done by creating a new `Task` from the container. A task represents the runnable object within containerd. ```go // create a new task task, err := redis.NewTask(context, cio.NewCreator(cio.WithStdio)) defer task.Delete(context) // the task is now running and has a pid that can be used to setup networking // or other runtime settings outside of containerd pid := task.Pid() // start the redis-server process inside the container err := task.Start(context) // wait for the task to exit and get the exit status status, err := task.Wait(context) ``` ### Checkpoint and Restore If you have [criu]( installed on your machine you can checkpoint and restore containers and their tasks. This allows you to clone and/or live migrate containers to other machines. ```go // checkpoint the task then push it to a registry checkpoint, err := task.Checkpoint(context) err := client.Push(context, ""myregistry/checkpoints/redis:master"", checkpoint) // on a new machine pull the checkpoint and restore the redis container checkpoint, err := client.Pull(context, ""myregistry/checkpoints/redis:master"") redis, err = client.NewContainer(context, ""redis-master"", containerd.WithNewSnapshot(""redis-rootfs"", checkpoint)) defer container.Delete(context) task, err = redis.NewTask(context, cio.NewCreator(cio.WithStdio), containerd.WithTaskCheckpoint(checkpoint)) defer task.Delete(context) err := task.Start(context) ``` ### Snapshot Plugins In addition to the built-in Snapshot plugins in containerd, additional external plugins can be configured using GRPC. An external plugin is made available using the configured name and appears as a plugin alongside the built-in ones. To add an external snapshot plugin, add the plugin to containerd's config file (by default at `/etc/containerd/config.toml`). The string following `proxy_plugin.` will be used as the name of the snapshotter and the address should refer to a socket with a GRPC listener serving containerd's Snapshot GRPC API. Remember to restart containerd for any configuration changes to take effect. ``` [proxy_plugins] [proxy_plugins.customsnapshot] type = ""snapshot"" address = ""/var/run/mysnapshotter.sock"" ``` See [PLUGINS.md](/docs/PLUGINS.md) for how to create plugins ### Releases and API Stability Please see [RELEASES.md](RELEASES.md) for details on versioning and stability of containerd components. Downloadable 64-bit Intel/AMD binaries of all official releases are available on our [releases page]( For other architectures and distribution support, you will find that many Linux distributions package their own containerd and provide it across several architectures, such as [Canonical's Ubuntu packaging]( #### Enabling command auto-completion Starting with containerd 1.4, the urfave client feature for auto-creation of bash and zsh autocompletion data is enabled. To use the autocomplete feature in a bash shell for example, source the autocomplete/ctr file in your `.bashrc`, or manually like: ``` $ source ./contrib/autocomplete/ctr ``` #### Distribution of `ctr` autocomplete for bash and zsh For bash, copy the `contrib/autocomplete/ctr` script into `/etc/bash_completion.d/` and rename it to `ctr`. The `zsh_autocomplete` file is also available and can be used similarly for zsh users. Provide documentation to users to `source` this file into their shell if you don't place the autocomplete file in a location where it is automatically loaded for the user's shell environment. ##... [TRUNCATED]","3.3k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, kind/bug, kind/feature, area/cri, needs-ok-to-test, needs-rebase, kind/enhancement, platform/windows, ok-to-test, help-wanted, kind/docs, size/M, size/L, size/XXL, kind/question, size/XS, size/S, kind/test, status/needs-discussion, status/needs-update, exp/intermediate, impact/changelog, kind/performance, exp/beginner, do-not-merge/work-in-progress, Stale, area/snapshotter, status/more-info-needed, kind/support, kind/help-wanted, kind/external"
blackbox_exporter,prometheus/blackbox_exporter,4359,"['Go', 'Makefile', 'Dockerfile']","['blackbox-exporter', 'icmp', 'prometheus-exporter', 'prometheus']","# Blackbox exporter [][circleci] [][quay] [][hub] The blackbox exporter allows blackbox probing of endpoints over HTTP, HTTPS, DNS, TCP, ICMP and gRPC. ## Running this software ### From binaries Download the most suitable binary from [the releases tab]( Then: ./blackbox_exporter ### Using the docker image *Note: You may want to [enable ipv6 in your docker configuration]( docker run --rm \ -p 9115/tcp \ --name blackbox_exporter \ -v $(pwd):/config \ quay.io/prometheus/blackbox-exporter:latest --config.file=/config/blackbox.yml ### Checking the results Visiting [ will return metrics for a HTTP probe against google.com. The `probe_success` metric indicates if the probe succeeded. Adding a `debug=true` parameter will return debug information for that probe. Metrics concerning the operation of the exporter itself are available at the endpoint . ### TLS and basic authentication The Blackbox Exporter supports TLS and basic authentication. This enables better control of the various HTTP endpoints. To use TLS and/or basic authentication, you need to pass a configuration file using the `--web.config.file` parameter. The format of the file is described [in the exporter-toolkit repository]( Note that the TLS and basic authentication settings affect all HTTP endpoints: /metrics for scraping, /probe for probing, and the web UI. ## Building the software ### Local Build make ### Building with Docker After a successful local build: docker build -t blackbox_exporter . ## [Configuration](CONFIGURATION.md) Blackbox exporter is configured via a [configuration file](CONFIGURATION.md) and command-line flags (such as what configuration file to load, what port to listen on, and the logging format and level). Blackbox exporter can reload its configuration file at runtime. If the new configuration is not well-formed, the changes will not be applied. A configuration reload is triggered by sending a `SIGHUP` to the Blackbox exporter process or by sending a HTTP POST request to the `/-/reload` endpoint. To view all available command-line flags, run `./blackbox_exporter -h`. To specify which [configuration file](CONFIGURATION.md) to load, use the `--config.file` flag. Additionally, an [example configuration](example.yml) is also available. HTTP, HTTPS (via the ` prober), DNS, TCP socket, ICMP and gRPC (see permissions section) are currently supported. Additional modules can be defined to meet your needs. The timeout of each probe is automatically determined from the `scrape_timeout` in the [Prometheus config]( slightly reduced to allow for network delays. This can be further limited by the `timeout` in the Blackbox exporter config file. If neither is specified, it defaults to 120 seconds. ## Prometheus Configuration Blackbox exporter implements the multi-target exporter pattern, so we advice to read the guide [Understanding and using the multi-target exporter pattern ]( to get the general idea about the configuration. The blackbox exporter needs to be passed the target as a parameter, this can be done with relabelling. Example config: ```yml scrape_configs: - job_name: 'blackbox' metrics_path: /probe params: module: [ # Look for a HTTP 200 response. static_configs: - targets: - # Target to probe with - # Target to probe with - # Target to probe with http on port 8080. relabel_configs: - source_labels: [__address__] target_label: __param_target - source_labels: [__param_target] target_label: instance - target_label: __address__ replacement: 127.0.0.1:9115 # The blackbox exporter's real hostname:port. - job_name: 'blackbox_exporter' # collect blackbox exporter's operational metrics. static_configs: - targets: ['127.0.0.1:9115'] ``` HTTP probes can accept an additional `hostname` parameter that will set `Host` header and TLS SNI. This can be especially useful with `dns_sd_config`: ```yaml scrape_configs: - job_name: blackbox_all metrics_path: /probe params: module: [ ] # Look for a HTTP 200 response. dns_sd_configs: - names: - example.com - prometheus.io type: A port: 443 relabel_configs: - source_labels: [__address__] target_label: __param_target replacement: # Make probe URL be like - source_labels: [__param_target] target_label: instance - target_label: __address__ replacement: 127.0.0.1:9115 # The blackbox exporter's real hostname:port. - source_labels: [__meta_dns_name] target_label: __param_hostname # Make domain name become 'Host' header for probe requests - source_labels: [__meta_dns_name] target_label: vhost # and store it in 'vhost' label ``` ## Permissions The ICMP probe requires elevated privileges to function: * *Windows*: Administrator privileges are required. * *Linux*: either a user with a group within `net.ipv4.ping_group_range`, the `CAP_NET_RAW` capability or the root user is required. * Your distribution may configure `net.ipv4.ping_group_range` by default in `/etc/sysctl.conf` or similar. If not you can set `net.ipv4.ping_group_range = 0 2147483647` to allow any user the ability to use ping. * Alternatively the capability can be set by executing `setcap cap_net_raw+ep blackbox_exporter` * *BSD*: root user is required. * *OS X*: No additional privileges are needed. [circleci]: [hub]: [quay]:","1k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, feature-request, help wanted, dependencies, enhancement, bug, wontfix, question, keepalive, invalid, good first issue, duplicate"
buf,bufbuild/buf,8348,"['Go', 'Makefile', 'Shell']","['protocol-buffers', 'protoc', 'grpc', 'protobuf', 'buf-cli']","# Buf []( []( []( []( []( [][badges_slack] The [`buf`][buf] CLI is the best tool for working with [Protocol Buffers][protobuf]. It provides: - A [linter][lint_usage] that enforces good API design choices and structure. - A [breaking change detector][breaking_usage] that enforces compatibility at the source code or wire level. - A [generator][generate_usage] that invokes your plugins based on configurable [templates][templates]. - A [formatter][format_usage] that formats your Protobuf files in accordance with industry standards. - Integration with the [Buf Schema Registry][bsr], including full dependency management. ## Installation ### Homebrew You can install `buf` using [Homebrew][brew] (macOS or Linux): ```sh brew install bufbuild/buf/buf ``` This installs: - The `buf`, [`protoc-gen-buf-breaking`][breaking], and [`protoc-gen-buf-lint`][lint] binaries - Shell completion scripts for [Bash], [Fish], [Powershell], and [zsh] ### Other methods For other installation methods, see our [official documentation][install], which covers: - Installing `buf` via [npm] - Installing `buf` on [Windows] - Using `buf` as a [Docker image][docker] - Installing as a [binary], from a [tarball], and from [source] through [GitHub Releases][releases] - [Verifying] releases using a [minisign] public key ## Usage Buf's help interface provides summaries for commands and flags: ```sh buf --help ``` For more comprehensive usage information, consult Buf's [documentation][docs], especially these guides: * [`buf breaking`][breaking_usage] * [`buf build`][build_usage] * [`buf generate`][generate_usage] * [`buf lint`][lint_usage] * [`buf format`][format_usage] * [`buf registry`][bsr_usage] (for using the [BSR]) ## CLI breaking change policy We will never make breaking changes within a given major version of the CLI. Once `buf` reaches v1.0, you can expect no breaking changes until v2.0. But as we have no plans to ever release a v2.0, we will likely never break the `buf` CLI. > This breaking change policy does _not_ apply to commands behind the `buf beta` gate, and you should expect breaking changes to commands like `buf beta registry`. The policy does go into effect, however, when those commands or flags are elevated out of beta. ## Our goals for Protobuf [Buf]'s goal is to replace the current paradigm of API development, centered around REST/JSON, with a **schema-driven** paradigm. Defining APIs using an [IDL] provides numerous benefits over REST/JSON, and [Protobuf] is by far the most stable and widely adopted IDL in the industry. We've chosen to build on this widely trusted foundation rather than creating a new IDL from scratch. But despite its technical merits, actually _using_ Protobuf has long been more challenging than it needs to be. The Buf CLI and the [BSR](#the-buf-schema-registry) are the cornerstones of our effort to change that for good and to make Protobuf reliable and easy to use for service owners and clients alikein other words, to create a **modern Protobuf ecosystem**. While we intend to incrementally improve on the `buf` CLI and the [BSR](#the-buf-schema-registry), we're confident that the basic groundwork for such an ecosystem is _already_ in place. ## The Buf Schema Registry The [Buf Schema Registry][bsr] (BSR) is a SaaS platform for managing your Protobuf APIs. It provides a centralized registry and a single source of truth for all of your Protobuf assets, including not just your `.proto` files but also [remote plugins][bsr_plugins]. Although the BSR provides an intuitive browser UI, `buf` enables you to perform most BSR-related tasks from the command line, such as [pushing] Protobuf sources to the registry and managing [users] and [repositories]. > The BSR is not required to use `buf`. We've made the core [features] of the `buf` CLI available to _all_ Protobuf users. ## More advanced CLI features While `buf`'s [core features][features] should cover most use cases, we've included some more advanced features to cover edge cases: * **Automatic file discovery**. Buf walks your file tree and builds your `.proto` files in accordance with your supplied [build configuration][build_config], which means that you no longer need to manually specify `--proto_paths`. You can still, however, specify `.proto` files manually through CLI flags in cases where file discovery needs to be disabled. * **Fine-grained rule configuration** for [linting][lint_rules] and [breaking changes][breaking_rules]. While we do have recommended defaults, you can always select the exact set of rules that your use case requires, with [40 lint rules][lint_rules] and [53 breaking change rules][breaking_rules] available. * **Configurable error formats** for CLI output. `buf` outputs information in `file:line:column:message` form by default for each lint error and breaking change it encounters, but you can also select JSON and, in the near future, JUnit output. * **Editor integration** driven by `buf`'s granular error output. We currently provide linting integrations for both [Vim and Visual Studio Code][ide] but we plan to support other editors, such as Emacs and [JetBrains IDEs][jetbrains] like IntelliJ and GoLand, in the future. * **Universal Input targeting**. Buf enables you to perform actions like linting and breaking change detection not just against local `.proto` files but also against a broad range of other [Inputs], such as tarballs and ZIP files, remote Git repositories, and pre-built [image][images] files. * **Speed**. Buf's internal Protobuf compiler compiles your Protobuf sources using all available cores without compromising deterministic output, which is considerably faster than `protoc`. This allows for near-instantaneous feedback, which is of special importance for features like [editor integration][ide]. ## Next steps Once you've installed `buf`, we recommend completing the [Tour of Buf][tour], which provides a broad but hands-on overview of the core functionality of both the CLI and the [BSR]. The tour takes about 10 minutes to complete. After completing the tour, check out the remainder of the [docs] for your specific areas of interest. ## Community For help and discussion around Protobuf, best practices, and more, join us on [Slack][badges_slack]. For updates on the Buf CLI, [follow this repo on GitHub][repo]. For feature requests, bugs, or technical questions, email us at [dev@buf.build][email_dev]. For general inquiries or inclusion in our upcoming feature betas, email us at [info@buf.build][email_info]. [badges_slack]: [bash]: [binary]: [breaking]: [breaking_rules]: [breaking_usage]: [brew]: [bsr]: [bsr_plugins]: [bsr_usage]: [buf]: [build_config]: [build_usage]: [compiler]: [contact]: [docker]: [docs]: [email_dev]: mailto:dev@buf.build [email_info]: mailto:info@buf.build [filedescriptorset]: [features]: #features [fish]: [format_usage]: [generate_usage]: [ide]: [idl]: [images]: [inputs]: [install]: [jetbrains]: [lint]: [lint_rules]: [lint_usage]: [npm]: [minisign]: [powershell]: [protobuf]: [pushing]: [releases]: [repo]: [repositories]: [roadmap]: [source]: [tarball]: [templates]: [tour]: [users]: [verifying]: [windows]: [zsh]:","243, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, Feature, Bug, Cleanup, Wishlist, dependencies, BSR, go, github_actions, docker, Needs investigation, Needs clarification, Won't Fix, Duplicate, Buf CLI"
Ventoy,ventoy/Ventoy,58776,"['C', 'Shell', 'HTML']","['bootable-usb', 'multiboot', 'uefi', 'legacy', 'iso-files']","Ventoy Ventoy is an open source tool to create bootable USB drive for ISO/WIM/IMG/VHD(x)/EFI files. With ventoy, you don't need to format the disk over and over, you just need to copy the image files to the USB drive and boot it. You can copy many image files at a time and ventoy will give you a boot menu to select them. You can also browse ISO/WIM/IMG/VHD(x)/EFI files in local disk and boot them. x86 Legacy BIOS, IA32 UEFI, x86_64 UEFI, ARM64 UEFI and MIPS64EL UEFI are supported in the same way. Both MBR and GPT partition style are supported in the same way. Most type of OS supported(Windows/WinPE/Linux/Unix/ChromeOS/Vmware/Xen...) 1200+ ISO files are tested (List). 90%+ distros in distrowatch.com supported (Details). Official Website: # Tested OS **Windows** Windows 7, Windows 8, Windows 8.1, Windows 10, Windows 11, Windows Server 2012, Windows Server 2012 R2, Windows Server 2016, Windows Server 2019, Windows Server 2022, WinPE **Linux** Debian, Ubuntu, CentOS(6/7/8/9), RHEL(6/7/8/9), Deepin, Fedora, Rocky Linux, AlmaLinux, EuroLinux(6/7/8/9), openEuler, OpenAnolis, SLES, openSUSE, MX Linux, Manjaro, Linux Mint, Endless OS, Elementary OS, Solus, Linx, Zorin, antiX, PClinuxOS, Arch, ArcoLinux, ArchLabs, BlackArch, Obarun, Artix Linux, Puppy Linux, Tails, Slax, Kali, Mageia, Slackware, Q4OS, Archman, Gentoo, Pentoo, NixOS, Kylin, openKylin, Ubuntu Kylin, KylinSec, Lubuntu, Xubuntu, Kubuntu, Ubuntu MATE, Ubuntu Budgie, Ubuntu Studio, Bluestar, OpenMandriva, ExTiX, Netrunner, ALT Linux, Nitrux, Peppermint, KDE neon, Linux Lite, Parrot OS, Qubes, Pop OS, ROSA, Void Linux, Star Linux, EndeavourOS, MakuluLinux, Voyager, Feren, ArchBang, LXLE, Knoppix, Calculate Linux, Clear Linux, Pure OS, Oracle Linux, Trident, Septor, Porteus, Devuan, GoboLinux, 4MLinux, Simplicity Linux, Zeroshell, Android-x86, netboot.xyz, Slitaz, SuperGrub2Disk, Proxmox VE, Kaspersky Rescue, SystemRescueCD, MemTest86, MemTest86+, MiniTool Partition Wizard, Parted Magic, veket, Sabayon, Scientific, alpine, ClearOS, CloneZilla, Berry Linux, Trisquel, Ataraxia Linux, Minimal Linux Live, BackBox Linux, Emmabunts, ESET SysRescue Live,Nova Linux, AV Linux, RoboLinux, NuTyX, IPFire, SELKS, ZStack, Enso Linux, Security Onion, Network Security Toolkit, Absolute Linux, TinyCore, Springdale Linux, Frost Linux, Shark Linux, LinuxFX, Snail Linux, Astra Linux, Namib Linux, Resilient Linux, Virage Linux, Blackweb Security OS, R-DriveImage, O-O.DiskImage, Macrium, ToOpPy LINUX, GNU Guix, YunoHost, foxclone, siduction, Adelie Linux, Elive, Pardus, CDlinux, AcademiX, Austrumi, Zenwalk, Anarchy, DuZeru, BigLinux, OpenMediaVault, Ubuntu DP, Exe GNU/Linux, 3CX Phone System, KANOTIX, Grml, Karoshi, PrimTux, ArchStrike, CAELinux, Cucumber, Fatdog, ForLEx, Hanthana, Kwort, MiniNo, Redcore, Runtu, Asianux, Clu Linux Live, Uruk, OB2D, BlueOnyx, Finnix, HamoniKR, Parabola, LinHES, LinuxConsole, BEE free, Untangle, Pearl, Thinstation, TurnKey, tuxtrans, Neptune, HefftorLinux, GeckoLinux, Mabox Linux, Zentyal, Maui, Reborn OS, SereneLinux , SkyWave Linux, Kaisen Linux, Regata OS, TROM-Jaro, DRBL Linux, Chalet OS, Chapeau, Desa OS, BlankOn, OpenMamba, Frugalware, Kibojoe Linux, Revenge OS, Tsurugi Linux, Drauger OS, Hash Linux, gNewSense, Ikki Boot, SteamOS, Hyperbola, VyOS, EasyNAS, SuperGamer, Live Raizo, Swift Linux, RebeccaBlackOS, Daphile, CRUX, Univention, Ufficio Zero, Rescuezilla, Phoenix OS, Garuda Linux, Mll, NethServer, OSGeoLive, Easy OS, Volumio, FreedomBox, paldo, UBOS, Recalbox, batocera, Lakka, LibreELEC, Pardus Topluluk, Pinguy, KolibriOS, Elastix, Arya, Omoikane, Omarine, Endian Firewall, Hamara, Rocks Cluster, MorpheusArch, Redo, Slackel, SME Server, APODIO, Smoothwall, Dragora, Linspire, Secure-K OS, Peach OSI, Photon, Plamo, SuperX, Bicom, Ploplinux, HP SPP, LliureX, Freespire, DietPi, BOSS, Webconverger, Lunar, TENS, Source Mage, RancherOS, T2, Vine, Pisi, blackPanther, mAid, Acronis, Active.Boot, AOMEI, Boot.Repair, CAINE, DaRT, EasyUEFI, R-Drive, PrimeOS, Avira Rescue System, bitdefender, Checkra1n Linux, Lenovo Diagnostics, Clover, Bliss-OS, Lenovo BIOS Update, Arcabit Rescue Disk, MiyoLinux, TeLOS, Kerio Control, RED OS, OpenWrt, MocaccinoOS, EasyStartup, Pyabr, Refracta, Eset SysRescue, Linpack Xtreme, Archcraft, NHVBOOT, pearOS, SeaTools, Easy Recovery Essentional, iKuai, StorageCraft SCRE, ZFSBootMenu, TROMjaro, BunsenLabs, Todo en Uno, ChallengerOS, Nobara, Holo, CachyOS, Peux OS, Vanilla OS, ShredOS, paladin, Palen1x, dban, ReviOS, HelenOS, XeroLinux, Tiny 11, chimera linux, CuteFish, DragonOs, Rhino Linux, vanilladpup, crystal, IGELOS, MiniOS, gnoppix, PikaOS, ...... **Unix** DragonFly, FreeBSD, pfSense, GhostBSD, FreeNAS, TrueNAS, XigmaNAS, FuryBSD, OPNsense, HardenedBSD, MidnightBSD, ClonOS, EmergencyBootKit **ChromeOS** FydeOS, CloudReady, ChromeOS Flex **Other** VMware ESXi, Citrix XenServer, Xen XCP-ng # Tested Image Report [How to report a successfully tested image file]( # Ventoy Browser With Ventoy, you can also browse ISO/WIM/IMG/VHD(x)/EFI files in local disk and boot them. [Notes]( # VentoyPlugson A GUI Ventoy plugin configurator. [VentoyPlugson]( # Features * 100% open source * Simple to use * Fast (limited only by the speed of copying iso file) * Can be installed in USB/Local Disk/SSD/NVMe/SD Card * Directly boot from ISO/WIM/IMG/VHD(x)/EFI files, no extraction needed * Support to browse and boot ISO/WIM/IMG/VHD(x)/EFI files in local disk * No need to be continuous in disk for ISO/WIM/IMG/VHD(x)/EFI files * MBR and GPT partition style supported (1.0.15+) * x86 Legacy BIOS, IA32 UEFI, x86_64 UEFI, ARM64 UEFI, MIPS64EL UEFI supported * IA32/x86_64 UEFI Secure Boot supported (1.0.07+) * Linux Persistence supported (1.0.11+) * Windows auto installation supported (1.0.09+) * Linux auto installation supported (1.0.09+) * Variables Expansion supported for Windows/Linux auto installation script * FAT32/exFAT/NTFS/UDF/XFS/Ext2(3)(4) supported for main partition * ISO files larger than 4GB supported * Menu alias, Menu tip message supported * Password protect supported * Native boot menu style for Legacy & UEFI * Most types of OS supported, 1200+ iso files tested * Linux vDisk boot supported * Not only boot but also complete installation process * Menu dynamically switchable between List/TreeView mode * ""Ventoy Compatible"" concept * Plugin Framework and GUI plugin configurator * Injection files to runtime environment * Boot configuration file dynamically replacement * Highly customizable theme and menu * USB drive write-protected support * USB normal use unaffected * Data nondestructive during version upgrade * No need to update Ventoy when a new distro is released # Installation Instructions See [ for detailed instructions. # Compile Instructions Please refer to [BuildVentoyFromSource.txt](DOC/BuildVentoyFromSource.txt) # Document Title | Link -|- **Install & Update** | [ **Browse/Boot Files In Local Disk** | [ **Secure Boot** | [ **Customize Theme** | [ **Global Control** | [ **Image List** | [ **Auto Installation** | [ **Injection Plugin** | [ **Persistence Support** | [ **Boot WIM file** | [ **Windows VHD Boot** | [ **Linux vDisk Boot** | [ **DUD Plugin** | [ **Password Plugin** | [ **Conf Replace Plugin** | [ **Menu Class** | [ **Menu Alias** | [ **Menu Extension** | [ **Memdisk Mode** | [ **TreeView Mode** | [ **Disk Layout MBR** | [ **Disk Layout GPT** | [ **Search Configuration** | [ # FAQ See [ for detail # Forum [ # Donation It would be much appreciated if you want to make a small donation to support my work! Alipay, WeChat Pay, PayPal and Bitcoin are available for donation. You can choose any of them. Alipay | WeChat Pay -|- | **PayPal** You can transfer to my paypal account `admin@ventoy.net` or just click [ **Bitcoin** Bitcoin Address `19mZDWzZgzkHCi9YX9H3fYCUuCHq3W6wfT`","3.9k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, enhancement, Fixed, documentation, USB 2.0/3.0, Good practice, wontfix, question, invalid, help wanted, good first issue, duplicate, bug, USB Hardware Issue, 【Tested Image Report】, Not an issue, File Corrupted, Denied Feature Request"
unleashed-firmware,DarkFlippers/unleashed-firmware,15421,"['C', 'Python', 'C++']","['jailbreak', 'keeloq', 'rolling-codes', 'alternative-firmware', 'flipper']","### Welcome to the Flipper Zero Unleashed Firmware repo! #### **This firmware is a fork from original (OFW) firmware** [flipperdevices/flipperzero-firmware]( ### Most stable custom firmware focused on new features and improvements of original firmware components, keeping compatibility with original firmware API and Apps ##### This software is for experimental purposes only and is not meant for any illegal activity/purposes. We do not condone illegal activity and strongly encourage keeping transmissions to legal/valid uses allowed by law. Also, this software is made without any support from Flipper Devices and is in no way related to the official team. ## FAQ (frequently asked questions) [Follow this link to find answers to most asked questions]( ## Dev builds (unstable) (built automatically from dev branch) - - ## Releases in Telegram - # What's changed - **Sub-GHz** *lib & hal* - Regional TX restrictions removed - Extra Sub-GHz frequencies added - Frequency range can be extended in settings file (Warning: It can damage Flipper's hardware) - Many rolling code [protocols]( now have the ability to save & send captured signals - FAAC SLH (Spa) & BFT Mitto (keeloq secure with seed) manual creation - External CC1101 module support [(by quen0n)]( - **Sub-GHz** *Main App* - Save last used settings [(by derskythe)]( - New frequency analyzer [(by ClusterM)]( - Press OK in frequency analyzer to use detected frequency in Read modes [(by derskythe)]( - Long press OK button in Sub-GHz Frequency analyzer to switch to Read menu [(by derskythe)]( - New option to use timestamps + protocol name when you saving file, instead of random name or timestamp only - Enable in `Radio Settings -> Protocol Names = ON` - Read mode UI improvements (shows time when signal was received) (by @wosk) - External CC1101 module support (Hardware SPI used) - External CC1101 module amplifier control (or LED control) support (enabled by default) - **Hold right in received signal list to delete selected signal** - **Custom buttons for Keeloq / Alutech AT4N / Nice Flor S / Somfy Telis / Security+ 2.0 / CAME Atomo** - now you can use arrow buttons to send signal with different button code - `Add manually` menu extended with new protocols - FAAC SLH, BFT Mitto / Somfy Telis / Nice Flor S / CAME Atomo, etc.. manual creation with programming new remote into receiver (use button 0xF for BFT Mitto, 0x8 (Prog) on Somfy Telis, (right arrow button for other protocols)) - Debug mode counter increase settings (+1 -> +5, +10, default: +1) - Debug PIN output settings for protocol development - **Sub-GHz apps** *by unleashed team* - Sub-GHz Bruteforce - static code brute-force plugin | - Time delay (between signals) setting (hold Up in main screen(says Up to Save)) + configure repeats in protocols list by pressing right button on selected protocol - Load your own file and select bytes you want to bruteforce or use preconfigured options in protocols list - Sub-GHz Remote - remote control for 5 sub-ghz files | bind one file for each button - use the built-in constructor or make config file by following this [instruction]( - **Infrared** - Recompiled IR TV Universal Remote for ALL buttons - Universal remotes for Projectors, Fans, A/Cs and Audio(soundbars, etc.) -> Also always updated and verified by our team - Infrared -> `RCA` Protocol - Infrared -> External IR modules support (with autodetect by OFW) - **NFC/RFID/iButton** * LFRFID and iButton Fuzzer plugins * Extra Mifare Classic keys in system dict * EMV Protocol + Public data parser (by @Leptopt1los and @wosk) * NFC `Add manually` -> Mifare Classic with custom UID * NFC parsers: Umarsh, Zolotaya Korona, Kazan, Metromoney, Moscow Social Card, Troika (reworked) and [many others]( (by @Leptopt1los and @assasinfil) - **Quality of life & other features** - Customizable Flipper name **Update! Now can be changed in Settings->Desktop** (by @xMasterX and @Willy-JL) - Text Input UI element -> Cursor feature (by @Willy-JL) - Byte Input Mini editor -> **Press UP** multiple times until the nibble editor appears (by @gid9798) - Clock on Desktop -> `Settings -> Desktop -> Show Clock` (by @gid9798) - Battery percentage display with different styles `Settings -> Desktop -> Battery View` - More games in Dummy Mode -> click or hold any of arrow buttons - Lock device with pin(or regular lock if pin not set) by holding UP button on main screen [(by an4tur0r)]( - **BadKB** plugin [(by Willy-JL, ClaraCrazy, XFW contributors)]( - (See in Applications->Tools) - (aka BadUSB via Bluetooth) - BadUSB -> Keyboard layouts [(by rien > dummy-decoy)]( - Custom community plugins and games added + all known working apps can be downloaded in extra pack in every release - Other small fixes and changes throughout - See other changes in readme below Also check the [changelog in releases]( for latest updates! ### Current modified and new Sub-GHz protocols list: Thanks to Official team (to their SubGHz Developer, Skorp) for implementing support (decoder + encoder / or decode only) for these protocols in OFW. Keeloq [Not ALL systems supported for decode or emulation!] - [Supported manufacturers list]( Encoders or emulation support made by @xMasterX: - Nero Radio 57bit (+ 56bit support) - CAME 12bit/24bit encoder fixes (Fixes are now merged in OFW) - Keeloq: Dea Mio, Genius Bravo, GSN, HCS101, AN-Motors, JCM Tech, MHouse, Nice Smilo, DTM Neo, FAAC RC,XT, Mutancode, Normstahl, Beninca + Allmatic, Stilmatic, CAME Space, Aprimatic (model TR and similar), Centurion Nova (thanks Carlos !) Encoders or emulation made by @Eng1n33r(first implementation in Q2 2022) and @xMasterX (current version): - CAME Atomo -> Update! check out new [instructions]( - Nice Flor S -> How to create new remote - [instructions]( - FAAC SLH (Spa) -> Update!!! Check out new [instructions]( - Keeloq: BFT Mitto -> Update! Check out new [instructions]( - Star Line - Security+ v1 & v2 (encoders was made in OFW) Encoders made by @assasinfil and @xMasterX: - Somfy Telis -> How to create new remote - [instructions]( - Somfy Keytis - KingGates Stylo 4k - Alutech AT-4N -> How to create new remote - [instructions]( - Nice ON2E (Nice One) -> How to create new remote - [instructions]( ## Please support development of the project The majority of this project is developed and maintained by me, @xMasterX. Our team is small and the guys are working on this project as much as they can solely based on the enthusiasm they have for this project and the community. - @Leptopt1los - NFC, RFID, Plugins, and many other things - @gid9798 - SubGHz, Plugins, many other things - currently offline :( - @assasinfil - SubGHz protocols, NFC parsers - @Svaarich - UI design and animations - @amec0e - Infrared assets - Community moderators in Telegram, Discord, and Reddit - And of course our GitHub community. Your PRs are a very important part of this firmware and open-source development. The amount of work done on this project is huge and we need your support, no matter how large or small. Even if you just say, ""Thank you Unleashed firmware developers!"" somewhere. Doing so will help us continue our work and will help drive us to make the firmware better every time. Also, regarding our releases, every build has and always will be free and open-source. There will be no paywall releases or closed-source apps within the firmware. As long as I am working on this project it will never happen. You can support us by using links or addresses below: |Service|Remark|Link/Wallet| |-|-|-| |**Patreon**|| |**Boosty**|patreon alternative| |cloudtips|only RU payments accepted| |YooMoney|only RU payments accepted| |USDT|(TRC20)|`TSXcitMSnWXUFqiUfEXrTVpVewXy2cYhrs`| |ETH|(BSC/ERC20-Tokens)|`darkflippers.eth` (or `0xFebF1bBc8229418FF2408C07AF6Afa49152fEc6a`)| |BTC||`bc1q0np836jk9jwr4dd7p6qv66d04vamtqkxrecck9`| |SOL|(Solana/Tokens)|`DSgwouAEgu8iP5yr7EHHDqMNYWZxAqXWsTEeqCAXGLj8`| |DOGE||`D6R6gYgBn5LwTNmPyvAQR6bZ9EtGgFCpvv`| |LTC||`ltc1q3ex4ejkl0xpx3znwrmth4lyuadr5qgv8tmq8z9`| |BCH||`qquxfyzntuqufy2dx0hrfr4sndp0tucvky4sw8qyu3`| |XMR|(Monero)| `41xUz92suUu1u5Mu4qkrcs52gtfpu9rnZRdBpCJ244KRHf6xXSvVFevdf2cnjS7RAeYr5hn9MsEfxKoFDRSctFjG5fv1Mhn`| |TON||`UQCOqcnYkvzOZUV_9bPE_8oTbOrOF03MnF-VcJyjisTZmsxa`| ## Community apps included ### [ Download Extra plugins for Unleashed]( ### [List of Extra pack]( | [List of Base *(Default)* pack]( See full list and sources here: [xMasterX/all-the-plugins]( ### Official Flipper Zero Apps Catalog [web version]( or mobile app # Instructions ## First look at official docs [docs.flipper.net]( ## [How to install](/documentation/HowToInstall.md) - [versions info](/CHANGELOG.md#recommended-update-option---web-updater): `n`,` `,`e`... ## Firmware & Development ### - **Developer Documentation** - [developer.flipper.net]( ### - **[How to build](/documentation/HowToBuild.md#how-to-build-by-yourself) | [Project-structure](#project-structure)** ### - **CLion IDE** - How to setup workspace for flipper firmware development [by Savely Krasovsky]( ### - **""Hello world!""** - plugin tutorial [English by DroomOne ]( | [Russian by Pavel Yakovlev]( ### - [How to write your own app]( Docs by atmanos **outdated API** ## Firmware & main Apps feature ### - System: [How to change Flipper name]( ### - BadUSB: [How to add new keyboard layouts]( ### - Infrared: [How to make captures to add them into Universal IR remotes]( ## **Sub-GHz** ### - [How to use Flipper as new remote (Nice FlorS, BFT Mitto, Somfy Telis, Aprimatic, AN-Motors, etc..)]( ### - External Radio: [How to connect CC1101 module]( ### - Transmission is blocked? [How to extend Sub-GHz frequency range]( ### - [How to add extra Sub-GHz frequencies]( ### - [~~Configure Sub-GHz Remote App~~]( Not recommended, please use embedded configurator ## **Plugins** ### - TOTP (Authenticator): [config description]( ### - Barcode Generator: [How to use]( ### - Multi Converter: [How to use]( ### - WAV Player: [sample files & how to convert]( ### - Sub-GHz playlist: [generator script]( ## **Plugins ... [TRUNCATED]","1.3k, Code, Issues, Pull requests, Actions, Security, Insights, feature request, bug, question, wrong repo, wontfix, invalid, duplicate, documentation, help wanted"
libhv,ithewei/libhv,6433,"['C', 'C++', 'CMake']","['https', 'http-client', 'http-server', 'websocket', 'websocket-client']","English | [](README-CN.md) # libhv []( []( []( []( []( []( []( []( []( []( []( []( [](LICENSE) []( []( []( Like `libevent, libev, and libuv`, `libhv` provides event-loop with non-blocking IO and timer, but simpler api and richer protocols. ## Features - Cross-platform (Linux, Windows, macOS, Android, iOS, BSD, Solaris) - High-performance EventLoop (IO, timer, idle, custom, signal) - TCP/UDP client/server/proxy - TCP supports heartbeat, reconnect, upstream, MultiThread-safe write and close, etc. - Built-in common unpacking modes (FixedLength, Delimiter, LengthField) - RUDP support: WITH_KCP - SSL/TLS support: (via WITH_OPENSSL or WITH_GNUTLS or WITH_MBEDTLS) - HTTP client/server (support grpc) - HTTP supports static service, indexof service, forward/reverse proxy service, sync/async API handler - HTTP supports RESTful, router, middleware, keep-alive, chunked, SSE, etc. - WebSocket client/server - MQTT client ## Build see [BUILD.md](BUILD.md) Makefile: ```shell ./configure make sudo make install ``` or cmake: ```shell mkdir build cd build cmake .. cmake --build . ``` or bazel: ```shell bazel build libhv ``` or vcpkg: ```shell vcpkg install libhv ``` or xmake: ```shell xrepo install libhv ``` ## Getting Started run `./getting_started.sh`: ```shell git clone cd libhv ./configure make bin/ -h bin/ -d #bin/ -c etc/ -s restart -d ps aux | grep # http file service bin/curl -v localhost:8080 # http indexof service bin/curl -v localhost:8080/downloads/ # http api service bin/curl -v localhost:8080/ping bin/curl -v localhost:8080/echo -d ""hello,world!"" bin/curl -v localhost:8080/query?page_no=1\&page_size=10 bin/curl -v localhost:8080/kv -H ""Content-Type:application/x-www-form-urlencoded"" -d 'user=admin&pswd=123456' bin/curl -v localhost:8080/json -H ""Content-Type:application/json"" -d '{""user"":""admin"",""pswd"":""123456""}' bin/curl -v localhost:8080/form -F 'user=admin' -F 'pswd=123456' bin/curl -v localhost:8080/upload -d ""@LICENSE"" bin/curl -v localhost:8080/upload -F ""file=@LICENSE"" bin/curl -v localhost:8080/test -H ""Content-Type:application/x-www-form-urlencoded"" -d 'bool=1=123&float=3.14&string=hello' bin/curl -v localhost:8080/test -H ""Content-Type:application/json"" -d '{""bool"":true,""int"":123,""float"":3.14,""string"":""hello""}' bin/curl -v localhost:8080/test -F 'bool=1' -F 'int=123' -F 'float=3.14' -F 'string=hello' # RESTful API: /group/:group_name/user/:user_id bin/curl -v -X DELETE localhost:8080/group/test/user/123 # benchmark bin/wrk -c 1000 -d 10 -t 4 ``` ### TCP #### tcp server **c version**: [examples/tcp_echo_server.c](examples/tcp_echo_server.c) **c++ version**: [evpp/TcpServer_test.cpp](evpp/TcpServer_test.cpp) ```c++ #include ""TcpServer.h"" using namespace hv; int main() { int port = 1234; TcpServer srv; int listenfd = srv.createsocket(port); if (listenfd < 0) { return -1; } printf(""server listen on port %d, listenfd=%d ...\n"", port, listenfd); srv.onConnection = [](const SocketChannelPtr& channel) { std::string peeraddr = channel->peeraddr(); if (channel->isConnected()) { printf(""%s connected! connfd=%d\n"", peeraddr.c_str(), channel->fd()); } else { printf(""%s disconnected! connfd=%d\n"", peeraddr.c_str(), channel->fd()); } }; srv.onMessage = [](const SocketChannelPtr& channel, Buffer* buf) { // echo channel->write(buf); }; srv.setThreadNum(4); srv.start(); // press Enter to stop while (getchar() != '\n'); return 0; } ``` #### tcp client **c version**: [examples/tcp_client_test.c](examples/tcp_client_test.c) **c++ version**: [evpp/TcpClient_test.cpp](evpp/TcpClient_test.cpp) ```c++ #include #include ""TcpClient.h"" using namespace hv; int main() { int port = 1234; TcpClient cli; int connfd = cli.createsocket(port); if (connfd < 0) { return -1; } cli.onConnection = [](const SocketChannelPtr& channel) { std::string peeraddr = channel->peeraddr(); if (channel->isConnected()) { printf(""connected to %s! connfd=%d\n"", peeraddr.c_str(), channel->fd()); } else { printf(""disconnected to %s! connfd=%d\n"", peeraddr.c_str(), channel->fd()); } }; cli.onMessage = [](const SocketChannelPtr& channel, Buffer* buf) { printf(""< %.*s\n"", (int)buf->size(), (char*)buf->data()); }; cli.start(); std::string str; while (std::getline(std::cin, str)) { if (str == ""close"") { cli.closesocket(); } else if (str == ""start"") { cli.start(); } else if (str == ""stop"") { cli.stop(); break; } else { if (!cli.isConnected()) break; cli.send(str); } } return 0; } ``` ### HTTP #### http server see [examples/ **golang gin style** ```c++ #include ""HttpServer.h"" using namespace hv; int main() { HttpService router; router.GET(""/ping"", [](HttpRequest* req, HttpResponse* resp) { return resp->String(""pong""); }); router.GET(""/data"", [](HttpRequest* req, HttpResponse* resp) { static char data[] = ""0123456789""; return resp->Data(data, 10); }); router.GET(""/paths"", [&router](HttpRequest* req, HttpResponse* resp) { return resp->Json(router.Paths()); }); router.GET(""/get"", [](HttpRequest* req, HttpResponse* resp) { resp->json[""origin""] = req->client_addr.ip; resp->json[""url""] = req->url; resp->json[""args""] = req->query_params; resp->json[""headers""] = req->headers; return 200; }); router.POST(""/echo"", [](const HttpContextPtr& ctx) { return ctx->send(ctx->body(), ctx->type()); }); HttpServer server(&router); server.setPort(8080); server.setThreadNum(4); server.run(); return 0; } ``` #### http client see [examples/ **python requests style** ```c++ #include ""requests.h"" int main() { auto resp = requests::get("" if (resp == NULL) { printf(""request failed!\n""); } else { printf(""%s\n"", resp->body.c_str()); } resp = requests::post(""127.0.0.1:8080/echo"", ""hello,world!""); if (resp == NULL) { printf(""request failed!\n""); } else { printf(""%s\n"", resp->body.c_str()); } return 0; } ``` ### WebSocket #### WebSocket server see [examples/websocket_server_test.cpp](examples/websocket_server_test.cpp) ```c++ #include ""WebSocketServer.h"" using namespace hv; int main(int argc, char** argv) { WebSocketService ws; ws.onopen = [](const WebSocketChannelPtr& channel, const HttpRequestPtr& req) { printf(""onopen: GET %s\n"", req->Path().c_str()); }; ws.onmessage = [](const WebSocketChannelPtr& channel, const std::string& msg) { printf(""onmessage: %.*s\n"", (int)msg.size(), msg.data()); }; ws.onclose = [](const WebSocketChannelPtr& channel) { printf(""onclose\n""); }; WebSocketServer server(&ws); server.setPort(9999); server.setThreadNum(4); server.run(); return 0; } ``` #### WebSocket client see [examples/websocket_client_test.cpp](examples/websocket_client_test.cpp) ```c++ #include ""WebSocketClient.h"" using namespace hv; int main(int argc, char** argv) { WebSocketClient ws; ws.onopen = []() { printf(""onopen\n""); }; ws.onmessage = [](const std::string& msg) { printf(""onmessage: %.*s\n"", (int)msg.size(), msg.data()); }; ws.onclose = []() { printf(""onclose\n""); }; // reconnect: 1,2,4,8,10,10,10... reconn_setting_t reconn; reconn_setting_init(&reconn); reconn.min_delay = 1000; reconn.max_delay = 10000; reconn.delay_policy = 2; ws.setReconnect(&reconn); ws.open(""ws://127.0.0.1:9999/test""); std::string str; while (std::getline(std::cin, str)) { if (!ws.isConnected()) break; if (str == ""quit"") { ws.close(); break; } ws.send(str); } return 0; } ``` ## More examples ### c version - [examples/hloop_test.c](examples/hloop_test.c) - [examples/htimer_test.c](examples/htimer_test.c) - [examples/pipe_test.c](examples/pipe_test.c) - [examples/tcp_echo_server.c](examples/tcp_echo_server.c) - [examples/tcp_chat_server.c](examples/tcp_chat_server.c) - [examples/tcp_proxy_server.c](examples/tcp_proxy_server.c) - [examples/udp_echo_server.c](examples/udp_echo_server.c) - [examples/udp_proxy_server.c](examples/udp_proxy_server.c) - [examples/socks5_proxy_server.c](examples/socks5_proxy_server.c) - [examples/tiny - [examples/tinyproxyd.c](examples/tinyproxyd.c) - [examples/jsonrpc](examples/jsonrpc) - [examples/mqtt](examples/mqtt) - [examples/multi-thread/multi-acceptor-processes.c](examples/multi-thread/multi-acceptor-processes.c) - [examples/multi-thread/multi-acceptor-threads.c](examples/multi-thread/multi-acceptor-threads.c) - [examples/multi-thread/one-acceptor-multi-workers.c](examples/multi-thread/one-acceptor-multi-workers.c) ### c++ version - [evpp/EventLoop_test.cpp](evpp/EventLoop_test.cpp) - [evpp/EventLoopThread_test.cpp](evpp/EventLoopThread_test.cpp) - [evpp/EventLoopThreadPool_test.cpp](evpp/EventLoopThreadPool_test.cpp) - [evpp/TimerThread_test.cpp](evpp/TimerThread_test.cpp) - [evpp/TcpServer_test.cpp](evpp/TcpServer_test.cpp) - [evpp/TcpClient_test.cpp](evpp/TcpClient_test.cpp) - [evpp/UdpServer_test.cpp](evpp/UdpServer_test.cpp) - [evpp/UdpClient_test.cpp](evpp/UdpClient_test.cpp) - [examples/ - [examples/ - [examples/websocket_server_test.cpp](examples/websocket_server_test.cpp) - [examples/websocket_client_test.cpp](examples/websocket_client_test.cpp) - [examples/protorpc](examples/protorpc) - [hv-projects/QtDemo]( ### simulate well-known command line tools - [examples/nc](examples/nc.c) - [examples/nmap](examples/nmap) - [examples/ - [examples/wrk](examples/wrk.cpp) - [examples/curl](examples/curl.cpp) - [examples/wget](examples/wget.cpp) - [examples/consul](examples/consul) - [examples/kcptun](examples/kcptun) ## Benchmark ### `pingpong echo-servers` ```shell cd echo-servers ./build.sh ./benchmark.sh ``` **throughput**: ```shell libevent running on port 2001 libev running on port 2002 libuv running on port 2003 libhv running on port 2004 asio running on port 2005 poco running on port 2006 ==============2001===================================== [127.0.0.1:2001] 4 threads 1000 connections run 10s total readcount=1616761 readbytes=1655563264 throughput = 157 MB/s ==============2002===================================== [127.0.0.1:2002] 4 threads 1000 connections run 10s total readcount=2153171 readbytes=2204847104 throughput = 210 MB/s ==============2003===================================== [127.0.0.1:2003] 4 threads 1000 connections run 10s total readcount=1599727 readbytes=1638120448 throughput =... [TRUNCATED]","1.2k, Code, Issues, Pull requests, Discussions, Actions, Wiki, Security, Insights, enhancement, question, help wanted, good issue, wontfix, suggestion, pending, optimize, invalid, good first pr, good first issue, duplicate, done, bug"
mbedtls,Mbed-TLS/mbedtls,4973,"['C', 'Shell', 'Python']","['tls', 'ssl', 'crypto', 'cryptography-library', 'psa']","README for Mbed TLS =================== Mbed TLS is a C library that implements cryptographic primitives, X.509 certificate manipulation and the SSL/TLS and DTLS protocols. Its small code footprint makes it suitable for embedded systems. Mbed TLS includes a reference implementation of the [PSA Cryptography API](#psa-cryptography-api). This is currently a preview for evaluation purposes only. Configuration ------------- Mbed TLS should build out of the box on most systems. Some platform specific options are available in the fully documented configuration file `include/mbedtls/mbedtls_config.h`, which is also the place where features can be selected. This file can be edited manually, or in a more programmatic way using the Python 3 script `scripts/config.py` (use `--help` for usage instructions). Compiler options can be set using conventional environment variables such as `CC` and `CFLAGS` when using the Make and CMake build system (see below). We provide some non-standard configurations focused on specific use cases in the `configs/` directory. You can read more about those in `configs/README.txt` Documentation ------------- The main Mbed TLS documentation is available via [ReadTheDocs]( Documentation for the PSA Cryptography API is available [on GitHub]( To generate a local copy of the library documentation in HTML format, tailored to your compile-time configuration: 1. Make sure that [Doxygen]( is installed. 1. Run `make apidoc`. 1. Browse `apidoc/index.html` or `apidoc/modules.html`. For other sources of documentation, see the [SUPPORT](SUPPORT.md) document. Compiling --------- There are currently three active build systems used within Mbed TLS releases: - GNU Make - CMake - Microsoft Visual Studio The main systems used for development are CMake and GNU Make. Those systems are always complete and up-to-date. The others should reflect all changes present in the CMake and Make build system, although features may not be ported there automatically. The Make and CMake build systems create three libraries: libmbedcrypto, libmbedx509, and libmbedtls. Note that libmbedtls depends on libmbedx509 and libmbedcrypto, and libmbedx509 depends on libmbedcrypto. As a result, some linkers will expect flags to be in a specific order, for example the GNU linker wants `-lmbedtls -lmbedx509 -lmbedcrypto`. ### Tool versions You need the following tools to build the library with the provided makefiles: * GNU Make 3.82 or a build tool that CMake supports. * A C99 toolchain (compiler, linker, archiver). We actively test with GCC 5.4, Clang 3.8, Arm Compiler 6, IAR 8 and Visual Studio 2017. More recent versions should work. Slightly older versions may work. * Python 3.8 to generate the test code. Python is also needed to integrate PSA drivers and to build the development branch (see next section). * Perl to run the tests, and to generate some source files in the development branch. * CMake 3.10.2 or later (if using CMake). * Microsoft Visual Studio 2017 or later (if using Visual Studio). * Doxygen 1.8.11 or later (if building the documentation; slightly older versions should work). ### Git usage The `development` branch and the `mbedtls-3.6` long-term support branch of Mbed TLS use a [Git submodule]( ([framework]( This is not needed to merely compile the library at a release tag. This is not needed to consume a release archive (zip or tar). ### Generated source files in the development branch The source code of Mbed TLS includes some files that are automatically generated by scripts and whose content depends only on the Mbed TLS source, not on the platform or on the library configuration. These files are not included in the development branch of Mbed TLS, but the generated files are included in official releases. This section explains how to generate the missing files in the development branch. The following tools are required: * Perl, for some library source files and for Visual Studio build files. * Python 3.8 and some Python packages, for some library source files, sample programs and test data. To install the necessary packages, run: ``` python3 -m pip install --user -r scripts/basic.requirements.txt ``` Depending on your Python installation, you may need to invoke `python` instead of `python3`. To install the packages system-wide, omit the `--user` option. * A C compiler for the host platform, for some test data. If you are cross-compiling, you must set the `CC` environment variable to a C compiler for the host platform when generating the configuration-independent files. Any of the following methods are available to generate the configuration-independent files: * If not cross-compiling, running `make` with any target, or just `make`, will automatically generate required files. * On non-Windows systems, when not cross-compiling, CMake will generate the required files automatically. * Run `make generated_files` to generate all the configuration-independent files. * On Unix/POSIX systems, run `tests/scripts/check-generated-files.sh -u` to generate all the configuration-independent files. * On Windows, run `scripts\make_generated_files.bat` to generate all the configuration-independent files. ### Make We require GNU Make. To build the library and the sample programs, GNU Make and a C compiler are sufficient. Some of the more advanced build targets require some Unix/Linux tools. We intentionally only use a minimum of functionality in the makefiles in order to keep them as simple and independent of different toolchains as possible, to allow users to more easily move between different platforms. Users who need more features are recommended to use CMake. In order to build from the source code using GNU Make, just enter at the command line: make In order to run the tests, enter: make check The tests need Python to be built and Perl to be run. If you don't have one of them installed, you can skip building the tests with: make no_test You'll still be able to run a much smaller set of tests with: programs/test/selftest In order to build for a Windows platform, you should use `WINDOWS_BUILD=1` if the target is Windows but the build environment is Unix-like (for instance when cross-compiling, or compiling from an MSYS shell), and `WINDOWS=1` if the build environment is a Windows shell (for instance using mingw32-make) (in that case some targets will not be available). Setting the variable `SHARED` in your environment will build shared libraries in addition to the static libraries. Setting `DEBUG` gives you a debug build. You can override `CFLAGS` and `LDFLAGS` by setting them in your environment or on the make command line; compiler warning options may be overridden separately using `WARNING_CFLAGS`. Some directory-specific options (for example, `-I` directives) are still preserved. Please note that setting `CFLAGS` overrides its default value of `-O2` and setting `WARNING_CFLAGS` overrides its default value (starting with `-Wall -Wextra`), so if you just want to add some warning options to the default ones, you can do so by setting `CFLAGS=-O2 -Werror` for example. Setting `WARNING_CFLAGS` is useful when you want to get rid of its default content (for example because your compiler doesn't accept `-Wall` as an option). Directory-specific options cannot be overridden from the command line. Depending on your platform, you might run into some issues. Please check the Makefiles in `library/`, `programs/` and `tests/` for options to manually add or remove for specific platforms. You can also check [the Mbed TLS Knowledge Base]( for articles on your platform or issue. In case you find that you need to do something else as well, please let us know what, so we can add it to the [Mbed TLS Knowledge Base]( ### CMake In order to build the source using CMake in a separate directory (recommended), just enter at the command line: mkdir /path/to/build_dir && cd /path/to/build_dir cmake /path/to/mbedtls_source cmake --build . In order to run the tests, enter: ctest The test suites need Python to be built and Perl to be executed. If you don't have one of these installed, you'll want to disable the test suites with: cmake -DENABLE_TESTING=Off /path/to/mbedtls_source If you disabled the test suites, but kept the programs enabled, you can still run a much smaller set of tests with: programs/test/selftest To configure CMake for building shared libraries, use: cmake -DUSE_SHARED_MBEDTLS_LIBRARY=On /path/to/mbedtls_source There are many different build modes available within the CMake buildsystem. Most of them are available for gcc and clang, though some are compiler-specific: - `Release`. This generates the default code without any unnecessary information in the binary files. - `Debug`. This generates debug information and disables optimization of the code. - `Coverage`. This generates code coverage information in addition to debug information. - `ASan`. This instruments the code with AddressSanitizer to check for memory errors. (This includes LeakSanitizer, with recent version of gcc and clang.) (With recent version of clang, this mode also instruments the code with UndefinedSanitizer to check for undefined behaviour.) - `ASanDbg`. Same as ASan but slower, with debug information and better stack traces. - `MemSan`. This instruments the code with MemorySanitizer to check for uninitialised memory reads. Experimental, needs recent clang on Linux/x86\_64. - `MemSanDbg`. Same as MemSan but slower, with debug information, better stack traces and origin tracking. - `Check`. This activates the compiler warnings that depend on optimization and treats all warnings as errors. Switching build modes in CMake is simple. For debug mode, enter at the command line: cmake -D CMAKE_BUILD_TYPE=Debug /path/to/mbedtls_source To list other available CMake options, use: cmake -LH Note that, with CMake, you can't adjust the compiler or its flags after the initial invocation of cmake. This means that `CC=your_cc make` and `make CC=your_cc` will *not* work (similarly with `CFLAGS` and ot... [TRUNCATED]","2.5k, Code, Issues, Pull requests, Projects, Security, Insights, enhancement, size-s, component-crypto, bug, component-test, size-m, component-tls, component-psa, component-platform, priority-medium, needs-review, needs-work, component-x509, help-wanted, needs-reviewer, historical-reviewed, size-xs, needs-ci, api-break, historical-reviewing, needs-design-approval, component-tls13, size-l, needs-info, needs-backports, priority-low, priority-high, good-first-issue, size-optimisation, needs-preceding-pr"
pg_cron,citusdata/pg_cron,2596,"['C', 'PLSQL', 'Makefile']","['postgresql', 'cron', 'periodic-jobs', 'scheduler']","[]( ## What is pg_cron? pg_cron is a simple cron-based job scheduler for PostgreSQL (10 or higher) that runs inside the database as an extension. It uses the same syntax as regular cron, but it allows you to schedule PostgreSQL commands directly from the database. You can also use '[1-59] seconds' to schedule a job based on an interval. pg_cron also allows you using '$' to indicate last day of the month. ```sql -- Delete old data on Saturday at 3:30am (GMT) SELECT cron.schedule('30 3 * * 6', $$DELETE FROM events WHERE event_time < now() - interval '1 week'$$); schedule ---------- 42 -- Vacuum every day at 10:00am (GMT) SELECT cron.schedule('nightly-vacuum', '0 10 * * *', 'VACUUM'); schedule ---------- 43 -- Change to vacuum at 3:00am (GMT) SELECT cron.schedule('nightly-vacuum', '0 3 * * *', 'VACUUM'); schedule ---------- 43 -- Stop scheduling jobs SELECT cron.unschedule('nightly-vacuum' ); unschedule ------------ t SELECT cron.unschedule(42); unschedule ------------ t -- Vacuum every Sunday at 4:00am (GMT) in a database other than the one pg_cron is installed in SELECT cron.schedule_in_database('weekly-vacuum', '0 4 * * 0', 'VACUUM', 'some_other_database'); schedule ---------- 44 -- Call a stored procedure every 5 seconds SELECT cron.schedule('process-updates', '5 seconds', 'CALL process_updates()'); -- Process payroll at 12:00 of the last day of each month SELECT cron.schedule('process-payroll', '0 12 $ * *', 'CALL process_payroll()'); ``` pg_cron can run multiple jobs in parallel, but it runs at most one instance of a job at a time. If a second run is supposed to start before the first one finishes, then the second run is queued and started as soon as the first run completes. The schedule uses the standard cron syntax, in which * means ""run every time period"", and a specific number means ""but only at this time"": ``` min (0 - 59) hour (0 - 23) day of month (1 - 31) or last day of the month ($) month (1 - 12) day of week (0 - 6) (0 to 6 are Sunday to Saturday, or use names; 7 is also Sunday) * * * * * ``` An easy way to create a cron schedule is: [crontab.guru]( The code in pg_cron that handles parsing and scheduling comes directly from the cron source code by Paul Vixie, hence the same options are supported. ## Installing pg_cron Install on Red Hat, CentOS, Fedora, Amazon Linux with PostgreSQL 16 using [PGDG]( ```bash # Install the pg_cron extension sudo yum install -y pg_cron_16 ``` Install on Debian, Ubuntu with PostgreSQL 16 using [apt.postgresql.org]( ```bash # Install the pg_cron extension sudo apt-get -y install postgresql-16-cron ``` You can also install pg_cron by building it from source: ```bash git clone cd pg_cron # Ensure pg_config is in your path, e.g. export PATH=/usr/pgsql-16/bin:$PATH make && sudo PATH=$PATH make install ``` ## Setting up pg_cron To start the pg_cron background worker when PostgreSQL starts, you need to add pg_cron to `shared_preload_libraries` in postgresql.conf. Note that pg_cron does not run any jobs as a long a server is in [hot standby]( mode, but it automatically starts when the server is promoted. ``` # add to postgresql.conf # required to load pg_cron background worker on start-up shared_preload_libraries = 'pg_cron' ``` By default, the pg_cron background worker expects its metadata tables to be created in the ""postgres"" database. However, you can configure this by setting the `cron.database_name` configuration parameter in postgresql.conf. ``` # add to postgresql.conf # optionally, specify the database in which the pg_cron background worker should run (defaults to postgres) cron.database_name = 'postgres' ``` `pg_cron` may only be installed to one database in a cluster. If you need to run jobs in multiple databases, use `cron.schedule_in_database()`. Previously pg_cron could only use GMT time, but now you can adapt your time by setting `cron.timezone` in postgresql.conf. ``` # add to postgresql.conf # optionally, specify the timezone in which the pg_cron background worker should run (defaults to GMT). E.g: cron.timezone = 'PRC' ``` After restarting PostgreSQL, you can create the pg_cron functions and metadata tables using `CREATE EXTENSION pg_cron`. ```sql -- run as superuser: CREATE EXTENSION pg_cron; -- optionally, grant usage to regular users: GRANT USAGE ON SCHEMA cron TO marco; ``` ### Ensuring pg_cron can start jobs **Important**: By default, pg_cron uses libpq to open a new connection to the local database, which needs to be allowed by [pg_hba.conf]( It may be necessary to enable `trust` authentication for connections coming from localhost in for the user running the cron job, or you can add the password to a [.pgpass file]( which libpq will use when opening a connection. You can also use a unix domain socket directory as the hostname and enable `trust` authentication for local connections in [pg_hba.conf]( which is normally safe: ``` # Connect via a unix domain socket: cron.host = '/tmp' # Can also be an empty string to look for the default directory: cron.host = '' ``` Alternatively, pg_cron can be configured to use background workers. In that case, the number of concurrent jobs is limited by the `max_worker_processes` setting, so you may need to raise that. ``` # Schedule jobs via background workers instead of localhost connections cron.use_background_workers = on # Increase the number of available background workers from the default of 8 max_worker_processes = 20 ``` For security, jobs are executed in the database in which the `cron.schedule` function is called with the same permissions as the current user. In addition, users are only able to see their own jobs in the `cron.job` table. ## Viewing job run details You can view the status of running and recently completed job runs in the `cron.job_run_details`: ```sql select * from cron.job_run_details order by start_time desc limit 5; jobid runid job_pid database username command status return_message start_time end_time 10 4328 2610 postgres marco select process() succeeded SELECT 1 2023-02-07 09:30:00.098164+01 2023-02-07 09:30:00.130729+01 10 4327 2609 postgres marco select process() succeeded SELECT 1 2023-02-07 09:29:00.015168+01 2023-02-07 09:29:00.832308+01 10 4321 2603 postgres marco select process() succeeded SELECT 1 2023-02-07 09:28:00.011965+01 2023-02-07 09:28:01.420901+01 10 4320 2602 postgres marco select process() failed server restarted 2023-02-07 09:27:00.011833+01 2023-02-07 09:27:00.72121+01 9 4320 2602 postgres marco select do_stuff() failed job canceled 2023-02-07 09:26:00.011833+01 2023-02-07 09:26:00.22121+01 (10 rows) ``` The records in `cron.job_run_details` are not cleaned automatically, but every user that can schedule cron jobs also has permission to delete their own `cron.job_run_details` records. Especially when you have jobs that run every few seconds, it can be a good idea to clean up regularly, which can easily be done using pg_cron itself: ```sql -- Delete old cron.job_run_details records of the current user every day at noon SELECT cron.schedule('delete-job-run-details', '0 12 * * *', $$DELETE FROM cron.job_run_details WHERE end_time < now() - interval '7 days'$$); ``` If you do not want to use `cron.job_run_details` at all, then you can add `cron.log_run = off` to `postgresql.conf`. ## Example use cases Articles showing possible ways of using pg_cron: * [Auto-partitioning using pg_partman]( * [Computing rollups in an analytical dashboard]( * [Deleting old data, vacuum]( * [Feeding cats]( * [Routinely invoking a function]( * [Postgres as a cron server]( ## Managed services The following table keeps track of which of the major managed Postgres services support pg_cron. | Service | Supported | | ------------- |:-------------:| | [Aiven]( | :heavy_check_mark: | | [Alibaba Cloud]( | :heavy_check_mark: | | [Amazon RDS]( | :heavy_check_mark: | | | [Azure]( | :heavy_check_mark: | | [Crunchy Bridge]( | :heavy_check_mark: | | [DigitalOcean]( | :heavy_check_mark: | | [Google Cloud]( | :heavy_check_mark: | | [Heroku]( | :x: | | | [ScaleGrid]( | :heavy_check_mark: | | [Scaleway]( | :heavy_check_mark: | | [Supabase]( | :heavy_check_mark: | | [Tembo]( | :heavy_check_mark: | ## Code of Conduct This project has adopted the [Microsoft Open Source Code of Conduct]( For more information see the [Code of Conduct FAQ]( or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.","183, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, enhancement, bug, wontfix, question, invalid, help wanted, duplicate"
sway,swaywm/sway,13937,"['C', 'Meson', 'Shell']","['compositor', 'wayland']","# sway **[English][en]** - [][ar] - [esky][cs] - [Deutsch][de] - [Dansk][dk] - [Espaol][es] - [Franais][fr] - [][ge] - [][gr] - [][hi] - [Magyar][hu] - [][ir] - [Italiano][it] - [][ja] - [][ko] - [Nederlands][nl] - [Norsk][no] - [Polski][pl] - [Portugus][pt] - [Romn][ro] - [][ru] - [Svenska][sv] - [Trke][tr] - [][uk] - [-][zh-CN] - [-][zh-TW] sway is an [i3]-compatible [Wayland] compositor. Read the [FAQ]. Join the [IRC channel] \(#sway on irc.libera.chat). ## Release Signatures Releases are signed with [E88F5E48] and published [on GitHub][GitHub releases]. ## Installation ### From Packages Sway is available in many distributions. Try installing the ""sway"" package for yours. ### Compiling from Source Check out [this wiki page][Development setup] if you want to build the HEAD of sway and wlroots for testing or development. Install dependencies: * meson \* * [wlroots] * wayland * wayland-protocols \* * pcre2 * json-c * pango * cairo * gdk-pixbuf2 (optional: additional image formats for system tray) * [swaybg] (optional: wallpaper) * [scdoc] (optional: man pages) \* * git (optional: version info) \* _\* Compile-time dep_ Run these commands: meson build/ ninja -C build/ sudo ninja -C build/ install ## Configuration If you already use i3, then copy your i3 config to `~/.config/sway/config` and it'll work out of the box. Otherwise, copy the sample configuration file to `~/.config/sway/config`. It is usually located at `/etc/sway/config`. Run `man 5 sway` for information on the configuration. ## Running Run `sway` from a TTY. Some display managers may work but are not supported by sway (gdm is known to work fairly well). [en]: [ar]: README.ar.md [cs]: README.cs.md [de]: README.de.md [dk]: README.dk.md [es]: README.es.md [fr]: README.fr.md [ge]: README.ge.md [gr]: README.gr.md [hi]: README.hi.md [hu]: README.hu.md [ir]: README.ir.md [it]: README.it.md [ja]: README.ja.md [ko]: README.ko.md [nl]: README.nl.md [no]: README.no.md [pl]: README.pl.md [pt]: README.pt.md [ro]: README.ro.md [ru]: README.ru.md [sv]: README.sv.md [tr]: README.tr.md [uk]: README.uk.md [zh-CN]: README.zh-CN.md [zh-TW]: README.zh-TW.md [i3]: [Wayland]: [FAQ]: [IRC channel]: [E88F5E48]: [GitHub releases]: [Development setup]: [wlroots]: [swaybg]: [scdoc]:","1.1k, Code, Issues, Pull requests, Wiki, Security, Insights, bug, enhancement, i3-compat, input/pointer, client-compat, input/keyboard, xwayland, waiting-on-reporter, swaybar, window-management, layout, input/touch, config, input/tablet, renderer, ipc, good first issue, docs, proposal, output, meta, firefox, swaynag, invalid"
open-gpu-kernel-modules,NVIDIA/open-gpu-kernel-modules,14059,"['C', 'C++', 'Shell']",[],"# NVIDIA Linux Open GPU Kernel Module Source This is the source release of the NVIDIA Linux open GPU kernel modules, version 550.78. ## How to Build To build: make modules -j$(nproc) To install, first uninstall any existing NVIDIA kernel modules. Then, as root: make modules_install -j$(nproc) Note that the kernel modules built here must be used with GSP firmware and user-space NVIDIA GPU driver components from a corresponding 550.78 driver release. This can be achieved by installing the NVIDIA GPU driver from the .run file using the `--no-kernel-modules` option. E.g., sh ./NVIDIA-Linux-[...].run --no-kernel-modules ## Supported Target CPU Architectures Currently, the kernel modules can be built for x86_64 or aarch64. If cross-compiling, set these variables on the make command line: TARGET_ARCH=aarch64|x86_64 CC LD AR CXX OBJCOPY E.g., # compile on x86_64 for aarch64 make modules -j$(nproc) \ TARGET_ARCH=aarch64 \ CC=aarch64-linux-gnu-gcc \ LD=aarch64-linux-gnu-ld \ AR=aarch64-linux-gnu-ar \ CXX=aarch64-linux-gnu-g++ \ OBJCOPY=aarch64-linux-gnu-objcopy ## Other Build Knobs NV_VERBOSE - Set this to ""1"" to print each complete command executed; otherwise, a succinct ""CC"" line is printed. DEBUG - Set this to ""1"" to build the kernel modules as debug. By default, the build compiles without debugging information. This also enables various debug log messages in the kernel modules. These variables can be set on the make command line. E.g., make modules -j$(nproc) NV_VERBOSE=1 ## Supported Toolchains Any reasonably modern version of GCC or Clang can be used to build the kernel modules. Note that the kernel interface layers of the kernel modules must be built with the toolchain that was used to build the kernel. ## Supported Linux Kernel Versions The NVIDIA open kernel modules support the same range of Linux kernel versions that are supported with the proprietary NVIDIA kernel modules. This is currently Linux kernel 3.10 or newer. ## How to Contribute Contributions can be made by creating a pull request on We'll respond via GitHub. Note that when submitting a pull request, you will be prompted to accept a Contributor License Agreement. This code base is shared with NVIDIA's proprietary drivers, and various processing is performed on the shared code to produce the source code that is published here. This has several implications for the foreseeable future: * The GitHub repository will function mostly as a snapshot of each driver release. * We do not expect to be able to provide revision history for individual changes that were made to NVIDIA's shared code base. There will likely only be one git commit per driver release. * We may not be able to reflect individual contributions as separate git commits in the GitHub repository. * Because the code undergoes various processing prior to publishing here, contributions made here require manual merging to be applied to the shared code base. Therefore, large refactoring changes made here may be difficult to merge and accept back into the shared code base. If you have large refactoring to suggest, please contact us in advance, so we can coordinate. ## How to Report Issues Problems specific to the Open GPU Kernel Modules can be reported in the Issues section of the repository. Further, any of the existing bug reporting venues can be used to communicate problems to NVIDIA, such as our forum: or linux-bugs@nvidia.com. Please see the 'NVIDIA Contact Info and Additional Resources' section of the NVIDIA GPU Driver README for details. Please see the separate [SECURITY.md](SECURITY.md) document if you believe you have discovered a security vulnerability in this software. ## Kernel Interface and OS-Agnostic Components of Kernel Modules Most of NVIDIA's kernel modules are split into two components: * An ""OS-agnostic"" component: this is the component of each kernel module that is independent of operating system. * A ""kernel interface layer"": this is the component of each kernel module that is specific to the Linux kernel version and configuration. When packaged in the NVIDIA .run installation package, the OS-agnostic component is provided as a binary: it is large and time-consuming to compile, so pre-built versions are provided so that the user does not have to compile it during every driver installation. For the nvidia.ko kernel module, this component is named ""nv-kernel.o_binary"". For the nvidia-modeset.ko kernel module, this component is named ""nv-modeset-kernel.o_binary"". Neither nvidia-drm.ko nor nvidia-uvm.ko have OS-agnostic components. The kernel interface layer component for each kernel module must be built for the target kernel. ## Directory Structure Layout - `kernel-open/` The kernel interface layer - `kernel-open/nvidia/` The kernel interface layer for nvidia.ko - `kernel-open/nvidia-drm/` The kernel interface layer for nvidia-drm.ko - `kernel-open/nvidia-modeset/` The kernel interface layer for nvidia-modeset.ko - `kernel-open/nvidia-uvm/` The kernel interface layer for nvidia-uvm.ko - `src/` The OS-agnostic code - `src/nvidia/` The OS-agnostic code for nvidia.ko - `src/nvidia-modeset/` The OS-agnostic code for nvidia-modeset.ko - `src/common/` Utility code used by one or more of nvidia.ko and nvidia-modeset.ko - `nouveau/` Tools for integration with the Nouveau device driver ## Nouveau device driver integration The Python script in the 'nouveau' directory is used to extract some of the firmware binary images (and related data) encoded in the source code and store them as distinct files. These files are used by the Nouveau device driver to load and communicate with the GSP firmware. The layout of the binary files is described in nouveau_firmware_layout.ods, which is an OpenDocument Spreadsheet file, compatible with most spreadsheet software applications. ## Compatible GPUs The NVIDIA open kernel modules can be used on any Turing or later GPU (see the table below). However, in the __DRIVER_VERION__ release, GeForce and Workstation support is considered to be Beta quality. The open kernel modules are suitable for broad usage, and NVIDIA requests feedback on any issues encountered specific to them. For details on feature support and limitations, see the NVIDIA GPU driver end user README here: For vGPU support, please refer to the README.vgpu packaged in the vGPU Host Package for more details. In the below table, if three IDs are listed, the first is the PCI Device ID, the second is the PCI Subsystem Vendor ID, and the third is the PCI Subsystem Device ID. | Product Name | PCI ID | | ----------------------------------------------- | -------------- | | NVIDIA TITAN RTX | 1E02 | | NVIDIA GeForce RTX 2080 Ti | 1E04 | | NVIDIA GeForce RTX 2080 Ti | 1E07 | | Quadro RTX 6000 | 1E30 | | Quadro RTX 8000 | 1E30 1028 129E | | Quadro RTX 8000 | 1E30 103C 129E | | Quadro RTX 8000 | 1E30 10DE 129E | | Quadro RTX 6000 | 1E36 | | Quadro RTX 8000 | 1E78 10DE 13D8 | | Quadro RTX 6000 | 1E78 10DE 13D9 | | NVIDIA GeForce RTX 2080 SUPER | 1E81 | | NVIDIA GeForce RTX 2080 | 1E82 | | NVIDIA GeForce RTX 2070 SUPER | 1E84 | | NVIDIA GeForce RTX 2080 | 1E87 | | NVIDIA GeForce RTX 2060 | 1E89 | | NVIDIA GeForce RTX 2080 | 1E90 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1025 1375 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1028 08A1 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1028 08A2 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1028 08EA | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1028 08EB | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1028 08EC | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1028 08ED | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1028 08EE | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1028 08EF | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1028 093B | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1028 093C | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 103C 8572 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 103C 8573 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 103C 8602 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 103C 8606 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 103C 86C6 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 103C 86C7 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 103C 87A6 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 103C 87A7 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1043 131F | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1043 137F | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1043 141F | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1043 1751 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1458 1660 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1458 1661 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1458 1662 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1458 75A6 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1458 75A7 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1458 86A6 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1458 86A7 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1462 1274 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1462 1277 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 152D 1220 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1558 95E1 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1558 97E1 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1A58 2002 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1A58 2005 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1A58 2007 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1A58 3000 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1A58 3001 | | NVIDIA GeForce RTX 2080 with Max-Q Design | 1E90 1D05 1069 | | NVIDIA GeForce RTX 2070 Super | 1E91 | | NVIDIA GeForce RTX 2070 Super with Max-Q Design | 1E91 103C 8607 | | NVIDIA GeForce RTX 2070 Super with Max-Q Design | 1E91 103C 8736 | | NVIDIA GeForce RTX 2070 Super with Max-Q Design | 1E91 103C 8738 | | N... [TRUNCATED]","1.2k, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, bug, NV-Triaged, build-problem, Feature Pending, cosmetic-postponed, Implemented, process, enhancement, documentation, duplicate, wontfix, question, invalid, help wanted, good first issue"
liboqs,open-quantum-safe/liboqs,1645,"['C', 'Assembly', 'CMake']","['cryptography', 'key-exchange-algorithms', 'lattice-based-crypto', 'post-quantum-cryptography']","[CircleCI]( , [TravisCI]( []( liboqs ====================== liboqs is an open source C library for quantum-safe cryptographic algorithms. - [liboqs](#liboqs) - [Overview](#overview) - [Status](#status) - [Supported Algorithms](#supported-algorithms) - [Key encapsulation mechanisms](#key-encapsulation-mechanisms) - [Signature schemes](#signature-schemes) - [Limitations and Security](#limitations-and-security) - [Platform limitations](#platform-limitations) - [Quickstart](#quickstart) - [Linux and Mac](#linux-and-mac) - [Windows](#windows) - [Cross compilation](#cross-compilation) - [Documentation](#documentation) - [Contributing](#contributing) - [License](#license) - [Acknowledgements](#acknowledgements) ## Overview liboqs provides: - a collection of open source implementations of quantum-safe key encapsulation mechanism (KEM) and digital signature algorithms; the full list can be found [below](#supported-algorithms) - a common API for these algorithms - a test harness and benchmarking routines liboqs is part of the **Open Quantum Safe (OQS)** project, which aims to develop and integrate into applications quantum-safe cryptography to facilitate deployment and testing in real world contexts. In particular, OQS provides prototype integrations of liboqs into protocols like TLS, X.509, and S/MIME, through our [OpenSSL 3 Provider]( and we provide a variety of other [post-quantum-enabled demos]( The OQS project is supported by the [Post-Quantum Cryptography Alliance]( as part of the [Linux Foundation]( More information about the Open Quantum Safe project can be found at [openquantumsafe.org]( ## Status ### Supported Algorithms Details on each supported algorithm can be found in the [docs/algorithms]( folder. The list below indicates all algorithms currently supported by liboqs, including experimental algorithms and already excluding algorithm variants pruned during the NIST competition, such as Kyber-90s or Dilithium-AES. The only algorithms in `liboqs` that implement NIST standards drafts are the [`ML-KEM`]( and [`ML-DSA`]( variants with their respective different bit strengths. `liboqs` will retain these algorithm names selected by NIST throughout the finishing stages of the standardization process, so users can rely on their presence going forward. If NIST changes the implementation details of these algorithms, `liboqs` will adjust the implementation so that users are protected from such potential changes. For users interested in explicitly selecting the current ""proposed draft standard"" code, the variants with the suffix ""-ipd"" are made available. At this stage, ""ml-kem-ipd"" and ""ml-kem"" as well as ""ml-dsa-ipd"" and ""ml-dsa"" are functionally equivalent, denoted by the ""alias"" moniker below. Falcon and SPHINCS+ have also been [selected for standardization]( but the `liboqs` implementations of these algorithms are currently tracking Round 3 submissions and not NIST standards drafts. All names other than `ML-KEM` and `ML-DSA` are subject to change. `liboqs` makes available a [selection mechanism for algorithms on the NIST standards track, continued NIST competition, or purely experimental nature by way of the configuration variable OQS_ALGS_ENABLED](CONFIGURE.md#oqs_algs_enabled). By default `liboqs` is built supporting all, incl. experimental, PQ algorithms listed below. #### Key encapsulation mechanisms - **BIKE**: BIKE-L1, BIKE-L3, BIKE-L5 - **Classic McEliece**: Classic-McEliece-348864, Classic-McEliece-348864f, Classic-McEliece-460896, Classic-McEliece-460896f, Classic-McEliece-6688128, Classic-McEliece-6688128f, Classic-McEliece-6960119, Classic-McEliece-6960119f, Classic-McEliece-8192128, Classic-McEliece-8192128f - **FrodoKEM**: FrodoKEM-640-AES, FrodoKEM-640-SHAKE, FrodoKEM-976-AES, FrodoKEM-976-SHAKE, FrodoKEM-1344-AES, FrodoKEM-1344-SHAKE - **HQC**: HQC-128, HQC-192, HQC-256 - **Kyber**: Kyber512, Kyber768, Kyber1024 - **ML-KEM**: ML-KEM-512-ipd (alias: ML-KEM-512), ML-KEM-768-ipd (alias: ML-KEM-768), ML-KEM-1024-ipd (alias: ML-KEM-1024) - **NTRU-Prime**: sntrup761 #### Signature schemes - **CRYSTALS-Dilithium**: Dilithium2, Dilithium3, Dilithium5 - **Falcon**: Falcon-512, Falcon-1024, Falcon-padded-512, Falcon-padded-1024 - **ML-DSA**: ML-DSA-44-ipd (alias: ML-DSA-44), ML-DSA-65-ipd (alias: ML-DSA-65), ML-DSA-87-ipd (alias: ML-DSA-87) - **SPHINCS+-SHA2**: SPHINCS+-SHA2-128f-simple, SPHINCS+-SHA2-128s-simple, SPHINCS+-SHA2-192f-simple, SPHINCS+-SHA2-192s-simple, SPHINCS+-SHA2-256f-simple, SPHINCS+-SHA2-256s-simple - **SPHINCS+-SHAKE**: SPHINCS+-SHAKE-128f-simple, SPHINCS+-SHAKE-128s-simple, SPHINCS+-SHAKE-192f-simple, SPHINCS+-SHAKE-192s-simple, SPHINCS+-SHAKE-256f-simple, SPHINCS+-SHAKE-256s-simple Note that for algorithms marked with a dagger (), liboqs contains at least one implementation that uses a large amount of stack space; this may cause failures when run in threads or in constrained environments. For more information, consult the algorithm information sheets in the [docs/algorithms]( folder. ### Limitations and Security While at the time of this writing there are no vulnerabilities known in any of the quantum-safe algorithms used in this library, caution is advised when deploying quantum-safe algorithms as most of the algorithms and software have not been subject to the same degree of scrutiny as for currently deployed algorithms. Particular attention should be paid to guidance provided by the standards community, especially from the NIST [Post-Quantum Cryptography Standardization]( project. As research advances, the supported algorithms may see rapid changes in their security, and may even prove insecure against both classical and quantum computers. Moreover, note that the `sntrup761` is only included for interop testing. liboqs does not intend to ""pick winners"": algorithm support is informed by the NIST PQC standardization project. We strongly recommend that applications and protocols rely on the outcomes of this effort when deploying post-quantum cryptography. We realize some parties may want to deploy quantum-safe cryptography prior to the conclusion of the NIST PQC standardization project. We strongly recommend such attempts make use of so-called **hybrid cryptography**, in which quantum-safe public-key algorithms are used alongside traditional public key algorithms (like RSA or elliptic curves) so that the solution is at least no less secure than existing traditional cryptography. **WE DO NOT CURRENTLY RECOMMEND RELYING ON THIS LIBRARY IN A PRODUCTION ENVIRONMENT OR TO PROTECT ANY SENSITIVE DATA.** This library is meant to help with research and prototyping. While we make a best-effort approach to avoid security bugs, this library has not received the level of auditing and analysis that would be necessary to rely on it for high security use. #### Platform limitations In order to optimize support effort, - not all algorithms are equally well supported on all platforms. In case of questions, it is first advised to review the [documentation files for each algorithm](docs/algorithms). - not all compilers are equally well supported. For example, at least v7.1.0 of the GNU compiler is required. ## Quickstart ### Linux and Mac 1. Install dependencies: On Ubuntu: sudo apt install astyle cmake gcc ninja-build libssl-dev python3-pytest python3-pytest-xdist unzip xsltproc doxygen graphviz python3-yaml valgrind On macOS, using a package manager of your choice (we've picked Homebrew): brew install cmake ninja openssl@3 wget doxygen graphviz astyle valgrind pip3 install pytest pytest-xdist pyyaml Note that, if you want liboqs to use OpenSSL for various symmetric crypto algorithms (AES, SHA-2, etc.) then you must have OpenSSL installed (version 3.x recommended; EOL version 1.1.1 also still possible). 2. Get the source: git clone -b main cd liboqs and build: mkdir build && cd build cmake -GNinja .. ninja Various `cmake` build options to customize the resultant artifacts are available and are [documented in CONFIGURE.md](CONFIGURE.md#options-for-configuring-liboqs-builds). All supported options are also listed in the `.CMake/alg-support.cmake` file, and can be viewed by running `cmake -LAH ..` in the `build` directory. The following instructions assume we are in `build`. 3. By default the main build result is `lib/liboqs.a`, a static library. If you want to build a shared/dynamic library, append [`-DBUILD_SHARED_LIBS=ON`](CONFIGURE.md#build_shared_libs) to the `cmake -GNinja ..` command above and the result will be `lib/liboqs.so|dylib|dll`. The public headers are located in the `include` directory. There are also a variety of programs built under the `tests` directory: - `test_kem`: Simple test harness for key encapsulation mechanisms - `test_sig`: Simple test harness for key signature schemes - `test_kem_mem`: Simple test harness for checking memory consumption of key encapsulation mechanisms - `test_sig_mem`: Simple test harness for checking memory consumption of key signature schemes - `kat_kem`: Program that generates known answer test (KAT) values for key encapsulation mechanisms using the same procedure as the NIST submission requirements, for checking against submitted KAT values using `tests/test_kat.py` - `kat_sig`: Program that generates known answer test (KAT) values for signature schemes using the same procedure as the NIST submission requirements, for checking against submitted KAT values using `tests/test_kat.py` - `speed_kem`: Benchmarking program for key encapsulation mechanisms; see `./speed_kem --help` for usage instructions - `speed_sig`: Benchmarking program for signature mechanisms; see `./speed_sig --help` for usage instructions - `example_kem`: Minimal runnable example showing the usage of the KEM API - `example_sig`: Minimal runnable example showing the usage of the signature API - `test_aes`, `test_sha3`: Simple test harnesses for crypto sub-components - `test_portability`: Simple test harnesses for checking cross-CPU code portability; requires presence of `qemu`; proper operatio... [TRUNCATED]","408, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, enhancement, good first issue, platform-specific, help wanted, future-work, documentation, refactor, bug, wontfix, ready for merge, question, duplicate, dependencies"
cuda-samples,NVIDIA/cuda-samples,5481,"['C', 'C++', 'Makefile']","['cuda', 'cuda-kernels', 'cuda-opengl', 'cuda-driver-api']","# CUDA Samples Samples for CUDA Developers which demonstrates features in CUDA Toolkit. This version supports [CUDA Toolkit 12.4]( ## Release Notes This section describes the release notes for the CUDA Samples on GitHub only. ### CUDA 12.4 - Hopper Confidential Computing Modes do not support Video samples, nor do they support host-pinned memory due to the restrictions created by CPU IOMMUs. The following Samples are affected: - convolutionTexture - cudaNvSci - dct8x8 - lineOfSight - simpleCubemapTexture - simpleIPC - simpleLayeredTexture - simplePitchLinearTexture - simpleStream - simpleTexture - simpleTextureDrv - watershedSegmentationNPP ### [older versions...](./CHANGELOG.md) ## Getting Started ### Prerequisites Download and install the [CUDA Toolkit 12.4]( for your corresponding platform. For system requirements and installation instructions of cuda toolkit, please refer to the [Linux Installation Guide]( and the [Windows Installation Guide]( ### Getting the CUDA Samples Using git clone the repository of CUDA Samples using the command below. ``` git clone ``` Without using git the easiest way to use these samples is to download the zip file containing the current version by clicking the ""Download ZIP"" button on the repo page. You can then unzip the entire archive and use the samples. ## Building CUDA Samples ### Windows The Windows samples are built using the Visual Studio IDE. Solution files (.sln) are provided for each supported version of Visual Studio, using the format: ``` *_vs.sln - for Visual Studio ``` Complete samples solution files exist at parent directory of the repo: Each individual sample has its own set of solution files at: `\Samples\\` To build/examine all the samples at once, the complete solution files should be used. To build/examine a single sample, the individual sample solution files should be used. ### Linux The Linux samples are built using makefiles. To use the makefiles, change the current directory to the sample directory you wish to build, and run make: ``` $ cd $ make ``` The samples makefiles can take advantage of certain options: * **TARGET_ARCH=** - cross-compile targeting a specific architecture. Allowed architectures are x86_64, ppc64le, armv7l, aarch64. By default, TARGET_ARCH is set to HOST_ARCH. On a x86_64 machine, not setting TARGET_ARCH is the equivalent of setting TARGET_ARCH=x86_64. `$ make TARGET_ARCH=x86_64` `$ make TARGET_ARCH=ppc64le` `$ make TARGET_ARCH=armv7l` `$ make TARGET_ARCH=aarch64` See [here]( for more details on cross platform compilation of cuda samples. * **dbg=1** - build with debug symbols ``` $ make dbg=1 ``` * **SMS=""A B ...""** - override the SM architectures for which the sample will be built, where `""A B ...""` is a space-delimited list of SM architectures. For example, to generate SASS for SM 50 and SM 60, use `SMS=""50 60""`. ``` $ make SMS=""50 60"" ``` * **HOST_COMPILER=** - override the default g++ host compiler. See the [Linux Installation Guide]( for a list of supported host compilers. ``` $ make HOST_COMPILER=g++ ``` ## Samples list ### [0. Introduction](./Samples/0_Introduction/README.md) Basic CUDA samples for beginners that illustrate key concepts with using CUDA and CUDA runtime APIs. ### [1. Utilities](./Samples/1_Utilities/README.md) Utility samples that demonstrate how to query device capabilities and measure GPU/CPU bandwidth. ### [2. Concepts and Techniques](./Samples/2_Concepts_and_Techniques/README.md) Samples that demonstrate CUDA related concepts and common problem solving techniques. ### [3. CUDA Features](./Samples/3_CUDA_Features/README.md) Samples that demonstrate CUDA Features (Cooperative Groups, CUDA Dynamic Parallelism, CUDA Graphs etc). ### [4. CUDA Libraries](./Samples/4_CUDA_Libraries/README.md) Samples that demonstrate how to use CUDA platform libraries (NPP, NVJPEG, NVGRAPH cuBLAS, cuFFT, cuSPARSE, cuSOLVER and cuRAND). ### [5. Domain Specific](./Samples/5_Domain_Specific/README.md) Samples that are specific to domain (Graphics, Finance, Image Processing). ### [6. Performance](./Samples/6_Performance/README.md) Samples that demonstrate performance optimization. ### [7. libNVVM](./Samples/7_libNVVM/README.md) Samples that demonstrate the use of libNVVVM and NVVM IR. ## Dependencies Some CUDA Samples rely on third-party applications and/or libraries, or features provided by the CUDA Toolkit and Driver, to either build or execute. These dependencies are listed below. If a sample has a third-party dependency that is available on the system, but is not installed, the sample will waive itself at build time. Each sample's dependencies are listed in its README's Dependencies section. ### Third-Party Dependencies These third-party dependencies are required by some CUDA samples. If available, these dependencies are either installed on your system automatically, or are installable via your system's package manager (Linux) or a third-party website. #### FreeImage FreeImage is an open source imaging library. FreeImage can usually be installed on Linux using your distribution's package manager system. FreeImage can also be downloaded from the FreeImage website. To set up FreeImage on a Windows system, extract the FreeImage DLL distribution into the folder `../../../Common/FreeImage/Dist/x64` such that it contains the .h and .lib files. Copy the .dll file to root level `bin/win64/Debug` and `bin/win64/Release` folder. #### Message Passing Interface MPI (Message Passing Interface) is an API for communicating data between distributed processes. A MPI compiler can be installed using your Linux distribution's package manager system. It is also available on some online resources, such as [Open MPI]( On Windows, to build and run MPI-CUDA applications one can install [MS-MPI SDK]( #### Only 64-Bit Some samples can only be run on a 64-bit operating system. #### DirectX DirectX is a collection of APIs designed to allow development of multimedia applications on Microsoft platforms. For Microsoft platforms, NVIDIA's CUDA Driver supports DirectX. Several CUDA Samples for Windows demonstrates CUDA-DirectX Interoperability, for building such samples one needs to install Microsoft Visual Studio 2012 or higher which provides Microsoft Windows SDK for Windows 8. #### DirectX12 DirectX 12 is a collection of advanced low-level programming APIs which can reduce driver overhead, designed to allow development of multimedia applications on Microsoft platforms starting with Windows 10 OS onwards. For Microsoft platforms, NVIDIA's CUDA Driver supports DirectX. Few CUDA Samples for Windows demonstrates CUDA-DirectX12 Interoperability, for building such samples one needs to install [Windows 10 SDK or higher]( with VS 2015 or VS 2017. #### OpenGL OpenGL is a graphics library used for 2D and 3D rendering. On systems which support OpenGL, NVIDIA's OpenGL implementation is provided with the CUDA Driver. #### OpenGL ES OpenGL ES is an embedded systems graphics library used for 2D and 3D rendering. On systems which support OpenGL ES, NVIDIA's OpenGL ES implementation is provided with the CUDA Driver. #### Vulkan Vulkan is a low-overhead, cross-platform 3D graphics and compute API. Vulkan targets high-performance realtime 3D graphics applications such as video games and interactive media across all platforms. On systems which support Vulkan, NVIDIA's Vulkan implementation is provided with the CUDA Driver. For building and running Vulkan applications one needs to install the [Vulkan SDK]( #### OpenMP OpenMP is an API for multiprocessing programming. OpenMP can be installed using your Linux distribution's package manager system. It usually comes preinstalled with GCC. It can also be found at the [OpenMP website]( #### Screen Screen is a windowing system found on the QNX operating system. Screen is usually found as part of the root filesystem. #### X11 X11 is a windowing system commonly found on *-nix style operating systems. X11 can be installed using your Linux distribution's package manager, and comes preinstalled on Mac OS X systems. #### EGL EGL is an interface between Khronos rendering APIs (such as OpenGL, OpenGL ES or OpenVG) and the underlying native platform windowing system. #### EGLOutput EGLOutput is a set of EGL extensions which allow EGL to render directly to the display. #### EGLSync EGLSync is a set of EGL extensions which provides sync objects that are synchronization primitive, representing events whose completion can be tested or waited upon. #### NVSCI NvSci is a set of communication interface libraries out of which CUDA interops with NvSciBuf and NvSciSync. NvSciBuf allows applications to allocate and exchange buffers in memory. NvSciSync allows applications to manage synchronization objects which coordinate when sequences of operations begin and end. #### NvMedia NvMedia provides powerful processing of multimedia data for true hardware acceleration across NVIDIA Tegra devices. Applications leverage the NvMedia Application Programming Interface (API) to process the image and video data. ### CUDA Features These CUDA features are needed by some CUDA samples. They are provided by either the CUDA Toolkit or CUDA Driver. Some features may not be available on your system. #### CUFFT Callback Routines CUFFT Callback Routines are user-supplied kernel routines that CUFFT will call when loading or storing data. These callback routines are only available on Linux x86_64 and ppc64le systems. #### CUDA Dynamic Parallellism CDP (CUDA Dynamic Parallellism) allows kernels to be launched from threads running on the GPU. CDP is only available on GPUs with SM architecture of 3.5 or above. #### Multi-block Cooperative Groups Multi Block Cooperative Groups(MBCG) extends Cooperative Groups and the CUDA programming model to express inter-thread-block synchronization. MBCG is available on GPUs with Pascal and higher architecture. #### Multi-Device Cooperative Groups Multi Device Cooperative Groups extends Cooperative Groups and the CUDA programming model enabling th... [TRUNCATED]","1.7k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, bug"
Shipwright,HarbourMasters/Shipwright,2823,"['C', 'C++', 'SourcePawn']",[],"## Website Official Website: ## Discord Official Discord: If you're having any trouble after reading through this `README`, feel free ask for help in the Support text channels. Please keep in mind that we do not condone piracy. # Quick Start The Ship does not include any copyrighted assets. You are required to provide a supported copy of the game. ### 1. Verify your ROM dump You can verify you have dumped a supported copy of the game by using the compatibility checker at If you'd prefer to manually validate your ROM dump, you can cross-reference its `sha1` hash with the hashes [here](docs/supportedHashes.json). ### 2. Download The Ship of Harkinian from [Releases]( ### 3. Launch the Game! #### Windows * Extract the zip * Launch `soh.exe` #### Linux * Place your supported copy of the game in the same folder as the appimage. * Execute `soh.appimage`. You may have to `chmod +x` the appimage via terminal. #### macOS * Run `soh.app`. When prompted, select your supported copy of the game. * You should see a notification saying `Processing OTR`, then, once the process is complete, you should get a notification saying `OTR Successfully Generated`, then the game should start. #### Nintendo Switch * Run one of the PC releases to generate an `oot.otr` and/or `oot-mq.otr` file. After launching the game on PC, you will be able to find these files in the same directory as `soh.exe` or `soh.appimage`. On macOS, these files can be found in `/Users//Library/Application Support/com.shipofharkinian.soh/` * Copy the files to your sd card ``` sdcard switch soh oot-mq.otr oot.otr soh.nro soh.otr ``` * Launch via Atmosphere's `Game+R` launcher method. ### 4. Play! Congratulations, you are now sailing with the Ship of Harkinian! Have fun! # Configuration ### Default keyboard configuration | N64 | A | B | Z | Start | Analog stick | C buttons | D-Pad | | - | - | - | - | - | - | - | - | | Keyboard | X | C | Z | Space | WASD | Arrow keys | TFGH | ### Other shortcuts | Keys | Action | | - | - | | F1 | Toggle menubar | | F5 | Save state | | F6 | Change state | | F7 | Load state | | F9 | Toggle Text-to-Speech (Windows and Mac only) | | F11 | Fullscreen | | Tab | Toggle Alternate assets | | Ctrl+R | Reset | ### Graphics Backends Currently, there are three rendering APIs supported: DirectX11 (Windows), OpenGL (all platforms), and Metal (MacOS). You can change which API to use in the `Settings` menu of the menubar, which requires a restart. If you're having an issue with crashing, you can change the API in the `shipofharkinian.json` file by finding the line `gfxbackend:""""` and changing the value to `sdl` for OpenGL. DirectX 11 is the default on Windows. # Custom Assets Custom assets are packed in `.otr` files. To use custom assets, place them in the `mods` folder. If you're interested in creating and/or packing your own custom asset `.otr` files, check out the following tools: * [**retro - OTR generator**]( * [**fast64 - Blender plugin**]( # Development ### Building If you want to manually compile SoH, please consult the [building instructions](docs/BUILDING.md). ### Playtesting If you want to playtest a continuous integration build, you can find them at the links below. Keep in mind that these are for playtesting only, and you will likely encounter bugs and possibly crashes. * [Windows]( * [macOS]( * [Linux](","456, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, bug, code cleanup, do not merge, randomizer, epic, wiiu, libultraship, switch, no repro steps, macOS, windows, needs windows testing, needs wii u testing, needs switch testing, needs playtesting, needs mac testing, needs linux testing, merge ready, merge conflicts, linux, can't reproduce, blocking"
librdkafka,confluentinc/librdkafka,7329,"['C', 'C++', 'Shell']","['kafka', 'kafka-consumer', 'apache-kafka', 'high-performance', 'c']","librdkafka - the Apache Kafka C/C++ client library ================================================== Copyright (c) 2012-2022, [Magnus Edenhill]( 2023 [Confluent Inc.]( [ **librdkafka** is a C library implementation of the [Apache Kafka]( protocol, providing Producer, Consumer and Admin clients. It was designed with message delivery reliability and high performance in mind, current figures exceed 1 million msgs/second for the producer and 3 million msgs/second for the consumer. **librdkafka** is licensed under the 2-clause BSD license. KAFKA is a registered trademark of The Apache Software Foundation and has been licensed for use by librdkafka. librdkafka has no affiliation with and is not endorsed by The Apache Software Foundation. # Features # * Full Exactly-Once-Semantics (EOS) support * High-level producer, including Idempotent and Transactional producers * High-level balanced KafkaConsumer (requires broker >= 0.9) * Simple (legacy) consumer * Admin client * Compression: snappy, gzip, lz4, zstd * [SSL]( support * [SASL]( (GSSAPI/Kerberos/SSPI, PLAIN, SCRAM, OAUTHBEARER) support * Full list of [supported KIPs](INTRODUCTION.md#supported-kips) * Broker version support: >=0.8 (see [Broker version compatibility](INTRODUCTION.md#broker-version-compatibility)) * Guaranteed API stability for C & C++ APIs (ABI safety guaranteed for C) * [Statistics](STATISTICS.md) metrics * Debian package: librdkafka1 and librdkafka-dev in Debian and Ubuntu * RPM package: librdkafka and librdkafka-devel * Gentoo package: dev-libs/librdkafka * Portable: runs on Linux, MacOS X, Windows, Solaris, FreeBSD, AIX, ... # Documentation * Public API in [C header](src/rdkafka.h) and [C++ header](src-cpp/rdkafkacpp.h). * Introduction and manual in [INTRODUCTION.md]( * Configuration properties in [CONFIGURATION.md]( * Statistics metrics in [STATISTICS.md]( * [Frequently asked questions]( * Step-by-step tutorial [Getting Started with Apache Kafka and C/C++]( **NOTE**: The `master` branch is actively developed, use latest [release]( for production use. # Installation ## Installing prebuilt packages On Mac OSX, install librdkafka with homebrew: ```bash $ brew install librdkafka ``` On Debian and Ubuntu, install librdkafka from the Confluent APT repositories, see instructions [here]( and then install librdkafka: ```bash $ apt install librdkafka-dev ``` On RedHat, CentOS, Fedora, install librdkafka from the Confluent YUM repositories, instructions [here]( and then install librdkafka: ```bash $ yum install librdkafka-devel ``` On Windows, reference [librdkafka.redist]( NuGet package in your Visual Studio project. For other platforms, follow the source building instructions below. ## Installing librdkafka using vcpkg You can download and install librdkafka using the [vcpkg]( dependency manager: ```bash # Install vcpkg if not already installed $ git clone $ cd vcpkg $ ./bootstrap-vcpkg.sh $ ./vcpkg integrate install # Install librdkafka $ vcpkg install librdkafka ``` The librdkafka package in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request]( on the vcpkg repository. ## Build from source ### Requirements The GNU toolchain GNU make pthreads zlib-dev (optional, for gzip compression support) libssl-dev (optional, for SSL and SASL SCRAM support) libsasl2-dev (optional, for SASL GSSAPI support) libzstd-dev (optional, for ZStd compression support) libcurl-dev (optional, for SASL OAUTHBEARER OIDC support) **NOTE**: Static linking of ZStd (requires zstd >= 1.2.1) in the producer enables encoding the original size in the compression frame header, which will speed up the consumer. Use `STATIC_LIB_libzstd=/path/to/libzstd.a ./configure --enable-static` to enable static ZStd linking. MacOSX example: `STATIC_LIB_libzstd=$(brew ls -v zstd | grep libzstd.a$) ./configure --enable-static` ### Building ./configure # Or, to automatically install dependencies using the system's package manager: # ./configure --install-deps # Or, build dependencies from source: # ./configure --install-deps --source-deps-only make sudo make install **NOTE**: See [README.win32](README.win32) for instructions how to build on Windows with Microsoft Visual Studio. **NOTE**: See [CMake instructions](packaging/cmake/README.md) for experimental CMake build (unsupported). ## Usage in code See [getting Started with Apache Kafka and C/C++]( for a basic tutorial. 1. Refer to the [examples directory](examples/) for code using: * Producers: basic producers, idempotent producers, transactional producers. * Consumers: basic consumers, reading batches of messages. * Performance and latency testing tools. 2. Refer to the [examples GitHub repo]( for code connecting to a cloud streaming data service based on Apache Kafka 3. Link your program with `-lrdkafka` (C) or `-lrdkafka++` (C++). ## Commercial support Commercial support is available from [Confluent Inc]( ## Community support **Only the [latest official release]( is supported for community members.** File bug reports and feature requests using [GitHub Issues]( Questions and discussions are welcome on the [Discussions]( forum, and on the [Confluent Community slack]( #clients channel. # Language bindings # * C#/.NET: [confluent-kafka-dotnet]( (based on [rdkafka-dotnet]( * C++: [cppkafka]( * C++: [modern-cpp-kafka]( * Common Lisp: [cl-rdkafka]( * D (C-like): [librdkafka]( * D (C++-like): [librdkafkad]( * Erlang: [erlkaf]( * Go: [confluent-kafka-go]( * Haskell (kafka, conduit, avro, schema registry): [hw-kafka]( * Kotlin Native: [Kafka-Kotlin-Native]( * Lua: [luardkafka]( * Node.js: [node-rdkafka]( * OCaml: [ocaml-kafka]( * Perl: [Net::Kafka]( * PHP: [php-rdkafka]( * PHP: [php-simple-kafka-client]( * Python: [confluent-kafka-python]( * Python: [PyKafka]( * Ruby: [Hermann]( * Ruby: [rdkafka-ruby]( * Rust: [rust-rdkafka]( * Tcl: [KafkaTcl]( * Shell: [kafkacat]( - Apache Kafka command line tool * Swift: [Perfect-Kafka]( See [Powered by librdkafka]( for an incomplete list of librdkafka users.","3.1k, Code, Issues, Pull requests, Discussions, Projects, Wiki, Security, Insights, enhancement, bug, GREAT REPORT, wait-info, wontfix, try reproduce, portability, in progress, c++, workaround-provided, windows, unsupported, question, producer, need help, installation, consumer, security, discussion, python, php, misuse, minor, invalid, improve docs, golang, expected behavior, easy, duplicate, dotnet"
TDengine,taosdata/TDengine,22881,"['C', 'C++', 'Shell']","['iot', 'bigdata', 'time-series', 'database', 'industrial-iot']","[]( []( []( []( []( []( []( []( []( English | [](README-CN.md) # What Is TDengine? [TDengine]( is a next generation data historian purpose-built for Industry 4.0 and Industrial IoT. It enables real-time data ingestion, storage, analysis, and distribution of petabytes per day, generated by billions of sensors and data collectors. With TDengine making big data affordable and accessible, digital transformation has never been easier. TDengine seamlessly integrates with AI-enabled analytics and other third-party tools, with its open ecosystem offering a holistic solution for manufacturers to drive actionable insights and operational efficiency in the IIoT era. Our mission is to democratize industrial data systems and give people the freedom to use their data however it benefits them most. We are determined to unchain traditional industries from the legacy data infrastructure that has held back digital transformation and move toward a future in which silos are broken down, data is easily centralized and shared, and the benefits of revolutionary technologies like AI are as accessible to the industrial sector as they are to big tech. Learn more about our offerings: - [TDengine OSS]( a high-performance open-source time-series database - [TDengine Enterprise]( a next generation data historian for Industry 4.0 and the Industrial IoT - [TDengine Cloud]( a fully managed cloud service for industrial big data # Documentation For user manual, system design and architecture, please refer to [TDengine Documentation]( # Building At the moment, TDengine server supports running on Linux/Windows/macOS systems. Any application can also choose the RESTful interface provided by taosAdapter to connect the taosd service . TDengine supports X64/ARM64 CPU, and it will support MIPS64, Alpha64, ARM32, RISC-V and other CPU architectures in the future. Right now we don't support build with cross-compiling environment. You can choose to install through source code, [container]( [installation package]( or [Kubernetes]( This quick guide only applies to installing from source. TDengine provide a few useful tools such as taosBenchmark (was named taosdemo) and taosdump. They were part of TDengine. By default, TDengine compiling does not include taosTools. You can use `cmake .. -DBUILD_TOOLS=true` to make them be compiled with TDengine. To build TDengine, use [CMake]( 3.13.0 or higher versions in the project directory. ## Install build tools ### Ubuntu 18.04 and above or Debian ```bash sudo apt-get install -y gcc cmake build-essential git libssl-dev libgflags2.2 libgflags-dev libexpat1-dev libapr1-dev libaprutil1-dev libmxml-dev geos-devel ``` #### Install build dependencies for taosTools To build the [taosTools]( on Ubuntu/Debian, the following packages need to be installed. ```bash sudo apt install build-essential libjansson-dev libsnappy-dev liblzma-dev libz-dev zlib1g pkg-config ``` ### CentOS 7.9 ```bash sudo yum install epel-release sudo yum update sudo yum install -y gcc gcc-c++ make cmake3 gflags git openssl-devel expat-devel geos-devel sudo ln -sf /usr/bin/cmake3 /usr/bin/cmake ``` ### CentOS 8/Fedora/Rocky Linux ```bash sudo dnf install -y gcc gcc-c++ make cmake epel-release gflags git openssl-devel ``` #### Install build dependencies for taosTools on CentOS #### CentOS 7.9 ``` sudo yum install -y zlib-devel zlib-static xz-devel snappy-devel jansson jansson-devel pkgconfig libatomic libatomic-static libstdc++-static openssl-devel ``` #### CentOS 8/Fedora/Rocky Linux ``` sudo yum install -y epel-release sudo yum install -y dnf-plugins-core sudo yum config-manager --set-enabled powertools sudo yum install -y zlib-devel zlib-static xz-devel snappy-devel jansson jansson-devel pkgconfig libatomic libatomic-static libstdc++-static openssl-devel ``` Note: Since snappy lacks pkg-config support (refer to [link]( it leads a cmake prompt libsnappy not found. But snappy still works well. If the PowerTools installation fails, you can try to use: ``` sudo yum config-manager --set-enabled powertools ``` #### For CentOS + devtoolset Besides above dependencies, please run following commands: ``` sudo yum install centos-release-scl sudo yum install devtoolset-9 devtoolset-9-libatomic-devel scl enable devtoolset-9 -- bash ``` ### macOS ``` brew install argp-standalone gflags pkgconfig ``` ### Setup golang environment TDengine includes a few components like taosAdapter developed by Go language. Please refer to golang.org official documentation for golang environment setup. Please use version 1.20+. For the user in China, we recommend using a proxy to accelerate package downloading. ``` go env -w GO111MODULE=on go env -w GOPROXY= ``` The default will not build taosAdapter, but you can use the following command to build taosAdapter as the service for RESTful interface. ``` cmake .. -DBUILD_HTTP=false ``` ### Setup rust environment TDengine includes a few components developed by Rust language. Please refer to rust-lang.org official documentation for rust environment setup. ## Get the source codes First of all, you may clone the source codes from github: ```bash git clone cd TDengine ``` You can modify the file ~/.gitconfig to use ssh protocol instead of for better download speed. You will need to upload ssh public key to GitHub first. Please refer to GitHub official documentation for detail. ``` [url ""git@github.com:""] insteadOf = ``` ## Special Note [JDBC Connector]( [Go Connector]( Connector]( Connector]( Connector]( [Rust Connector]( and [Grafana plugin]( has been moved to standalone repository. ## Build TDengine ### On Linux platform You can run the bash script `build.sh` to build both TDengine and taosTools including taosBenchmark and taosdump as below: ```bash ./build.sh ``` It equals to execute following commands: ```bash mkdir debug cd debug cmake .. -DBUILD_TOOLS=true -DBUILD_CONTRIB=true make ``` You can use Jemalloc as memory allocator instead of glibc: ``` apt install autoconf cmake .. -DJEMALLOC_ENABLED=true ``` TDengine build script can detect the host machine's architecture on X86-64, X86, arm64 platform. You can also specify CPUTYPE option like aarch64 too if the detection result is not correct: aarch64: ```bash cmake .. -DCPUTYPE=aarch64 && cmake --build . ``` ### On Windows platform If you use the Visual Studio 2013, please open a command window by executing ""cmd.exe"". Please specify ""amd64"" for 64 bits Windows or specify ""x86"" for 32 bits Windows when you execute vcvarsall.bat. ```cmd mkdir debug && cd debug ""C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat"" < amd64 | x86 > cmake .. -G ""NMake Makefiles"" nmake ``` If you use the Visual Studio 2019 or 2017: please open a command window by executing ""cmd.exe"". Please specify ""x64"" for 64 bits Windows or specify ""x86"" for 32 bits Windows when you execute vcvarsall.bat. ```cmd mkdir debug && cd debug ""c:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat"" < x64 | x86 > cmake .. -G ""NMake Makefiles"" nmake ``` Or, you can simply open a command window by clicking Windows Start -> ""Visual Studio < 2019 | 2017 >"" folder -> ""x64 Native Tools Command Prompt for VS < 2019 | 2017 >"" or ""x86 Native Tools Command Prompt for VS < 2019 | 2017 >"" depends what architecture your Windows is, then execute commands as follows: ```cmd mkdir debug && cd debug cmake .. -G ""NMake Makefiles"" nmake ``` ### On macOS platform Please install XCode command line tools and cmake. Verified with XCode 11.4+ on Catalina and Big Sur. ```shell mkdir debug && cd debug cmake .. && cmake --build . ``` # Installing ## On Linux platform After building successfully, TDengine can be installed by ```bash sudo make install ``` Users can find more information about directories installed on the system in the [directory and files]( section. Installing from source code will also configure service management for TDengine.Users can also choose to [install from packages]( for it. To start the service after installation, in a terminal, use: ```bash sudo systemctl start taosd ``` Then users can use the TDengine CLI to connect the TDengine server. In a terminal, use: ```bash taos ``` If TDengine CLI connects the server successfully, welcome messages and version info are printed. Otherwise, an error message is shown. ## On Windows platform After building successfully, TDengine can be installed by: ```cmd nmake install ``` ## On macOS platform After building successfully, TDengine can be installed by: ```bash sudo make install ``` Users can find more information about directories installed on the system in the [directory and files]( section. Installing from source code will also configure service management for TDengine.Users can also choose to [install from packages]( for it. To start the service after installation, double-click the /applications/TDengine to start the program, or in a terminal, use: ```bash sudo launchctl start com.tdengine.taosd ``` Then users can use the TDengine CLI to connect the TDengine server. In a terminal, use: ```bash taos ``` If TDengine CLI connects the server successfully, welcome messages and version info are printed. Otherwise, an error message is shown. ## Quick Run If you don't want to run TDengine as a service, you can run it in current shell. For example, to quickly start a TDengine server after building, run the command below in terminal: (We take Linux as an example, command on Windows will be `taosd.exe`) ```bash ./build/bin/taosd -c test/cfg ``` In another terminal, use the TDengine CLI to connect the server: ```bash ./build/bin/taos -c test/cfg ``` option ""-c test/cfg"" specifies the system configuration file directory. # Try TDengine It is easy to run SQL commands from TDengine CLI which is the same as other SQL databases. ```sql CREATE DATABASE demo; USE demo; CREATE TABLE t (ts TIMESTAMP, speed INT); INSERT INTO t VALUES('2019-07-15 00:00:00', 10); INSERT INTO t VALUES('2019-07-15 01:00:00', 20); SELECT * FROM t; ts | speed | ========================... [TRUNCATED]","4.8k, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, bug, help wanted, question, enhancement, performance, java, dependencies, Hackathon, wontfix, taosdump, taosdemo, taosadapter, python, javascript, invalid, improvement, good idea, good first issue, duplicate, doc, add comments, activities, Hactoberfest accepted, CI"
pgvector,pgvector/pgvector,9771,"['C', 'Perl', 'Makefile']","['nearest-neighbor-search', 'approximate-nearest-neighbor-search']","# pgvector Open-source vector similarity search for Postgres Store your vectors with the rest of your data. Supports: - exact and approximate nearest neighbor search - single-precision, half-precision, binary, and sparse vectors - L2 distance, inner product, cosine distance, L1 distance, Hamming distance, and Jaccard distance - any [language](#languages) with a Postgres client Plus [ACID]( compliance, point-in-time recovery, JOINs, and all of the other [great features]( of Postgres []( ## Installation ### Linux and Mac Compile and install the extension (supports Postgres 12+) ```sh cd /tmp git clone --branch v0.7.0 cd pgvector make make install # may need sudo ``` See the [installation notes](#installation-notes---linux-and-mac) if you run into issues You can also install it with [Docker](#docker), [Homebrew](#homebrew), [PGXN](#pgxn), [APT](#apt), [Yum](#yum), [pkg](#pkg), or [conda-forge](#conda-forge), and it comes preinstalled with [Postgres.app](#postgresapp) and many [hosted providers](#hosted-postgres). There are also instructions for [GitHub Actions]( ### Windows Ensure [C++ support in Visual Studio]( is installed, and run: ```cmd call ""C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat"" ``` Note: The exact path will vary depending on your Visual Studio version and edition Then use `nmake` to build: ```cmd set ""PGROOT=C:\Program Files\PostgreSQL\16"" cd %TEMP% git clone --branch v0.7.0 cd pgvector nmake /F Makefile.win nmake /F Makefile.win install ``` See the [installation notes](#installation-notes---windows) if you run into issues You can also install it with [Docker](#docker) or [conda-forge](#conda-forge). ## Getting Started Enable the extension (do this once in each database where you want to use it) ```tsql CREATE EXTENSION vector; ``` Create a vector column with 3 dimensions ```sql CREATE TABLE items (id bigserial PRIMARY KEY, embedding vector(3)); ``` Insert vectors ```sql INSERT INTO items (embedding) VALUES ('[1,2,3]'), ('[4,5,6]'); ``` Get the nearest neighbors by L2 distance ```sql SELECT * FROM items ORDER BY embedding <-> '[3,1,2]' LIMIT 5; ``` Also supports inner product (`<#>`), cosine distance (`<=>`), and L1 distance (`<+>`, added in 0.7.0) Note: `<#>` returns the negative inner product since Postgres only supports `ASC` order index scans on operators ## Storing Create a new table with a vector column ```sql CREATE TABLE items (id bigserial PRIMARY KEY, embedding vector(3)); ``` Or add a vector column to an existing table ```sql ALTER TABLE items ADD COLUMN embedding vector(3); ``` Insert vectors ```sql INSERT INTO items (embedding) VALUES ('[1,2,3]'), ('[4,5,6]'); ``` Or load vectors in bulk using `COPY` ([example]( ```sql COPY items (embedding) FROM STDIN WITH (FORMAT BINARY); ``` Upsert vectors ```sql INSERT INTO items (id, embedding) VALUES (1, '[1,2,3]'), (2, '[4,5,6]') ON CONFLICT (id) DO UPDATE SET embedding = EXCLUDED.embedding; ``` Update vectors ```sql UPDATE items SET embedding = '[1,2,3]' WHERE id = 1; ``` Delete vectors ```sql DELETE FROM items WHERE id = 1; ``` ## Querying Get the nearest neighbors to a vector ```sql SELECT * FROM items ORDER BY embedding <-> '[3,1,2]' LIMIT 5; ``` Supported distance functions are: - `<->` - L2 distance - `<#>` - (negative) inner product - `<=>` - cosine distance - `<+>` - L1 distance (added in 0.7.0) Get the nearest neighbors to a row ```sql SELECT * FROM items WHERE id != 1 ORDER BY embedding <-> (SELECT embedding FROM items WHERE id = 1) LIMIT 5; ``` Get rows within a certain distance ```sql SELECT * FROM items WHERE embedding <-> '[3,1,2]' < 5; ``` Note: Combine with `ORDER BY` and `LIMIT` to use an index #### Distances Get the distance ```sql SELECT embedding <-> '[3,1,2]' AS distance FROM items; ``` For inner product, multiply by -1 (since `<#>` returns the negative inner product) ```tsql SELECT (embedding <#> '[3,1,2]') * -1 AS inner_product FROM items; ``` For cosine similarity, use 1 - cosine distance ```sql SELECT 1 - (embedding <=> '[3,1,2]') AS cosine_similarity FROM items; ``` #### Aggregates Average vectors ```sql SELECT AVG(embedding) FROM items; ``` Average groups of vectors ```sql SELECT category_id, AVG(embedding) FROM items GROUP BY category_id; ``` ## Indexing By default, pgvector performs exact nearest neighbor search, which provides perfect recall. You can add an index to use approximate nearest neighbor search, which trades some recall for speed. Unlike typical indexes, you will see different results for queries after adding an approximate index. Supported index types are: - [HNSW](#hnsw) - added in 0.5.0 - [IVFFlat](#ivfflat) ## HNSW An HNSW index creates a multilayer graph. It has better query performance than IVFFlat (in terms of speed-recall tradeoff), but has slower build times and uses more memory. Also, an index can be created without any data in the table since there isnt a training step like IVFFlat. Add an index for each distance function you want to use. L2 distance ```sql CREATE INDEX ON items USING hnsw (embedding vector_l2_ops); ``` Note: Use `halfvec_l2_ops` for `halfvec` and `sparsevec_l2_ops` for `sparsevec` (and similar with the other distance functions) Inner product ```sql CREATE INDEX ON items USING hnsw (embedding vector_ip_ops); ``` Cosine distance ```sql CREATE INDEX ON items USING hnsw (embedding vector_cosine_ops); ``` L1 distance - added in 0.7.0 ```sql CREATE INDEX ON items USING hnsw (embedding vector_l1_ops); ``` Hamming distance - added in 0.7.0 ```sql CREATE INDEX ON items USING hnsw (embedding bit_hamming_ops); ``` Jaccard distance - added in 0.7.0 ```sql CREATE INDEX ON items USING hnsw (embedding bit_jaccard_ops); ``` Supported types are: - `vector` - up to 2,000 dimensions - `halfvec` - up to 4,000 dimensions (added in 0.7.0) - `bit` - up to 64,000 dimensions (added in 0.7.0) - `sparsevec` - up to 1,000 non-zero elements (added in 0.7.0) ### Index Options Specify HNSW parameters - `m` - the max number of connections per layer (16 by default) - `ef_construction` - the size of the dynamic candidate list for constructing the graph (64 by default) ```sql CREATE INDEX ON items USING hnsw (embedding vector_l2_ops) WITH (m = 16, ef_construction = 64); ``` A higher value of `ef_construction` provides better recall at the cost of index build time / insert speed. ### Query Options Specify the size of the dynamic candidate list for search (40 by default) ```sql SET hnsw.ef_search = 100; ``` A higher value provides better recall at the cost of speed. Use `SET LOCAL` inside a transaction to set it for a single query ```sql BEGIN; SET LOCAL hnsw.ef_search = 100; SELECT ... COMMIT; ``` ### Index Build Time Indexes build significantly faster when the graph fits into `maintenance_work_mem` ```sql SET maintenance_work_mem = '8GB'; ``` A notice is shown when the graph no longer fits ```text NOTICE: hnsw graph no longer fits into maintenance_work_mem after 100000 tuples DETAIL: Building will take significantly more time. HINT: Increase maintenance_work_mem to speed up builds. ``` Note: Do not set `maintenance_work_mem` so high that it exhausts the memory on the server Like other index types, its faster to create an index after loading your initial data Starting with 0.6.0, you can also speed up index creation by increasing the number of parallel workers (2 by default) ```sql SET max_parallel_maintenance_workers = 7; -- plus leader ``` For a large number of workers, you may also need to increase `max_parallel_workers` (8 by default) ### Indexing Progress Check [indexing progress]( with Postgres 12+ ```sql SELECT phase, round(100.0 * blocks_done / nullif(blocks_total, 0), 1) AS ""%"" FROM pg_stat_progress_create_index; ``` The phases for HNSW are: 1. `initializing` 2. `loading tuples` ## IVFFlat An IVFFlat index divides vectors into lists, and then searches a subset of those lists that are closest to the query vector. It has faster build times and uses less memory than HNSW, but has lower query performance (in terms of speed-recall tradeoff). Three keys to achieving good recall are: 1. Create the index *after* the table has some data 2. Choose an appropriate number of lists - a good place to start is `rows / 1000` for up to 1M rows and `sqrt(rows)` for over 1M rows 3. When querying, specify an appropriate number of [probes](#query-options) (higher is better for recall, lower is better for speed) - a good place to start is `sqrt(lists)` Add an index for each distance function you want to use. L2 distance ```sql CREATE INDEX ON items USING ivfflat (embedding vector_l2_ops) WITH (lists = 100); ``` Note: Use `halfvec_l2_ops` for `halfvec` (and similar with the other distance functions) Inner product ```sql CREATE INDEX ON items USING ivfflat (embedding vector_ip_ops) WITH (lists = 100); ``` Cosine distance ```sql CREATE INDEX ON items USING ivfflat (embedding vector_cosine_ops) WITH (lists = 100); ``` Hamming distance - added in 0.7.0 ```sql CREATE INDEX ON items USING ivfflat (embedding bit_hamming_ops) WITH (lists = 100); ``` Supported types are: - `vector` - up to 2,000 dimensions - `halfvec` - up to 4,000 dimensions (added in 0.7.0) - `bit` - up to 64,000 dimensions (added in 0.7.0) ### Query Options Specify the number of probes (1 by default) ```sql SET ivfflat.probes = 10; ``` A higher value provides better recall at the cost of speed, and it can be set to the number of lists for exact nearest neighbor search (at which point the planner wont use the index) Use `SET LOCAL` inside a transaction to set it for a single query ```sql BEGIN; SET LOCAL ivfflat.probes = 10; SELECT ... COMMIT; ``` ### Index Build Time Speed up index creation on large tables by increasing the number of parallel workers (2 by default) ```sql SET max_parallel_maintenance_workers = 7; -- plus leader ``` For a large number of workers, you may also need to increase `max_parallel_workers` (8 by default) ### Indexing Progress Check [indexing progress]( with Postgres 12+ ```sql SELECT phase, round(1... [TRUNCATED]","430, Code, Issues, Pull requests, Actions, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
stress-ng,ColinIanKing/stress-ng,1474,"['C', 'Roff', 'Shell']","['stress-testing', 'kernel', 'memory', 'disk', 'cpu']","# stress-ng (stress next generation) stress-ng will stress test a computer system in various selectable ways. It was designed to exercise various physical subsystems of a computer as well as the various operating system kernel interfaces. Stress-ng features: * 330+ stress tests * 80+ CPU specific stress tests that exercise floating point, integer, bit manipulation and control flow * 20+ virtual memory stress tests * 40+ file system stress tests * 30+ memory/CPU cache stress tests * portable: builds on Linux (Debian, Devuan, RHEL, Fedora, Centos, Slackware OpenSUSE, Ubuntu, etc..), Solaris, FreeBSD, NetBSD, OpenBSD, DragonFlyBSD, Minix, Android, MacOS X, Serenity OS, GNU/Hurd, Haiku, Windows Subsystem for Linux, Cygwin and SunOs/Dilos/Solaris. with gcc, musl-gcc, clang, icc, icx, tcc and pcc. * tested on alpha, armel, armhf, arm64, hppa, i386, loong64, m68k, mips32, mips64, power32, ppc64el, risc-v, sh4, s390x, sparc64, x86-64 stress-ng was originally intended to make a machine work hard and trip hardware issues such as thermal overruns as well as operating system bugs that only occur when a system is being thrashed hard. Use stress-ng with caution as some of the tests can make a system run hot on poorly designed hardware and also can cause excessive system thrashing which may be difficult to stop. stress-ng can also measure test throughput rates; this can be useful to observe performance changes across different operating system releases or types of hardware. However, it has never been intended to be used as a precise benchmark test suite, so do NOT use it in this manner. Running stress-ng with root privileges will adjust out of memory settings on Linux systems to make the stressors unkillable in low memory situations, so use this judiciously. With the appropriate privilege, stress-ng can allow the ionice class and ionice levels to be adjusted, again, this should be used with care. ## Tarballs Tarballs of each version of stress-ng can be downloaded using the URL: where version is the relevant version number, for example: ## Running latest stress-ng snapshot in a container ```bash docker run --rm ghcr.io/colinianking/stress-ng --help ``` or ```bash docker run --rm colinianking/stress-ng --help ``` ## Debian packages for Ubuntu Recent versions of stress-ng are available in the Ubuntu stress-ng ppa for various Ubuntu releases: ``` sudo add-apt-repository ppa:colin-king/stress-ng sudo apt update sudo apt install stress-ng ``` ## Building stress-ng To build, the following libraries will ensure a fully functional stress-ng build: (note libattr is not required for more recent disto releases). Debian, Ubuntu: * gcc * g++ * libacl1-dev * libaio-dev * libapparmor-dev * libatomic1 * libattr1-dev * libbsd-dev * libcap-dev * libeigen3-dev * libgbm-dev * libgcrypt-dev * libglvnd-dev * libipsec-mb-dev * libjpeg-dev * libjudy-dev * libkeyutils-dev * libkmod-dev * libmd-dev * libmpfr-dev * libsctp-dev * libxxhash-dev * zlib1g-dev RHEL, Fedora, Centos: * gcc * g++ * eigen3-devel * Judy-devel * keyutils-libs-devel * kmod-devel * libacl-devel * libaio-devel * libatomic * libattr-devel * libbsd-devel * libcap-devel * libgbm-devel * libgcrypt-devel * libglvnd-core-devel * libglvnd-devel * libjpeg-devel * libmd-devel * mpfr-devel * libX11-devel * libXau-devel * libxcb-devel * lksctp-tools-devel * xorg-x11-proto-devel * xxhash-devel * zlib-devel RHEL, Fedora, Centos (static builds): * gcc * g++ * eigen3-devel * glibc-static * Judy-devel * keyutils-libs-devel * libacl-devel * libaio-devel * libatomic-static * libattr-devel * libbsd-devel * libcap-devel * libgbm-devel * libgcrypt-devel * libglvnd-core-devel * libglvnd-devel * libjpeg-devel * libmd-devel * libX11-devel * libXau-devel * libxcb-devel * lksctp-tools-devel * mpfr-devel * xorg-x11-proto-devel * xxhash-devel * zlib-devel SUSE: * gcc * gcc-c++ * eigen3-devel * keyutils-devel * libaio-devel * libapparmor-devel * libatomic1 * libattr-devel * libbsd-devel * libcap-devel * libgbm-devel * libglvnd-devel * libjpeg-turbo * libkmod-devel * libmd-devel * libseccomp-devel * lksctp-tools-devel * mpfr-devel * xxhash-devel * zlib-devel ClearLinux: * devpkg-acl * devpkg-eigen * devpkg-Judy * devpkg-kmod * devpkg-attr * devpkg-libbsd * devpkg-libgcrypt * devpkg-libjpeg-turbo * devpkg-libsctp * devpkg-mesa Alpine Linux: * build-base * eigen-dev * jpeg-dev * judy-dev * keyutils-dev * kmod-dev * libacl-dev * libaio-dev * libatomic * libattr * libbsd-dev * libcap-dev * libgcrypt-dev * libmd-dev * libseccomp-dev * lksctp-tools-dev * mesa-dev * mpfr-dev * xxhash-dev * zlib-dev Snaps: * stress-ng is not intended to be snap'd with snapcraft. Doing so is strictly against the wishes of the project maintainer and main developer. NOTE: the build will try to detect build dependencies and will build an image with functionality disabled if the support libraries are not installed. At build-time stress-ng will detect kernel features that are available on the target build system and enable stress tests appropriately. Stress-ng has been build-tested on Ubuntu, Debian, Debian GNU/Hurd, Slackware, RHEL, SLES, Centos, kFreeBSD, OpenBSD, NetBSD, FreeBSD, Debian kFreeBSD, DragonFly BSD, OS X, Minix, Solaris 11.3, OpenIndiana and Hiaku. Ports to other POSIX/UNIX like operating systems should be relatively easy. NOTE: ALWAYS run ```make clean``` after fetching changes from the git repository to force the build to regenerate the build configuration file. Parallel builds using make -j are supported. To build on BSD systems, one requires gcc and GNU make: ``` CC=gcc gmake clean CC=gcc gmake ``` To build on OS X systems, just use: ``` make clean make -j ``` To build on MINIX, gmake and clang are required: ``` CC=clang gmake clean CC=clang gmake ``` To build on SunOS, one requires GCC and GNU make, build using: ``` CC=gcc gmake clean CC=gcc gmake ``` To build on Dilos, one requires GCC and GNU make, build using: ``` CC=gcc gmake clean CC=gcc gmake ``` To build on Haiku Alpha 4: ``` make clean make ``` To build a static image (example, for Android), use: ``` make clean STATIC=1 make ``` To build with full warnings enabled: ``` make clean PEDANTIC=1 make ``` To build with the Tiny C compiler: ``` make clean CC=tcc make ``` To build with the PCC portable C compiler use: ``` make clean CC=pcc make ``` To build with the musl C library: ``` make clean CC=musl-gcc ``` To build with the Intel C compiler icc use: ``` make clean CC=icc make ``` To build with the Intel C compiler icx use: ``` make clean CC=icx make ``` To perform a cross-compilation using gcc, use a static build, specify the toolchain (both CC and CXX). For example, a mips64 cross build: ``` make clean STATIC=1 CC=mips64-linux-gnuabi64-gcc CXX=mips64-linux-gnuabi64-g++ make -j $(nproc) ``` To build with debug (-g) enabled use: ``` make clean DEBUG=1 make ``` ## Contributing to stress-ng: Send patches to colin.i.king@gmail.com or merge requests at ## Quick Start Reference Guide The [Ubuntu stress-ng reference guide]( contains a brief overview and worked examples. ## Examples Run 4 CPU, 2 virtual memory, 1 disk and 8 fork stressors for 2 minutes and print measurements: ``` stress-ng --cpu 4 --vm 2 --hdd 1 --fork 8 --timeout 2m --metrics stress-ng: info: [573366] setting to a 120 second (2 mins, 0.00 secs) run per stressor stress-ng: info: [573366] dispatching hogs: 4 cpu, 2 vm, 1 hdd, 8 fork stress-ng: info: [573366] successful run completed in 123.78s (2 mins, 3.78 secs) stress-ng: info: [573366] stressor bogo ops real time usr time sys time bogo ops/s bogo ops/s CPU used per stress-ng: info: [573366] (secs) (secs) (secs) (real time) (usr+sys time) instance (%) stress-ng: info: [573366] cpu 515396 120.00 453.02 0.18 4294.89 1137.24 94.42 stress-ng: info: [573366] vm 2261023 120.01 223.80 1.80 18840.15 10022.27 93.99 stress-ng: info: [573366] hdd 367558 123.78 10.63 11.67 2969.49 16482.42 18.02 stress-ng: info: [573366] fork 598058 120.00 68.24 65.88 4983.80 4459.13 13.97 ``` Run matrix stressor on all online CPUs for 60 seconds and measure temperature: ``` stress-ng --matrix -1 --tz -t 60 stress-ng: info: [1171459] setting to a 60 second run per stressor stress-ng: info: [1171459] dispatching hogs: 8 matrix stress-ng: info: [1171459] successful run completed in 60.01s (1 min, 0.01 secs) stress-ng: info: [1171459] matrix: stress-ng: info: [1171459] acpitz0 75.00 C (348.15 K) stress-ng: info: [1171459] acpitz1 75.00 C (348.15 K) stress-ng: info: [1171459] pch_skylake 60.17 C (333.32 K) stress-ng: info: [1171459] x86_pkg_temp 62.72 C (335.87 K) ``` Run a mix of 4 I/O stressors and check for changes in disk S.M.A.R.T. metadata: ``` sudo stress-ng --iomix 4 --smart -t 30s stress-ng: info: [1171471] setting to a 30 second run per stressor stress-ng: info: [1171471] dispatching hogs: 4 iomix stress-ng: info: [1171471] successful run completed in 30.37s stress-ng: info: [1171471] Device ID S.M.A.R.T. Attribute Value Change stress-ng: info: [1171471] sdc 01 Read Error Rate 88015771 71001 stress-ng: info: [1171471] sdc 07 Seek Error Rate 59658169 92 stress-ng: info: [1171471] sdc c3 Hardware ECC Recovered 88015771 71001 stress-ng: info: [1171471] sdc f1 Total LBAs Written 481904395 877 stress-ng: info: [1171471] sdc f2 Total LBAs Read 3768039248 5139 stress-ng: info: [1171471] sdd be Temperature Difference 3670049 1 ``` Benchmark system calls using the VDSO: ``` stress-ng --vdso 1 -t 5 --metrics stress-ng: info: [1171584] setting to a 5 second run per stressor stress-ng: info: [1171584] dispatching hogs: 1 vdso stress-ng: info: [1171585] stress-ng-vdso: exercising vDSO functions: clock_gettime time gettimeofday getcpu stress-ng: info: [1171585] stress-ng-vdso: 9.88 nanoseconds per call (excluding 1.73 nanoseconds test overhead) stress-ng: info: [1171584] successful run completed in 5.10s stress-ng: info: [1171584] stressor bogo ops real time usr time sys time bogo ops/s bogo ops/s CPU used per stress-ng: info: [1171584] (secs) (secs) (secs) (real time) (usr+sys time) instance... [TRUNCATED]","262, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, enhancement, wontfix, question, invalid, help wanted, duplicate, bug"
openvpn,OpenVPN/openvpn,10066,"['C', 'Shell', 'M4']","['security', 'vpn']","OpenVPN -- A Secure tunneling daemon Copyright (C) 2002-2022 OpenVPN Inc. This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License version 2 as published by the Free Software Foundation. ************************************************************************* To get the latest release of OpenVPN, go to: To Build and Install, tar -zxf openvpn-.tar.gz cd openvpn- ./configure make make install or see the file INSTALL for more info. For information on how to build OpenVPN on/for Windows with MinGW or MSVC see README.cmake.md. ************************************************************************* For detailed information on OpenVPN, including examples, see the man page For a sample VPN configuration, see To report an issue, see (Note: We recently switched to GitHub for reporting new issues, old issues can be found at: For a description of OpenVPN's underlying protocol, see the file ssl.h included in the source distribution. ************************************************************************* Other Files & Directories: * configure.ac -- script to rebuild our configure script and makefile. * sample/sample-scripts/verify-cn A sample perl script which can be used with OpenVPN's --tls-verify option to provide a customized authentication test on embedded X509 certificate fields. * sample/sample-keys/ Sample RSA keys and certificates. DON'T USE THESE FILES FOR ANYTHING OTHER THAN TESTING BECAUSE THEY ARE TOTALLY INSECURE. * sample/sample-config-files/ A collection of OpenVPN config files and scripts from the HOWTO at ************************************************************************* Note that easy-rsa and tap-windows are now maintained in their own subprojects. Their source code is available here: Community-provided Windows installers (MSI) and Debian packages are built from See the INSTALL file for usage information.","2.9k, Code, Issues, Pull requests, Actions, Security, Insights, enhancement, bug, Windows, moreinformationneeded, DCO, question, dco-win, outdated code, patch-submitted, linux, documentation, help wanted, feature, cannotreproduce, FreeBSD, website, non-trivial change, macOS, wontfix, tapctl, plugins, invalid, invalid vpn config, duplicate, commercial client, cmake, WINS, Installer"
FreeRTOS-Kernel,FreeRTOS/FreeRTOS-Kernel,2415,"['C', 'Assembly', 'CMake']",[],"[]( []( ## Getting started This repository contains FreeRTOS kernel source/header files and kernel ports only. This repository is referenced as a submodule in [FreeRTOS/FreeRTOS]( repository, which contains pre-configured demo application projects under ```FreeRTOS/Demo``` directory. The easiest way to use FreeRTOS is to start with one of the pre-configured demo application projects. That way you will have the correct FreeRTOS source files included, and the correct include paths configured. Once a demo application is building and executing you can remove the demo application files, and start to add in your own application source files. See the [FreeRTOS Kernel Quick Start Guide]( for detailed instructions and other useful links. Additionally, for FreeRTOS kernel feature information refer to the [Developer Documentation]( and [API Reference]( Also for contributing and creating a Pull Request please refer to [the instructions here](.github/CONTRIBUTING.md#contributing-via-pull-request). ### Getting help If you have any questions or need assistance troubleshooting your FreeRTOS project, we have an active community that can help on the [FreeRTOS Community Support Forum]( ## To consume FreeRTOS-Kernel ### Consume with CMake If using CMake, it is recommended to use this repository using FetchContent. Add the following into your project's main or a subdirectory's `CMakeLists.txt`: - Define the source and version/tag you want to use: ```cmake FetchContent_Declare( freertos_kernel GIT_REPOSITORY GIT_TAG main #Note: Best practice to use specific git-hash or tagged version ) ``` In case you prefer to add it as a git submodule, do: ```bash git submodule add git submodule update --init ``` - Add a freertos_config library (typically an INTERFACE library) The following assumes the directory structure: - `include/FreeRTOSConfig.h` ```cmake add_library(freertos_config INTERFACE) target_include_directories(freertos_config SYSTEM INTERFACE include ) target_compile_definitions(freertos_config INTERFACE projCOVERAGE_TEST=0 ) ``` In case you installed FreeRTOS-Kernel as a submodule, you will have to add it as a subdirectory: ```cmake add_subdirectory(${FREERTOS_PATH}) ``` - Configure the FreeRTOS-Kernel and make it available - this particular example supports a native and cross-compiled build option. ```cmake set( FREERTOS_HEAP ""4"" CACHE STRING """" FORCE) # Select the native compile PORT set( FREERTOS_PORT ""GCC_POSIX"" CACHE STRING """" FORCE) # Select the cross-compile PORT if (CMAKE_CROSSCOMPILING) set(FREERTOS_PORT ""GCC_ARM_CA9"" CACHE STRING """" FORCE) endif() FetchContent_MakeAvailable(freertos_kernel) ``` - In case of cross compilation, you should also add the following to `freertos_config`: ```cmake target_compile_definitions(freertos_config INTERFACE ${definitions}) target_compile_options(freertos_config INTERFACE ${options}) ``` ### Consuming stand-alone - Cloning this repository To clone using HTTPS: ``` git clone ``` Using SSH: ``` git clone git@github.com:FreeRTOS/FreeRTOS-Kernel.git ``` ## Repository structure - The root of this repository contains the three files that are common to every port - list.c, queue.c and tasks.c. The kernel is contained within these three files. croutine.c implements the optional co-routine functionality - which is normally only used on very memory limited systems. - The ```./portable``` directory contains the files that are specific to a particular microcontroller and/or compiler. See the readme file in the ```./portable``` directory for more information. - The ```./include``` directory contains the real time kernel header files. - The ```./template_configuration``` directory contains a sample `FreeRTOSConfig.h` to help jumpstart a new project. See the [FreeRTOSConfig.h](examples/template_configuration/FreeRTOSConfig.h) file for instructions. ### Code Formatting FreeRTOS files are formatted using the ""[uncrustify]( tool. The configuration file used by uncrustify can be found in the [FreeRTOS/CI-CD-GitHub-Actions's]( [uncrustify.cfg]( file. ### Line Endings File checked into the FreeRTOS-Kernel repository use unix-style LF line endings for the best compatibility with git. For optimal compatibility with Microsoft Windows tools, it is best to enable the git autocrlf feature. You can enable this setting for the current repository using the following command: ``` git config core.autocrlf true ``` ### Git History Optimizations Some commits in this repository perform large refactors which touch many lines and lead to unwanted behavior when using the `git blame` command. You can configure git to ignore the list of large refactor commits in this repository with the following command: ``` git config blame.ignoreRevsFile .git-blame-ignore-revs ``` ### Spelling and Formatting We recommend using [Visual Studio Code]( commonly referred to as VSCode, when working on the FreeRTOS-Kernel. The FreeRTOS-Kernel also uses [cSpell]( as part of its spelling check. The config file for which can be found at [cspell.config.yaml](cspell.config.yaml) There is additionally a [cSpell plugin for VSCode]( that can be used as well. *[.cSpellWords.txt](.github/.cSpellWords.txt)* contains words that are not traditionally found in an English dictionary. It is used by the spellchecker to verify the various jargon, variable names, and other odd words used in the FreeRTOS code base are correct. If your pull request fails to pass the spelling and you believe this is a mistake, then add the word to *[.cSpellWords.txt](.github/.cSpellWords.txt)*. When adding a word please then sort the list, which can be done by running the bash command: `sort -u .cSpellWords.txt -o .cSpellWords.txt` Note that only the FreeRTOS-Kernel Source Files, [include](include), [portable/MemMang](portable/MemMang), and [portable/Common](portable/Common) files are checked for proper spelling, and formatting at this time.","1k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, enhancement, bug, roadmap, help wanted, documentation, wontfix, question, invalid, good first issue, duplicate, Triaged, Testing In-Progress, Testing Complete, Second Code Review In-Progress, Second Code Review Complete, Reviewers Assigned, New Port, First Code Review In-Progress, First Code Review Complete, Concept Nack, Concept Ack"
SoftEtherVPN,SoftEtherVPN/SoftEtherVPN,11151,"['C', 'C#', 'TypeScript']","['vpn-tunnel', 'vpn-protocols', 'softether-vpn', 'vpn', 'vpn-server']","# SoftEther VPN ||Badges| |---|---| |GitLab CI|[]( |Coverity Scan|[]( |Cirrus CI|[]( - [SoftEther VPN](#softether-vpn) - [BOARD MEMBERS OF THIS REPOSITORY](#board-members-of-this-repository) - [SOFTETHER VPN ADVANTAGES](#softether-vpn-advantages) - [Installation](#installation) * [For FreeBSD](#for-freebsd) * [For Windows](#for-windows) * [From binary installers (stable channel)](#from-binary-installers-stable-channel) * [Build from Source code](#build-from-source-code) - [About HTML5-based Modern Admin Console and JSON-RPC API Suite](#about-html5-based-modern-admin-console-and-json-rpc-api-suite) * [Built-in SoftEther VPN Server HTML5 Ajax-based Web Administration Console](#built-in-softether-vpn-server-html5-ajax-based-web-administration-console) * [Built-in SoftEther Server VPN JSON-RPC API Suite](#built-in-softether-server-vpn-json-rpc-api-suite) - [TO CIRCUMVENT YOUR GOVERNMENT'S FIREWALL RESTRICTION](#to-circumvent-your-governments-firewall-restriction) - [SOURCE CODE CONTRIBUTION](#source-code-contribution) - [DEAR SECURITY EXPERTS](#dear-security-experts) SoftEther VPN (Developer Edition Master Repository) - An Open-Source Cross-platform Multi-protocol VPN Program This repository has experimental codes. Pull requests are welcome. Stable Edition is available on which the non-developer user can stable use. Please note that [some features](#comparison-with-stable-edition) are not available in Stable Edition. Source code packages (.zip and .tar.gz) and binary files of Stable Edition are also available: Copyright (c) all contributors on SoftEther VPN project in GitHub. Copyright (c) Daiyuu Nobori, SoftEther Project at University of Tsukuba, and SoftEther Corporation. --- The development of SoftEther VPN was supported by the MITOH Project, a research and development project by Japanese Government, subsidized by Ministry of Economy, Trade and Industry of Japan, administrated by Information Promotion Agency. --- [Icons8]( kindly supported the project by gifting a license which allows to edit and redistribute their icons. Please note that you are not allowed to redistribute those icons outside of this repository. The developers of SoftEther VPN love Icons8's work and kindly ask the users to support them as much as possible. --- Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at SoftEther VPN (""SoftEther"" means ""Software Ethernet"") is one of the world's most powerful and easy-to-use multi-protocol VPN software. SoftEther VPN runs on Windows, Linux, Mac, FreeBSD and Solaris. SoftEther VPN supports most of widely-used VPN protocols including SSL-VPN, WireGuard, OpenVPN, IPsec, L2TP, MS-SSTP, L2TPv3 and EtherIP by the single SoftEther VPN Server program. More details on # BOARD MEMBERS OF THIS REPOSITORY Daiyuu Nobori (Since Jan 2, 2014) Moataz Elmasry (Since Nov 6, 2017) Zulyandri Zardi (Since Nov 6, 2017) Alex Maslakov (Since Nov 6, 2017) Davide Beatrici (Since Jul 21, 2018) Ilya Shipitsin (Since Jul 21, 2018) # SOFTETHER VPN ADVANTAGES - Supporting all popular VPN protocols by the single VPN server: SSL-VPN (HTTPS) WireGuard OpenVPN IPsec L2TP MS-SSTP L2TPv3 EtherIP - Free and open-source software. - Easy to establish both remote-access and site-to-site VPN. - SSL-VPN Tunneling on HTTPS to pass through NATs and firewalls. - Revolutionary VPN over ICMP and VPN over DNS features. - Resistance to highly-restricted firewall. - Ethernet-bridging (L2) and IP-routing (L3) over VPN. - Embedded dynamic-DNS and NAT-traversal so that no static nor fixed IP address is required. - AES 256-bit and RSA 4096-bit encryptions. - Sufficient security features such as logging and firewall inner VPN tunnel. - User authentication with RADIUS and NT domain controllers. - User authentication with X.509 client certificate. - Packet logging. - 1Gbps-class high-speed throughput performance with low memory and CPU usage. - Windows, Linux, Mac, Android, iPhone, iPad and Windows Phone are supported. - The OpenVPN clone function supports legacy OpenVPN clients. - IPv4 / IPv6 dual-stack. - The VPN server runs on Windows, Linux, FreeBSD, Solaris and Mac OS X. - Configure All settings on GUI. - Multi-languages (English, Japanese and Simplified-Chinese). - No memory leaks. High quality stable codes, intended for long-term runs. We always verify that there are no memory or resource leaks before releasing the build. - More details at # Comparison with Stable Edition | Protocol | Stable Edition (SE) | Developer Edition (DE) | Comment | | --- | --- | --- | --- | | SSL-VPN | | | | | OpenVPN | | | AEAD mode is supported in DE only. | | IPsec | | | | | L2TP | | | | | MS-SSTP | | | | | L2TPv3 | | | | | EtherIP | | | | | WireGuard | | | | | IKEv2 | | | | | Feature | Stable Edition (SE) | Developer Edition (DE) | Comment | | --- | --- | --- | --- | | Password Authentication | | | | | RADIUS / NT Authentication | | | | | Certificate Authentication | | | SE supports the feature in SSL-VPN only. | | IPv6-capable VPN Tunnel | | | SE supports IPv6 in L2 VPN tunnels only. | | IPv4 Route Management | | | Windows clients only | | IPv6 Route Management | | | Windows clients only | | TLS Server Verification | | | In SE you need to specify the exact certificate or CA to verify. DE can perform standard TLS verification and use the system CA store. | | Dual-stack Name Resolution | | | SE attempts in IPv6 only after IPv4 has failed. | | ECDSA Certificates Import | | | | | Runs on Windows XP and Earlier | | | | | Compatible with SoftEther VPN 1.0 | | | | | AES-NI Hardware Acceleration | | | SE requires [intel_aes_lib]( to enable AES-NI, so x86 only. In DE, enabled by default as long as processor supports it (at least x86 and ARM). | # Installation ## For FreeBSD SoftEther VPN in FreeBSD Ports Collection is maintained by [Koichiro Iwao]( ([@metalefty]( Binary package can be installed by pkg: ``` pkg install softether5 ``` Alternatively, it can be built & installed by ports: ``` make install -C /usr/ports/security/softether5 ``` To run SoftEther VPN Server: ``` service softether_server start ``` To configure SoftEther VPN Server startup on boot: ``` sysrc softether_server_enable=yes ``` Also SoftEther VPN [Stable Edition]( and [RTM version]( are available on FreeBSD. ## For Windows [Nightly builds]( (choose appropriate platform, then find binaries or installers as artifacts) ## From binary installers (stable channel) Those can be found under There you can also find SoftEtherVPN source code in zip and tar formats. ## Build from Source code see [BUILD_UNIX](src/BUILD_UNIX.md) or [BUILD_WINDOWS](src/BUILD_WINDOWS.md) There are two flavours of SoftEtherVPN source code: 1. Unstable. Found under 2. Stable. Found under # About HTML5-based Modern Admin Console and JSON-RPC API Suite ## Built-in SoftEther VPN Server HTML5 Ajax-based Web Administration Console We are developing the HTML5 Ajax-based Web Administration Console (currently very limited, under construction) in the embedded HTTPS server on the SoftEther VPN Server. Access to the following URL from your favorite web browser. ``` ``` For example if your VPN Server is running as the port 5555 on the host at 192.168.0.1, you can access to the web console by: ``` ``` Note: Your HTML5 development contribution is very appreciated. The current HTML5 pages are written by Daiyuu Nobori (the core developer of SoftEther VPN). He is obviously lack of HTML5 development ability. Please kindly consider to contribute for SoftEther VPN's development on GitHub. Your code will help every people running SoftEther VPN Server. ## Built-in SoftEther Server VPN JSON-RPC API Suite The API Suite allows you to easily develop your original SoftEther VPN Server management application to control the VPN Server (e.g. creating users, adding Virtual Hubs, disconnecting a specified VPN sessions). You can access to the [latest SoftEther VPN Server JSON-RPC Document on GitHub.]( - Almost all control APIs, which the VPN Server provides, are available as JSON-RPC API. You can write your own VPN Server management application in your favorite languages (JavaScript, TypeScript, Java, Python, Ruby, C#, ... etc.) - If you are planning to develop your own VPN cloud service, the JSON-RPC API is the best choice to realize the automated operations for the VPN Server. - No need to use any specific API client library since all APIs are provided on the JSON-RPC 2.0 Specification. You can use your favorite JSON and HTTPS client library to call any of all APIs in your pure runtime environment. - Also, the SoftEther VPN Project provides high-quality JSON-RPC client stub libraries which define all of the API client stub codes. These libraries are written in C#, JavaScript and TypeScript. The Node.js Client Library for VPN Server RPC (vpnrpc) package is also available. # TO CIRCUMVENT YOUR GOVERNMENT'S FIREWALL RESTRICTION Because SoftEther VPN is overly strong tool to build a VPN tunnel, some censorship governments want to block your access to the source code of SoftEther VPN, by abusing their censorship firewalls. To circumvent your censor's unjust restriction, SoftEther VPN Project distributes the up-to-date source code on all the following open-source repositories: - GitHub $ git clone - GitLab (mirrored from GitHub) $ git clone - OneDev (mirrored from GitHub) $ git clone We hope that you can reach one of the above URLs at least! # SOURCE CODE CONTRIBUTION Your contribution to SoftEther VPN Project is much appreciated. Please send patches to us through GitHub. # DEAR SECURITY EXPERTS If you find a bug or a security vulnerability please [kindly inform]( us about the problem immediately so that we can fix the security problem to protect a lot of users around the world as soon as possible. Our e-mail address for security reports is: **softether-vpn-security at softether.org** Please note that the above e-mail address is not a technical support inquiry address.... [TRUNCATED]","2.5k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, feature, bug, help wanted, protocol/OpenVPN, os/Windows, needs-triage, security, good first issue, enterprise environment, build & release, vulnerability, refactor, protocol/L2TP, performance, os/Linux, os/BSD, os/Android, os/iOS, Pull Request available, question, protocol/WireGuard, protocol/SSTP, os/macOS, os/Solaris, javascript, duplicate, documentation, dependencies, coverity, cleanup"
OpenSC,OpenSC/OpenSC,2451,"['C', 'M4', 'Shell']","['pkcs11', 'minidriver', 'tokend', 'smartcard', 'security']","# OpenSC documentation Manual pages for the [OpenSC command line tools]( as well as for the [OpenSC configuration files]( are available online and typically distributed along with your installation. The [OpenSC Wiki]( includes, among others, information for: * [Windows Quick Start]( * [macOS Quick Start]( * [Compiling and Installing on Unix flavors]( * [Frequently Asked Questions]( * More user and developer provided documentation # Downloads ## Latest release The [latest stable version of OpenSC]( is available on Github. It is available as * Windows installer for 64 bit and 32 bit programs (`OpenSC*_win64.msi` and `OpenSC*_win32.msi`) * macOS installer (`OpenSC*.dmg`) * Source code distribution (`opensc*.tar.gz`) ## Nightly build The latest source code is available through [GitHub]( Nightly builds are available by their git hash in branches of [OpenSC/Nightly]( # Build and testing status []( []( []( []( []( []( []( Build and test status of specific cards: | Cards | Status | |----------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------| | CAC | []( | | [virt_CACard]( | []( | | [Coolkey]( | []( | | [PivApplet]( | []( | | [OpenPGP Applet]( | []( | | [GidsApplet]( | []( | | [IsoApplet]( | []( | | [OsEID (MyEID)]( | []( | | SmartCardHSM | []( | | ePass2003 | []( |","705, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, help wanted, Windows, Input needed, Wishlist, enhancement, bug, Support, wontfix, invalid, good first issue, Regression"
whisper.cpp,ggerganov/whisper.cpp,32018,"['C', 'C++', 'Cuda']","['openai', 'speech-to-text', 'transformer', 'whisper', 'inference']","# whisper.cpp []( []( []( Stable: [v1.6.2]( / [Roadmap | F.A.Q.]( High-performance inference of [OpenAI's Whisper]( automatic speech recognition (ASR) model: - Plain C/C++ implementation without dependencies - Apple Silicon first-class citizen - optimized via ARM NEON, Accelerate framework, Metal and [Core ML]( - AVX intrinsics support for x86 architectures - VSX intrinsics support for POWER architectures - Mixed F16 / F32 precision - [4-bit and 5-bit integer quantization support]( - Zero memory allocations at runtime - Support for CPU-only inference - [Efficient GPU support for NVIDIA]( - [Partial OpenCL GPU support via CLBlast]( - [OpenVINO Support]( - [C-style API]( Supported platforms: - [x] Mac OS (Intel and Arm) - [x] [iOS](examples/whisper.objc) - [x] [Android](examples/whisper.android) - [x] [Java](bindings/java/README.md) - [x] Linux / [FreeBSD]( - [x] [WebAssembly](examples/whisper.wasm) - [x] Windows ([MSVC]( and [MinGW]( - [x] [Raspberry Pi]( - [x] [docker]( The entire high-level implementation of the model is contained in [whisper.h](whisper.h) and [whisper.cpp](whisper.cpp). The rest of the code is part of the [`ggml`]( machine learning library. Having such a lightweight implementation of the model allows to easily integrate it in different platforms and applications. As an example, here is a video of running the model on an iPhone 13 device - fully offline, on-device: [whisper.objc](examples/whisper.objc) You can also easily make your own offline voice assistant application: [command](examples/command) On Apple Silicon, the inference runs fully on the GPU via Metal: Or you can even run it straight in the browser: [talk.wasm](examples/talk.wasm) ## Implementation details - The core tensor operations are implemented in C ([ggml.h](ggml.h) / [ggml.c](ggml.c)) - The transformer model and the high-level C-style API are implemented in C++ ([whisper.h](whisper.h) / [whisper.cpp](whisper.cpp)) - Sample usage is demonstrated in [main.cpp](examples/main) - Sample real-time audio transcription from the microphone is demonstrated in [stream.cpp](examples/stream) - Various other examples are available in the [examples](examples) folder The tensor operators are optimized heavily for Apple silicon CPUs. Depending on the computation size, Arm Neon SIMD intrinsics or CBLAS Accelerate framework routines are used. The latter are especially effective for bigger sizes since the Accelerate framework utilizes the special-purpose AMX coprocessor available in modern Apple products. ## Quick start First clone the repository: ```bash git clone ``` Then, download one of the Whisper [models](models/README.md) converted in [`ggml` format](#ggml-format). For example: ```bash bash ./models/download-ggml-model.sh base.en ``` Now build the [main](examples/main) example and transcribe an audio file like this: ```bash # build the main example make # transcribe an audio file ./main -f samples/jfk.wav ``` --- For a quick demo, simply run `make base.en`: ```text $ make base.en cc -I. -O3 -std=c11 -pthread -DGGML_USE_ACCELERATE -c ggml.c -o ggml.o c++ -I. -I./examples -O3 -std=c++11 -pthread -c whisper.cpp -o whisper.o c++ -I. -I./examples -O3 -std=c++11 -pthread examples/main/main.cpp whisper.o ggml.o -o main -framework Accelerate ./main -h usage: ./main [options] file0.wav file1.wav ... options: -h, --help [default] show this help message and exit -t N, --threads N [4 ] number of threads to use during computation -p N, --processors N [1 ] number of processors to use during computation -ot N, --offset-t N [0 ] time offset in milliseconds -on N, --offset-n N [0 ] segment index offset -d N, --duration N [0 ] duration of audio to process in milliseconds -mc N, --max-context N [-1 ] maximum number of text context tokens to store -ml N, --max-len N [0 ] maximum segment length in characters -sow, --split-on-word [false ] split on word rather than on token -bo N, --best-of N [5 ] number of best candidates to keep -bs N, --beam-size N [5 ] beam size for beam search -wt N, --word-thold N [0.01 ] word timestamp probability threshold -et N, --entropy-thold N [2.40 ] entropy threshold for decoder fail -lpt N, --logprob-thold N [-1.00 ] log probability threshold for decoder fail -debug, --debug-mode [false ] enable debug mode (eg. dump log_mel) -tr, --translate [false ] translate from source language to english -di, --diarize [false ] stereo audio diarization -tdrz, --tinydiarize [false ] enable tinydiarize (requires a tdrz model) -nf, --no-fallback [false ] do not use temperature fallback while decoding -otxt, --output-txt [false ] output result in a text file -ovtt, --output-vtt [false ] output result in a vtt file -osrt, --output-srt [false ] output result in a srt file -olrc, --output-lrc [false ] output result in a lrc file -owts, --output-words [false ] output script for generating karaoke video -fp, --font-path [/System/Library/Fonts/Supplemental/Courier New Bold.ttf] path to a monospace font for karaoke video -ocsv, --output-csv [false ] output result in a CSV file -oj, --output-json [false ] output result in a JSON file -ojf, --output-json-full [false ] include more information in the JSON file -of FNAME, --output-file FNAME [ ] output file path (without file extension) -ps, --print-special [false ] print special tokens -pc, --print-colors [false ] print colors -pp, --print-progress [false ] print progress -nt, --no-timestamps [false ] do not print timestamps -l LANG, --language LANG [en ] spoken language ('auto' for auto-detect) -dl, --detect-language [false ] exit after automatically detecting language --prompt PROMPT [ ] initial prompt -m FNAME, --model FNAME [models/ggml-base.en.bin] model path -f FNAME, --file FNAME [ ] input WAV file path -oved D, --ov-e-device DNAME [CPU ] the OpenVINO device used for encode inference -ls, --log-score [false ] log best decoder scores of tokens -ng, --no-gpu [false ] disable GPU bash ./models/download-ggml-model.sh base.en Downloading ggml model base.en ... ggml-base.en.bin 100%[========================>] 141.11M 6.34MB/s in 24s Done! Model 'base.en' saved in 'models/ggml-base.en.bin' You can now use it like this: $ ./main -m models/ggml-base.en.bin -f samples/jfk.wav =============================================== Running base.en on all samples in ./samples ... =============================================== ---------------------------------------------- [+] Running base.en on samples/jfk.wav ... (run 'ffplay samples/jfk.wav' to listen) ---------------------------------------------- whisper_init_from_file: loading model from 'models/ggml-base.en.bin' whisper_model_load: loading model whisper_model_load: n_vocab = 51864 whisper_model_load: n_audio_ctx = 1500 whisper_model_load: n_audio_state = 512 whisper_model_load: n_audio_head = 8 whisper_model_load: n_audio_layer = 6 whisper_model_load: n_text_ctx = 448 whisper_model_load: n_text_state = 512 whisper_model_load: n_text_head = 8 whisper_model_load: n_text_layer = 6 whisper_model_load: n_mels = 80 whisper_model_load: f16 = 1 whisper_model_load: type = 2 whisper_model_load: mem required = 215.00 MB (+ 6.00 MB per decoder) whisper_model_load: kv self size = 5.25 MB whisper_model_load: kv cross size = 17.58 MB whisper_model_load: adding 1607 extra tokens whisper_model_load: model ctx = 140.60 MB whisper_model_load: model size = 140.54 MB system_info: n_threads = 4 / 10 | AVX = 0 | AVX2 = 0 | AVX512 = 0 | FMA = 0 | NEON = 1 | ARM_FMA = 1 | F16C = 0 | FP16_VA = 1 | WASM_SIMD = 0 | BLAS = 1 | SSE3 = 0 | VSX = 0 | main: processing 'samples/jfk.wav' (176000 samples, 11.0 sec), 4 threads, 1 processors, lang = en, task = transcribe, timestamps = 1 ... [00:00:00.000 --> 00:00:11.000] And so my fellow Americans, ask not what your country can do for you, ask what you can do for your country. whisper_print_timings: fallbacks = 0 p / 0 h whisper_print_timings: load time = 113.81 ms whisper_print_timings: mel time = 15.40 ms whisper_print_timings: sample time = 11.58 ms / 27 runs ( 0.43 ms per run) whisper_print_timings: encode time = 266.60 ms / 1 runs ( 266.60 ms per run) whisper_print_timings: decode time = 66.11 ms / 27 runs ( 2.45 ms per run) whisper_print_timings: total time = 476.31 ms ``` The command downloads the `base.en` model converted to custom `ggml` format and runs the inference on all `.wav` samples in the folder `samples`. For detailed usage instructions, run: `./main -h` Note that the [main](examples/main) example currently runs only with 16-bit WAV files, so make sure to convert your input before running the tool. For example, you can use `ffmpeg` like this: ```bash ffmpeg -i input.mp3 -ar 16000 -ac 1 -c:a pcm_s16le output.wav ``` ## More audio samples If you want some extra audio samples to play with, simply run: ``` make samples ``` This will download a few more audio files from Wikipedia and convert them to 16-bit WAV format via `ffmpeg`. You can download and run the other models as follows: ``` make tiny.en make tiny make base.en make base make small.en make small make medium.en make medium make large-v1 make large-v2 make large-v3 ``` ## Memory usage | Model | Disk | Mem | | ------ | ------- | ------- | | tiny | 75 MiB | ~273 MB | | base | 142 MiB | ~388 MB | | small | 466 MiB | ~852 MB | | medium | 1.5 GiB | ~2.1 GB | | large | 2.9 GiB | ~3.9 GB | ## Quantization `whisper.cpp` supports integer quantization of the Whisper `ggml` models. Quantized models require less memory and disk space and depending on the hardware can be processed more efficiently. Here are the steps for creating and using a quantized model: ```bash # quantize a model with Q5_0 method make quantize ./quantize models/ggml-base.en.bin models/ggml-base.en-q5_0.bin q5_0 # run the examples as usual, specifying the quantized model file ./main -m models/ggml-base.en-q5_0.bin ./samples/gb0.wav ``` ## Core ML support On Apple Silicon devices, the Encoder inference can be executed on the Apple Neural Engine (ANE) via Core ML. This can result in significant speed-up - more than x... [TRUNCATED]","3.2k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, enhancement, question, bug, good first issue, build, performance, help wanted, ideas, bindings, research🔬, decoding, solution, low priority, need feedback, high priority, documentation, wontfix, invalid, duplicate"
palera1n,palera1n/palera1n,4614,"['C', 'Makefile', 'Assembly']","['checkm8', 'ios', 'iphone', 'jailbreak', 'checkra1n']","# palera1n []( []( []( Jailbreak for A8 through A11, T2 devices, on iOS/iPadOS/tvOS 15.0, bridgeOS 5.0 and higher. | | |:--: | | A screenshot of palera1n being used in a Terminal | ## Device Support > [!NOTE] > Apple TV & iBridge support are not currently in the beta releases of palera1n, ETA s0n | iPhone(s) | iPad(s) | iPod(s) | Apple TV(s) | |- |- |- |- | | iPhone 6s | iPad mini 4 | iPod Touch (7th generation) | Apple TV HD | | iPhone 6s Plus | iPad (5th generation) | | Apple TV 4K (1st generation) | | iPhone SE (2016) | iPad (6th generation) | | | | iPhone 7 | iPad (7th generation) | | | | iPhone 7 Plus | iPad Pro (9.7"") | | | | iPhone 8 | iPad Pro (12.9"") (1st generation) | | | | iPhone 8 Plus | iPad Pro (10.5"") | | | | iPhone X | iPad Pro (12.9"") (2nd generation) | | | > Note that on `A11` (iPhone X, 8, 8 Plus), **you must disable your passcode while in the jailbroken state** (on iOS 16, you need to **reset your device** before proceeding with palera1n). Apple T2 Device Support (click to expand) | Apple T2 | |- | | Apple T2 iMac20,1 | | Apple T2 iMac20,2 | | | | Apple T2 MacBookAir8,1 | | Apple T2 MacBookAir8,2 | | Apple T2 MacBookAir9,1 | | | | Apple T2 MacBookPro15,1 | | Apple T2 MacBookPro15,2 | | Apple T2 MacBookPro15,3 | | Apple T2 MacBookPro15,4 | | Apple T2 MacBookPro16,1 | | Apple T2 MacBookPro16,2 | | Apple T2 MacBookPro16,3 | | Apple T2 MacBookPro16,4 | | | | Apple T2 iMacPro1,1 | | Apple T2 Macmini8,1 | | Apple T2 MacPro7,1 | | | | iBridge2,11 (Unknown Mac) | | iBridge2,13 (Unknown Mac) | ## Computer Requirements 1. **USB-A** cables are recommended to use, USB-C to may have issues with palera1n and getting into DFU mode. > Due to USB-C cables having different accessory IDs, your device may not be able to be recognized when using USB-C due to not being able to assert to its USB voltage pin. 2. **Linux or macOS computer** > AMD CPUs (not AMD Mobile) have an issue where it causes them to have a very low success rate with checkm8 exploit. It is not recommended that you use them with palera1n. > USB-C port on Apple Silicon Macs *may* require manual unplugging and replugging of the lightning cable after checkm8 exploit. This problem may be solved by connecting via USB hub, though extensions can vary. ## Installing Visit ## Disclaimers We are **NOT** responsible for any data loss, or the result of a device being bricked. When using palera1n, the user should accept responsibility if anything happens to their device during the process. - If your device is stuck in recovery, please run futurerestore `--exit-recovery`, or use `irecovery -n`. - If you're unable to get out of recovery via these methods please restore with iTunes or Finder. - palera1n **will not work** in VirtualBox, VMware or any virtual machine that doesn't support PCI passthrough. ## Troubleshooting Make sure you're following the guides provided [here]( also when asking for support make sure you provide full details on your device, such as: - iPhone/iPad/iPod/Apple TV - iOS Version - Passcode enabled? - Verbose from palera1n (specifying `-Vv` within palera1n) - Panic logs, if panicked then send latest `panic-full` log from your device. Create an issue here:","566, Code, Issues, Pull requests, Actions, Projects, Security, Insights, palera1n, wontfix, question, palera1n (Legacy), no longer interested, invalid, enhancement, duplicate, documentation, bug"
TFT_eSPI,Bodmer/TFT_eSPI,3423,"['C', 'C++', 'Processing']","['arduino-library', 'tft', 'arduino', 'stm32', 'esp32']","A [""Discussions""]( facility has been added for Q&A etc. Use the [""Issues""]( tab only for problems with the library. Thanks! # News 1. The Create_font Processing sketch has been updated to automatically create a complete C header file. The automatic opening of the font folder can also be disabled within the Processing sketch. (Thanks to Pierre-Loup Martin). 2. New board setup files have been added for the Seeed XIAO with round display, LilyGo T-Embed S3, LilyGo_T_QT_Pro_S3, ESP32 S3 Box and ESP32_S3_Box_Lite. The ""RPi"" interface style boards are now supported with the ESP32 S3. 3. New functions have been added to draw smooth (antialiased) arcs, circles, and rounded rectangle outlines. New sketches are provided in the ""Smooth Graphics"" examples folder. Arcs can be drawn with or without anti-aliasing (which will then render faster). The arc ends can be straight or rounded. The arc drawing algorithm uses an optimised fixed point sqrt() function to improve performance on processors that do not have a hardware Floating Point Unit (e.g. RP2040). Here are two demo images, on the left smooth (anti-aliased) arcs with rounded ends, the image to the right is the same resolution (grabbed from the same 240x240 TFT) with the smoothing diasbled (no anti-aliasing): Here the smooth arcs have been used to create anti-aliased meter gauges on a 320x240 TFT: 4. An excellent new compatible library is available which can render TrueType fonts on a TFT screen (or into a sprite). This has been developed by [takkaO]( The library provides access to compact font files, with fully scaleable anti-aliased glyphs. Left, middle and right justified text can also be printed to the screen. I have added TFT_eSPI specific examples to the OpenFontRender library and tested on RP2040 and ESP32 processors, the ESP8266 does not have sufficient RAM due to the glyph render complexity. Here is a demo screen where a single 12kbyte font file binary was used to render fully anti-aliased glyphs of gradually increasing size on a 320x480 TFT screen: 5. New GUI examples have been added for sliders, buttons, graphs and meters. These examples require a new support library here: [TFT_eWidget]( 6. Support has been added in v2.4.70 for the RP2040 with 16-bit parallel displays. This has been tested and the screen update performance is very good (4ms to clear 320 x 480 screen with HC8357C). The use of the RP2040 PIO makes it easy to change the write cycle timing for different displays. DMA with 16-bit transfers is also supported. 7. Support for the ESP32-S2, ESP32-S3 and ESP32-C3 has been added (DMA only on ESP32 S3 at the moment). Tested with v2.0.3 RC1 of the ESP32 board package. Example setups: [Setup70_ESP32_S2_ILI9341.h]( [Setup70b_ESP32_S3_ILI9341.h]( [Setup70c_ESP32_C3_ILI9341.h]( [Setup70d_ILI9488_S3_Parallel.h]( 8. Smooth fonts can now be rendered direct to the TFT with very little flicker for quickly changing values. This is achieved by a line-by-line and block-by-block update of the glyph area without drawing pixels twice. This is a ""breaking"" change for some sketches because a new true/false parameter is needed to render the background. The default is false if the parameter is missing, Examples: tft.setTextColor(TFT_WHITE, TFT_BLUE, true); spr.setTextColor(TFT_BLUE, TFT_BLACK, true); Note: background rendering for Smooth fonts is also now available when using the print stream e.g. with: tft.println(""Hello World""); 9. New anti-aliased graphics functions to draw lines, wedge shaped lines, circles and rounded rectangles. [Examples are included]( Examples have also been added to [display PNG compressed images]( (note: requires ~40kbytes RAM). 10. Users of PowerPoint experienced with running macros may be interested in the [pptm sketch generator here]( this converts graphics and tables drawn in PowerPoint slides into an Arduino sketch that renders the graphics on a 480x320 TFT. This is based on VB macros [created by Kris Kasprzak here]( 11. The library contains two new functions for rectangles filled with a horizontal or vertical coloured gradient: tft.fillRectHGradient(x, y, w, h, color1, color2); tft.fillRectVGradient(x, y, w, h, color1, color2); 12. The RP2040 8-bit parallel interface uses the PIO. The PIO now manages the ""setWindow"" and ""block fill"" actions, releasing the processor for other tasks when areas of the screen are being filled with a colour. The PIO can optionally be used for SPI interface displays if #define RP2040_PIO_SPI is put in the setup file. Touch screens and pixel read operations are not supported when the PIO interface is used. The RP2040 PIO features only work with [Earle Philhower's board package]( NOT the Arduino Mbed version. The use of PIO for SPI allows the RP2040 to be over-clocked (up to 250MHz works on my boards) in Earle's board package whilst still maintaining high SPI clock rates. # TFT_eSPI A feature rich Arduino IDE compatible graphics and fonts library for 32-bit processors. The library is targeted at 32-bit processors, it has been performance optimised for RP2040, STM32, ESP8266 and ESP32 types, other 32-bit processors may be used but will use the slower generic Arduino interface calls. The library can be loaded using the Arduino IDE's Library Manager. Direct Memory Access (DMA) can be used with the ESP32, RP2040 and STM32 processors with SPI interface displays to improve rendering performance. DMA with a parallel interface (8 and 16-bit) is only supported with the RP2040. The updates for the ESP32 S2/C3/S3 means that the library requires the ESP32 Arduino board package 2.x.x or later. The screen controller, interface pins and library configuration settings must be defined inside the library. They can NOT be defined in the Arduino sketch. See the User_Setup_Select.h file for details. This approach has significant advantages, it keeps the examples clean from long configuration options and once the setup is defined any example can be run without modification. PlatformIO users can define these settings on a per project basis within a platformio.ini file, see Docs folder in library. Lots of example sketches are provided which demonstrate using the functions in the library. Due to the popularity of the library there are lots of online tutorials for TFT_eSPI that have been created by enthusiastic users. Optimised drivers have been tested with the following processors: * RP2040, e.g. Raspberry Pi Pico * ESP32 and ESP32-S2, ESP32-C3, ESP32-S3 * ESP8266 * STM32F1xx, STM32F2xx, STM32F4xx, STM32F767 (higher RAM processors recommended) The library supports the following interface types for these processors: | Processor | 4 wire SPI | 8-bit parallel | 16-bit parallel | DMA support | |-----------| :---: | :---: | :---: | :---: | | RP2040 | Yes | Yes | Yes | Yes (all) | | ESP32 | Yes | Yes | No | Yes (SPI only) | | ESP32 C3 | Yes | No | No | No | | ESP32 S2 | Yes | No | No | No | | ESP32 S3 | Yes | Yes | No | Yes (SPI only) | | ESP8266 | Yes | No | No | No | | STM32Fxxx | Yes | Yes | No | Yes (SPI only) | | Other | Yes | No | No | No | For other (generic) processors only SPI interface displays are supported and the slower Arduino SPI library functions are used by the library. Higher clock speed processors such as used for the Teensy 3.x and 4.x boards will still provide a very good performance with the generic Arduino SPI functions. 4 wire SPI means the display must have SPI interface comaptible signals and a ""Data/Command"" control signal, this signal line is sometimes labelled DC, RS or A0. Due to lack of GPIO pins the 8-bit parallel interface is NOT supported on the ESP8266. 8-bit parallel interface TFTs (e.g. UNO format mcufriend shields) can used with the STM32Fxxx Nucleo 64/144 range or the UNO format ESP32 (see below for ESP32). Support for the XPT2046 touch screen controller is built into the library and can be used with SPI interface displays. Third party touch support libraries are also available when using a display parallel interface. Displays using the following controllers are supported: * GC9A01 * ILI9163 * ILI9225 * ILI9341 * ILI9342 * ILI9481 (DMA not supported with SPI) * ILI9486 (DMA not supported with SPI) * ILI9488 (DMA not supported with SPI) * HX8357B (16-bit parallel tested with RP2040) * HX8357C (16-bit parallel tested with RP2040) * HX8357D * R61581 * RM68120 (support files added but untested) * RM68140 * S6D02A1 * SSD1351 * SSD1963 (this controller only has a parallel interface option) * ST7735 * ST7789 * ST7796 ILI9341 and ST7796 SPI based displays are recommended as starting point for experimenting with this library. The library supports some TFT displays designed for the Raspberry Pi (RPi) that are based on a ILI9486 or ST7796 driver chip with a 480 x 320 pixel screen. The ILI9486 RPi display must be of the Waveshare design and use a 16-bit serial interface based on the 74HC04, 74HC4040 and 2 x 74HC4094 logic chips. Note that due to design variations between these displays not all RPi displays will work with this library, so purchasing a RPi display of these types solely for use with this library is NOT recommended. A ""good"" RPi display is the [MHS-4.0 inch Display-B type ST7796]( which provides good performance. This has a dedicated controller and can be clocked at up to 80MHz with the ESP32 (125MHz with overclocked RP2040, 55MHz with STM32 and 40MHz with ESP8266). The [MHS-3.5 inch RPi ILI9486]( based display is also supported, however the MHS ILI9341 based display of the same type does NOT work with this library. Some displays permit the internal TFT screen RAM to be read, a few of the examples use this feature. The TFT_Screen_Capture example allows full screens to be captured and sent to a PC, this is handy to create program documentation. The library includes a ""Sprite"" class, this enables flicker free updates of complex graphics. Direct writes to the TFT with graphics functions are still available, so existing sketches do not need to be changed. # Sprites A Sprite is notionally an invisible graphics s... [TRUNCATED]","1k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, Work-around required, To do: enhancement, To Do, STM32 incompatibility, Potential enhancement, bug, Under investigation, New display variant, Issue with board package update, help wanted, enhancement, duplicate, answered, Waiting for feedback, Unresolved, Touch function bug, To be evaluated., Temporary workaround, TBA: enhancement, Supporting, Solved, Solution request, PlatformIO only issue?, Older ESP866 core compatibility issuse., Not a TFT_eSPI issue, New processor variant, Moved to TFT_eFEX, Library updated, Helpful information, Fixed bug"
pyroscope,grafana/pyroscope,9515,"['C', 'Go', 'TypeScript']","['continuous-profiling', 'profiling', 'performance', 'golang', 'ruby']","[]( []( []( [](LICENSE) []( []( []( []( ### What is Grafana Pyroscope? Grafana Pyroscope is an open source continuous profiling platform. It will help you: * Find performance issues and bottlenecks in your code * Use high-cardinality tags/labels to analyze your application * Resolve issues with high CPU utilization * Track down memory leaks * Understand the call tree of your application * Auto-instrument your code to link profiling data to traces ## [Pyroscope Live Demo]( []( ## Features * Minimal CPU overhead * Horizontally scalable * Efficient compression, low disk space requirements * Can handle high-cardinality tags/labels * Calculate the performance ""diff"" between various tags/labels and time periods * Advanced analysis UI ## Quick Start: Run Pyroscope Locally ### Homebrew ```sh brew install pyroscope-io/brew/pyroscope brew services start pyroscope ``` ### Docker ```sh docker run -it -p 4040:4040 grafana/pyroscope ``` For more documentation on how to configure Pyroscope server, see [our server documentation]( ## Send data to server via Pyroscope agent (language specific) For more documentation on how to add the Pyroscope agent to your code, see the [agent documentation]( on our website or find language specific examples and documentation below: Golang Documentation Examples Java Documentation Examples Python Documentation Examples Ruby Documentation Examples Node.js Documentation Examples Dotnet Documentation Examples eBPF Documentation Examples Rust Documentation Examples ## Deployment Diagram ## Documentation For more information on how to use Pyroscope with other programming languages, install it on Linux, or use it in production environment, check out our documentation: * [Getting Started]( * [Deployment Guide]( * [Pyroscope Architecture]( ## Downloads You can download the latest version of pyroscope for macOS, linux and Docker from our [Releases page]( ## Supported Languages * [x] Go (via `pprof`) * [x] Python (via `py-spy`) * [x] Ruby (via `rbspy`) * [x] Linux eBPF * [x] Java (via `async-profiler`) * [x] Rust (via `pprof-rs`) * [x] .NET * [x] PHP (via `phpspy`) * [x] Node Let us know what other integrations you want to see in [our issues]( or in [our slack]( ## Credits Pyroscope is possible thanks to the excellent work of many people, including but not limited to: * Brendan Gregg inventor of Flame Graphs * Julia Evans creator of rbspy sampling profiler for Ruby * Vladimir Agafonkin creator of flamebearer fast flame graph renderer * Ben Frederickson creator of py-spy sampling profiler for Python * Adam Saponara creator of phpspy sampling profiler for PHP * Alexei Starovoitov, Brendan Gregg, and many others who made BPF based profiling in Linux kernel possible * Jamie Wong creator of speedscope interactive flame graph visualizer ## Contributing To start contributing, check out our [Contributing Guide](docs/internal/contributing/README.md) ### Thanks to the contributors of Pyroscope! [//]: contributor-faces [//]: contributor-faces","565, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, backend, enhancement, type/docs, frontend, bug, eBPF, storage, performance, ux, ops, helm, good first issue, documentation, 🛠 tech-debt, object-storage, integrations, help wanted, flamegraph, discussion, tests, security, 🛠. refactoring, ❓ question, 🐘 php, grafana-panel, 🐿. golang, auth, adhoc, wontfix, windows"
sonic-frr,sonic-net/sonic-frr,41,"['C', 'Python', 'Perl']",[],"FRRouting ========= FRR is free software that implements and manages various IPv4 and IPv6 routing protocols. It runs on nearly all distributions of Linux and BSD as well as Solaris and supports all modern CPU architectures. FRR currently supports the following protocols: * BGP * OSPFv2 * OSPFv3 * RIPv1 * RIPv2 * RIPng * IS-IS * PIM-SM/MSDP * LDP * BFD * Babel * PBR * OpenFabric * EIGRP (alpha) * NHRP (alpha) Installation & Use ------------------ Packages are available for various distributions on our [releases page]( Snaps are also available [here]( Instructions on building and installing from source for supported platforms may be found [here]( Once installed, please refer to the [user guide]( for instructions on use. Community --------- The FRRouting email list server is located [here]( and offers the following public lists: | Topic | List | |-------------------|------------------------------| | Development | dev@lists.frrouting.org | | Users & Operators | frog@lists.frrouting.org | | Announcements | announce@lists.frrouting.org | For chat, we currently use [Slack]( You can join by clicking the ""Slack"" link under the [Participate]( section of our website. Contributing ------------ FRR maintains [developer's documentation]( which contains the [project workflow]( and expectations for contributors. Some technical documentation on project internals is also available. We welcome and appreciate all contributions, no matter how small! Security -------- To report security issues, please use our security mailing list: ``` security [at] lists.frrouting.org ```","67, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, enhancement, duplicate, bug"
42-School-Exam-Rank-02,pasqualerossi/42-School-Exam-Rank-02,497,['C'],"['42', '42adelaide', '42cursus', '42exam', '42exams']","## Exam Details - This exam has 4 Levels, with 1 question from each level. - A random question is picked from each level below. - If you fail the exam, when you retake the exam again, you will restart at Level 1. - There is **No Norminette** in this exam. ## Exam Levels ### :one: Level 1 Can be any of the 12 Functions/Programs Below: 1. [first_word]( 2. [fizzbuzz]( 3. [ft_strcpy]( 4. [ft_strlen]( 5. [ft_swap]( 6. [putstr]( 7. [repeat_alpha]( 8. [rev_print]( 9. [rot_13]( 10. [rotone]( 11. [search_and_replace]( 12. [ulstr]( ### :two: Level 2 Can be any of the 20 Functions/Programs Below: 1. [alpha_mirror]( 2. [camel_to_snake]( 3. [do_op]( 4. [ft_atoi]( 5. [ft_strcmp]( 6. [ft_strcspn]( 7. [ft_strdup]( 8. [ft_strpbrk]( 9. [ft_strrev]( 10. [ft_strspn]( 11. [inter]( 12. [is_power_of_2]( 13. [last_word]( 14. [max]( 15. [print_bits]( 16. [reverse_bits]( 17. [snake_to_camel]( 18. [swap_bits]( 19. [union]( 20. [wdmatch]( ### :three: Level 3 Can be any of the 15 Functions/Programs Below: 1. [add_prime_sum]( 2. [epur_str]( 3. [expand_str]( 4. [ft_atoi_base]( 5. [ft_list_size]( 6. [ft_range]( 7. [ft_rrange]( 8. [hidenp]( 9. [lcm]( 10. [paramsum]( 11. [pgcd]( 12. [print_hex]( 13. [rstr_capitalizer]( 14. [str_capitalizer]( 15. [tab_mult]( ### :four: Level 4 Can be any of the 10 Functions/Programs Below: 1. [flood_fill]( 2. [fprime]( 3. [ft_itoa]( 4. [ft_list_foreach]( 5. [ft_list_remove_if]( 6. [ft_split]( 7. [rev_wstr]( 8. [rostring]( 9. [sort_int_tab]( 10. [sort_list]( ## Exam Setup ### Login Details :one: Login With The Following: ``` login -> exam password -> exam ``` :two: In ITerm: ``` Type examshell in terminal ``` :three: Your 42 Intra Account: ``` login -> your 42 intra username (eg. prossi) pasword -> your password ``` :four: Your 42 Intra Photo: ``` Allow photo check ``` :five: Access Rendu: ``` Type 'y' or 'yes' ``` :six: In the Exam Shell, You Have Only The Following 3 Commands: ``` - status - check the time and other things - grademe - checking pushed exercise (moulinet) - finish - closing examshell and finish exam ``` :seven: Open a new iTerm or VSCode: ``` - You can find your exam subject in the directory subject - Then you can see directory Rendu. It is your repository. - You must create a folder named by the project and start working in that folder. ``` ### Submission Details When you are ready to sumbit your function/program, go into Rendu and push the folder you created by doing the following: :one: git add :two: git status :three: git commit -m ""any commit message you like in these strings"" :four: git push :five: After you git push, type `grademe` in the examshell for your project to be evaluated. ## Exam IDE > [!NOTE] You should be able to use both VSCode and Vim in the exam. []( ## Exam Practice Tool [Link To The Tool](","92, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
labwc,labwc/labwc,1474,"['C', 'Meson', 'Shell']","['wlroots', 'wayland', 'wayland-compositor', 'sway', 'layer-shell']","# labwc [Website] [Scope] [IRCChannel] [ReleaseNotes] - [1. Project Description](#1-project-description) - [1.1 What Is This?](#11-what-is-this) - [1.2 Why](#12-why) - [1.3 Why The Openbox Theme Specification?](#13-why-the-openbox-theme-specification) - [1.4 Very High Level Scope](#14-very-high-level-scope) - [1.5 Videos](#15-videos) - [1.6 Screenshot](#16-screenshot) - [2. Build and Installation](#2-build-and-installation) - [3. Configuration](#3-configuration) - [4. Theming](#4-theming) - [5. Translations](#5-translations) - [6. Usage](#6-usage) - [6.1 Gaming](#61-gaming) - [7. Integration](#7-integration) ## 1. Project Description ### 1.1 What Is This? Labwc stands for Lab Wayland Compositor, where lab can mean any of the following: - sense of experimentation and treading new ground - inspired by BunsenLabs and ArchLabs - your favorite pet Labwc is a [wlroots]-based window-stacking compositor for [wayland], inspired by [openbox]. It is light-weight and independent with a focus on simply stacking windows well and rendering some window decorations. It takes a no-bling/frills approach and says no to features such as animations. It relies on clients for panels, screenshots, wallpapers and so on to create a full desktop environment. Labwc tries to stay in keeping with [wlroots] and [sway] in terms of general approach and coding style. Labwc has no reliance on any particular Desktop Environment, Desktop Shell or session. Nor does it depend on any UI toolkits such as Qt or GTK. ### 1.2 Why? Firstly, we believe that there is a need for a simple Wayland window-stacking compositor which strikes a balance between minimalism and bloat approximately at the level where Window Managers like Openbox reside in the X11 domain. Most of the core developers are accustomed to low resource Desktop Environments such as Mate/XFCE or standalone Window Managers such as Openbox under X11. Labwc aims to make a similar setup possible under Wayland, with small and independent components rather than a large, integrated software eco-system. Secondly, the Wayland community has achieved an amazing amount so far, and we want to help solve the unsolved problems to make Wayland viable for more people. We think that standardisation and de-fragmentation is a route to greater Wayland adoption, and wanting to play our part in this, Labwc only understands [wayland-protocols] & [wlr-protocols], and it cannot be controlled with dbus, sway/i3/custom-IPC or other technology. Thirdly, it is important to us that scope is tightly controlled so that the compositor matures to production quality. On the whole, we value robustness, reliability, stability and simplicity over new features. Coming up with new ideas and features is easy - maintaining and stabilising them is not. Fourthly, we are of the view that a compositor should be boring in order to do its job well. In this regard we follow in the footsteps of [metacity] which describes itself as a ""Boring window manager for the adult in you. Many window managers are like Marshmallow Froot Loops; Metacity is like Cheerios."" Finally, we think that an elegant solution to all of this does not need feel square and pixelated like something out of the 1990s, but should look contemporary and enable cutting-edge performance. ### 1.3 Why The Openbox Theme Specification? In order to avoid reinventing configuration and theme syntaxes, the [openbox] 3.6 specification is used. This does not mean that labwc is an openbox clone but rather that configuration files will look and feel familiar. Also, parsing GTK3+ and Qt themes for window decorations is very complicated, so using much simpler specs such as those used by openbox and xfwm makes sense for a compositor such as labwc, both in terms of implementation and for user modification. Openbox spec is somewhat of a stable standard considering how long it has remained unchanged for and how wide-spread its adoption is by lightweight distributions such as LXDE, LXQt, BunsenLabs, ArchLabs, Mabox and Raspbian. Some widely used themes (for example Numix and Arc) have built-in support. We could have invented a whole new syntax, but that's not where we want to spend our effort. ### 1.4 Very High Level Scope A lot of emphasis is put on code simplicity when considering features. The main development effort is focused on producing a solid foundation for a stacking compositor rather than adding configuration and theming options. See [scope] for full details on implemented features. High-level summary of items that Labwc supports: - [x] Config files (rc.xml, autostart, environment, menu.xml) - [x] Theme files and xbm/png/svg icons - [x] Basic desktop and client menus - [x] HiDPI - [x] wlroots protocols such as `output-management`, `layer-shell` and `foreign-toplevel` - [x] Optionally xwayland ### 1.5 Videos | video link | date | duration | ------------------------- | ------------| ------- | [0.7.2-release-video] | 24-May-2024 | 3:17 | [0.6.0-release-video] | 31-Oct-2022 | 2:48 | [0.3.0-release-video] | 05-Aug-2021 | 1:10 | [pre-0.1.0-release-video] | 25-Feb-2021 | 3:42 [0.7.2-release-video]: [0.6.0-release-video]: [0.3.0-release-video]: [pre-0.1.0-release-video]: ### 1.6 Screenshot The obligatory screenshot: Screenshot description ## 2. Build and Installation To build, simply run: meson setup build/ meson compile -C build/ Run-time dependencies include: - wlroots, wayland, libinput, xkbcommon - libxml2, cairo, pango, glib-2.0 - libpng - librsvg >=2.46 (optional) - xwayland, xcb (optional) Build dependencies include: - meson, ninja, gcc/clang - wayland-protocols Disable xwayland with `meson -Dxwayland=disabled build/` For OS/distribution specific details see [wiki]. If the right version of `wlroots` is not found on the system, the build setup will automatically download the wlroots repo. If this fallback is not desired please use: meson setup --wrap-mode=nodownload build/ To enforce the supplied wlroots.wrap file, run: meson setup --force-fallback-for=wlroots build/ If installing after using the wlroots.wrap file, use the following to prevent installing the wlroots headers: meson install --skip-subprojects -C build/ ## 3. Configuration User config files are located at `${XDG_CONFIG_HOME:-$HOME/.config/labwc/}` with the following five files being used: [rc.xml], [menu.xml], [autostart], [environment] and [themerc-override]. Run `labwc --reconfigure` to reload configuration and theme. For a step-by-step initial configuration guide, see [getting-started]. ## 4. Theming Themes are located at `~/.local/share/themes/\/openbox-3/` or equivalent `XDG_DATA_{DIRS,HOME}` location in accordance with freedesktop XDG directory specification. For full theme options, see [labwc-theme(5)] or the [themerc] example file. For themes, search the internet for ""openbox themes"" and place them in `~/.local/share/themes/`. Some good starting points include: - - - - ## 5. Translations The default window bar menu can be translated on the [weblate platform]( ## 6. Usage ./build/labwc [-s ] > **_NOTE:_** If you are running on **NVIDIA**, you will need the > `nvidia-drm.modeset=1` kernel parameter. If you have not created an rc.xml config file, default bindings will be: | combination | action | ------------------------ | ------ | `alt`-`tab` | activate next window | `super`-`return` | alacritty | `alt`-`F3` | bemenu | `alt`-`F4` | close window | `super`-`a` | toggle maximize | `alt`-`mouse-left` | move window | `alt`-`mouse-right` | resize window | `alt`-`arrow` | move window to edge | `super`-`arrow` | resize window to fill half the output | `alt`-`space` | show the window menu | `XF86_AudioLowerVolume` | amixer sset Master 5%- | `XF86_AudioRaiseVolume` | amixer sset Master 5%+ | `XF86_AudioMute` | amixer sset Master toggle | `XF86_MonBrightnessUp` | brightnessctl set +10% | `XF86_MonBrightnessDown` | brightnessctl set 10%- A root-menu can be opened by clicking on the desktop. ### 6.1 Gaming Cursor confinement is supported from version `0.6.2`. If using older versions, use a nested [gamescope] instance for gaming. It can be added to steam via game launch option: `gamescope -f -- %command%`. ## 7. Integration Suggested apps to use with labwc: - Screen shooter: [grim] - Screen recorder: [wf-recorder] - Background image: [swaybg] - Panel: [waybar], [yambar], [lavalauncher], [sfwbar] - Launchers: [bemenu], [fuzzel], [wofi] - Output managers: [wlopm], [kanshi], [wlr-randr] - Screen locker: [swaylock] See [integration] for further details. [wayland]: [openbox]: [wlroots]: [sway]: [wayland-protocols]: [wlr-protocols]: [scope]: [wiki]: [getting-started]: [integration]: [metacity]: [rc.xml]: docs/rc.xml.all [menu.xml]: docs/menu.xml [autostart]: docs/autostart [environment]: docs/environment [themerc-override]: docs/themerc [themerc]: docs/themerc [labwc-theme(5)]: [gamescope]: [grim]: [wf-recorder]: [swaybg]: [waybar]: [yambar]: [lavalauncher]: [sfwbar]: [bemenu]: [fuzzel]: [wofi]: [wlopm]: [kanshi]: [wlr-randr]: [swaylock]:","141, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, enhancement, later, help wanted, bug, UX, investigation required, PR pending, good first issue, feedback required, depends-on-wlroots-change, regression, needs-work, v0.5, question, out-of-scope, not-our-bug, not-a-bug-its-a-feature, invalid, duplicate, depends-on-wlroots-0.17, backport, Release Notification, Breaking change"
PowerToys,microsoft/PowerToys,105859,"['C#', 'C++', 'PowerShell']","['powertoys', 'desktop', 'windows', 'fancyzones', 'microsoft-powertoys']","# Microsoft PowerToys [How to use PowerToys][usingPowerToys-docs-link] | [Downloads & Release notes][github-release-link] | [Contributing to PowerToys](#contributing) | [What's Happening](#whats-happening) | [Roadmap](#powertoys-roadmap) ## Build status | Architecture | Solution (Main) | Solution (Stable) | Installer (Main) | |--------------|-----------------|-------------------|------------------| | x64 | []( | []( | []( | | ARM64 | []( | []( | []( | ## About Microsoft PowerToys is a set of utilities for power users to tune and streamline their Windows experience for greater productivity. For more info on [PowerToys overviews and how to use the utilities][usingPowerToys-docs-link], or any other tools and resources for [Windows development environments]( head over to [learn.microsoft.com][usingPowerToys-docs-link]! | | Current utilities: | | |--------------|--------------------|--------------| | [Advanced Paste]( | [Always on Top]( | [PowerToys Awake]( | | [Command Not Found]( | [Color Picker]( | [Crop And Lock]( | | [Environment Variables]( | [FancyZones]( | [File Explorer Add-ons]( | | [File Locksmith]( | [Hosts File Editor]( | [Image Resizer]( | | [Keyboard Manager]( | [Mouse utilities]( | [Mouse Without Borders]( | | [Peek]( | [Paste as Plain Text]( | [PowerRename]( | | [PowerToys Run]( | [Quick Accent]( | [Registry Preview]( | | [Screen Ruler]( | [Shortcut Guide]( | [Text Extractor]( | | [Video Conference Mute]( | ## Installing and running Microsoft PowerToys ### Requirements - Windows 11 or Windows 10 version 2004 (code name 20H1 / build number 19041) or newer. - x64 or ARM64 processor - Our installer will install the following items: - [Microsoft Edge WebView2 Runtime]( bootstrapper. This will install the latest version. ### Via GitHub with EXE [Recommended] Go to the [Microsoft PowerToys GitHub releases page][github-release-link] and click on `Assets` at the bottom to show the files available in the release. Please use the appropriate PowerToys installer that matches your machine's architecture and install scope. For most, it is `x64` and per-user. [github-next-release-work]: [github-current-release-work]: [ptUserX64]: [ptUserArm64]: [ptMachineX64]: [ptMachineArm64]: | Description | Filename | sha256 hash | |----------------|----------|-------------| | Per user - x64 | [PowerToysUserSetup-0.81.0-x64.exe][ptUserX64] | E62B1EE81954A75355C04E7567B1C9AAD6034AA0C61AD22587F8746D0DC488C8 | | Per user - ARM64 | [PowerToysUserSetup-0.81.0-arm64.exe][ptUserArm64] | 75330A2DB4F9EF9B548B3B58F8BF3262C8C67E680042639BBBBC87EA244F24E2 | | Machine wide - x64 | [PowerToysSetup-0.81.0-x64.exe][ptMachineX64] | 29F151B01FE3C94D4FD75F2D6E8F09A6C0F0962385B83A5A733F6717312F639D | | Machine wide - ARM64 | [PowerToysSetup-0.81.0-arm64.exe][ptMachineArm64] | FCE636220E1FB854771258D9558E07B7532728AD4C722A7920338DEE60DEECF7 | This is our preferred method. ### Via Microsoft Store Install from the [Microsoft Store's PowerToys page][microsoft-store-link]. You must be using the [new Microsoft Store]( which is available for both Windows 11 and Windows 10. ### Via WinGet Download PowerToys from [WinGet][winget-link]. Updating PowerToys via winget will respect current PowerToys installation scope. To install PowerToys, run the following command from the command line / PowerShell: #### User scope installer [default] ```powershell winget install Microsoft.PowerToys -s winget ``` #### Machine-wide scope installer ```powershell winget install --scope machine Microsoft.PowerToys -s winget ``` ### Other install methods There are [community driven install methods](./doc/unofficialInstallMethods.md) such as Chocolatey and Scoop. If these are your preferred install solutions, you can find the install instructions there. ## Third-Party Run Plugins There is a collection of [third-party plugins](./doc/thirdPartyRunPlugins.md) created by the community that aren't distributed with PowerToys. ## Contributing This project welcomes contributions of all types. Besides coding features / bug fixes, other ways to assist include spec writing, design, documentation, and finding bugs. We are excited to work with the power user community to build a set of tools for helping you get the most out of Windows. We ask that **before you start work on a feature that you would like to contribute**, please read our [Contributor's Guide](CONTRIBUTING.md). We would be happy to work with you to figure out the best approach, provide guidance and mentorship throughout feature development, and help avoid any wasted or duplicate effort. Most contributions require you to agree to a [Contributor License Agreement (CLA)][oss-CLA] declaring that you grant us the rights to use your contribution and that you have permission to do so. For guidance on developing for PowerToys, please read the [developer docs](/doc/devdocs) for a detailed breakdown. This includes how to setup your computer to compile. ## What's Happening ### PowerToys Roadmap Our [prioritized roadmap][roadmap] of features and utilities that the core team is focusing on. ### 0.81 - Build 2024 Update In this release, we focused on new features, stability and improvements. **Highlights** - New utility: Advanced Paste - This is an evolution based on feedback of the Paste As Plain Text utility to do more. It can paste as plain text, markdown, or json directly with the new UX or with a direct keystroke invoke. These are fully locally executed. In addition, it now has an AI powered option as well if you wish with the free form text box. The AI feature is 100% opt-in and requires an Open AI key. This new system will allow us to have more freedom in the future to quickly add in new features like pasting an image directly to a file or handle additional meta data types past just text. - Thanks [@craigloewen-msft]( for the core functionality and [@niels9001]( for the UI/UX design! - Command Not Found now uses the PowerShell Gallery release and now supports ARM64. Thanks [@carlos-zamora]( - Fixed most accessibility issues opened after the latest accessibility review. - Refactored, packaged and released the main Environment Variables Editor, Hosts File Editor and Registry Preview utilities functionality as controls to be integrated into DevHome. Thanks [@dabhattimsft]( for validating and integrating into DevHome! ### General - Fixed crashes on older CPUS by updating .NET to 8.0.4. (This was a hotfix for 0.80) ### Advanced Paste - New utility: Advanced Paste - This is an evolution based on feedback of the Paste As Plain Text utility to do more. It can paste as plain text, markdown, or json directly with the new UX or with a direct keystroke invoke. These are fully locally executed. In addition, it now has an AI powered option as well if you wish with the free form text box. The AI feature is 100% opt-in and requires an Open AI key. This new system will allow us to have more freedom in the future to quickly add in new features like pasting an image directly to a file or handle additional meta data types past just text. - Thanks [@craigloewen-msft]( for the core functionality and [@niels9001]( for the UI/UX design! ### AlwaysOnTop - Enable border anti-aliasing. Thanks [@ewancg]( ### Color Picker - Improved accessibility by making the Settings and Copy to clipboard buttons focusable. - Improved accessibility by supporting picking a color using the keyboard. ### Command Not Found - Upgraded the Command Not Found to use the new PowerShell Gallery release and support ARM64. Thanks [@carlos-zamora]( ### Environment Variables Editor - Refactored, packaged and released the main Environment Variables Editor functionality as a control to be integrated into DevHome. Thanks [@dabhattimsft]( for validating and integrating into DevHome! ### FancyZones - Fixed window wrap around behavior when overriding Windows key and arrow shortcuts on single monitor scenarios. Thanks [@DanRosenberry]( - Improved accessibility of the editor by listing the keyboard shortcuts in the Canvas Editor. ### File Explorer add-ons - Updated Monaco to 0.47 and added the new sticky scroll setting for DevFiles viewer. Thanks [@Aaron-Junker]( - Added the new font size setting for DevFiles viewer. Thanks [@Aaron-Junker]( - Added support for .srt (subtitle) file previewing in DevFiles viewer. Thanks [@PesBandi]( ### Hosts File Editor - Refactored, packaged and released the main Hosts File Editor functionality as a control to be integrated into DevHome. Thanks [@dabhattimsft]( for validating and integrating into DevHome! ### Image Resizer - Supported narrator announcing the checkboxes in the UI and the sizes combobox. Thanks [@davidegiacometti]( - Improved accessibility by increasing contrast in the text color of combobox items. ### Installer - Fixed some install failures when the folders the DSC module is to be installed in isn't accessible by the WiX installer. (This was a hotfix for 0.80) - Detecting install location for DSC now uses registry instead of WMI to improve performance. Thanks [@davidegiacometti]( - Fixed an error causing the machine scope installer to not install correctly in machines where the documents folder is in a UNC network path. We're still working in a fix for the user scope installer. ### Keyboard Manager - Fixed startup crashes in the editor when the Visual C++ Redistributable wasn't installed. (This was a hotfix for 0.80) - Fixed an accessibility issue where the first button wasn't focused after adding a new row in the editor. - Environment Variables are now expanded in arguments of programs started through a shortcut. Thanks [@HydroH]( ### Paste as Plain Text - Paste as Plain Text was removed as a separate utility, since its functionality is now part of the Advanced Paste utility. ### Peek - Updated icons, tweaked UI and refactored internal code. Thanks [@Jay-o-Way]( - Updated Monaco to 0.47 and added the new sticky scroll setting for DevFiles viewer. Thanks [@Aaron-Junker]( - Added the new font size setting for DevFiles viewer. Thanks [@Aaron-Junker]( -... [TRUNCATED]","6.2k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, Needs-Triage, Issue-Bug, Idea-Enhancement, Product-FancyZones, Idea-New PowerToy, Needs-Team-Response, Product-PowerToys Run, Product-Keyboard Shortcut Manager, Product-File Explorer, Product-Settings, Run-Plugin, Area-User Interface, Product-PowerRename, Help Wanted, Product-Mouse Without Borders, Product-Peek, Needs-Repro, Product-Mouse Utilities, FancyZones-Editor, Product-Quick Accent, Product-Color Picker, Area-Quality, Area-Setup/Install, Area-App Compat, Priority-3, Product-Always On Top, Product-Image Resizer, Product-Tweak UI Design, FancyZones-Layouts, Area-Accessibility"
jellyfin,jellyfin/jellyfin,30831,"['C#', 'HTML', 'Shell']","['jellyfin', 'csharp', 'dotnet', 'hacktoberfest']","Jellyfin The Free Software Media System --- --- Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps. Jellyfin is descended from Emby's 3.5.2 release and ported to the .NET Core framework to enable full cross-platform support. There are no strings attached, no premium licenses or features, and no hidden agendas: just a team who want to build something better and work together to achieve it. We welcome anyone who is interested in joining us in our quest! For further details, please see [our documentation page]( To receive the latest updates, get help with Jellyfin, and join the community, please visit [one of our communication channels]( For more information about the project, please see our [about page]( Want to get started? Check out our downloads page or our installation guide, then see our quick start guide. You can also build from source. Something not working right? Open an Issue on GitHub. Want to contribute? Check out our contributing choose-your-own-adventure to see where you can help, then see our contributing guide and our community standards. New idea or improvement? Check out our feature request hub. Don't see Jellyfin in your language? Check out our Weblate instance to help translate Jellyfin and its subprojects. --- ## Jellyfin Server This repository contains the code for Jellyfin's backend server. Note that this is only one of many projects under the Jellyfin GitHub [organization]( on GitHub. If you want to contribute, you can start by checking out our [documentation]( to see what to work on. ## Server Development These instructions will help you get set up with a local development environment in order to contribute to this repository. Before you start, please be sure to completely read our [guidelines on development contributions]( Note that this project is supported on all major operating systems except FreeBSD, which is still incompatible. ### Prerequisites Before the project can be built, you must first install the [.NET 8.0 SDK]( on your system. Instructions to run this project from the command line are included here, but you will also need to install an IDE if you want to debug the server while it is running. Any IDE that supports .NET 6 development will work, but two options are recent versions of [Visual Studio]( (at least 2022) and [Visual Studio Code]( [ffmpeg]( will also need to be installed. ### Cloning the Repository After dependencies are installed you will need to clone a local copy of this repository. If you just want to run the server from source you can clone this repository directly, but if you are intending to contribute code changes to the project, you should [set up your own fork]( of the repository. The following example shows how you can clone the repository directly over HTTPS. ```bash git clone ``` ### Installing the Web Client The server is configured to host the static files required for the [web client]( in addition to serving the backend by default. Before you can run the server, you will need to get a copy of the web client since they are not included in this repository directly. Note that it is also possible to [host the web client separately](#hosting-the-web-client-separately) from the web server with some additional configuration, in which case you can skip this step. There are three options to get the files for the web client. 1. Download one of the finished builds from the [Azure DevOps pipeline]( You can download the build for a specific release by looking at the [branches tab]( of the pipelines page. 2. Build them from source following the instructions on the [jellyfin-web repository]( 3. Get the pre-built files from an existing installation of the server. For example, with a Windows server installation the client files are located at `C:\Program Files\Jellyfin\Server\jellyfin-web` ### Running The Server The following instructions will help you get the project up and running via the command line, or your preferred IDE. #### Running With Visual Studio To run the project with Visual Studio you can open the Solution (`.sln`) file and then press `F5` to run the server. #### Running With Visual Studio Code To run the project with Visual Studio Code you will first need to open the repository directory with Visual Studio Code using the `Open Folder...` option. Second, you need to [install the recommended extensions for the workspace]( Note that extension recommendations are classified as either ""Workspace Recommendations"" or ""Other Recommendations"", but only the ""Workspace Recommendations"" are required. After the required extensions are installed, you can run the server by pressing `F5`. #### Running From The Command Line To run the server from the command line you can use the `dotnet run` command. The example below shows how to do this if you have cloned the repository into a directory named `jellyfin` (the default directory name) and should work on all operating systems. ```bash cd jellyfin # Move into the repository directory dotnet run --project Jellyfin.Server --webdir /absolute/path/to/jellyfin-web/dist # Run the server startup project ``` A second option is to build the project and then run the resulting executable file directly. When running the executable directly you can easily add command line options. Add the `--help` flag to list details on all the supported command line options. 1. Build the project ```bash dotnet build # Build the project cd Jellyfin.Server/bin/Debug/net8.0 # Change into the build output directory ``` 2. Execute the build output. On Linux, Mac, etc. use `./jellyfin` and on Windows use `jellyfin.exe`. #### Accessing the Hosted Web Client If the Server is configured to host the Web Client, and the Server is running, the Web Client can be accessed at ` by default. API documentation can be viewed at ` ### Running from GH-Codespaces As Jellyfin will run on a container on a github hosted server, JF needs to handle some things differently. **NOTE:** Depending on the selected configuration (if you just click 'create codespace' it will create a default configuration one) it might take 20-30 seconds to load all extensions and prepare the environment while VS Code is already open. Just give it some time and wait until you see `Downloading .NET version(s) 7.0.15~x64 ...... Done!` in the output tab. **NOTE:** If you want to access the JF instance from outside, like with a WebClient on another PC, remember to set the ""ports"" in the lower VS Code window to public. **NOTE:** When first opening the server instance with any WebUI, you will be sent to the login instead of the setup page. Refresh the login page once and you should be redirected to the Setup. There are two configurations for you to choose from. #### Default - Development Jellyfin Server This creates a container that has everything to run and debug the Jellyfin Media server but does not setup anything else. Each time you create a new container you have to run through the whole setup again. There is also no ffmpeg, webclient or media preloaded. Use the `.NET Launch (nowebclient)` launch config to start the server. > Keep in mind that as this has no web client you have to connect to it via an external client. This can be just another codespace container running the WebUI. vuejs does not work from the get-go as it does not support the setup steps. #### Development Jellyfin Server ffmpeg this extends the default server with a default installation of ffmpeg6 though the means described here: If you want to install a specific ffmpeg version, follow the comments embedded in the `.devcontainer/Dev - Server Ffmpeg/install.ffmpeg.sh` file. Use the `ghcs .NET Launch (nowebclient, ffmpeg)` launch config to run with the jellyfin-ffmpeg enabled. ### Running The Tests This repository also includes unit tests that are used to validate functionality as part of a CI pipeline on Azure. There are several ways to run these tests. 1. Run tests from the command line using `dotnet test` 2. Run tests in Visual Studio using the [Test Explorer]( 3. Run individual tests in Visual Studio Code using the associated [CodeLens annotation]( ### Advanced Configuration The following sections describe some more advanced scenarios for running the server from source that build upon the standard instructions above. #### Hosting The Web Client Separately It is not necessary to host the frontend web client as part of the backend server. Hosting these two components separately may be useful for frontend developers who would prefer to host the client in a separate webpack development server for a tighter development loop. See the [jellyfin-web]( repo for instructions on how to do this. To instruct the server not to host the web content, there is a `nowebclient` configuration flag that must be set. This can specified using the command line switch `--nowebclient` or the environment variable `JELLYFIN_NOWEBCONTENT=true`. Since this is a common scenario, there is also a separate launch profile defined for Visual Studio called `Jellyfin.Server (nowebcontent)` that can be selected from the 'Start Debugging' dropdown in the main toolbar. **NOTE:** The setup wizard can not be run if the web client is hosted separately. --- This project is supported by:","2.8k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, bug, confirmed, enhancement, merge conflict, backend, stale, media playback, needs testing, live-tv, feature, blocked, security, regression, good first issue, ui & ux, dependencies, stable backport, nuget, area:database, upstream, syncplay, question, librarydb, build, help wanted, github-actions, discussion needed, ci, awaiting-feedback, support"
elsa-core,elsa-workflows/elsa-core,5906,"['C#', 'Java', 'Shell']","['elsa', 'workflows', 'dotnet', 'csharp']","# ELSA 3.0 []( []( []( []( []( []( ) ### [For Elsa 2 Click Here]( ## Introduction Elsa is a powerful workflow library that enables workflow execution within any .NET application. Elsa allows you to define workflows in various ways, including: - Writing C# code - Using a visual designer - Specifying workflows in JSON ### Try with Docker To give the Elsa Studio + Elsa Server a quick spin, you can run the following command to start the Elsa Docker container: ```shell docker pull elsaworkflows/elsa-server-and-studio-v3:latest docker run -t -i -e ASPNETCORE_ENVIRONMENT='Development' -e HTTP_PORTS=8080 -e HTTP__BASEURL= -p 13000:8080 elsaworkflows/elsa-server-and-studio-v3:latest ``` > This Docker image is based on a reference ASP.NET application that hosts both the workflow server and designer and is not intended for production use. By default, you can access and log in with: ``` Username: admin Password: password ``` ## Table of Contents - [Documentation](#documentation) - [Known Issues and Limitations](#known-issues-and-limitations) - [Features](#features) - [Roadmap](#roadmap) - [Use Cases](#use-cases) ## Documentation For comprehensive documentation and to get started with Elsa, please visit the [Elsa Documentation Website]( ## Known Issues and Limitations Elsa is continually evolving, and while it offers powerful capabilities, there are some known limitations and ongoing work: - Documentation is still a work in progress. - The designer is not yet fully embeddable in other applications; this feature is planned for a future release. - C# and Python expressions are not yet fully tested. - Bulk Dispatch Workflows is a new activity and not yet fully tested. - Input/Output is not yet implemented in the Workflow Instance Viewer. - Starting workflows from the designer is currently supported only for workflows that do not require input and do not start with a trigger; this is planned for a future release. - The designer currently only supports Flowchart activities. Support for Sequence and StateMachine activities is planned for a future release. - UI input validation is not yet implemented. ## Features Elsa offers a wide range of features for building and executing workflows, including: - Execution of workflows in any .NET application with support for .NET 6 and beyond. - Support for both short-running and long-running workflows. - A programming model loosely inspired by Windows Workflow Foundation. - A web-based drag & drop designer with support for custom activities. - Native support for activity composition, including activities like `Sequence`, `Flowchart`, and `ForEach`. - Parallel execution of activities. - Built-in activities for common scenarios, such as sending emails, making HTTP calls, scheduling tasks, sending and receiving messages, and more. - Workflow versioning and migration via API. - Easy integration with external applications via HTTP, message queues, and more. - Actor model for increased workflow throughput. - Dynamic expressions with support for C#, JavaScript, Python, and Liquid. - Persistence agnostic, with support for Entity Framework Core, MongoDB, and Dapper out of the box. - [Elsa Studio]( a modular Blazor dashboard app for managing and designing workflows. ## Roadmap The following features are planned for future releases of Elsa: - [ ] Multi-tenancy - [ ] State Machine activity - [ ] Designer support for Sequence activity & StateMachine activity - [ ] BPMN 2.0 support - [ ] DMN support - [ ] Workflow migration to new versions via UI - [ ] Capsules (""hot"" deployable workflow packages containing activities and configuration) ## Use Cases Elsa can be used in a variety of scenarios, including: - Long-running workflows such as order fulfillment and product approval. - Short-running workflows such as sending emails and generating PDFs. - Scheduled workflows such as sending daily reports. - Event-driven workflows such as sending welcome emails when a user signs up. ## Programmatic Workflows Elsa allows you to define workflows in code using C#. The following example shows how to receive HTTP requests and send an email in response: ```csharp public class SendEmailWorkflow : WorkflowBase { protected override void Build(IWorkflowBuilder builder) { builder.Root = new Sequence { Activities = { new HttpEndpoint { Path = new(""/send-email""), SupportedMethods = new(new[] { HttpMethods.Post }), CanStartWorkflow = true }, new SendEmail { From = new(""alic@acme.com""), To = new(new[]{ ""bob@acme.com"" }), Subject = new(""Your workflow has been triggered!""), Body = new(""Hello!"") } } }; } } ``` ## Designed Workflows Elsa allows you to define workflows using a visual designer. The following example shows how to receive HTTP requests and send an email in response: ## Contributing We welcome contributions from the community and are pleased that you are interested in helping to improve the Elsa Workflow project! Here are the steps to contribute to our project: ### 1. Fork and Clone the Repo To get started, you'll need to fork the repository to your own GitHub account. You can do this by navigating to the [Elsa Workflow GitHub repository]( and clicking the ""Fork"" button in the top-right corner of the page. Once you have forked the repo, you can clone it to your local machine using the following command: ```bash git clone ``` Replace `YOUR_USERNAME` with your GitHub username. For more information on forking a repo, check out the GitHub documentation [here]( Incorporating the details about the ""bundles"" folder and its projects into the second point about opening the `Elsa.sln` using your favorite IDE, we can expand the instructions to guide developers on where to start and what projects they might want to explore first. Here's an updated version of that section with the additional information: ### 2. Open `Elsa.sln` Using Your Favorite IDE After cloning the repository, navigate to the cloned directory and open the `Elsa.sln` solution file with your preferred IDE that supports .NET development, such as Visual Studio, JetBrains Rider, or Visual Studio Code with the appropriate extensions. Within the solution, you will find a ""bundles"" folder containing three projects designed to help you get started and explore the capabilities of Elsa Workflow: - **Elsa.Server.Web**: This project is a reference ASP.NET Core application that acts as a workflow server. It's a great starting point if you want to understand how Elsa functions as a server-side workflow engine. - **Elsa.ServerAndStudio.Web**: This project serves a dual purpose. Like `Elsa.Server.Web`, it acts as a workflow server. Additionally, it hosts the Elsa Studio Blazor WebAssembly app. This is the perfect project to run if you want to see the full capabilities of Elsa, including both the server aspects and the client-side studio experience in one application. - **Elsa.Studio.Web**: This project is a reference Blazor WebAssembly application that solely hosts the Elsa Studio Blazor WebAssembly app. It requires a running Elsa server application to connect to. Use this project if you're interested in focusing on the Elsa Studio UI and its interactions with an Elsa workflow server. ### 3. Submit a PR with Your Changes Once you have made your changes, commit them and push them back to your fork. Then, navigate to the original Elsa Workflow repository and create a new Pull Request. Ensure your PR description clearly describes the changes and any relevant information that will help the reviewers understand your contributions. For a detailed guide on creating a pull request, visit [Creating a pull request from a fork]( ### 4. Open an Issue First Before you start working on your changes or submit a pull request, please open an issue to discuss what you would like to do. This step is crucial as it ensures you don't spend time working on something that might not align with the project's goals or might already be under development by someone else. You can open an issue [here]( This approach helps us streamline contributions and ensures that your efforts are aligned with the project's needs and priorities. We look forward to your contributions and are here to support you throughout the process. Thank you for contributing to the Elsa Workflow project! --- Remember to replace any placeholder URLs or instructions with the specific details relevant to the Elsa Workflow project as necessary.","1.1k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, enhancement, bug, elsa 3, workflow tooling, elsa 2, prio low, documentation, core, activity, prio high, good first issue, dashboard, persistence, performance, epic, stale, question, tech debt, maintenance, devops, cannot reproduce, wontfix, prio immediate, help wanted, bounty, blocked, test, schema change, localization, javascript"
openai,betalgo/openai,2760,"['C#', 'HTML']","['csharp', 'dall-e', 'dotnet', 'gpt-3', 'openai']","# .NET SDK for OpenAI ## Overview A .NET SDK for accessing OpenAI's API, provided as a community library. This SDK allows you to integrate OpenAI's capabilities into your .NET applications with ease. ### Install Packages #### Core Library []( ```shell Install-Package Betalgo.OpenAI ``` #### Experimental Utilities Library []( ```shell Install-Package Betalgo.OpenAI.Utilities ``` ## Documentation and Links - [Wiki Page]( - [Feature Availability Table]( - [Change Logs]( ### API Documentation - Betalgo.OpenAI: []( - Betalgo.OpenAI.Utilities: []( --- ## Acknowledgements Maintenance of this project is made possible by all the bug reporters, [contributors]( and [sponsors]( Sponsors: [@betalgo]( [Laser Cat Eyes]( [@tylerje]( [@oferavnery]( [@MayDay-wpf]( [@AnukarOP]( [@Removable]( [@Scar11]( --- ## Sample Usage The repository contains a sample project named **OpenAI.Playground** to help you understand how the library works. However, please exercise caution while experimenting, as some test methods may result in unintended consequences such as file deletion or fine-tuning. *!! It is highly recommended that you use a separate account instead of your primary account while using the playground. Some test methods may add or delete your files and models, potentially causing unwanted issues. !!* Your API Key can be obtained from here: Your Organization ID can be found here: ### Without Using Dependency Injection ```csharp var openAiService = new OpenAIService(new OpenAiOptions() { ApiKey = Environment.GetEnvironmentVariable(""MY_OPEN_AI_API_KEY"") }); ``` ### Using Dependency Injection #### secrets.json ```json ""OpenAIServiceOptions"": { ""ApiKey"": ""Your api key goes here"", ""Organization"": ""Your Organization Id goes here (optional)"", ""UseBeta"": ""true/false (optional)"" } ``` *(To use [user secrets]( Right-click your project name in ""Solution Explorer"", then click ""Manage User Secrets"". This is a good way to keep your API keys secure.)* #### Program.cs ```csharp serviceCollection.AddOpenAIService(); ``` **OR** ```csharp serviceCollection.AddOpenAIService(settings => { settings.ApiKey = Environment.GetEnvironmentVariable(""MY_OPEN_AI_API_KEY""); }); ``` After injecting your service, you can retrieve it from the service provider: ```csharp var openAiService = serviceProvider.GetRequiredService(); ``` You can set a default model (optional): ```csharp openAiService.SetDefaultModelId(Models.Gpt_4o); ``` ## Chat GPT Sample ```csharp var completionResult = await openAiService.ChatCompletion.CreateCompletion(new ChatCompletionCreateRequest { Messages = new List { ChatMessage.FromSystem(""You are a helpful assistant.""), ChatMessage.FromUser(""Who won the world series in 2020?""), ChatMessage.FromAssistant(""The Los Angeles Dodgers won the World Series in 2020.""), ChatMessage.FromUser(""Where was it played?"") }, Model = Models.Gpt_4o, }); if (completionResult.Successful) { Console.WriteLine(completionResult.Choices.First().Message.Content); } ``` --- ## Notes #### Library Renaming This library was previously known as `Betalgo.OpenAI.GPT3`, and now it has a new package ID: `Betalgo.OpenAI`. Due to time constraints, not all methods have been thoroughly tested or fully documented. If you encounter any issues, please report them or submit a pull request. Your contributions are always appreciated. I initially developed this SDK for my personal use and decided to share it with the community. As I have not maintained open-source projects before, any assistance or feedback would be greatly appreciated. Feel free to reach out with your suggestions. Please be aware that future releases may frequently include breaking changes. Consider this before deciding to use the library. I cannot accept responsibility for any damage caused by using the library. You are free to explore alternative libraries or the OpenAI Web-API if you feel this is not suitable for your purposes. ## Changelog ### 8.2.2 - Assistant (Beta) feature is now available in the main package. Be aware there might still be bugs due to the beta status of the feature and the SDK itself. Please report any issues you encounter. - Use `""UseBeta"": true` in your config file or `serviceCollection.AddOpenAIService(r => r.UseBeta = true);` or `new OpenAiOptions { UseBeta = true }` in your service registration to enable Assistant features. - Expect more frequent breaking changes around the assistant API due to its beta nature. - All Assistant endpoints are implemented except for streaming functionality, which will be added soon. - The Playground has samples for every endpoint usage, but lacks a complete implementation for the Assistant APIs. Refer to [Assistants overview - OpenAI API]( for more details. - Special thanks to all contributors for making this version possible! #### Other Changes: - Fixed a bug with multiple tools calling in stream mode. - Added error handling for streaming. - Added usage information for streaming (use `StreamOptions = new(){IncludeUsage = true,}` to get usage information). - Added **timestamp_granularities[]** for Create transcription to provide the timestamp of every word. ### [More Change Logs]( --- For any issues, contributions, or feedback, feel free to reach out or submit a pull request.","507, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, enhancement, bug, Work In Progress, good first issue, help wanted, wontfix, question, invalid, duplicate, documentation, To Be Decided Later, Ready for next version, Code Review Needed"
ReaLTaiizor,Taiizor/ReaLTaiizor,1223,"['C#', 'Visual Basic .NET']","['theme', 'winform', 'framework', 'design', 'ui']","[]( []( []( []( []( []( []( []( # Welcome to ReaLTaiizor ReaLTaiizor is a user-friendly and design-focused control library for .NET WinForms projects, containing a wide range of components. You can personalize your projects with different theme options and customize user controls to make your applications more professional. ## Contributors Thanks goes to these wonderful people ([emoji key]( Taiizor JTOne123 HideakiAtsuyo LandarXT edoardopirovano Oxara This project follows the [all contributors]( specification. Contributions of any kind welcome! ## Backers Vegalya Soferity IgnaceMaes donaldsteele leocb N-a-r-w-i-n peters dennismagno RobinPerris 0xLaileb Stefan6440 ## Usage Step 1Add a reference to ReaLTaiizor or search for ReaLTaiizor on the NuGet; ```Install-Package ReaLTaiizor``` Step 2Enjoy designing ## Examples ### Genshin Impact []( ""GenshinImpactSample"") ### Windows Defender []( ""WindowsDefenderSample"") ### Kaspersky Security Cloud []( ""KasperskySecurityCloudSample"") ### XAMPP []( ""XAMPPSample"") ### Rufus []( ""RufusSample"") ### Store []( ""StoreSample"") ### Splash Screen []( ""SplashSample"") ### MP3 Player []( ""MP3PlayerSample"") ### Payment []( ""PaymentSample"") ### Login []( ""LoginSample"") ### Instagram []( ""InstagramSample"") ## Prepared ### Stopwatch []( ""StopwatchReady"") ### Hashing []( ""HashingReady"") ### MAChanger []( ""MAChangerReady"") ### Nerator []( ""NeratorReady"") ### Portscan []( ""PortscanReady"") ### Translate []( ""TranslateReady"") ## Overview ## Latest Theme Examples ### Air ### Dungeon ### Dream ### Ribbon ### Space ### Thunder ### Moon ### Forever ### Fox ### Hope ### Lost ### Royal ### Night","215, Code, Issues, Pull requests, Discussions, Actions, Wiki, Security, Insights, good first issue, bug, enhancement, solved, wontfix, wiki, question, invalid, help wanted, duplicate, documentation, dependencies"
DnsServer,TechnitiumSoftware/DnsServer,3676,"['C#', 'JavaScript', 'HTML']","['dns-server', 'privacy', 'dns-over-https', 'dns-over-tls', 'dns']","Technitium DNS Server Self host a DNS server for privacy & security Block ads & malware at DNS level for your entire network! Technitium DNS Server is an open source authoritative as well as recursive DNS server that can be used for self hosting a DNS server for privacy & security. It works out-of-the-box with no or minimal configuration and provides a user friendly web console accessible using any modern web browser. Nobody really bothers about domain name resolution since it works automatically behind the scenes and is complex to understand. Most computer software use the operating system's DNS resolver that usually query the configured ISP's DNS server using UDP protocol. This way works well for most people but, your ISP can see and control what website you can visit even when the website employ HTTPS security. Not only that, some ISPs can redirect, block or inject content into websites you visit even when you use a different DNS provider like Google DNS or Cloudflare DNS. Having Technitium DNS Server configured to use [DNS-over-TLS]( [DNS-over-HTTPS]( or [DNS-over-QUIC]( forwarders, these privacy & security issues can be mitigated very effectively. Be it a home network or an organization's network, having a locally running DNS server gives you more insights into your network and helps to understand it better using the DNS logs and stats. It improves overall performance since most queries are served from the DNS cache making web sites load faster by not having to wait for frequent DNS resolutions. It also gives you an additional control over your network allowing you to block domain names network wide and also allows you to route your DNS traffic securely using encrypted DNS protocols. # Sponsored By # Features - Works on Windows, Linux, macOS and Raspberry Pi. - Docker image available on [Docker Hub]( - Installs in just a minute and works out-of-the-box with zero configuration. - Block ads & malware using one or more block list URLs. - High performance DNS server based on async IO that can serve millions of requests per minute even on a commodity desktop PC hardware (load tested on Intel i7-8700 CPU with more than 100,000 request/second over Gigabit Ethernet). - Self host [DNS-over-TLS]( [DNS-over-HTTPS]( and [DNS-over-QUIC]( DNS services on your network. - DNS-over-HTTPS implementation supports HTTP/1.1, HTTP/2, and HTTP/3 transport protocols. - Supports DNS over [PROXY protocol]( version 1 and 2 for both UDP and TCP transports. - Use public DNS resolvers like Cloudflare, Google, Quad9, and AdGuard with [DNS-over-TLS]( [DNS-over-HTTPS]( or [DNS-over-QUIC]( protocols as forwarders. - Advanced caching with features like serve stale, prefetching and auto prefetching. - Persistent caching feature that saves cache to disk when DNS server restarts. - DNS rebinding attack protection feature available with DNS Rebinding Protection App. - Supports working as an authoritative as well as a recursive DNS server. - DNSSEC validation support with RSA & ECDSA algorithms for recursive resolver, forwarders, and conditional forwarders with NSEC and NSEC3 support. - DNSSEC support for all supported DNS transport protocols including encrypted DNS protocols. - DANE TLSA [RFC 6698]( record type support. This includes support for automatically generating the hash values using certificates in PEM format. - SVCB & HTTPS [draft-ietf-dnsop-svcb- record type support. - URI [RFC 7553]( record type support. - SSHFP [RFC 4255]( record type support. - CNAME cloaking feature to block domain names that resolve to CNAME which are blocked. - QNAME minimization support in recursive resolver [RFC 9156]( - QNAME case randomization support for UDP transport protocol [draft-vixie-dnsext-dns0x20-00]( - DNAME record [RFC 6672]( support. - ANAME proprietary record support to allow using CNAME like feature at zone apex (CNAME flattening). Supports multiple ANAME records at both zone apex and sub domains. - APP proprietary record support that allows custom DNS Apps to directly handle DNS requests and return a custom DNS response based on any business logic. - Support for features like Split Horizon and Geolocation based responses using DNS Apps feature. - Support for REGEX based block lists with different block lists for different client IP addresses or subnet using Advanced Blocking DNS App. - Primary, Secondary, Stub, and Conditional Forwarder zone support. - Static stub zone support implemented in Conditional Forwarder zone to force a domain name to resolve via given name servers using NS records. - Bulk conditional forwarding support using Advanced Forwarding DNS App. - DNSSEC signed zones support with RSA & ECDSA algorithms. - DNSSEC support for both NSEC and NSEC3. - Zone transfer with AXFR and IXFR [RFC 1995]( and DNS NOTIFY [RFC 1996]( support. - Zone transfer over TLS (XFR-over-TLS) [RFC 9103]( support. - Zone transfer over QUIC (XFR-over-QUIC) [RFC 9250]( support. - Dynamic DNS Updates [RFC 2136]( support with security policy. - Secret key transaction authentication (TSIG) [RFC 8945]( support for zone transfers. - EDNS(0) [RFC6891]( support. - EDNS Client Subnet (ECS) [RFC 7871]( support for recursive resolution and forwarding. - Extended DNS Errors [RFC 8914]( support. - DNS64 function [RFC 6147]( support for use by IPv6 only clients using the DNS64 App. - Support to host DNSBL / RBL block lists [RFC 5782]( - Multi-user role based access with non-expiring API token support. - Self host your domain names on your own DNS server. - Wildcard sub domain support. - Enable/disable zones and records to allow testing with ease. - Built-in DNS Client with option to import responses to local zone. - Supports out-of-order DNS request processing for DNS-over-TCP and DNS-over-TLS protocols [RFC 7766]( - Built-in DHCP Server that can work for multiple networks. - IPv6 support in DNS server core. - HTTP & SOCKS5 proxy support which can be configured to route DNS over [Tor Network]( or use [Cloudflare's hidden DNS resolver]( - Web console portal for easy configuration using any web browser. - Built in HTTP API to allow 3rd party apps to control and configure the DNS server. - Built-in system logging and query logging. - Open source cross-platform .NET 8 implementation hosted on [GitHub]( # Planned Features - Clustering support to manage two or more DNS servers. # Installation - **Windows**: [Download setup installer]( for easy installation. - **Linux & Raspberry Pi**: Follow install instructions from [this blog post]( - **Cross-Platform**: [Download portable app]( to run on any platform that has .NET 8 installed. - **Docker**: Pull the official image from [Docker Hub]( Use the [docker-compose.yml]( example to create a new container and edit it as required for your deployments. For more details and troubleshooting read the [install instructions]( # Build Instructions You can build the DNS server from source and install it manually by following the [Build Instructions]( # Docker Environment Variables Technitium DNS Server supports environment variables to allow initializing the config when the DNS server starts for the first time. Read the [environment variable documentation]( for complete details. # API Documentation The DNS server HTTP API allows any 3rd party app or script to configure the DNS server. The HTTP API is used by the web console and thus all the actions that the web console does can be performed via the API. Read the [HTTP API documentation]( for complete details. # Help Topics Read the latest [online help topics]( which contains the DNS Server user manual and covers frequently asked questions. # Support For support, send an email to support@technitium.com. For any issues, feedback, or feature request, create an issue on [GitHub]( Join [/r/technitium]( on Reddit. # Donate Make contribution to Technitium and help making new software, updates, and features possible. [Donate Now!]( # Blog Posts - [Technitium Blog: Technitium DNS Server v12 Released!]( (Feb 2024) - [Technitium Blog: For DNSSEC And Why DANE Is Needed]( (May 2023) - [Technitium Blog: How To Auto Renew SSL Certificates With Certbot Using DNS Challenge]( (Mar 2023) - [Technitium Blog: Configuring DNS-over-QUIC and HTTPS/3 For Technitium DNS Server]( (Feb 2023) - [Technitium Blog: Technitium DNS Server v11 Released!]( (Feb 2023) - [Technitium Blog: Technitium DNS Server v10 Released!]( (Nov 2022) - [Technitium Blog: Technitium DNS Server v9 Released!]( (Sept 2022) - [Technitium Blog: How To Secure Your Domain Name With DNSSEC]( (Jul 2022) - [Technitium Blog: How To Self Host Your Own Domain Name]( (Jun 2022) - [Technitium Blog: Technitium DNS Server v8 Released!]( (Mar 2022) - [Technitium Blog: Running A Root Server Locally On Your DNS Resolver]( (Jul 2021) - [Yolan Romailler: Being ad-free on Android without rooting]( (Apr 2021) - [Technitium Blog: Creating And Running DNS Apps On Technitium DNS Server]( (Mar 2021) - [Technitium Blog: How To Host Your Own DNS-over-HTTPS And DNS-over-TLS Services]( (Oct 2020) - [Technitium Blog: How To Disable Firefox DNS-over-HTTPS On Your Network]( (Jul 2020) - [Technitium Blog: How To Enforce Google Safe Search And YouTube Restricted Mode On Your Network]( (Jul 2020) - [Technitium Blog: Technitium DNS Server v5 Released!]( (Jul 2020) - [Brian Wojtczak: Keep It Encrypted, Keep It Safe: Working with ESNI, DoH, and DoT]( (Jan 2020) - [phra's blog: Exfiltrate Like a Pro: Using DNS over HTTPS as a C2 Channel]( (Aug 2019) - [Scott Hanselman: Exploring DNS with the .NET Core based Technitium DNS Server]( (Apr 2019) - [Technitium Blog: Turn Raspberry Pi Into Network Wide DNS Server]( (Jan 2019) - [Technitium Blog: Blocking Internet Ads Using DNS Sinkhole]( (Oct 2018) - [Technitium Blog: Configuring DNS Server For Privacy & Security]( (Jun 2018) - [Technitium Blog: Technitium DNS Server v1.3 Released!]( (Jun 2018) - [Technitium Blog: Running Technitium DNS Server on Ubuntu Linux]( (Nov 2017) - [Technitium Blog: Technitium DNS Server Released!]( (Nov 2017)","391, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, feature request, wontfix, question, invalid, informational, help wanted, good first issue, enhancement, duplicate, bug"
run-aspnetcore-microservices,aspnetrun/run-aspnetcore-microservices,2473,"['C#', 'HTML', 'Dockerfile']","['aspnet-core', 'docker', 'ocelot-gateway', 'micorservices', 'aspnetcore-microservices']","**UDEMY COURSE WITH DISCOUNTED - Step by Step Development of this Repository -> See the overall picture of **implementations on microservices with .net tools** on real-world **e-commerce microservices** project; There is a couple of microservices which implemented **e-commerce** modules over **Catalog, Basket, Discount** and **Ordering** microservices with **NoSQL (DocumentDb, Redis)** and **Relational databases (PostgreSQL, Sql Server)** with communicating over **RabbitMQ Event Driven Communication** and using **Yarp API Gateway**. ### Check Explanation of this Repository on Medium * [.NET 8 Microservices: DDD, CQRS, Vertical/Clean Architecture and Event-Driven Communication]( ## Whats Including In This Repository We have implemented below **features over the run-aspnetcore-microservices repository**. #### Catalog microservice which includes; * ASP.NET Core Minimal APIs and latest features of .NET8 and C# 12 * **Vertical Slice Architecture** implementation with Feature folders and single .cs file includes different classes in one file * CQRS implementation using MediatR library * CQRS Validation Pipeline Behaviors with MediatR and FluentValidation * Use Marten library for .NET Transactional Document DB on PostgreSQL * Use Carter for Minimal API endpoint definition * Cross-cutting concerns Logging, Global Exception Handling and Health Checks #### Basket microservice which includes; * ASP.NET 8 Web API application, Following REST API principles, CRUD * Using **Redis** as a **Distributed Cache** over basketdb * Implements Proxy, Decorator and Cache-aside patterns * Consume Discount **Grpc Service** for inter-service sync communication to calculate product final price * Publish BasketCheckout Queue with using **MassTransit and RabbitMQ** #### Discount microservice which includes; * ASP.NET **Grpc Server** application * Build a Highly Performant **inter-service gRPC Communication** with Basket Microservice * Exposing Grpc Services with creating **Protobuf messages** * Entity Framework Core ORM SQLite Data Provider and Migrations to simplify data access and ensure high performance * **SQLite database** connection and containerization #### Microservices Communication * Sync inter-service **gRPC Communication** * Async Microservices Communication with **RabbitMQ Message-Broker Service** * Using **RabbitMQ Publish/Subscribe Topic** Exchange Model * Using **MassTransit** for abstraction over RabbitMQ Message-Broker system * Publishing BasketCheckout event queue from Basket microservices and Subscribing this event from Ordering microservices * Create **RabbitMQ EventBus.Messages library** and add references Microservices #### Ordering Microservice * Implementing **DDD, CQRS, and Clean Architecture** with using Best Practices * Developing **CQRS with using MediatR, FluentValidation and Mapster packages** * Consuming **RabbitMQ** BasketCheckout event queue with using **MassTransit-RabbitMQ** Configuration * **SqlServer database** connection and containerization * Using **Entity Framework Core ORM** and auto migrate to SqlServer when application startup #### Yarp API Gateway Microservice * Develop API Gateways with **Yarp Reverse Proxy** applying Gateway Routing Pattern * Yarp Reverse Proxy Configuration; Route, Cluster, Path, Transform, Destinations * **Rate Limiting** with FixedWindowLimiter on Yarp Reverse Proxy Configuration #### WebUI ShoppingApp Microservice * ASP.NET Core Web Application with Bootstrap 4 and Razor template * Call **Yarp APIs with Refit HttpClientFactory** #### Docker Compose establishment with all microservices on docker; * Containerization of microservices * Containerization of databases * Override Environment variables ## Run The Project You will need the following tools: * [Visual Studio 2022]( * [.Net Core 8 or later]( * [Docker Desktop]( ### Installing Follow these steps to get your development environment set up: (Before Run Start the Docker Desktop) 1. Clone the repository 2. Once Docker for Windows is installed, go to the **Settings > Advanced option**, from the Docker icon in the system tray, to configure the minimum amount of memory and CPU like so: * **Memory: 4 GB** * CPU: 2 3. At the root directory of solution, select **docker-compose** and **Set a startup project**. **Run docker-compose without debugging on visual studio**. Or you can go to root directory which include **docker-compose.yml** files, run below command: ```csharp docker-compose -f docker-compose.yml -f docker-compose.override.yml up -d ``` 4. Wait for docker compose all microservices. Thats it! (some microservices need extra time to work so please wait if not worked in first shut) 5. Launch **Shopping Web UI -> in your browser to view index page. You can use Web project in order to **call microservices over Yarp API Gateway**. When you **checkout the basket** you can follow **queue record on RabbitMQ dashboard**. ## Authors * **Mehmet Ozkaya** - *Initial work* - [mehmetozkaya]( See also the list of [contributors]( who participated in this project. Check also [gihtub page of repository.](","1.3k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, dependencies, good first issue, wontfix, question, invalid, help wanted, enhancement, duplicate, bug"
Ryujinx,Ryujinx/Ryujinx,32800,"['C#', 'GLSL', 'C']","['emulator', 'csharp', 'switch', 'emulation', 'dotnet-core']","Ryujinx (REE-YOU-JINX) Ryujinx is an open-source Nintendo Switch emulator, created by gdkchan, written in C#. This emulator aims at providing excellent accuracy and performance, a user-friendly interface and consistent builds. It was written from scratch and development on the project began in September 2017. Ryujinx is available on Github under the MIT license. ## Compatibility As of May 2024, Ryujinx has been tested on approximately 4,300 titles; over 4,100 boot past menus and into gameplay, with roughly 3,550 of those being considered playable. You can check out the compatibility list [here]( Anyone is free to submit a new game test or update an existing game test entry; simply follow the new issue template and testing guidelines, or post as a reply to the applicable game issue. Use the search function to see if a game has been tested already! ## Usage To run this emulator, your PC must be equipped with at least 8GiB of RAM; failing to meet this requirement may result in a poor gameplay experience or unexpected crashes. See our [Setup & Configuration Guide]( on how to set up the emulator. For our Local Wireless (LDN) builds, see our [Multiplayer: Local Play/Local Wireless Guide ]( Avalonia UI comes with translations for various languages. See [Crowdin]( for more information. ## Latest build These builds are compiled automatically for each commit on the master branch. While we strive to ensure optimal stability and performance prior to pushing an update, our automated builds **may be unstable or completely broken**. If you want to see details on updates to the emulator, you can visit our [Changelog]( The latest automatic build for Windows, macOS, and Linux can be found on the [Official Website]( ## Documentation If you are planning to contribute or just want to learn more about this project please read through our [documentation](docs/README.md). ## Building If you wish to build the emulator yourself, follow these steps: ### Step 1 Install the [.NET 8.0 (or higher) SDK]( Make sure your SDK version is higher or equal to the required version specified in [global.json](global.json). ### Step 2 Either use `git clone on the command line to clone the repository or use Code --> Download zip button to get the files. ### Step 3 To build Ryujinx, open a command prompt inside the project directory. You can quickly access it on Windows by holding shift in File Explorer, then right clicking and selecting `Open command window here`. Then type the following command: `dotnet build -c Release -o build` the built files will be found in the newly created build directory. Ryujinx system files are stored in the `Ryujinx` folder. This folder is located in the user folder, which can be accessed by clicking `Open Ryujinx Folder` under the File menu in the GUI. ## Features - **Audio** Audio output is entirely supported, audio input (microphone) isn't supported. We use C# wrappers for [OpenAL]( and [SDL2]( & [libsoundio]( as fallbacks. - **CPU** The CPU emulator, ARMeilleure, emulates an ARMv8 CPU and currently has support for most 64-bit ARMv8 and some of the ARMv7 (and older) instructions, including partial 32-bit support. It translates the ARM code to a custom IR, performs a few optimizations, and turns that into x86 code. There are three memory manager options available depending on the user's preference, leveraging both software-based (slower) and host-mapped modes (much faster). The fastest option (host, unchecked) is set by default. Ryujinx also features an optional Profiled Persistent Translation Cache, which essentially caches translated functions so that they do not need to be translated every time the game loads. The net result is a significant reduction in load times (the amount of time between launching a game and arriving at the title screen) for nearly every game. NOTE: This feature is enabled by default in the Options menu > System tab. You must launch the game at least twice to the title screen or beyond before performance improvements are unlocked on the third launch! These improvements are permanent and do not require any extra launches going forward. - **GPU** The GPU emulator emulates the Switch's Maxwell GPU using either the OpenGL (version 4.5 minimum), Vulkan, or Metal (via MoltenVK) APIs through a custom build of OpenTK or Silk.NET respectively. There are currently six graphics enhancements available to the end user in Ryujinx: Disk Shader Caching, Resolution Scaling, Anti-Aliasing, Scaling Filters (including FSR), Anisotropic Filtering and Aspect Ratio Adjustment. These enhancements can be adjusted or toggled as desired in the GUI. - **Input** We currently have support for keyboard, mouse, touch input, JoyCon input support, and nearly all controllers. Motion controls are natively supported in most cases; for dual-JoyCon motion support, DS4Windows or BetterJoy are currently required. In all scenarios, you can set up everything inside the input configuration menu. - **DLC & Modifications** Ryujinx is able to manage add-on content/downloadable content through the GUI. Mods (romfs, exefs, and runtime mods such as cheats) are also supported; the GUI contains a shortcut to open the respective mods folder for a particular game. - **Configuration** The emulator has settings for enabling or disabling some logging, remapping controllers, and more. You can configure all of them through the graphical interface or manually through the config file, `Config.json`, found in the user folder which can be accessed by clicking `Open Ryujinx Folder` under the File menu in the GUI. ## Contact If you have contributions, suggestions, need emulator support or just want to get in touch with the team, join our [Discord server]( You may also review our [FAQ]( ## Donations If you'd like to support the project financially, Ryujinx has an active Patreon campaign. All developers working on the project do so in their free time, but the project has several expenses: * Hackable Nintendo Switch consoles to reverse-engineer the hardware * Additional computer hardware for testing purposes (e.g. GPUs to diagnose graphical bugs, etc.) * Licenses for various software development tools (e.g. Jetbrains, IDA) * Web hosting and infrastructure maintenance (e.g. LDN servers) All funds received through Patreon are considered a donation to support the project. Patrons receive early access to progress reports and exclusive access to developer interviews. ## License This software is licensed under the terms of the [MIT license](LICENSE.txt). This project makes use of code authored by the libvpx project, licensed under BSD and the ffmpeg project, licensed under LGPLv3. See [LICENSE.txt](LICENSE.txt) and [THIRDPARTY.md](distribution/legal/THIRDPARTY.md) for more details. ## Credits - [LibHac]( is used for our file-system. - [AmiiboAPI]( is used in our Amiibo emulation. - [ldn_mitm]( is used for one of our available multiplayer modes. - [ShellLink]( is used for Windows shortcut generation.","3.8k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, bug, enhancement, gui, gpu, input, os:macOS, horizon, cpu, not-implemented, good first issue, miscellaneous, infra, audio, service:ldn, graphics-backend:vulkan, needs-update, needs-re, os:linux, os:windows, graphics-backend:opengl, service:hid, performance, needs-feedback, graphics-vendor:amd, service:sockets, fix, review/waiting-on-author, nvdec, service:fs, applet"
MudBlazor,MudBlazor/MudBlazor,7302,"['C#', 'HTML', 'SCSS']","['blazor', 'material', 'netcore', 'wasm', 'blazor-components']","# Material Design components for Blazor []( []( []( []( []( []( []( []( []( []( MudBlazor is an ambitious Material Design component framework for Blazor with an emphasis on ease of use and clear structure. It is perfect for .NET developers who want to rapidly build web applications without having to struggle with CSS and Javascript. MudBlazor, being written entirely in C#, empowers you to adapt, fix or extend the framework. There are plenty of examples in the documentation, which makes understanding and learning MudBlazor very easy. ## Documentation & Demo - [MudBlazor.com]( - [Try.MudBlazor.com]( ### Why is MudBlazor so successful? - Clean and aesthetic graphic design based on Material Design. - Clear and easy to understand structure. - Good documentation with many examples and source snippets. - All components are written entirely in C#, no JavaScript allowed (except where absolutely necessary). - Users can make beautiful apps without needing CSS (but they can of course use CSS too). - No dependencies on other component libraries, 100% control over components and features. - Stability! We strive for a complete test coverage. - Releases often so developers can get their PRs and fixes in a timely fashion. ## Prerequisites | MudBlazor | .NET | Support | | :--- | :---: | :---: | | 1.x.x - 2.0.x | .NET 3.1 | Ended 03/2021 | | 5.x.x | .NET 5 | Ended 01/2022 | | 6.x.x | [.NET 6]( [.NET 7]( [.NET 8]( | :heavy_check_mark: | | 7.x.x | [.NET 7]( [.NET 8]( | :heavy_check_mark: | :information_source: Currently only interactive rendering modes are supported - [Learn more]( :warning: Blazor only supports [current browser versions]( To ensure a seamless experience with MudBlazor, please use an up-to-date web browser. If a browser version is no longer maintained by its publisher, we cannot guarantee compatibility with MudBlazor. ## Stats ## Contributing Thanks for wanting to contribute! Contributions from the community are what makes MudBlazor successful. If you are familiar with technologies like C#, Blazor, JavaScript, or CSS, and wish to give something back, please consider submitting a pull request! We try to merge all non-breaking bugfixes and will deliberate the value of new features for the community. Please note there is no guarantee your PR will be merged, so if you want to be sure before investing the work, feel free to [contact the team]( first. Check out the [contribution guidelines](/CONTRIBUTING.md) to understand our goals and learn more about the internals of the project. ## Getting Started Full installation instructions can be found [on our website]( Alternatively use one of our templates from the [MudBlazor.Templates]( repo. ### Quick Installation Guide Install Package ``` dotnet add package MudBlazor ``` Add the following to `_Imports.razor` ```razor @using MudBlazor ``` Add the following to the `MainLayout.razor` or `App.razor` ```razor ``` Add the following to `index.html` (client-side) or `_Host.cshtml` (server-side) in the `head` ```razor ``` Add the following to `index.html` or `_Host.cshtml` in the `body` ```razor ``` Add the following to the relevant sections of `Program.cs` ```c# using MudBlazor.Services; ``` ```c# builder.Services.AddMudServices(); ``` ### Usage ```razor MudBlazor is @Text @ButtonText @code { public string Text { get; set; } = ""????""; public string ButtonText { get; set; } = ""Click Me""; public int ButtonClicked { get; set; } void ButtonOnClick() { ButtonClicked += 1; Text = $""Awesome x {ButtonClicked}""; ButtonText = ""Click Me Again""; } } ```","1.2k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, enhancement, bug, wants to do a PR, PR: needs review, accessibility, priority-low, breaking change, API change, new component, has workaround, docs, help wanted, priority-medium, needs tests, info required, epic, safari, team decision required, priority-high, question, needs changes, extension, needs review, good first issue, answered, v8, v7, performance, not a bug, regression"
TwitchDownloader,lay295/TwitchDownloader,2412,"['C#', 'HTML']",[],"Twitch Downloader Twitch VOD/Clip/Chat Downloader and Chat Renderer Report Bug This document is also available in: - [**Spanish / Espaol**](README_es.md) - [**Italian / Italiano**](README_it.md) - [**Portuguese (Brazil) / Portugus (Brasil)**](README_pt-br.md) - [**Turkish / Trke**](README_tr.md) - [**Japanese / **](README_ja.md) - [**Simplified Chinese / **](README_zh-cn.md) ## Chat Render Example ## What can it do? - Download Twitch VODs - Download Twitch Clips - Download chat for VODs and Clips, in either a [JSON with all the original information]( a browser HTML file, or a [plain text file]( - Update the contents of a previously generated JSON chat file with an option to save as another format - Use a previously generated JSON chat file to render the chat with Twitter Twemoji or Google Noto Color emojis and BTTV, FFZ, 7TV static and animated emotes # GUI ## Windows WPF ### [See the full WPF documentation here](TwitchDownloaderWPF/README.md) ### Functionality The Windows WPF GUI implements all of the main functions of the program along with some extra quality of life functions: - Queue up multiple download/render jobs to run simultaneously - Create a list of download jobs from a list of vod/clip links - Search for and download multiple VODs/clips from any streamer without leaving the app ### Multi-language Support The Windows WPF GUI is available in multiple languages thanks to community translations. See the [Localization section](TwitchDownloaderWPF/README.md#localization) of the [WPF README](TwitchDownloaderWPF/README.md) for more details. ### Theming The Windows WPF GUI comes bundled with both light and dark themes, along with an option to update live according the current Windows theme. It also supports user created themes! See the [Theming section](TwitchDownloaderWPF/README.md#theming) of the [WPF README](TwitchDownloaderWPF/README.md) for more details. ### Video Demonstration (older version, same concept) ## Linux? Check twitch-downloader-gui on [github]( or on the [AUR]( for a Linux GUI wrapper for the CLI. ## MacOS? No GUI is available for MacOS yet :( # CLI ### [See the full CLI documentation here](TwitchDownloaderCLI/README.md) The CLI is cross-platform and implements the main functions of the program. It works on Windows, Linux, and MacOS*. *Only Intel Macs have been tested With the CLI, it is possible to automate video processing using external scripts. For example, you could copy-paste the following code into a `.bat` file on Windows to download a VOD and its chat, and then render the chat, all from a single input. ```bat @echo off set /p vodid=""Enter VOD ID: "" TwitchDownloaderCLI.exe videodownload --id %vodid% --ffmpeg-path ""ffmpeg.exe"" -o %vodid%.mp4 TwitchDownloaderCLI.exe chatdownload --id %vodid% -o %vodid%_chat.json -E TwitchDownloaderCLI.exe chatrender -i %vodid%_chat.json -h 1080 -w 422 --framerate 30 --update-rate 0 --font-size 18 -o %vodid%_chat.mp4 ``` ## Windows - Getting started 1. Go to [Releases]( and download the latest version for Windows or [build from source](#building-from-source). 2. Extract `TwitchDownloaderCLI.exe`. 3. Browse to where you extracted the executable: ``` cd C:\folder\containing\TwitchDownloaderCLI ``` 4. If you do not have FFmpeg, you can install it via [Chocolatey package manager]( or you can get it as a standalone file from [ffmpeg.org]( or by using TwitchDownloaderCLI: ``` TwitchDownloaderCLI.exe ffmpeg --download ``` 5. You can now start using TwitchDownloaderCLI, for example: ``` TwitchDownloaderCLI.exe videodownload --id -o out.mp4 ``` You can find more example commands in the [CLI README](TwitchDownloaderCLI/README.md#example-commands). ## Linux Getting started 1. Some distros, like Linux Alpine, lack fonts for some languages (Arabic, Persian, Thai, etc.) If this is the case for you, install additional fonts families such as [Noto]( or check your distro's wiki page on fonts as it may have an install command for this specific scenario, such as the [Linux Alpine]( font page. 2. Ensure both `fontconfig` and `libfontconfig1` are installed. `apt-get install fontconfig libfontconfig1` on Ubuntu. 3. Go to [Releases]( and download the latest binary for Linux, grab the [AUR Package]( for Arch Linux, or [build from source](#building-from-source). 4. Extract `TwitchDownloaderCLI`. 5. Browse to where you extracted the binary: ``` cd directory/containing/TwitchDownloaderCLI ``` 6. Give the binary executable rights: ``` sudo chmod +x TwitchDownloaderCLI ``` 7. a) If you do not have FFmpeg, you should install it system-wide via your distro package manager, however you can also get it as a standalone file from [ffmpeg.org]( or by using TwitchDownloaderCLI: ``` ./TwitchDownloaderCLI ffmpeg --download ``` 7. b) If downloaded as a standalone file, you must also give it executable rights with: ``` sudo chmod +x ffmpeg ``` 8. You can now start using TwitchDownloaderCLI, for example: ``` ./TwitchDownloaderCLI videodownload --id -o out.mp4 ``` You can find more example commands in the [CLI README](TwitchDownloaderCLI/README.md#example-commands). ## MacOS Getting started 1. If your device has an Apple Silicon M-series processor, ensure that you download the arm64 binary, however if you would like to use the x64 binary on Apple Silicon it must be run via a terminal session running under Rosetta 2: ``` arch -x86_64 zsh ``` 2. Go to [Releases]( and download the latest binary for MacOS or [build from source](#building-from-source). 3. Extract `TwitchDownloaderCLI`. 4. Browse to where you extracted the binary: ``` cd directory/containing/TwitchDownloaderCLI ``` 5. Give the binary executable rights in the terminal: ``` chmod +x TwitchDownloaderCLI ``` 6. a) If you do not have FFmpeg, you can install it system-wide via the [Homebrew package manager]( or you can get it as a standalone file from [ffmpeg.org]( or by using TwitchDownloaderCLI: ``` ./TwitchDownloaderCLI ffmpeg --download ``` 6. b) If downloaded as a standalone file, you must also give it executable rights with: ``` chmod +x ffmpeg ``` 7. You can now start using TwitchDownloaderCLI, for example: ``` ./TwitchDownloaderCLI videodownload --id -o out.mp4 ``` You can find more example commands in the [CLI README](TwitchDownloaderCLI/README.md#example-commands). # Building from source ## Requirements - [.NET 6.0.x SDK]( - About 1GB of disk space ## Build Instructions 1. Clone the repository: ``` git clone ``` 2. Navigate to the solution folder: ``` cd TwitchDownloader ``` 3. Restore the solution: ``` dotnet restore ``` - Non-Windows devices may need to explicitly specify a project to restore, i.e. `dotnet restore TwitchDownloaderCLI` 4. a) Build the GUI: ``` dotnet publish TwitchDownloaderWPF -p:PublishProfile=Windows ``` 4. b) Build the CLI: ``` dotnet publish TwitchDownloaderCLI -p:PublishProfile= ``` - Applicable Profiles: `Windows`, `Linux`, `LinuxAlpine`, `LinuxArm`, `LinuxArm64`, `MacOS`, `MacOSArm64` 5. a) Navigate to the GUI build folder: ``` cd TwitchDownloaderWPF/bin/Release/net6.0-windows/publish/win-x64 ``` 5. b) Navigate to the CLI build folder: ``` cd TwitchDownloaderCLI/bin/Release/net6.0/publish ``` # Third Party Credits Chat Renders are rendered with [SkiaSharp]( and [HarfBuzzSharp]( Microsoft Corporation. Chat Renders are encoded and Video Downloads are finalized with [FFmpeg]( The FFmpeg developers. Chat Renders may use [Noto Color Emoji]( Google and contributors. Chat Renders may use [Twemoji]( Twitter and contributors. Bundled FFmpeg binaries are fetched from [gyan.dev]( Gyan Doshi. FFmpeg binaries fetched are runtime are downloaded using [Xabe.FFmpeg.Downloader]( Xabe. Chat Html exports utilize the _Inter_ typeface hosted by the [Google Fonts API]( Google. For a full list of utilized external libraries, see [THIRD-PARTY-LICENSES.txt](./TwitchDownloaderCore/Resources/THIRD-PARTY-LICENSES.txt). # License [MIT](./LICENSE.txt) TwitchDownloader is in no way associated with Twitch Interactive, Inc. or its affiliates.","243, Code, Issues, Pull requests, Actions, Security, Insights, enhancement, bug, question, debugging, waiting on upstream, help wanted, good first issue, fixed in next release, wontfix"
bloxstrap,pizzaboxer/bloxstrap,1291,['C#'],"['roblox', 'launcher', 'mod', 'csharp']","# Bloxstrap []( []( []( []( []( []( An open-source, alternative bootstrapper for Roblox. This is a drop-in replacement for the standard Roblox bootstrapper, providing additional useful features and improvements. This does not touch or modify the game client itself, it's just a launcher! So don't worry, there's no risk of being banned for using this. Running into a problem or need help with something? [Check out the Wiki]( If you can't find anything, or would like to suggest something, please [submit an issue]( or report it in our [Discord server]( Bloxstrap is only supported for PCs running Windows. ## Installing Download the [latest release of Bloxstrap]( and run it. Configure your preferences if needed, and install. That's about it! Alternatively, you can install Bloxstrap via [Winget]( by running this in a Command Prompt window: ``` > winget install bloxstrap ``` You will also need the [.NET 6 Desktop Runtime]( If you don't already have it installed, you'll be prompted to install it anyway. Be sure to install Bloxstrap after you've installed this. It's not unlikely that Windows Smartscreen will show a popup when you run Bloxstrap for the first time. This happens because it's an unknown program, not because it's actually detected as being malicious. To dismiss it, just click on ""More info"" and then ""Run anyway"". Once installed, Bloxstrap is added to your Start Menu, where you can access the menu and reconfigure your preferences if needed. ## Features Here's some of the features that Bloxstrap provides over the stock Roblox bootstrapper: * Persistent file modifications, includes re-adding the old death sound! * Painless and seamless support for Discord Rich Presence - no auth cookie needed! * A customizable launcher look * Lets you see what region your current server is located in * Lets you have multiple Roblox game instances open simultaneously All the available features are browsable through the Bloxstrap menu. Bloxstrap also only runs whenever necessary, so it doesn't stay running in the background when you're not playing. ## Screenshots ## Special thanks * [@MaximumADHD]( - Initially inspiring the idea for Bloxstrap with [Roblox Studio Mod Manager]( * [Multako]( - Designing the Bloxstrap logo. * [@1011025m]( - Providing a method for disabling the Roblox desktop app. * taskmanager ([@Mantaraix]( - Helping with designing the new menu look and layout. * [@Extravi]( - Allowing their presets to be bundled with Bloxstrap, and helping with improving UX. * [@axstin]( - Making [rbxfpsunlocker]( which was used for Bloxstrap's FPS unlocking up until v2.2.0.","181, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, enhancement, bug, clarification needed, not bloxstrap problem, needs investigation, information, http issue, question, pending release, critical, wontfix, submodules, open discussion, likely hyperion/x64, invalid, help wanted, good first issue, github_actions, duplicate, documentation, dependencies, .NET"
example-voting-app,dockersamples/example-voting-app,4380,"['C#', 'CSS', 'JavaScript']","['docker', 'swarm', 'kubernetes', 'docker-compose', 'example']","# Example Voting App A simple distributed application running across multiple Docker containers. ## Getting started Download [Docker Desktop]( for Mac or Windows. [Docker Compose]( will be automatically installed. On Linux, make sure you have the latest version of [Compose]( This solution uses Python, Node.js, .NET, with Redis for messaging and Postgres for storage. Run in this directory to build and run the app: ```shell docker compose up ``` The `vote` app will be running at [ and the `results` will be at [ Alternately, if you want to run it on a [Docker Swarm]( first make sure you have a swarm. If you don't, run: ```shell docker swarm init ``` Once you have your swarm, in this directory run: ```shell docker stack deploy --compose-file docker-stack.yml vote ``` ## Run the app in Kubernetes The folder k8s-specifications contains the YAML specifications of the Voting App's services. Run the following command to create the deployments and services. Note it will create these resources in your current namespace (`default` if you haven't changed it.) ```shell kubectl create -f k8s-specifications/ ``` The `vote` web app is then available on port 31000 on each host of the cluster, the `result` web app is available on port 31001. To remove them, run: ```shell kubectl delete -f k8s-specifications/ ``` ## Architecture * A front-end web app in [Python](/vote) which lets you vote between two options * A [Redis]( which collects new votes * A [.NET](/worker/) worker which consumes votes and stores them in * A [Postgres]( database backed by a Docker volume * A [Node.js](/result) web app which shows the results of the voting in real time ## Notes The voting application only accepts one vote per client browser. It does not register additional votes if a vote has already been submitted from a client. This isn't an example of a properly architected perfectly designed distributed app... it's just a simple example of the various types of pieces and languages you might see (queues, persistent data, etc), and how to deal with them in Docker at a basic level.","9.6k, Code, Issues, Pull requests, Actions, Security, Insights, dependencies, cleanup, javascript, enhancement, .NET, GitHub Actions, working as intended, wontfix, question, out of date, java, invalid, help wanted, duplicate, bug"
MemoryPack,Cysharp/MemoryPack,2881,"['C#', 'TypeScript', 'HTML']",[],"# MemoryPack []( []( []( Zero encoding extreme performance binary serializer for C# and Unity. > Compared with [System.Text.Json]( [protobuf-net]( [MessagePack for C#]( [Orleans.Serialization]( Measured by .NET 7 / Ryzen 9 5950X machine. These serializers have `IBufferWriter` method, serialized using `ArrayBufferWriter` and reused to avoid measure buffer copy. For standard objects, MemoryPack is x10 faster and x2 ~ x5 faster than other binary serializers. For struct array, MemoryPack is even more powerful, with speeds up to x50 ~ x200 greater than other serializers. MemoryPack is my 4th serializer, previously I've created well known serializers, ~~[ZeroFormatter]( ~~[Utf8Json]( [MessagePack for C#]( The reason for MemoryPack's speed is due to its C#-specific, C#-optimized binary format and a well tuned implementation based on my past experience. It is also a completely new design utilizing .NET 7 and C# 11 and the Incremental Source Generator (.NET Standard 2.1 (.NET 5, 6) and there is also Unity support). Other serializers perform many encoding operations such as VarInt encoding, tag, string, etc. MemoryPack format uses a zero-encoding design that copies as much C# memory as possible. Zero-encoding is similar to FlatBuffers, but it doesn't need a special type, MemoryPack's serialization target is POCO. Other than performance, MemoryPack has these features. * Support modern I/O APIs (`IBufferWriter`, `ReadOnlySpan`, `ReadOnlySequence`) * Native AOT friendly Source Generator based code generation, no Dynamic CodeGen (IL.Emit) * Reflectionless non-generics APIs * Deserialize into existing instance * Polymorphism (Union) serialization * Limited version-tolerant (fast/default) and full version-tolerant support * Circular reference serialization * PipeWriter/Reader based streaming serialization * TypeScript code generation and ASP.NET Core Formatter * Unity (2021.3) IL2CPP Support via .NET Source Generator Installation --- This library is distributed via NuGet. For best performance, recommend to use `.NET 7`. Minimum requirement is `.NET Standard 2.1`. > PM> Install-Package [MemoryPack]( And also a code editor requires Roslyn 4.3.1 support, for example Visual Studio 2022 version 17.3, .NET SDK 6.0.401. For details, see the [Roslyn Version Support]( document. For Unity, the requirements and installation process are completely different. See the [Unity](#unity) section for details. Quick Start --- Define a struct or class to be serialized and annotate it with the `[MemoryPackable]` attribute and the `partial` keyword. ```csharp using MemoryPack; [MemoryPackable] public partial class Person { public int Age { get; set; } public string Name { get; set; } } ``` Serialization code is generated by the C# source generator feature which implements the `IMemoryPackable` interface. In Visual Studio you can check a generated code by using a shortcut `Ctrl+K, R` on the class name and select `*.MemoryPackFormatter.g.cs`. Call `MemoryPackSerializer.Serialize/Deserialize` to serialize/deserialize an object instance. ```csharp var v = new Person { Age = 40, Name = ""John"" }; var bin = MemoryPackSerializer.Serialize(v); var val = MemoryPackSerializer.Deserialize(bin); ``` `Serialize` method supports a return type of `byte[]` as well as it can serialize to `IBufferWriter` or `Stream`. `Deserialize` method supports `ReadOnlySpan`, `ReadOnlySequence` and `Stream`. And there are alse non-generics versions. Built-in supported types --- These types can be serialized by default: * .NET primitives (`byte`, `int`, `bool`, `char`, `double`, etc.) * Unmanaged types (Any `enum`, Any user-defined `struct` which doesn't contain reference types) * `string`, `decimal`, `Half`, `Int128`, `UInt128`, `Guid`, `Rune`, `BigInteger` * `TimeSpan`, `DateTime`, `DateTimeOffset`, `TimeOnly`, `DateOnly`, `TimeZoneInfo` * `Complex`, `Plane`, `Quaternion` `Matrix3x2`, `Matrix4x4`, `Vector2`, `Vector3`, `Vector4` * `Uri`, `Version`, `StringBuilder`, `Type`, `BitArray`, `CultureInfo` * `T[]`, `T[,]`, `T[,,]`, `T[,,,]`, `Memory<>`, `ReadOnlyMemory<>`, `ArraySegment<>`, `ReadOnlySequence<>` * `Nullable<>`, `Lazy<>`, `KeyValuePair<,>`, `Tuple<,...>`, `ValueTuple<,...>` * `List<>`, `LinkedList<>`, `Queue<>`, `Stack<>`, `HashSet<>`, `SortedSet<>`, `PriorityQueue<,>` * `Dictionary<,>`, `SortedList<,>`, `SortedDictionary<,>`, `ReadOnlyDictionary<,>` * `Collection<>`, `ReadOnlyCollection<>`, `ObservableCollection<>`, `ReadOnlyObservableCollection<>` * `IEnumerable<>`, `ICollection<>`, `IList<>`, `IReadOnlyCollection<>`, `IReadOnlyList<>`, `ISet<>` * `IDictionary<,>`, `IReadOnlyDictionary<,>`, `ILookup<,>`, `IGrouping<,>`, * `ConcurrentBag<>`, `ConcurrentQueue<>`, `ConcurrentStack<>`, `ConcurrentDictionary<,>`, `BlockingCollection<>` * Immutable collections (`ImmutableList<>`, etc.) and interfaces (`IImmutableList<>`, etc.) Define `[MemoryPackable]` `class` / `struct` / `record` / `record struct` --- `[MemoryPackable]` can annotate to any `class`, `struct`, `record`, `record struct` and `interface`. If a type is `struct` or `record struct` which contains no reference types ([C# Unmanaged types]( any additional annotation (ignore, include, constructor, callbacks) is not used, that serialize/deserialize directly from the memory. Otherwise, by default, `[MemoryPackable]` serializes public instance properties or fields. You can use `[MemoryPackIgnore]` to remove serialization target, `[MemoryPackInclude]` promotes a private member to serialization target. ```csharp [MemoryPackable] public partial class Sample { // these types are serialized by default public int PublicField; public readonly int PublicReadOnlyField; public int PublicProperty { get; set; } public int PrivateSetPublicProperty { get; private set; } public int ReadOnlyPublicProperty { get; } public int InitProperty { get; init; } public required int RequiredInitProperty { get; init; } // these types are not serialized by default int privateProperty { get; set; } int privateField; readonly int privateReadOnlyField; // use [MemoryPackIgnore] to remove target of a public member [MemoryPackIgnore] public int PublicProperty2 => PublicProperty + PublicField; // use [MemoryPackInclude] to promote a private member to serialization target [MemoryPackInclude] int privateField2; [MemoryPackInclude] int privateProperty2 { get; set; } } ``` `MemoryPack`'s code generator adds information about what members are serialized to the `` section. This can be viewed by hovering over the type with Intellisense. All members must be memorypack-serializable, if not the code generator will emit an error. MemoryPack has 35 diagnostics rules (`MEMPACK001` to `MEMPACK035`) to be defined comfortably. If target type is defined MemoryPack serialization externally and registered, use `[MemoryPackAllowSerialize]` to silent diagnostics. ```csharp [MemoryPackable] public partial class Sample2 { [MemoryPackAllowSerialize] public NotSerializableType? NotSerializableProperty { get; set; } } ``` Member order is **important**, MemoryPack does not serialize the member-name or other information, instead serializing fields in the order they are declared. If a type is inherited, serialization is performed in the order of parent child. The order of members can not change for the deserialization. For the schema evolution, see the [Version tolerant](#version-tolerant) section. The default order is sequential, but you can choose the explicit layout with `[MemoryPackable(SerializeLayout.Explicit)]` and `[MemoryPackOrder()]`. ```csharp // serialize Prop0 -> Prop1 [MemoryPackable(SerializeLayout.Explicit)] public partial class SampleExplicitOrder { [MemoryPackOrder(1)] public int Prop1 { get; set; } [MemoryPackOrder(0)] public int Prop0 { get; set; } } ``` ### Constructor selection MemoryPack supports both parameterized and parameterless constructors. The selection of the constructor follows these rules. (Applies to classes and structs). * If there is `[MemoryPackConstructor]`, use it. * If there is no explicit constructor (including private), use a parameterless one. * If there is one parameterless/parameterized constructor (including private), use it. * If there are multiple constructors, then the `[MemoryPackConstructor]` attribute must be applied to the desired constructor (the generator will not automatically choose one), otherwise the generator will emit an error. * If using a parameterized constructor, all parameter names must match corresponding member names (case-insensitive). ```csharp [MemoryPackable] public partial class Person { public readonly int Age; public readonly string Name; // You can use a parameterized constructor - parameter names must match corresponding members name (case-insensitive) public Person(int age, string name) { this.Age = age; this.Name = name; } } // also supports record primary constructor [MemoryPackable] public partial record Person2(int Age, string Name); public partial class Person3 { public int Age { get; set; } public string Name { get; set; } public Person3() { } // If there are multiple constructors, then [MemoryPackConstructor] should be used [MemoryPackConstructor] public Person3(int age, string name) { this.Age = age; this.Name = name; } } ``` ### Serialization callbacks When serializing/deserializing, MemoryPack can invoke a before/after event using the `[MemoryPackOnSerializing]`, `[MemoryPackOnSerialized]`, `[MemoryPackOnDeserializing]`, `[MemoryPackOnDeserialized]` attributes. It can annotate both static and instance (non-static) methods, and public and private methods. ```csharp [MemoryPackable] public partial class MethodCallSample { // method call order is static -> instance [MemoryPackOnSerializing] public static void OnSerializing1() { Console.WriteLine(nameof(OnSerializing1)); } // also allows private method [MemoryPackOnSerializing] void OnSerializing2() { Console.WriteLine(nameof(OnSerializing2)); } // serializing -> /* serialize */ -> serialized [MemoryPackOnSerialized] static void OnSerialized1() { Conso... [TRUNCATED]","170, Code, Issues, Pull requests, Actions, Security, Insights, stale, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, dependencies, bug"
radzen-blazor,radzenhq/radzen-blazor,3247,"['C#', 'HTML', 'SCSS']","['blazor', 'asp-net-core', 'blazor-components', 'blazor-application', 'blazor-webassembly']","Radzen Blazor Components A set of 70+ free and open source native Blazor UI controls. [See Online Demos]( or [Read the Docs]( --- ## Why choose Radzen Blazor Components? ### :sparkles: Free Radzen Blazor Components are open source and free for commercial use. You can install them from [NuGet]( or build your own copy from source. Paid support is available as part of the [Radzen Professional subscription]( ### :computer: Native The components are implemented in C# and take full advantage of the Blazor framework. They do not depend on or wrap existing JavaScript frameworks or libraries. Blazor Server and Blazor WebAssembly are fully supported. ### :seedling: Growing We add new components and features on a regular basis. Short development cycle. We release as soon as new stuff is available. No more quarterly releases. ## Support exceeding your expectations ### :speech_balloon: Community Support Everybody is welcome to visit the [Radzen Community forum]( Join the growing community and participate in the discussions! ### :dart: Dedicated Support The Radzen team monitors the forum threads, but does not guarantee a response to every question. For guaranteed responses you may consider the dedicated support option. Dedicated support for the Radzen Blazor Components is available as part of the [Radzen Professional subscription]( Our flagship product [Radzen Blazor Studio]( provides tons of productivity features for Blazor developers: - An industry-leading WYSIWYG Blazor design time canvas - Scaffolding a complete CRUD applications from a database - Built-in security - authentication and authorization - Visual Studio Code and Professional support - Deployment to IIS and Azure - Dedicated support with 24 hour guaranteed response time ## Get started with Radzen Blazor Components ### 1. Install Radzen Blazor Components are distributed as a [Radzen.Blazor NuGet package]( You can add them to your project in one of the following ways - Install the package from command line by running `dotnet add package Radzen.Blazor` - Add the project from the Visual NuGet Package Manager - Manually edit the .csproj file and add a project reference ### 2. Import the namespace Open the `_Imports.razor` file of your Blazor application and add this line `@using Radzen.Blazor`. ### 3. Include a theme Radzen Blazor components come with five free themes: Material, Standard, Default, Dark, Software and Humanistic. To use a theme 1. Pick a theme. The [online demos]( allow you to preview the available options via the theme dropdown located in the header. The Material theme is currently selected by default. 1. Include the theme CSS file in your Blazor application. Open `Pages\_Layout.cshtml` (Blazor Server .NET 6), `Pages\_Host.cshtml` (Blazor Server .NET 7) or `wwwroot/index.html` (Blazor WebAssembly) and include a theme CSS file by adding this snippet ```html ``` To include a different theme (i.e. Standard) just change the name of the CSS file: ``` ``` ### 4. Include Radzen.Blazor.js Open `Pages\_Layout.cshtml` (Blazor Server .NET 6), `Pages\_Host.cshtml` (Blazor Server .NET 7) or `wwwroot/index.html` (Blazor WebAssembly) and include this snippet: ```html ``` ### 5. Use a component Use any Radzen Blazor component by typing its tag name in a Blazor page e.g. ```html ``` #### Data-binding a property ```razor @code { string text = ""Hi""; } ``` #### Handing events ```razor @code { void ButtonClicked() { } } ``` ## Run demos locally Use Radzen.Server.sln to open and run demos as Blazor server application or Radzen.WebAssembly.sln to open and run demos as Blazor WebAssembly application. Radzen.sln has reference to all projects including tests.","728, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, dependencies, bug"
MQTTnet,dotnet/MQTTnet,4236,"['C#', 'C', 'HTML']","['mqtt', 'mqtt-client', 'mqtt-broker', 'mqtt-server', 'netcore']","[]( []( []( []( []( # MQTTnet MQTTnet is a high performance .NET library for MQTT based communication. It provides a MQTT client and a MQTT server (broker) and supports the MQTT protocol up to version 5. It is compatible with mostly any supported .NET Framework version and CPU architecture. ## Features ### General * Async support * TLS support for client and server (but not UWP servers) * Extensible communication channels (e.g. In-Memory, TCP, TCP+TLS, WS) * Lightweight (only the low level implementation of MQTT, no overhead) * Performance optimized (processing ~150.000 messages / second)* * Uniform API across all supported versions of the MQTT protocol * Access to internal trace messages * Unit tested (~636 tests) * No external dependencies \* Tested on local machine (Intel i7 8700K) with MQTTnet client and server running in the same process using the TCP channel. The app for verification is part of this repository and stored in _/Tests/MQTTnet.TestApp.NetCore_. ### Client * Communication via TCP (+TLS) or WS (WebSocket) supported * Included core _LowLevelMqttClient_ with low level functionality * Also included _ManagedMqttClient_ which maintains the connection and subscriptions automatically. Also application messages are queued and re-scheduled for higher QoS levels automatically. * Rx support (via another project) * Compatible with Microsoft Azure IoT Hub ### Server (broker) * List of connected clients available * Supports connected clients with different protocol versions at the same time * Able to publish its own messages (no loopback client required) * Able to receive every message (no loopback client required) * Extensible client credential validation * Retained messages are supported including persisting via interface methods (own implementation required) * WebSockets supported (via ASP.NET Core 2.0, separate nuget) * A custom message interceptor can be added which allows transforming or extending every received application message * Validate subscriptions and deny subscribing of certain topics depending on requesting clients ## Getting Started MQTTnet is delivered via NuGet package manager. You can find the packages here: Use these command in the Package Manager console to install MQTTnet manually: ``` Install-Package MQTTnet ``` Samples for using MQTTnet are part of this repository. For starters these samples are recommended: - [Connect with a broker]( - [Subscribing to data]( - [Publishing data]( - [Host own broker]( ## Code of Conduct This project has adopted the code of conduct defined by the Contributor Covenant to clarify expected behavior in our community. For more information see the [.NET Foundation Code of Conduct]( ## .NET Foundation This project is supported by the [.NET Foundation](","1k, Code, Issues, Pull requests, Discussions, Actions, Wiki, Security, Insights, bug, question, feature-request, managed-client, documentation, support, wontfix, waiting-for-reply, unclear, more-information-needed, invalid, hacktoberfest-accepted, duplicate, discussion, dependencies"
SeguraChain,SeguraChain/SeguraChain,5,"['C#', 'HTML', 'Batchfile']","['blockchain', 'blockchain-project', 'blockchain-projects-source-code', 'crypto', 'cryptocurrencies']","SeguraChain is not complete, do not use it in production, until a stable release is complete and available. If you like the project, please provide a Star Summary: SeguraChain (Secured Chain translated from Spanish) is a technology developed mainly in C#, it allows to easily create and understand a decentralized blockchain process, it can be configured to support a sovereign update system, allowing to include updates on it without editing the content of the Blockchain. Please follow this wikipage to setup your own blockchain: Planned for the hard fork of **Xenophyte** once completed. > Planned future website: Please read the whitepaper document, the document is not yet complete but most of important details are actually written. Once the whitepaper is complete, I will make the translation of this one into english. Everything has been developed in C#, and support NET5/NET6/NET7, a downgrade to NetFramework 4.8 is available too, you can then use **Monodevelop** Visual Studio 2022 is required. Libraries: > LZ4Net. (The most better ratio between compression/decompression) > Newtonsoft.Json. (JSON) > Open.NAT. **(Only available for NET4.8)** > Portable.BouncyCastle. **Replaced by OpenSSL soon to gain performances.** > ZXing.net (used by the Desktop wallet only, need a replacement later to erase this library). To do list: > Implement an option to convert the BTC Blockchain database and merge it into the Genesis Block data. [0%] > Whitepaper progress. [60%]: - English (100%) - French (100%) > **Complete wallets balance checkpoint disk cache process. [40%]** > **Complete Desktop Wallet features and options. [99%]** > **Develop the IO Cache Network mode. [5%]** > **Develop the RPC Wallet. [50%]** > **Develop an example of Mining Pool. [0%]** > **Finish optimizations. [60%]** > **Clean up the source code. [5%]** > **Include NET6/7 support. [100%]** > **Porting the Desktop Wallet to Telerik. [0%]** > **Complete the new packet system data , passing new random packet format by auth keys and unique id's [90%]**. Setup: A simple wiki page who explain how to setup your Blockchain: Desktop Wallet description page: Compilation Platform Target: Contact Discord: Every devs and potential users can send me their returns about the project, potential fix, issues and more. If you want to donate to the project: just to tracking them, if possible please put the note: Donation > BTC: 39mUsJFhjU6GDrchCkQ4iJsmdvD8S2jpzU | Explorer: > Curecoin: B6V6mSNRDFzmDgiPcQKYhBer6GgbM5XJeR | Explorer:","4, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
UnityCsReference,Unity-Technologies/UnityCsReference,11460,['C#'],[],"## Unity 6000.0.3f1 C# reference source code The C# part of the Unity engine and editor source code. May be used for reference purposes only. For terms of use, see The repository includes third-party code subject to [third-party notices](third-party-notices.txt). The terms of use do not permit you to modify or redistribute the C# code (in either source or binary form). If you want to modify Unity's source code (C# and C++), contact Unity sales for a commercial source code license: We do not take pull requests at this time (sorry). But if you find something that looks like a bug, we'd appreciate it if you'd file it using the Unity Bug Reporter. For more information, see our blog post: Unless expressly provided otherwise, the software under this license is made available strictly on an ""AS IS"" BASIS WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED. Please review the license for details on these and other terms and conditions. The C# solution is in Projects/CSharp/UnityReferenceSource.sln The folder and file layout of the reference source matches the Unity source tree layout; it can and will change between different Unity versions.","2.5k, Code, Pull requests, Actions, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, bug"
EventSourcing.NetCore,oskardudycz/EventSourcing.NetCore,3282,"['C#', 'Dockerfile']","['event-sourcing', 'cqrs', 'dotnet-core', 'example', 'netcore']","[]( []( []( []( # EventSourcing .NET Tutorial, practical samples and other resources about Event Sourcing in .NET. See also my similar repositories for [JVM]( and [NodeJS]( - [EventSourcing .NET](#eventsourcing-net) - [1. Event Sourcing](#1-event-sourcing) - [1.1 What is Event Sourcing?](#11-what-is-event-sourcing) - [1.2 What is Event?](#12-what-is-event) - [1.3 What is Stream?](#13-what-is-stream) - [1.4 Event representation](#14-event-representation) - [1.5 Event Storage](#15-event-storage) - [1.6 Retrieving the current state from events](#16-retrieving-the-current-state-from-events) - [1.7 Strongly-Typed ids with Marten](#17-strongly-typed-ids-with-marten) - [2. Videos](#2-videos) - [2.1. Practical Event Sourcing with Marten](#21-practical-event-sourcing-with-marten) - [2.2. Keep your streams short! Or how to model event-sourced systems efficiently](#22-keep-your-streams-short-or-how-to-model-event-sourced-systems-efficiently) - [2.3. Let's build event store in one hour!](#23-lets-build-event-store-in-one-hour) - [2.4. CQRS is Simpler than you think with C#11 \& NET7](#24-cqrs-is-simpler-than-you-think-with-c11--net7) - [2.5. Practical Introduction to Event Sourcing with EventStoreDB](#25-practical-introduction-to-event-sourcing-with-eventstoredb) - [2.6. How to deal with privacy and GDPR in Event-Sourced systems](#26-how-to-deal-with-privacy-and-gdpr-in-event-sourced-systems) - [2.7 Let's build the worst Event Sourcing system!](#27-lets-build-the-worst-event-sourcing-system) - [2.8 The Light and The Dark Side of the Event-Driven Design](#28-the-light-and-the-dark-side-of-the-event-driven-design) - [2.9 Implementing Distributed Processes](#29-implementing-distributed-processes) - [2.10 Conversation with Yves Lorphelin about CQRS](#210-conversation-with-yves-lorphelin-about-cqrs) - [2.11. Never Lose Data Again - Event Sourcing to the Rescue!](#211-never-lose-data-again---event-sourcing-to-the-rescue) - [3. Support](#3-support) - [4. Prerequisites](#4-prerequisites) - [5. Tools used](#5-tools-used) - [6. Samples](#6-samples) - [6.1 Pragmatic Event Sourcing With Marten](#61-pragmatic-event-sourcing-with-marten) - [6.2 ECommerce with Marten](#62-ecommerce-with-marten) - [6.3 Simple EventSourcing with EventStoreDB](#63-simple-eventsourcing-with-eventstoredb) - [6.4 Implementing Distributed Processes](#64-implementing-distributed-processes) - [6.5 ECommerce with EventStoreDB](#65-ecommerce-with-eventstoredb) - [6.6 Warehouse](#66-warehouse) - [6.7 Warehouse Minimal API](#67-warehouse-minimal-api) - [6.8 Event Versioning](#68-event-versioning) - [6.9 Event Pipelines](#69-event-pipelines) - [6.10 Meetings Management with Marten](#610-meetings-management-with-marten) - [6.11 Cinema Tickets Reservations with Marten](#611-cinema-tickets-reservations-with-marten) - [6.12 SmartHome IoT with Marten](#612-smarthome-iot-with-marten) - [7. Self-paced training Kits](#7-self-paced-training-kits) - [7.1 Introduction to Event Sourcing](#71-introduction-to-event-sourcing) - [7.2 Build your own Event Store](#72-build-your-own-event-store) - [8. Articles](#8-articles) - [9. Event Store - Marten](#9-event-store---marten) - [10. CQRS (Command Query Responsibility Separation)](#10-cqrs-command-query-responsibility-separation) - [11. NuGet packages to help you get started.](#11-nuget-packages-to-help-you-get-started) - [12. Other resources](#12-other-resources) - [12.1 Introduction](#121-introduction) - [12.2 Event Sourcing on production](#122-event-sourcing-on-production) - [12.3 Projections](#123-projections) - [12.4 Snapshots](#124-snapshots) - [12.5 Versioning](#125-versioning) - [12.6 Storage](#126-storage) - [12.7 Design \& Modeling](#127-design--modeling) - [12.8 GDPR](#128-gdpr) - [12.9 Conflict Detection](#129-conflict-detection) - [12.10 Functional programming](#1210-functional-programming) - [12.12 Testing](#1212-testing) - [12.13 CQRS](#1213-cqrs) - [12.14 Tools](#1214-tools) - [12.15 Event processing](#1215-event-processing) - [12.16 Distributed processes](#1216-distributed-processes) - [12.17 Domain Driven Design](#1217-domain-driven-design) - [12.18 Whitepapers](#1218-whitepapers) - [12.19 Event Sourcing Concerns](#1219-event-sourcing-concerns) - [12.20 This is NOT Event Sourcing (but Event Streaming)](#1220-this-is-not-event-sourcing-but-event-streaming) - [12.21 Architecture Weekly](#1221-architecture-weekly) - [License](#license) ## 1. Event Sourcing ### 1.1 What is Event Sourcing? Event Sourcing is a design pattern in which results of business operations are stored as a series of events. It is an alternative way to persist data. In contrast with state-oriented persistence that only keeps the latest version of the entity state, Event Sourcing stores each state change as a separate event. Thanks to that, no business data is lost. Each operation results in the event stored in the database. That enables extended auditing and diagnostics capabilities (both technically and business-wise). What's more, as events contains the business context, it allows wide business analysis and reporting. In this repository I'm showing different aspects and patterns around Event Sourcing from the basic to advanced practices. Read more in my articles: - [How using events helps in a teams' autonomy]( - [When not to use Event Sourcing?]( ### 1.2 What is Event? Events represent facts in the past. They carry information about something accomplished. It should be named in the past tense, e.g. _""user added""_, _""order confirmed""_. Events are not directed to a specific recipient - they're broadcasted information. It's like telling a story at a party. We hope that someone listens to us, but we may quickly realise that no one is paying attention. Events: - are immutable: _""What has been seen, cannot be unseen""_. - can be ignored but cannot be retracted (as you cannot change the past). - can be interpreted differently. The basketball match result is a fact. Winning team fans will interpret it positively. Losing team fans - not so much. Read more in my articles: - [What's the difference between a command and an event?]( - [Events should be as small as possible, right?]( - [Anti-patterns in event modelling - Property Sourcing]( - [Anti-patterns in event modelling - State Obsession]( ### 1.3 What is Stream? Events are logically grouped into streams. In Event Sourcing, streams are the representation of the entities. All the entity state mutations end up as the persisted events. Entity state is retrieved by reading all the stream events and applying them one by one in the order of appearance. A stream should have a unique identifier representing the specific object. Each event has its own unique position within a stream. This position is usually represented by a numeric, incremental value. This number can be used to define the order of the events while retrieving the state. It can also be used to detect concurrency issues. ### 1.4 Event representation Technically events are messages. They may be represented, e.g. in JSON, Binary, XML format. Besides the data, they usually contain: - **id**: unique event identifier. - **type**: name of the event, e.g. _""invoice issued""_. - **stream id**: object id for which event was registered (e.g. invoice id). - **stream position** (also named _version_, _order of occurrence_, etc.): the number used to decide the order of the event's occurrence for the specific object (stream). - **timestamp**: representing a time at which the event happened. - other metadata like `correlation id`, `causation id`, etc. Sample event JSON can look like: ```json { ""id"": ""e44f813c-1a2f-4747-aed5-086805c6450e"", ""type"": ""invoice-issued"", ""streamId"": ""INV/2021/11/01"", ""streamPosition"": 1, ""timestamp"": ""2021-11-01T00:05:32.000Z"", ""data"": { ""issuedTo"": { ""name"": ""Oscar the Grouch"", ""address"": ""123 Sesame Street"" }, ""amount"": 34.12, ""number"": ""INV/2021/11/01"", ""issuedAt"": ""2021-11-01T00:05:32.000Z"" }, ""metadata"": { ""correlationId"": ""1fecc92e-3197-4191-b929-bd306e1110a4"", ""causationId"": ""c3cf07e8-9f2f-4c2d-a8e9-f8a612b4a7f1"" } } ``` Read more in my articles: - [Mapping event type by convention]( - [Explicit events serialisation in Event Sourcing]( ### 1.5 Event Storage Event Sourcing is not related to any type of storage implementation. As long as it fulfills the assumptions, it can be implemented having any backing database (relational, document, etc.). The state has to be represented by the append-only log of events. The events are stored in chronological order, and new events are appended to the previous event. Event Stores are the databases' category explicitly designed for such purpose. Read more in my articles: - [Let's build event store in one hour!]( - [What if I told you that Relational Databases are in fact Event Stores?]( ### 1.6 Retrieving the current state from events In Event Sourcing, the state is stored in events. Events are logically grouped into streams. Streams can be thought of as the entities' representation. Traditionally (e.g. in relational or document approach), each entity is stored as a separate record. | Id | IssuerName | IssuerAddress | Amount | Number | IssuedAt | | -------- | ---------------- | ----------------- | ------ | -------------- | ---------- | | e44f813c | Oscar the Grouch | 123 Sesame Street | 34.12 | INV/2021/11/01 | 2021-11-01 | In Event Sourcing, the entity is stored as the series of events that happened for this specific object, e.g. `InvoiceInitiated`, `InvoiceIssued`, `InvoiceSent`. ```json [ { ""id"": ""e44f813c-1a2f-4747-aed5-086805c6450e"", ""type"": ""invoice-initiated"", ""streamId"": ""INV/2021/11/01"", ""streamPosition"": 1, ""timestamp"": ""2021-11-01T00:05:32.000Z"", ""data"": { ""issuer"": { ""name"": ""Oscar the Grouch"", ""address"": ""123 Sesame Street"", }, ""amount"": 34.12, ""number"": ""INV/2021/11/01"", ""initiatedAt"": ""2021-11-01T00:05:32.000Z"" } }, { ""id"": ""5421d67d-d0fe-4c4c-b232-ff284810fb59"", ""type"": ""invoice-issued"", ""streamId"": ""INV/2021/11/01"", ""streamPosition"": 2, ""timestamp"": ""2021-11-01T00:11:32.000Z"", ""data... [TRUNCATED]","502, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, enhancement, workshop, subscriptions, samples, good first issue, future idea, EventStoreDB, wontfix, versioning, tracing, tests, refactoring, question, projections, packages update, optimistic concurrency, invalid, help wanted, generic, equinox, duplicate, dotnet update, dependencies, cleanup, bug, aspire, aggregates, Outbox Pattern, Open Telemetry, Marten"
dlss-swapper,beeradmoore/dlss-swapper,1514,"['C#', 'NSIS', 'Batchfile']",[],"# DLSS Swapper DLSS Swapper is a tool that allows you to conveniently download, manage, and swap DLSS dlls allowing you to upgrade or downgrade DLSS version in a game without the game needing an update. ## Why would you want to change the DLSS dlls in your game? See [this]( clip, or better yet just watch the entire video ([Lego Builder's Journey Ray Tracing Showcase + DLSS 2.2 Upgrades Analysis]( from Digital Foundry. DLSS 2.2 discussions start at 11:40. ## Please note This tool does **NOT** allow you to add DLSS to games that don't support it. This tool does **NOT** guarantee that swapping DLSS dlls will: - Improve DLSS performance. - Reduce DLSS artifacts. - Give a crash free experience. In many cases you may fix some issues, in other cases you may prevent a game from launching (until you restore your original dll, provided in the tool). Happy experimenting. As my university professor once said, > The good thing about computer [science] is we will never die wondering 'What if...?' Please, come and share your DLSS experience over in [r/DLSS_Swapper]( ## How do I get it? You can get the latest builds from our [GitHub releases]( page. ## It would be cool if DLSS Swapper could... Create a [feature request]( ## How can I contribute? More info on this soon. ## Minimum System Requirements Windows 10 64-bit (20H1, build 19041), While a nVidia GPU is not a requirement to run DLSS Swapper, it is a requirement to use DLSS.","57, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, feature request, bug, platform request, help wanted, good first issue, documentation, wontfix, question, invalid, duplicate"
server,bitwarden/server,14487,"['C#', 'TSQL', 'Handlebars']","['aspnetcore', 'aspnet', 'sql-server', 'api', 'sql']","--- The Bitwarden Server project contains the APIs, database, and other core infrastructure items needed for the ""backend"" of all bitwarden client applications. The server project is written in C# using .NET Core with ASP.NET Core. The database is written in T-SQL/SQL Server. The codebase can be developed, built, run, and deployed cross-platform on Windows, macOS, and Linux distributions. ## Developer Documentation Please refer to the [Server Setup Guide]( in the [Contributing Documentation]( for build instructions, recommended tooling, code style tips, and lots of other great information to get you started. ## Deploy You can deploy Bitwarden using Docker containers on Windows, macOS, and Linux distributions. Use the provided PowerShell and Bash scripts to get started quickly. Find all of the Bitwarden images on [Docker Hub]( Full documentation for deploying Bitwarden with Docker can be found in our help center at: ### Requirements - [Docker]( - [Docker Compose]( (already included with some Docker installations) _These dependencies are free to use._ ### Linux & macOS ``` curl -s -L -o bitwarden.sh \ "" \ && chmod +x bitwarden.sh ./bitwarden.sh install ./bitwarden.sh start ``` ### Windows ``` Invoke-RestMethod -OutFile bitwarden.ps1 ` -Uri "" .\bitwarden.ps1 -install .\bitwarden.ps1 -start ``` ## We're Hiring! Interested in contributing in a big way? Consider joining our team! We're hiring for many positions. Please take a look at our [Careers page]( to see what opportunities are currently open as well as what it's like to work at Bitwarden. ## Contribute Code contributions are welcome! Please commit any pull requests against the `main` branch. Learn more about how to contribute by reading the [Contributing Guidelines]( Check out the [Contributing Documentation]( for how to get started with your first contribution. Security audits and feedback are welcome. Please open an issue or email us privately if the report is sensitive in nature. You can read our security policy in the [`SECURITY.md`](SECURITY.md) file. We also run a program on [HackerOne]( No grant of any rights in the trademarks, service marks, or logos of Bitwarden is made (except as may be necessary to comply with the notice requirements as applicable), and use of any Bitwarden trademarks must comply with [Bitwarden Trademark Guidelines]( ### Dotnet-format Consider installing our git pre-commit hook for automatic formatting. ```bash git config --local core.hooksPath .git-hooks ```","1.2k, Code, Issues, Pull requests, Actions, Security, Insights, bug, bw-unified-deploy, community-pr, needs-qa, enhancement, help wanted, good first issue, feature-flag, wontfix, version update, upstream, stale, question, needs-reply, invalid, intended-behavior, hold, feature-request, ee, duplicate, devops, customer-support, automated pr, DB-migrations-changed"
Mirror,MirrorNetworking/Mirror,4909,"['C#', 'JavaScript', 'ShaderLab']","['unity', 'unet', 'hlapi', 'networking', 'udp']","**It's only the dreamers who ever move mountains.** ## Mirror Networking The **#1** free **open source** game networking library for **Unity 2019 / 2020 / 2021 / 2022 LTS**. Used **in production** by major hits like [**Population: ONE**]( and many [**more**](#made-with-mirror). Originally based on [**UNET**]( battle tested **since 2014** for 9 years and counting! Mirror is **[stable]( [**modular**](#low-level-transports) & **[easy to use]( for all types of games, even small [**MMORPGs**](#made-with-mirror) . **Made in with **. --- ## Features Mirror comes with a wide variety of features to support all game genres. Many of our features quickly became the norm across all Unity netcodes! | Feature | Description | Status | |-------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------| | **Transports** | UDP, TCP, Websockets, Steam, Relay and more. | **Stable** | | **Interest Management** | Spatial Hashing & Distance Checker to partition the world. | **Stable** | | **SyncDirection** | Server & Client Authority - per component with one click. | **Stable** | | **Latency Simulation** | Simulate latency, packet loss & jitter locally. | **Stable** | | **Batching** | Minimize message overhead via batching automatically. | **Stable** | | **RPCs & SyncVars** | Synced vars and remote function calls built in & safe. | **Stable** | | **Allocation Free** | Free of runtime allocations and no GC (except Transports). | **Stable** | | **Transform & Physics** | Transform & Physics sync built in. | **Stable** | | **Child Components** | Put networked components on anything. | **Stable** | | **IL Post Processing** | Zero overhead [Rpcs] and [Commands] via IL post processing! | **Stable** | | **Two Click Hosting** | (Optional) Build & Push directly from Unity Editor to the Cloud. | **Preview** | | | | | | **Snapshot Interp.** | Perfectly smooth movement for all platforms and all games. | **Stable** | | **Fast Prediction** | Simulate Physics locally & apply server corrections **[VR ready]** | **Beta** | | **Lag Compensation** | Roll back state to see what the player saw during input. | **Beta** | | | | | | **General Purpose** | Mirror supports all genres for all your games! | | | **Stable API** | Long term (10 years) stability instead of new versions! | | **Battle Tested** | Mirror servers over 100 million players. It just works! | | | **Free & Open Source** | MIT licensed without any restrictions to minimize risk! | | | **Community** | Join our Discord with nearly 15.000 developers world wide! | | | **Long Term Support** | Maintained since 2014 with optional LTS version! | | | | | | | **Encryption** | Secure communication with end-to-end encryption. | **Preview** | | **Bitpacking** | Optimized compression (bools as 1 bit etc.) | **Researching** | --- ## Architecture The **Server & Client** are **ONE project** in order to achieve maximum productivity. Simply use **NetworkBehaviour** instead of **MonoBehaviour**. Making multiplayer games this way is fun & easy: ```cs public class Player : NetworkBehaviour { // Synced automatically [SyncVar] public int health = 100; // Lists, Dictionaries, Sets too SyncList inventory = new SyncList(); // Server/Client-only code [Server] void LevelUp() {} [Client] void Animate() {} void Update() { // isServer/isClient for runtime checks if (isServer) Heal(); if (isClient) Move(); } // Zero overhead remote calls [Command] void CmdUseItem(int slot) {} // Client to Server [ClientRpc] void RpcRespawn() {} // Server to all Clients [TargetRpc] void Hello() {} // Server to one Client } ``` There's also **NetworkServer** & **NetworkClient**. And that's about it --- ## Free, Open Source & Community Focused **Mirror** is **free & open source** (MIT Licensed). ""**Free**"" as in free beer, and freedom to use it any way you like. - Host Game [Servers]( anywhere! - Customize anything freely! - No paywalls, no CCU costs, no strings attached! We are a team of **professional** game developers, who are paid to **use Mirror in production**. Our incentives will always align with the community, because we are Mirror users just like you! Our [**fantastic community**]( of over **14,000** users contributes feedback & improvements every day. Please join us on our journey, help others, and consider a [**Donation**]( if you love our work! _The top quote is from Fitzcarraldo, which is quite reminiscent of this project._ --- ## Getting Started Get **Unity 2019 / 2020 / 2021 / 2022 LTS**, [Download Mirror]( open one of the examples & press Play! Check out our [Documentation]( to learn how it all works. If you are migrating from UNET, then please check out our [Migration Guide]( --- ## Mirror LTS (Long Term Support) Mirror LTS is available on the [Asset Store]( Mirror LTS gives you peace of mind to run your game in production. Without any breaking changes, ever! * **Bug fixes** only. * **Consistent API**: update any time, without any breaking features. * Lives along side **Unity 2019/2020/2021** LTS. * Supported for two years at a time. --- ## Made with Mirror ### [Population: ONE]( []( The [BigBoxVR]( team started using Mirror in February 2019 for what eventually became one of the most popular Oculus Rift games. In addition to [24/7 support]( from the Mirror team, BigBoxVR also hired one of our engineers. **Population: ONE** was [acquired by Meta]( in June 2021, and they've just released a new [Sandbox]( addon in 2022! ### [Zooba]( []( [Wildlife Studio's]( hit Zooba made it to rank #5 of the largest battle royal shooters in the U.S. mobile market. The game has over **100 million** downloads on [Google Play]( with Wildlife Studios as one of the top 10 largest mobile gaming companies in the world. ### [Swarm VR]( []( SPIDER-MAN WITH GUNS! SWARM is a fast-paced, arcade-style grapple shooter, with quick sessions, bright colorful worlds and globally competitive leaderboards that will take you back to the glory days of Arcade Games. Available for the [Meta Quest]( made with Mirror. ### [Castaways]( []( [Castaways]( is a sandbox game where you are castaway to a small remote island where you must work with others to survive and build a thriving new civilization. Castaway runs in the Browser, thanks to Mirror's WebGL support. ### [Nimoyd]( []( Nudge Nudge Games' first title: the colorful, post-apocalyptic open world sandbox game [Nimoyd]( is being developed with Mirror. _Soon to be released for PC & mobile!_ ### [Unleashed]( []( From original devs of **World of Warcraft**, **Kingdoms of Amalur**, and **EverQuest** comes a new family friendly fantasy adventure. Fight against the forces of darkness, explore a world consumed by wild magic, and build a stronghold with your friends to increase your power in a new world. _Lead by industry veterans Brian Birmingham & Irena Pereira, Unleashed is developing their next gen adventure game made with Mirror!_ Follow them on X: ### [Dinkum]( []( Set in the Australian Outback, Dinkum is a relaxing farming & survival game. Made by just one developer, Dinkum already reached 1000+ ""Overwhelmingly Positive"" reviews 1 week after its early access release. James Bendon initially made the game with UNET, and then [switched to Mirror]( in 2019. ### [A Glimpse of Luna]( []( [A Glimpse of Luna]( - a tactical multiplayer card battle game with the most beautiful concept art & soundtrack. Made with Mirror by two brothers with [no prior game development]( experience. ### [Havoc]( Havoc is a tactical team-based first-person shooter with a fully destructible environment and a unique art style. Havoc has been one of our favorite made-with-Mirror games for a few years now, and we are excited to finally see it up there on Steam. ### [Sun Haven]( []( [Sun Haven]( - A beautiful human town, a hidden elven village, and a monster city filled with farming, magic, dragons, and adventure. After their successful [Kickstarter]( Sun Haven was released on Steam in 2021 and later on ported to Mirror in 2022. ### [A Township Tale]( []( A Township Tale is an immersive VR experience, where you can build towns and explore worlds with your friends. Made with our KCP transport, available on the [Meta Quest Store]( with over 6000+ ratings. ### [Inferna]( []( One of the first MMORPGs made with Mirror, released in 2019. An open world experience with over 1000 CCU during its peak, spread across multiple server instances. ### [Samutale]( []( A sandbox survival samurai MMORPG, originally released in September 2016. Later on, the Netherlands based Maple Media switched their netcode to Mirror. ### [Another Dungeon]( Pixel Art Dungeon MMORPG reaching 5000 CCU at peak times. Originally developed as a single-player idle game, it underwent a transition to an MMORPG three months before release thanks to Mirror! ### [Untamed Isles]( []( The turn based, monster taming **MMORPG** [Untamed Isles]( is currently being developed by [Phat Loot Studios]( After their successful [Kickstarter]( the New Zealand based studio is aiming for a 2022 release date. ### [Portals]( []( Animal Crossing meets Yakuza meets Minecraft a city builder with a multiplayer central hub. Gather, trade and build all in the browser! ### [SCP: Secret Laboratory]( []( [Northwood Studios']( first title: the multiplayer horror game SCP: Secret Laboratory was one of Mirror's early adopters. Released in December 2017, today it has more than **140,000** reviews on [Steam]( ### [Naca Online]( []( [Naca]( is a beautiful, free to play 2D pixel art MMORPG. The [France based team]( was one of Mirror's early adopters, releasing their first public beta in November 2020. ### [Laurum Online]( []( [Laurum Online]( - a 2D retro mobile MMORPG with over 500,000 downloads on Google Play. ### [Empires Mobile]( []( [Empires Mobile]( - Retro mobile MMORPG for Android and iOS, reaching 5000 CCU at times. Check out their [video]( for some _early MMORPG_ nostalgia. ### [Overp... [TRUNCATED]","745, Code, Issues, Pull requests, Actions, Security, Insights, bug, enhancement, work in progress, Weaver, Needs Research, security, question, can't reproduce, UnityBug, Awaiting Review, wontfix, Needs Unit Test, 2023, websockets, semantic-release, released, regression, pull request, priority, invalid, help wanted, good first issue, duplicate, can't fix, IL2CPP, Conflicts, Breaking Change, 2021, 2020"
RobustToolbox,space-wizards/RobustToolbox,485,"['C#', 'Fluent', 'Python']","['space-station-13', 'game', 'c-sharp', 'ss13']","Robust Toolbox is an engine primarily being developed for [Space Station 14]( although we're working on making it usable for both [singleplayer]( and [multiplayer]( projects. Use the [content repo]( for actual development, even if you're modifying the engine itself. ## Project Links [Website]( | [Discord]( | [Forum]( | [Steam]( | [Standalone Download]( ## Documentation/Wiki The [wiki]( has documentation on SS14s content, engine, game design and more. We also have lots of resources for new contributors to the project. ## Contributing We are happy to accept contributions from anybody. Get in Discord or IRC if you want to help. We've got a [list of issues]( that need to be done and anybody can pick them up. Don't be afraid to ask for help either! ## Building This repository is the **engine** part of SS14. It's the base engine all SS14 servers will be built on. As such, it does not start on its own: it needs the [content repo]( Think of Robust Toolbox as BYOND in the context of Space Station 13. ## Legal Info See [legal.md]( for licenses and copyright.","368, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, Issue: Feature, Issue: Bug, Difficulty: 2-Medium, Priority: 2-Important, Issue: Needs Cleanup, Issue: Performance, Difficulty: 3-Hard, Priority: 3-Not Required, Priority: 2-Before Release, Difficulty: 1-Easy, Priority: 1-Urgent, Area: Physics, Area: Serialization, Area: UI, Issue: Needs Refactor, Area: Networking, Area: ECS, Area: Rendering, Difficulty: 4-Irrational, Status: Needs Discussion, Size: Very Large, Area: Audio, Area: Tooling, Toolshed, Size: Very Small, Holy Shit, Bug: Replicated, Platform: Linux, Status: Awaiting Changes, Platform: Windows"
ClosedXML,ClosedXML/ClosedXML,4467,"['C#', 'Python', 'Shell']","['closedxml', 'openxml', 'excel', 'xlsx', 'xlsm']","[]( []( [](#) [](#) []( []( [ Download unstable CI build]( ClosedXML is a .NET library for reading, manipulating and writing Excel 2007+ (.xlsx, .xlsm) files. It aims to provide an intuitive and user-friendly interface to dealing with the underlying [OpenXML]( API. For more information see [the documentation]( or [the wiki]( ### Release notes & migration guide The public API is still not stable and it is a very good idea to **read release notes** and **migration guide** before each update. * [Release notes for 0.100]( * [Migration guide for 0.100]( * [Release notes for 0.97]( ### Performance Performance matters mostly for large files. For small files, few ms here or there doesn't matter. The presented data are from generally develop branch (currently [0.103-beta]( Runtime details ``` BenchmarkDotNet v0.13.8, Windows 11 (10.0.22621.2283/22H2/2022Update/SunValley2) AMD Ryzen 5 5500U with Radeon Graphics, 1 CPU, 12 logical and 6 physical cores .NET SDK 8.0.100-rc.1.23463.5 [Host] : .NET 7.0.11 (7.0.1123.42427), X64 RyuJIT AVX2 ``` #### Save | Description | Rows | Columns | Time/Memory to insert data | Save workbook | Total time/memory | |------------------------------|-----------|------------------------|----------------------------|------------------------------|---| | Mixed (text/number) workbook.[Gist]( | 250 000 | 15 | 1.619 sec / 117 MiB | 6.343 sec | 7.962 sec / 477 MiB | | Text only workbook. [Gist]( | 1 000 000 | 10 | 6.302 sec / 402 MiB | 17.134 sec | 23.436 sec / 1880 MiB | #### Load | Description | Rows | Columns | Time to load data | Used memory | |--------------------------------------------------------------------|-----------|---------|-------------------|-------------| | Load mixed workbook (10 text/5 number columns). | 250 000 | 15 | 15.648 sec | 236 MiB | | Text only workbook. | 1 000 000 | 10 | 49.046 sec | 801 MiB | Load tests used files created during save test. ### Frequent answers - If you get an exception `Unable to find font font name or fallback font fallback font name. Install missing fonts or specify a different fallback font through LoadOptions.DefaultGraphicEngine = new DefaultGraphicEngine(Fallback font name)`, see help page about [missing fonts]( - ClosedXML is not thread-safe. There is no guarantee that [parallel operations]( will work. The underlying OpenXML library is also not thread-safe. - If you get an exception `The type initializer for 'Gdip' threw an exception.` on Linux, you have to upgrade to 0.97+. ### Install ClosedXML via NuGet If you want to include ClosedXML in your project, you can [install it directly from NuGet]( To install ClosedXML, run the following command in the Package Manager Console ``` PM> Install-Package ClosedXML ``` ### What can you do with this? ClosedXML allows you to create Excel files without the Excel application. The typical example is creating Excel reports on a web server. **Example:** ```c# using (var workbook = new XLWorkbook()) { var worksheet = workbook.Worksheets.Add(""Sample Sheet""); worksheet.Cell(""A1"").Value = ""Hello World!""; worksheet.Cell(""A2"").FormulaA1 = ""=MID(A1, 7, 5)""; workbook.SaveAs(""HelloWorld.xlsx""); } ``` ### Extensions Be sure to check out our `ClosedXML` extension projects - - - - ## Developer guidelines The [OpenXML specification]( is a large and complicated beast. In order for ClosedXML, the wrapper around OpenXML, to support all the features, we rely on community contributions. Before opening an issue to request a new feature, we'd like to urge you to try to implement it yourself and log a pull request. Please read the [full developer guidelines](CONTRIBUTING.md). ## Credits * Project originally created by Manuel de Leon * Current maintainer: [Jan Havlek]( * Former maintainer and lead developer: [Francois Botha]( * Master of Computing Patterns: [Aleksei Pankratev]( * Logo design by [@Tobaloidee](","805, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, enhancement, bug, RTFM, triaged, Parked, feature:pivot-table, documentation, area:load/save, Hacktoberfest, waiting-author-response, question, help wanted, feature:calc-engine, Sample file required, performance, invalid, formula, feature:formulas, Up for grabs, .Report, wontfix, wiki, good first issue, feature-request, feature:style, feature:structural-change, feature:names, feature:data-validation, feature:controls, dependencies"
PowerShell,PowerShell/PowerShell,43619,"['C#', 'PowerShell', 'Roff']","['powershell', 'windows', 'macos', 'linux', 'command-line']","# ![logo][] PowerShell Welcome to the PowerShell GitHub Community! [PowerShell]( is a cross-platform (Windows, Linux, and macOS) automation and configuration tool/framework that works well with your existing tools and is optimized for dealing with structured data (e.g. JSON, CSV, XML, etc.), REST APIs, and object models. It includes a command-line shell, an associated scripting language, and a framework for processing cmdlets. [logo]: ## Windows PowerShell vs. PowerShell 7+ Although this repository started as a fork of the Windows PowerShell codebase, changes made in this repository are not ported back to Windows PowerShell 5.1. This also means that [issues tracked here][issues] are only for PowerShell 7.x and higher. Windows PowerShell specific issues should be reported with the [Feedback Hub app][feedback-hub], by choosing ""Apps > PowerShell"" in the category. [issues]: [feedback-hub]: ## New to PowerShell? If you are new to PowerShell and want to learn more, we recommend reviewing the [getting started][] documentation. [getting started]: ## Get PowerShell PowerShell is supported on Windows, macOS, and a variety of Linux platforms. For more information, see [Installing PowerShell]( ## Upgrading PowerShell For best results when upgrading, you should use the same install method you used when you first installed PowerShell. The update method is different for each platform and install method. ## Community Dashboard [Dashboard]( with visualizations for community contributions and project status using PowerShell, Azure, and PowerBI. For more information on how and why we built this dashboard, check out this [blog post]( ## Discussions [GitHub Discussions]( is a feature to enable free and open discussions within the community for topics that are not related to code, unlike issues. This is an experiment we are trying in our repositories, to see if it helps move discussions out of issues so that issues remain actionable by the team or members of the community. There should be no expectation that PowerShell team members are regular participants in these discussions. Individual PowerShell team members may choose to participate in discussions, but the expectation is that community members help drive discussions so that team members can focus on issues. Create or join a [discussion]( ## Chat Want to chat with other members of the PowerShell community? There are dozens of topic-specific channels on our community-driven PowerShell Virtual User Group, which you can join on: * [Gitter]( * [Discord]( * [IRC]( on Libera.Chat * [Slack]( ## Building the Repository | Linux | Windows | macOS | |--------------------------|----------------------------|------------------------| | [Instructions][bd-linux] | [Instructions][bd-windows] | [Instructions][bd-macOS] | If you have any problems building, consult the developer [FAQ][]. ### Build status of nightly builds | Azure CI (Windows) | Azure CI (Linux) | Azure CI (macOS) | CodeFactor Grade | |:-----------------------------------------|:-----------------------------------------------|:-----------------------------------------------|:-------------------------| | [![windows-nightly-image][]][windows-nightly-site] | [![linux-nightly-image][]][linux-nightly-site] | [![macOS-nightly-image][]][macos-nightly-site] | [![cf-image][]][cf-site] | [bd-linux]: [bd-windows]: [bd-macOS]: [FAQ]: [windows-nightly-site]: [linux-nightly-site]: [macos-nightly-site]: [windows-nightly-image]: [linux-nightly-image]: [macOS-nightly-image]: [cf-site]: [cf-image]: ## Downloading the Source Code You can clone the repository: ```sh git clone ``` For more information, see [working with the PowerShell repository]( ## Developing and Contributing Please look into the [Contribution Guide][] to know how to develop and contribute. If you are developing .NET Core C# applications targeting PowerShell Core, [check out our FAQ][] to learn more about the PowerShell SDK NuGet package. Also, make sure to check out our [PowerShell-RFC repository]( for request-for-comments (RFC) documents to submit and give comments on proposed and future designs. [Contribution Guide]: [check out our FAQ]: ## Support For support, see the [Support Section][]. [Support Section]: ## Legal and Licensing PowerShell is licensed under the [MIT license][]. [MIT license]: ### Windows Docker Files and Images License: By requesting and using the Container OS Image for Windows containers, you acknowledge, understand, and consent to the Supplemental License Terms available on [Microsoft Artifact Registry][mcr]. [mcr]: ### Telemetry Please visit our [about_Telemetry]( topic to read details about telemetry gathered by PowerShell. ## Governance The governance policy for the PowerShell project is described the [PowerShell Governance][gov] document. [gov]: ## [Code of Conduct][conduct-md] This project has adopted the [Microsoft Open Source Code of Conduct][conduct-code]. For more information, see the [Code of Conduct FAQ][conduct-FAQ] or contact [opencode@microsoft.com][conduct-email] with any additional questions or comments. [conduct-code]: [conduct-FAQ]: [conduct-email]: mailto:opencode@microsoft.com [conduct-md]:","7.1k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, Needs-Triage, Issue-Enhancement, WG-Engine, Review - Needed, WG-NeedsReview, Issue-Bug, KeepOpen, WG-Cmdlets, WG-Cmdlets-Utility, Up-for-Grabs, In-PR, Extra Small, WG-Language, Issue-Question, WG-Cmdlets-Management, WG-Reviewed, WG-Cmdlets-Core, Issue-Discussion, Area-Maintainers-Build, CL-General, WG-Interactive-Console, Area-FileSystem-Provider, WG-Engine-Providers, Issue-Meta, Distribution-Request, PowerShell-Docs not needed, PowerShell-Docs needed, Committee-Reviewed, Medium, WG-Security"
ReportGenerator,danielpalme/ReportGenerator,2476,"['C#', 'CSS', 'TypeScript']","['code-coverage', 'testing', 'tdd-utilities', 'reporting', 'dotnet-core']","ReportGenerator Powerful code coverage visualization []( []( *ReportGenerator* converts coverage reports generated by coverlet, OpenCover, dotCover, Visual Studio, NCover, Cobertura, JaCoCo, Clover, gcov, or lcov into human readable reports in various formats. The reports show the coverage quotas and also visualize which lines of your source code have been covered. ReportGenerator supports merging several coverage files into a single report. [Browse example HTML report]( ## License - ReportGenerator is licensed under the [Apache License, Version 2.0]( - You can support the project by becoming a sponsor. Sponsors have exclusive access to [additional features]( ## Getting started *ReportGenerator* is a commandline tool which works with full .NET Framework and .NET Core. Use the online [configuration tool]( to get started quickly. ### Install the package matching your platform and needs |**Package**|**Platforms**|**Installation/Usage**| |:----------|:------------|:---------------------| |[ReportGenerator]( Core >=6.0.NET Framework 4.7|Use this package if your project is based on *.NET Framework* or *.NET Core* and you want to use *ReportGenerator* via the command line or a build script.**Usage**```dotnet $(UserProfile).nuget\packages\reportgenerator\x.y.z\tools\net8.0\ReportGenerator.dll [options]``````$(UserProfile).nuget\packages\reportgenerator\x.y.z\tools\net8.0\ReportGenerator.exe [options]``````$(UserProfile)\.nuget\packages\reportgenerator\x.y.z\tools\net47\ReportGenerator.exe [options]```| |[dotnet-reportgenerator-globaltool]( Core >=6.0 |Use this package if your project is based on *.NET Core* and you want to use *ReportGenerator* as a (global) 'DotnetTool'.**Installation**```dotnet tool install -g dotnet-reportgenerator-globaltool``````dotnet tool install dotnet-reportgenerator-globaltool --tool-path tools``````dotnet new tool-manifest``````dotnet tool install dotnet-reportgenerator-globaltool```**Usage**```reportgenerator [options]``````tools\reportgenerator.exe [options]``````dotnet reportgenerator [options]```| |[ReportGenerator.Core]( Standard 2.0|Use this package if you want to write a custom **plugin** for *ReportGenerator* or if you want to call/execute *ReportGenerator* within your code base.**Plugin development**[Custom reports]( history storage]( |[Azure DevOps extension]( Core >=6.0| Add the Azure DevOps extension to your build pipeline.[Learn more]( |[GitHub Actions]( Core >=6.0| Add the GitHub Action to your build pipeline.[Learn more]( ### Usage / Command line parameters Use the online [configuration tool]( to get started quickly. The more advanced settings are documented in the [wiki]( ``` Parameters: [""]-reports:[;][;][""] [""]-targetdir:[""] [[""]-reporttypes:[;][""]] [[""]-sourcedirs:[;][;][""]] [[""]-historydir:[""]] [[""]-plugins:[;][;][""]] [[""]-assemblyfilters:<(+|-)filter>[;<(+|-)filter>][;<(+|-)filter>][""]] [[""]-classfilters:<(+|-)filter>[;<(+|-)filter>][;<(+|-)filter>][""]] [[""]-filefilters:<(+|-)filter>[;<(+|-)filter>][;<(+|-)filter>][""]] [[""]-riskhotspotassemblyfilters:<(+|-)filter>[;<(+|-)filter>][;<(+|-)filter>][""]] [[""]-riskhotspotclassfilters:<(+|-)filter>[;<(+|-)filter>][;<(+|-)filter>][""]] [[""]-verbosity:[""]] [[""]-title:[""]] [[""]-tag:[""]] [[""]-license:[""]] Explanations: Reports: The coverage reports that should be parsed (separated by semicolon). Globbing is supported. Target directory: The directory where the generated report should be saved. Report types: The output formats and scope (separated by semicolon). Values: Badges, Clover, Cobertura, CsvSummary, MarkdownSummary, MarkdownAssembliesSummary, MarkdownSummaryGithub, MarkdownDeltaSummary OpenCover Html, Html_Light, Html_Dark, Html_BlueRed HtmlChart, HtmlInline, HtmlSummary, Html_BlueRed_Summary HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Light, HtmlInline_AzurePipelines_Dark JsonSummary, CodeClimate, Latex, LatexSummary, lcov, MHtml, SvgChart, SonarQube, TeamCitySummary TextSummary, TextDeltaSummary Xml, XmlSummary Source directories: Optional directories which contain the corresponding source code (separated by semicolon). The source directories are used if coverage report contains classes without path information. Globbing is not supported. History directory: Optional directory for storing persistent coverage information. Can be used in future reports to show coverage evolution. Plugins: Optional plugin files for custom reports or custom history storage (separated by semicolon). Assembly filters: Optional list of assemblies that should be included or excluded in the report. Class filters: Optional list of classes that should be included or excluded in the report. File filters: Optional list of files that should be included or excluded in the report. Risk hotspot assembly filters: Optional list of assemblies that should be included or excluded in the risk hotspots. Risk hotspot class filters: Optional list of classes that should be included or excluded in the risk hotspots. Exclusion filters take precedence over inclusion filters. Wildcards are allowed. Verbosity: The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off Title: Optional title. Tag: Optional tag or build version. License: Optional license for PRO version. Get your license here: Default values: -reporttypes:Html -assemblyfilters:+* -classfilters:+* -filefilters:+* -riskhotspotassemblyfilters:+* -riskhotspotclassfilters:+* -verbosity:Info Examples: ""-reports:coverage.xml"" ""-targetdir:C:\report"" ""-reports:target\*\*.xml"" ""-targetdir:C:\report"" -reporttypes:Latex;HtmlSummary -title:IntegrationTest -tag:v1.4.5 ""-reports:coverage1.xml;coverage2.xml"" ""-targetdir:report"" ""-sourcedirs:C:\MyProject"" -plugins:CustomReports.dll ""-reports:coverage.xml"" ""-targetdir:C:\report"" ""-assemblyfilters:+Included;-Excluded.*"" ``` #### .netconfig support All the above parameters can also be persisted in a [.netconfig]( file, under a `[ReportGenerator]` section. Examples: ```gitconfig [ReportGenerator] reports = coverage.xml targetdir = ""C:\\report"" reporttypes = Latex;HtmlSummary assemblyfilters = +Test;-Test classfilters = +Test2;-Test2 ``` All the plural options can also be specified as multiple singular entries, like: ```gitconfig [ReportGenerator] report = coverage1.xml report = coverage2.xml reporttype = Latex reporttype = HtmlSummary assemblyfilter = +Test assemblyfilter = -Test classfilter = +Test2 classfilter = -Test2 filefilter = +cs filefilter = -vb riskhotspotassemblyfilter = +Test riskhotspotassemblyfilter = -Test riskhotspotclassfilter = +Test2 riskhotspotclassfilter = -Test2 sourcedir = src sourcedir = test ``` Adding/removing values is trivial using the [dotnet-config]( CLI: ```bash # set a single-valued variable dotnet config reportgenerator.reporttypes Latex;HtmlSummary # add to multi-valued variable dotnet config --add reportgenerator.report coverage3.xml # clear all multi-valued entries for a variable dotnet config --unset-all reportgenerator.assemblyfilter ``` Of course it's equally trivial to just edit the `.netconfig` file by hand. #### MSBuild A MSBuild task also exists: ```xml ``` The MSBuild task parameters can be complemented with the `.netconfig`, if used. That means that parameters can be omitted if they are provided via `.netconfig`, which is useful when reusing fixed settings across multiple projects in a solution, where the MSBuild task is only provided the dynamic values for the current project: Given the following `.netconfig`: ```gitconfig [ReportGenerator] reporttypes = Html;Latex targetdirectory = report historydirectory = history assemblyfilters = +Include;-Excluded verbosityLevel = Verbose ``` The above target could be simplified as: ```xml ``` ## Supported input and output file formats *ReportGenerator* supports several input and output formats. The wiki explains the different [output formats]( or you can download [sample reports]( of all supported output formats. If you need a custom format, you can create a [plugin]( | **Input formats** | **Output formats** | |:------------------|:-------------------| | [OpenCover]( ([Nuget]( format is also generated by [coverlet]( and [altcover]( ([Nuget]( /ReportType=DetailedXML)Visual Studio ([vstest.console.exe]( [CodeCoverage.exe]( (tested version 1.5.8, other versions may not work)[Cobertura]( (version 0.8.3 or greater)[Clover]( ([mprof-report]( | Html, Html_Light, Html_Dark, Html_BlueRed, HtmlSummary, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Light, HtmlInline_AzurePipelines_Dark, [MHtml]( ([PRO version]( only)[SonarQube]( XmlSummaryJsonSummaryLatex, LatexSummaryTextSummary, TextDeltaSummaryCsvSummaryMarkdownSummary, MarkdownAssembliesSummary, MarkdownSummaryGithub, MarkdownDeltaSummarySvgChartBadges[Custom reports]( | ### Screenshots The screenshots show two snippets of the generated reports: **Badges** Badges in SVG format can be generated if `-reporttypes:Badges` is used: Example: [See all badges]( ## Resources ### Visual Studio extensions The following extensions exist to visualize coverage in Visual Studio: | **Name** | **Coverage tool** | **Links** | |:---------|:------------------|:----------| | Run Coverlet Report VS2022 | [coverlet]( | [GitHub]( | | FineCodeCoverage | [coverlet]( [OpenCover]( | [GitHub]( | ### Links * * * * ### Download statistics ### Trends [Nuget downloads]( [GitHub stars]( ## Contact Author: Daniel Palme Blog: [www.palmmedia.de]( Twitter: [@danielpalme](","271, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, wontfix, sponsorship, question, javascript, invalid, help wanted, github_actions, enhancement, duplicate, discussion, dependencies, bug, awaiting user, Azure DevOps"
WLED,Aircoookie/WLED,14033,"['C++', 'C', 'HTML']","['light', 'esp8266', 'led', 'esp32', 'hacktoberfest']","# Welcome to my project WLED! A fast and feature-rich implementation of an ESP8266/ESP32 webserver to control NeoPixel (WS2812B, WS2811, SK6812) LEDs or also SPI based chipsets like the WS2801 and APA102! ## Features - WS2812FX library with more than 100 special effects - FastLED noise effects and 50 palettes - Modern UI with color, effect and segment controls - Segments to set different effects and colors to user defined parts of the LED string - Settings page - configuration via the network - Access Point and station mode - automatic failsafe AP - Up to 10 LED outputs per instance - Support for RGBW strips - Up to 250 user presets to save and load colors/effects easily, supports cycling through them. - Presets can be used to automatically execute API calls - Nightlight function (gradually dims down) - Full OTA software updateability (HTTP + ArduinoOTA), password protectable - Configurable analog clock (Cronixie, 7-segment and EleksTube IPS clock support via usermods) - Configurable Auto Brightness limit for safe operation - Filesystem-based config for easier backup of presets and settings ## Supported light control interfaces - WLED app for [Android]( and [iOS]( - JSON and HTTP request APIs - MQTT - E1.31, Art-Net, DDP and TPM2.net - [diyHue]( (Wled is supported by diyHue, including Hue Sync Entertainment under udp. Thanks to [Gregory Mallios]( - [Hyperion]( - UDP realtime - Alexa voice control (including dimming and color) - Sync to Philips hue lights - Adalight (PC ambilight via serial) and TPM2 - Sync color of multiple WLED devices (UDP notifier) - Infrared remotes (24-key RGB, receiver required) - Simple timers/schedules (time from NTP, timezones/DST supported) ## Quick start guide and documentation See the [documentation on our official site]( [On this page]( you can find excellent tutorials and tools to help you get your new project up and running! ## User interface ## Compatible hardware See [here]( ## Other Licensed under the MIT license Credits [here]( Join the Discord server to discuss everything about WLED! Check out the WLED [Discourse forum]( You can also send me mails to [dev.aircoookie@gmail.com](mailto:dev.aircoookie@gmail.com), but please, only do so if you want to talk to me privately. If WLED really brightens up your day, you can []( *Disclaimer:* If you are prone to photosensitive epilepsy, we recommended you do **not** use this software. If you still want to try, don't use strobe, lighting or noise modes or high effect speed settings. As per the MIT license, I assume no liability for any damage to you or any other person or equipment.","3k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, enhancement, bug, usermod, keep, help wanted, backburner, workaround, effect, wontfix, discussion, waiting for feedback, fixed in source, hardware, connectivity, question, needs investigation, external, confirmed, stale, board request, documentation, major, dependencies, python, minor, javascript, cosmetic, configuration, cannot reproduce, magic"
OpenArk,BlackINT3/OpenArk,7575,"['C++', 'C', 'Roff']","['anti-malware', 'ark', 'windows-hacking']","# OpenArk ### Introduction * [](doc/README-zh.md) * OpenArk is an open source anti-rookit(ARK) tool for Windows. Ark is Anti-Rootkit abbreviated, it aimmed at reversing/programming helper and also users can find out hidden malwares in the OS. More and more powerful features will be supported in future. ### Features * Process - Process/Thread/Module/Handles/Memory/Window/Token/MemoryScan/PPL etc information view, Unload/Dll Injector x86/x64 also. * Kernel - OS Kernel internal toolkit, eg: Memory, Drivers, Hotkey, Callback, Filters, IDT/SDT/NDIS/WFP etc. * CoderKit - Helper for coders. * Scanner - PE/ELF file parsers, evolved to virus analyzer in future. * Bundler - Directory and files could be bundled to one executable file, it also support scripts. * ToolRepo - Collect many useful tools that functional complementation each others, for efficient, always thinking. * Console - Many useful coammands in here. * Language - Support English and Chinese now, more in future. * More powerful features in developing... ### Distributions * Program: one exe binary, no dependence, support 32/64 bit. * Supported OS: Windows XP ... Win7 ... Win10 ... Win11 ... ### Compile * [How To Build OpenArk](doc/build-openark.md) * [UNONE & KNONE]( - User & Kernel mode BaseLibrary ### Contributing/Donate * Issues and Push Request is welcome. * If you like that you can click to donate our develop. * [OpenArk Code Style Guide](doc/code-style-guide.md) ### Contact * Discord - * QQ Group - Group4: 960562534 - Group3: 706663529(full) - Group2: 535752025(full) - Group1: 836208099(full) ### Official Links * Website: * Source: * Manuals:","792, Code, Issues, Pull requests, Actions, Projects, Security, Insights, kernel-mode-error, feature, fixed, invalid, wontfix, question, help wanted, good first issue, enhancement, duplicate, bug"
pcl,PointCloudLibrary/pcl,9539,"['C++', 'Cuda', 'CMake']","['pcl', 'c-plus-plus', 'cpp', 'pointcloud', 'computer-vision']","# Point Cloud Library [![Release][release-image]][releases] [![License][license-image]][license] [release-image]: [releases]: [license-image]: [license]: Website ------- The new website is now online at and is open to [contributions]( :hammer_and_wrench:. If you really need access to the old website, please use [the copy made by the internet archive]( Please be aware that the website was hacked before and could still be hosting some malicious code. Continuous integration ---------------------- [ci-latest-build]: [ci-ubuntu-20.04]: [ci-ubuntu-22.04]: [ci-ubuntu-23.04]: [ci-windows-x86]: [ci-windows-x64]: [ci-macos-12]: [ci-macos-13]: [ci-docs]: [ci-latest-docs]: Build Platform | Status ------------------------ | ------------------------------------------------------------------------------------------------- | Ubuntu | [![Status][ci-ubuntu-20.04]][ci-latest-build] [![Status][ci-ubuntu-22.04]][ci-latest-build] [![Status][ci-ubuntu-23.04]][ci-latest-build] | Windows | [![Status][ci-windows-x86]][ci-latest-build] [![Status][ci-windows-x64]][ci-latest-build] | macOS | [![Status][ci-macos-12]][ci-latest-build] [![Status][ci-macos-13]][ci-latest-build] | Documentation | [![Status][ci-docs]][ci-latest-docs] | Read the Docs | []( | Community --------- [![Discord][discord-image]][discord-server] [![StackOverflow][so-question-count]][stackoverflow] [![Website][website-status]][website] [discord-image]: [discord-server]: [website-status]: [website]: [so-question-count]: [stackoverflow]: Distribution --------- []( []( Click to see all Description ----------- The Point Cloud Library (PCL) is a standalone, large scale, open project for 2D/3D image and point cloud processing. PCL is released under the terms of the BSD license, and thus free for commercial and research use. We are financially supported by a consortium of commercial companies, with our own non-profit organization, Open Perception. We would also like to thank individual donors and contributors that have been helping the project. Compiling --------- Please refer to the platform specific tutorials: - [Linux]( - [Mac OS X]( - [Microsoft Windows]( Documentation ------------- - [Tutorials]( - [PCL trunk documentation]( Contributing ------------ Please read [CONTRIBUTING.md]( Issues ------ To report issues, please read [CONTRIBUTING.md#bug-reports]( For general questions on how to use the PCL, please consider one of the following alternatives instead: * [Stack Overflow]( for Q&A as well as support for troubleshooting, installation and debugging. Do remember to tag your questions with the tag `point-cloud-library`. * [Discord Server]( for live chat with other members of the PCL community and casual discussions Citation -------- We encourage other researchers to cite PCL if they use PCL or its components for their work or baselines. The bibtex entry for the same is ``` @InProceedings{Rusu_ICRA2011_PCL, author = {Radu Bogdan Rusu and Steve Cousins}, title = {{3D is here: Point Cloud Library (PCL)}}, booktitle = {{IEEE International Conference on Robotics and Automation (ICRA)}}, month = {May 9-13}, year = {2011}, address = {Shanghai, China}, publisher = {IEEE} } ```","4.6k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, status: stale, kind: todo, kind: bug, status: triage, needs: feedback, good first issue, needs: author reply, kind: request, module: cmake, needs: more work, kind: proposal, module: visualization, help wanted, module: io, module: filters, needs: testing, kind: compile error, needs: code review, module: registration, skill: cmake, priority: gsoc, module: ci, kind: question, module: gpu, module: features, changelog: enhancement, module: common, effort: low, module: docs, needs: pr merge"
onnxruntime,microsoft/onnxruntime,13020,"['C++', 'Python', 'C']","['deep-learning', 'onnx', 'neural-networks', 'machine-learning', 'ai-framework']","**ONNX Runtime is a cross-platform inference and training machine-learning accelerator**. **ONNX Runtime inference** can enable faster customer experiences and lower costs, supporting models from deep learning frameworks such as PyTorch and TensorFlow/Keras as well as classical machine learning libraries such as scikit-learn, LightGBM, XGBoost, etc. ONNX Runtime is compatible with different hardware, drivers, and operating systems, and provides optimal performance by leveraging hardware accelerators where applicable alongside graph optimizations and transforms. [Learn more ]( **ONNX Runtime training** can accelerate the model training time on multi-node NVIDIA GPUs for transformer models with a one-line addition for existing PyTorch training scripts. [Learn more ]( ## Get Started & Resources * **General Information**: [onnxruntime.ai]( * **Usage documentation and tutorials**: [onnxruntime.ai/docs]( * **YouTube video tutorials**: [youtube.com/@ONNXRuntime]( * [**Upcoming Release Roadmap**]( * **Companion sample repositories**: - ONNX Runtime Inferencing: [microsoft/onnxruntime-inference-examples]( - ONNX Runtime Training: [microsoft/onnxruntime-training-examples]( ## Builtin Pipeline Status |System|Inference|Training| |---|---|---| |Windows|[]( |Linux|[]( |Mac|[]( |Android|[]( |iOS|[]( |Web|[]( |Other|[]( ## Third-party Pipeline Status |System|Inference|Training| |---|---|---| |Linux|[]( ## Data/Telemetry Windows distributions of this project may collect usage data and send it to Microsoft to help improve our products and services. See the [privacy statement](docs/Privacy.md) for more details. ## Contributions and Feedback We welcome contributions! Please see the [contribution guidelines](CONTRIBUTING.md). For feature requests or bug reports, please file a [GitHub Issue]( For general discussion or questions, please use [GitHub Discussions]( ## Code of Conduct This project has adopted the [Microsoft Open Source Code of Conduct]( For more information see the [Code of Conduct FAQ]( or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments. ## License This project is licensed under the [MIT License](LICENSE).","2.7k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, ep:CUDA, stale, core runtime, platform:windows, feature request, build, quantization, ep:TensorRT, platform:web, model:transformer, api, documentation, ep:OpenVINO, ep:DML, training, platform:mobile, more info needed, api:Java, performance, contributions welcome, platform:jetson, ep:oneDNN, api:Javascript, api:CSharp, converter:dynamo, ep:ROCm, ep:ArmNN, converter, ep:QNN, ep:ACL"
perspective,finos/perspective,7620,"['C++', 'Rust', 'JavaScript']","['webassembly', 'data-visualization', 'real-time', 'analytics', 'javascript']","[]( []( []( Perspective is an interactive analytics and data visualization component, which is especially well-suited for large and/or streaming datasets. Use it to create user-configurable reports, dashboards, notebooks and applications, then deploy stand-alone in the browser, or in concert with Python and/or [Jupyterlab]( ### Features - A fast, memory efficient streaming query engine, written in C++ and compiled for both [WebAssembly]( and [Python]( with read/write/streaming for [Apache Arrow]( and a high-performance columnar expression language based on [ExprTK]( - A framework-agnostic User Interface packaged as a [Custom Element]( powered either in-browser via WebAssembly or virtually via WebSocket server (Python/Node). - A [JupyterLab]( widget and Python client library, for interactive data analysis in a notebook, as well as _scalable_ production [Voila]( applications. ### Examples editablefilefractalmarketraycastingevictionsnypdmagicstreamingcovidwebcammoviessuperstorecitibikeolympicsjupyterlab ### Documentation - [Project Site]( - User Guides - [Javascript User Guide]( - [Python User Guide]( - [Developer Guide]( - Concepts - [Table]( - [View]( - [Expression Columns]( - [Data Binding]( - API - [Perspective API]( - [Perspective Viewer API]( - [Perspective Python API]( ### Community / Media - [Streaming, cross-sectional data visualization in JupyterLab | Junyuan Tan, JupyterCon 2020]( - [Perspective in 3D | Andrew Stein, Open Source in Finance Forum NYC 2022]( - [Build an order book simulation with Perspective | Andrew Stein, FINOS Open Source in Fintech Meetup 2021]( - [Perspective project case study | FINOS](","1k, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, enhancement, bug, JS, plugins, question, Python, C++, good first issue, internal, documentation, Firefox, styling, breaking, Chrome, needs-repro, dependencies, Jupyter, spam, duplicate, deprecation, Safari, Rust"
json,nlohmann/json,40662,"['C++', 'CMake', 'Python']","['json', 'json-pointer', 'json-patch', 'cbor', 'msgpack']","[]( []( []( []( []( []( []( []( []( []( []( []( []( []( []( []( []( []( []( ""Average time to resolve an issue"") []( []( []( []( - [Design goals](#design-goals) - [Sponsors](#sponsors) - [Support](#support) ([documentation]( [FAQ]( [discussions]( [API]( [bug issues]( - [Examples](#examples) - [Read JSON from a file](#read-json-from-a-file) - [Creating `json` objects from JSON literals](#creating-json-objects-from-json-literals) - [JSON as first-class data type](#json-as-first-class-data-type) - [Serialization / Deserialization](#serialization--deserialization) - [STL-like access](#stl-like-access) - [Conversion from STL containers](#conversion-from-stl-containers) - [JSON Pointer and JSON Patch](#json-pointer-and-json-patch) - [JSON Merge Patch](#json-merge-patch) - [Implicit conversions](#implicit-conversions) - [Conversions to/from arbitrary types](#arbitrary-types-conversions) - [Specializing enum conversion](#specializing-enum-conversion) - [Binary formats (BSON, CBOR, MessagePack, UBJSON, and BJData)](#binary-formats-bson-cbor-messagepack-ubjson-and-bjdata) - [Supported compilers](#supported-compilers) - [Integration](#integration) - [CMake](#cmake) - [Package Managers](#package-managers) - [Pkg-config](#pkg-config) - [License](#license) - [Contact](#contact) - [Thanks](#thanks) - [Used third-party tools](#used-third-party-tools) - [Projects using JSON for Modern C++](#projects-using-json-for-modern-c) - [Notes](#notes) - [Execute unit tests](#execute-unit-tests) ## Design goals There are myriads of [JSON]( libraries out there, and each may even have its reason to exist. Our class had these design goals: - **Intuitive syntax**. In languages such as Python, JSON feels like a first class data type. We used all the operator magic of modern C++ to achieve the same feeling in your code. Check out the [examples below](#examples) and you'll know what I mean. - **Trivial integration**. Our whole code consists of a single header file [`json.hpp`]( That's it. No library, no subproject, no dependencies, no complex build system. The class is written in vanilla C++11. All in all, everything should require no adjustment of your compiler flags or project settings. - **Serious testing**. Our code is heavily [unit-tested]( and covers [100%]( of the code, including all exceptional behavior. Furthermore, we checked with [Valgrind]( and the [Clang Sanitizers]( that there are no memory leaks. [Google OSS-Fuzz]( additionally runs fuzz tests against all parsers 24/7, effectively executing billions of tests so far. To maintain high quality, the project is following the [Core Infrastructure Initiative (CII) best practices]( Other aspects were not so important to us: - **Memory efficiency**. Each JSON object has an overhead of one pointer (the maximal size of a union) and one enumeration element (1 byte). The default generalization uses the following C++ data types: `std::string` for strings, `int64_t`, `uint64_t` or `double` for numbers, `std::map` for objects, `std::vector` for arrays, and `bool` for Booleans. However, you can template the generalized class `basic_json` to your needs. - **Speed**. There are certainly [faster JSON libraries]( out there. However, if your goal is to speed up your development by adding JSON support with a single header, then this library is the way to go. If you know how to use a `std::vector` or `std::map`, you are already set. See the [contribution guidelines]( for more information. ## Sponsors You can sponsor this library at [GitHub Sponsors]( ### :raising_hand: Priority Sponsor - [Martti Laine]( ### :label: Named Sponsors - [Michael Hartmann]( - [Stefan Hagen]( - [Steve Sperandeo]( - [Robert Jefe Lindstdt]( - [Steve Wagner]( - [Lion Yang]( Thanks everyone! ## Support :question: If you have a **question**, please check if it is already answered in the [**FAQ**]( or the [**Q&A**]( section. If not, please [**ask a new question**]( there. :books: If you want to **learn more** about how to use the library, check out the rest of the [**README**](#examples), have a look at [**code examples**]( or browse through the [**help pages**]( :construction: If you want to understand the **API** better, check out the [**API Reference**]( :bug: If you found a **bug**, please check the [**FAQ**]( if it is a known issue or the result of a design decision. Please also have a look at the [**issue list**]( before you [**create a new issue**]( Please provide as much information as possible to help us understand and reproduce your issue. There is also a [**docset**]( for the documentation browsers [Dash]( [Velocity]( and [Zeal]( that contains the full [documentation]( as offline resource. ## Examples Here are some examples to give you an idea how to use the class. Beside the examples below, you may want to: Check the [documentation]( Browse the [standalone example files]( Every API function (documented in the [API Documentation]( has a corresponding standalone example file. For example, the [`emplace()`]( function has a matching [emplace.cpp]( example file. ### Read JSON from a file The `json` class provides an API for manipulating a JSON value. To create a `json` object by reading a JSON file: ```cpp #include #include using json = nlohmann::json; // ... std::ifstream f(""example.json""); json data = json::parse(f); ``` ### Creating `json` objects from JSON literals Assume you want to create hard-code this literal JSON value in a file, as a `json` object: ```json { ""pi"": 3.141, ""happy"": true } ``` There are various options: ```cpp // Using (raw) string literals and json::parse json ex1 = json::parse(R""( { ""pi"": 3.141, ""happy"": true } )""); // Using user-defined (raw) string literals using namespace nlohmann::literals; json ex2 = R""( { ""pi"": 3.141, ""happy"": true } )""_json; // Using initializer lists json ex3 = { {""happy"", true}, {""pi"", 3.141}, }; ``` ### JSON as first-class data type Here are some examples to give you an idea how to use the class. Assume you want to create the JSON object ```json { ""pi"": 3.141, ""happy"": true, ""name"": ""Niels"", ""nothing"": null, ""answer"": { ""everything"": 42 }, ""list"": [1, 0, 2], ""object"": { ""currency"": ""USD"", ""value"": 42.99 } } ``` With this library, you could write: ```cpp // create an empty structure (null) json j; // add a number that is stored as double (note the implicit conversion of j to an object) j[""pi""] = 3.141; // add a Boolean that is stored as bool j[""happy""] = true; // add a string that is stored as std::string j[""name""] = ""Niels""; // add another null object by passing nullptr j[""nothing""] = nullptr; // add an object inside the object j[""answer""][""everything""] = 42; // add an array that is stored as std::vector (using an initializer list) j[""list""] = { 1, 0, 2 }; // add another object (using an initializer list of pairs) j[""object""] = { {""currency"", ""USD""}, {""value"", 42.99} }; // instead, you could also write (which looks very similar to the JSON above) json j2 = { {""pi"", 3.141}, {""happy"", true}, {""name"", ""Niels""}, {""nothing"", nullptr}, {""answer"", { {""everything"", 42} }}, {""list"", {1, 0, 2}}, {""object"", { {""currency"", ""USD""}, {""value"", 42.99} }} }; ``` Note that in all these cases, you never need to ""tell"" the compiler which JSON value type you want to use. If you want to be explicit or express some edge cases, the functions [`json::array()`]( and [`json::object()`]( will help: ```cpp // a way to express the empty array [] json empty_array_explicit = json::array(); // ways to express the empty object {} json empty_object_implicit = json({}); json empty_object_explicit = json::object(); // a way to express an _array_ of key/value pairs [[""currency"", ""USD""], [""value"", 42.99]] json array_not_object = json::array({ {""currency"", ""USD""}, {""value"", 42.99} }); ``` ### Serialization / Deserialization #### To/from strings You can create a JSON value (deserialization) by appending `_json` to a string literal: ```cpp // create object from string literal json j = ""{ \""happy\"": true, \""pi\"": 3.141 }""_json; // or even nicer with a raw string literal auto j2 = R""( { ""happy"": true, ""pi"": 3.141 } )""_json; ``` Note that without appending the `_json` suffix, the passed string literal is not parsed, but just used as JSON string value. That is, `json j = ""{ \""happy\"": true, \""pi\"": 3.141 }""` would just store the string `""{ ""happy"": true, ""pi"": 3.141 }""` rather than parsing the actual object. The string literal should be brought into scope with `using namespace nlohmann::literals;` (see [`json::parse()`]( The above example can also be expressed explicitly using [`json::parse()`]( ```cpp // parse explicitly auto j3 = json::parse(R""({""happy"": true, ""pi"": 3.141})""); ``` You can also get a string representation of a JSON value (serialize): ```cpp // explicit conversion to string std::string s = j.dump(); // {""happy"":true,""pi"":3.141} // serialization with pretty printing // pass in the amount of spaces to indent std::cout << j.dump(4) << std::endl; // { // ""happy"": true, // ""pi"": 3.141 // } ``` Note the difference between serialization and assignment: ```cpp // store a string in a JSON value json j_string = ""this is a string""; // retrieve the string value auto cpp_string = j_string.template get(); // retrieve the string value (alternative when a variable already exists) std::string cpp_string2; j_string.get_to(cpp_string2); // retrieve the serialized value (explicit JSON serialization) std::string serialized_string = j_string.dump(); // output of original string std::cout << cpp_string << "" == "" << cpp_string2 << "" == "" << j_string.template get() << '\n'; // output of serialized value std::cout << j_string << "" == "" << serialized_string << std::endl; ``` [`.dump()`]( returns the originally stored string value. Note the library only supports UTF-8. When you store strings with different encodings in the library, calling [`dump()`]( may throw an exception unless `json::error_handler_t::replace` or `json::error_handler_t::ignore` are used as error handlers. #### To/from streams (e.g. files, string streams) You c... [TRUNCATED]","6.5k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, kind: bug, tests, documentation, L, state: help needed, M, please rebase, S, aspect: binary formats, CMake, state: please discuss, confirmed, solution: duplicate, platform: visual studio, dependencies, CI, state: stale, state: needs more info, solution: invalid, state: waiting for PR, solution: proposed fix, review needed, release item: ✨ new feature, platform: arm, good first issue, state: blocked, spam, solution: wontfix, security vulnerability, release item: ⚡ improvement"
ZeroTierOne,zerotier/ZeroTierOne,13573,"['C++', 'C', 'Assembly']","['decentralization', 'networking', 'peer-to-peer', 'sd-wan', 'sdn']","ZeroTier - Global Area Networking ====== *This document is written for a software developer audience. For information on using ZeroTier, see the: [Website]( [Documentation Site]( and [Discussion Forum]( ZeroTier is a smart programmable Ethernet switch for planet Earth. It allows all networked devices, VMs, containers, and applications to communicate as if they all reside in the same physical data center or cloud region. This is accomplished by combining a cryptographically addressed and secure peer to peer network (termed VL1) with an Ethernet emulation layer somewhat similar to VXLAN (termed VL2). Our VL2 Ethernet virtualization layer includes advanced enterprise SDN features like fine grained access control rules for network micro-segmentation and security monitoring. All ZeroTier traffic is encrypted end-to-end using secret keys that only you control. Most traffic flows peer to peer, though we offer free (but slow) relaying for users who cannot establish peer to peer connections. The goals and design principles of ZeroTier are inspired by among other things the original [Google BeyondCorp]( paper and the [Jericho Forum]( with its notion of ""deperimeterization."" Visit [ZeroTier's site]( for more information and [pre-built binary packages]( Apps for Android and iOS are available for free in the Google Play and Apple app stores. ZeroTier is licensed under the [BSL version 1.1]( See [LICENSE.txt](LICENSE.txt) and the [ZeroTier pricing page]( for details. ZeroTier is free to use internally in businesses and academic institutions and for non-commercial purposes. Certain types of commercial use such as building closed-source apps and devices based on ZeroTier or offering ZeroTier network controllers and network management as a SaaS service require a commercial license. A small amount of third party code is also included in ZeroTier and is not subject to our BSL license. See [AUTHORS.md](AUTHORS.md) for a list of third party code, where it is included, and the licenses that apply to it. All of the third party code in ZeroTier is liberally licensed (MIT, BSD, Apache, public domain, etc.). ### Getting Started Everything in the ZeroTier world is controlled by two types of identifier: 40-bit/10-digit *ZeroTier addresses* and 64-bit/16-digit *network IDs*. These identifiers are easily distinguished by their length. A ZeroTier address identifies a node or ""device"" (laptop, phone, server, VM, app, etc.) while a network ID identifies a virtual Ethernet network that can be joined by devices. ZeroTier addresses can be thought of as port numbers on an enormous planet-wide enterprise Ethernet smart switch supporting VLANs. Network IDs are VLAN IDs to which these ports may be assigned. A single port can be assigned to more than one VLAN. A ZeroTier address looks like `8056c2e21c` and a network ID looks like `8056c2e21c000001`. Network IDs are composed of the ZeroTier address of that network's primary controller and an arbitrary 24-bit ID that identifies the network on this controller. Network controllers are roughly analogous to SDN controllers in SDN protocols like [OpenFlow]( though as with the analogy between VXLAN and VL2 this should not be read to imply that the protocols or design are the same. You can use our convenient and inexpensive SaaS hosted controllers at [my.zerotier.com]( or [run your own controller](controller/) if you don't mind messing around with JSON configuration files or writing scripts to do so. ### Project Layout The base path contains the ZeroTier One service main entry point (`one.cpp`), self test code, makefiles, etc. - `artwork/`: icons, logos, etc. - `attic/`: old stuff and experimental code that we want to keep around for reference. - `controller/`: the reference network controller implementation, which is built and included by default on desktop and server build targets. - `debian/`: files for building Debian packages on Linux. - `doc/`: manual pages and other documentation. - `ext/`: third party libraries, binaries that we ship for convenience on some platforms (Mac and Windows), and installation support files. - `include/`: include files for the ZeroTier core. - `java/`: a JNI wrapper used with our Android mobile app. (The whole Android app is not open source but may be made so in the future.) - `node/`: the ZeroTier virtual Ethernet switch core, which is designed to be entirely separate from the rest of the code and able to be built as a stand-alone OS-independent library. Note to developers: do not use C++11 features in here, since we want this to build on old embedded platforms that lack C++11 support. C++11 can be used elsewhere. - `osdep/`: code to support and integrate with OSes, including platform-specific stuff only built for certain targets. - `rule-compiler/`: JavaScript rules language compiler for defining network-level rules. - `service/`: the ZeroTier One service, which wraps the ZeroTier core and provides VPN-like connectivity to virtual networks for desktops, laptops, servers, VMs, and containers. - `windows/`: Visual Studio solution files, Windows service code, and the Windows task bar app UI. - `zeroidc/`: OIDC implementation used by ZeroTier service to log into SSO-enabled networks. (This part is written in Rust, and more Rust will be appearing in this repository in the future.) ### Contributing Please do pull requests off of the `dev` branch. Releases are done by merging `dev` into `main` and then tagging and doing builds. ### Build and Platform Notes To build on Mac and Linux just type `make`. On FreeBSD and OpenBSD `gmake` (GNU make) is required and can be installed from packages or ports. For Windows there is a Visual Studio solution in `windows/`. - **Mac** - Xcode command line tools for macOS 10.13 or newer are required. - Rust for x86_64 and ARM64 targets *if SSO is enabled in the build*. - **Linux** - The minimum compiler versions required are GCC/G++ 4.9.3 or CLANG/CLANG++ 3.4.2. (Install `clang` on CentOS 7 as G++ is too old.) - Linux makefiles automatically detect and prefer clang/clang++ if present as it produces smaller and slightly faster binaries in most cases. You can override by supplying CC and CXX variables on the make command line. - Rust for x86_64 and ARM64 targets *if SSO is enabled in the build*. - **Windows** - Visual Studio 2022 on Windows 10 or newer. - Rust for x86_64 and ARM64 targets *if SSO is enabled in the build*. - **FreeBSD** - GNU make is required. Type `gmake` to build. - `binutils` is required. Type `pkg install binutils` to install. - Rust for x86_64 and ARM64 targets *if SSO is enabled in the build*. - **OpenBSD** - There is a limit of four network memberships on OpenBSD as there are only four tap devices (`/dev/tap0` through `/dev/tap3`). - GNU make is required. Type `gmake` to build. - Rust for x86_64 and ARM64 targets *if SSO is enabled in the build*. Typing `make selftest` will build a *zerotier-selftest* binary which unit tests various internals and reports on a few aspects of the build environment. It's a good idea to try this on novel platforms or architectures. ### Running Running *zerotier-one* with `-h` option will show help. On Linux and BSD, if you built from source, you can start the service with: sudo ./zerotier-one -d On most distributions, macOS, and Windows, the installer will start the service and set it up to start on boot. A home folder for your system will automatically be created. The service is controlled via the JSON API, which by default is available at `127.0.0.1:9993`. It also listens on `0.0.0.0:9993` which is only usable if `allowManagementFrom` is properly configured in `local.conf`. We include a *zerotier-cli* command line utility to make API calls for standard things like joining and leaving networks. The *authtoken.secret* file in the home folder contains the secret token for accessing this API. See [service/README.md](service/README.md) for API documentation. Here's where home folders live (by default) on each OS: * **Linux**: `/var/lib/zerotier-one` * **FreeBSD** / **OpenBSD**: `/var/db/zerotier-one` * **Mac**: `/Library/Application Support/ZeroTier/One` * **Windows**: `\ProgramData\ZeroTier\One` (That's the default. The base 'shared app data' folder might be different if Windows is installed with a non-standard drive letter assignment or layout.) ### Basic Troubleshooting For most users, it just works. If you are running a local system firewall, we recommend adding a rules permitting zerotier. If you installed binaries for Windows this should be done automatically. Other platforms might require manual editing of local firewall rules depending on your configuration. See the [documentation site]( for more information. The Mac firewall can be found under ""Security"" in System Preferences. Linux has a variety of firewall configuration systems and tools. On CentOS check `/etc/sysconfig/iptables` for IPTables rules. For other distributions consult your distribution's documentation. You'll also have to check the UIs or documentation for commercial third party firewall applications like Little Snitch (Mac), McAfee Firewall Enterprise (Windows), etc. if you are running any of those. Some corporate environments might have centrally managed firewall software, so you might also have to contact IT. ZeroTier One peers will automatically locate each other and communicate directly over a local wired LAN *if UDP port 9993 inbound is open*. If that port is filtered, they won't be able to see each others' LAN announcement packets. If you're experiencing poor performance between devices on the same physical network, check their firewall settings. Without LAN auto-location peers must attempt ""loopback"" NAT traversal, which sometimes fails and in any case requires that every packet traverse your external router twice. Users behind certain types of firewalls and ""symmetric"" NAT devices may not be able to connect to external peers directly at all. ZeroTier has limited support for port prediction and will *attempt* to traverse... [TRUNCATED]","1.6k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, Type: Feature Request or Suggestion, Status: Backlog, Type: Bug, Central & Network Management, Windows, Linux, Type: Installation Problem, Embedded Devices, BSD, Networking & Routing, Status: Needs Triage, Type: Documentation, Type: CI / Build problem, MacOS / iOS, Android, rust, dependencies, Type: Question, Status: Can't Reproduce, Security, P2, P3, Multipath, Good First Issue, Type: Platform Support Request, Type: Enhancement, Status: Need more information, Status: Duplicate, DNS, Cloud"
wabt,WebAssembly/wabt,6477,"['C++', 'C', 'Python']",['webassembly'],"[]( # WABT: The WebAssembly Binary Toolkit WABT (we pronounce it ""wabbit"") is a suite of tools for WebAssembly, including: - [**wat2wasm**]( translate from [WebAssembly text format]( to the [WebAssembly binary format]( - [**wasm2wat**]( the inverse of wat2wasm, translate from the binary format back to the text format (also known as a .wat) - [**wasm-objdump**]( print information about a wasm binary. Similiar to objdump. - [**wasm-interp**]( decode and run a WebAssembly binary file using a stack-based interpreter - [**wasm-decompile**]( decompile a wasm binary into readable C-like syntax. - [**wat-desugar**]( parse .wat text form as supported by the spec interpreter (s-expressions, flat syntax, or mixed) and print ""canonical"" flat format - [**wasm2c**]( convert a WebAssembly binary file to a C source and header - [**wasm-strip**]( remove sections of a WebAssembly binary file - [**wasm-validate**]( validate a file in the WebAssembly binary format - [**wast2json**]( convert a file in the wasm spec test format to a JSON file and associated wasm binary files - [**wasm-stats**]( output stats for a module - [**spectest-interp**]( read a Spectest JSON file, and run its tests in the interpreter These tools are intended for use in (or for development of) toolchains or other systems that want to manipulate WebAssembly files. Unlike the WebAssembly spec interpreter (which is written to be as simple, declarative and ""speccy"" as possible), they are written in C/C++ and designed for easier integration into other systems. Unlike [Binaryen]( these tools do not aim to provide an optimization platform or a higher-level compiler target; instead they aim for full fidelity and compliance with the spec (e.g. 1:1 round-trips with no changes to instructions). ## Online Demos Wabt has been compiled to JavaScript via emscripten. Some of the functionality is available in the following demos: - [index]( - [wat2wasm]( - [wasm2wat]( ## Supported Proposals * Proposal: Name and link to the WebAssembly proposal repo * flag: Flag to pass to the tool to enable/disable support for the feature * default: Whether the feature is enabled by default * binary: Whether wabt can read/write the binary format * text: Whether wabt can read/write the text format * validate: Whether wabt can validate the syntax * interpret: Whether wabt can execute these operations in `wasm-interp` or `spectest-interp` * wasm2c: Whether wasm2c supports these operations | Proposal | flag | default | binary | text | validate | interpret | wasm2c | | --------------------- | --------------------------- | - | - | - | - | - | - | | [exception handling][]| `--enable-exceptions` | | | | | | | | [mutable globals][] | `--disable-mutable-globals` | | | | | | | | [nontrapping float-to-int conversions][] | `--disable-saturating-float-to-int` | | | | | | | | [sign extension][] | `--disable-sign-extension` | | | | | | | | [simd][] | `--disable-simd` | | | | | | | | [threads][] | `--enable-threads` | | | | | | | | [multi-value][] | `--disable-multi-value` | | | | | | | | [tail-call][] | `--enable-tail-call` | | | | | | | | [bulk memory][] | `--disable-bulk-memory` | | | | | | | | [reference types][] | `--disable-reference-types` | | | | | | | | [annotations][] | `--enable-annotations` | | | | | | | | [memory64][] | `--enable-memory64` | | | | | | | | [multi-memory][] | `--enable-multi-memory` | | | | | | | | [extended-const][] | `--enable-extended-const` | | | | | | | | [relaxed-simd][] | `--enable-relaxed-simd` | | | | | | | [exception handling]: [mutable globals]: [nontrapping float-to-int conversions]: [sign extension]: [simd]: [threads]: [multi-value]: [tail-call]: [bulk memory]: [reference types]: [annotations]: [memory64]: [multi-memory]: [extended-const]: [relaxed-simd]: ## Cloning Clone as normal, but don't forget to get the submodules as well: ```console $ git clone --recursive $ cd wabt $ git submodule update --init ``` This will fetch the testsuite and gtest repos, which are needed for some tests. ## Building using CMake directly (Linux and macOS) You'll need [CMake]( You can then run CMake, the normal way: ```console $ mkdir build $ cd build $ cmake .. $ cmake --build . ``` This will produce build files using CMake's default build generator. Read the CMake documentation for more information. **NOTE**: You must create a separate directory for the build artifacts (e.g. `build` above). Running `cmake` from the repo root directory will not work since the build produces an executable called `wasm2c` which conflicts with the `wasm2c` directory. ## Building using the top-level `Makefile` (Linux and macOS) **NOTE**: Under the hood, this uses `make` to run CMake, which then calls `ninja` to perform that actual build. On some systems (typically macOS), this doesn't build properly. If you see these errors, you can build using CMake directly as described above. You'll need [CMake]( and [Ninja]( If you just run `make`, it will run CMake for you, and put the result in `out/clang/Debug/` by default: > Note: If you are on macOS, you will need to use CMake version 3.2 or higher ```console $ make ``` This will build the default version of the tools: a debug build using the Clang compiler. There are many make targets available for other configurations as well. They are generated from every combination of a compiler, build type and configuration. - compilers: `gcc`, `clang`, `gcc-i686`, `emscripten` - build types: `debug`, `release` - configurations: empty, `asan`, `msan`, `lsan`, `ubsan`, `fuzz`, `no-tests` They are combined with dashes, for example: ```console $ make clang-debug $ make gcc-i686-release $ make clang-debug-lsan $ make gcc-debug-no-tests ``` ## Building (Windows) You'll need [CMake]( You'll also need [Visual Studio]( (2015 or newer) or [MinGW]( _Note: Visual Studio 2017 and later come with CMake (and the Ninja build system) out of the box, and should be on your PATH if you open a Developer Command prompt. See for more details._ You can run CMake from the command prompt, or use the CMake GUI tool. See [Running CMake]( for more information. When running from the commandline, create a new directory for the build artifacts, then run cmake from this directory: ```console > cd [build dir] > cmake [wabt project root] -DCMAKE_BUILD_TYPE=[config] -DCMAKE_INSTALL_PREFIX=[install directory] -G [generator] ``` The `[config]` parameter should be a CMake build type, typically `DEBUG` or `RELEASE`. The `[generator]` parameter should be the type of project you want to generate, for example `""Visual Studio 14 2015""`. You can see the list of available generators by running `cmake --help`. To build the project, you can use Visual Studio, or you can tell CMake to do it: ```console > cmake --build [wabt project root] --config [config] --target install ``` This will build and install to the installation directory you provided above. So, for example, if you want to build the debug configuration on Visual Studio 2015: ```console > mkdir build > cd build > cmake .. -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_INSTALL_PREFIX=..\ -G ""Visual Studio 14 2015"" > cmake --build . --config DEBUG --target install ``` ## Adding new keywords to the lexer If you want to add new keywords, you'll need to install [gperf]( Before you upload your PR, please run `make update-gperf` to update the prebuilt C++ sources in `src/prebuilt/`. ## Running wat2wasm Some examples: ```sh # parse test.wat and write to .wasm binary file with the same name $ bin/wat2wasm test.wat # parse test.wat and write to binary file test.wasm $ bin/wat2wasm test.wat -o test.wasm # parse spec-test.wast, and write verbose output to stdout (including the # meaning of every byte) $ bin/wat2wasm spec-test.wast -v ``` You can use `--help` to get additional help: ```console $ bin/wat2wasm --help ``` Or try the [online demo]( ## Running wasm2wat Some examples: ```sh # parse binary file test.wasm and write text file test.wat $ bin/wasm2wat test.wasm -o test.wat # parse test.wasm and write test.wat $ bin/wasm2wat test.wasm -o test.wat ``` You can use `--help` to get additional help: ```console $ bin/wasm2wat --help ``` Or try the [online demo]( ## Running wasm-interp Some examples: ```sh # parse binary file test.wasm, and type-check it $ bin/wasm-interp test.wasm # parse test.wasm and run all its exported functions $ bin/wasm-interp test.wasm --run-all-exports # parse test.wasm, run the exported functions and trace the output $ bin/wasm-interp test.wasm --run-all-exports --trace # parse test.json and run the spec tests $ bin/wasm-interp test.json --spec # parse test.wasm and run all its exported functions, setting the value stack # size to 100 elements $ bin/wasm-interp test.wasm -V 100 --run-all-exports ``` You can use `--help` to get additional help: ```console $ bin/wasm-interp --help ``` ## Running wast2json See [wast2json.md](docs/wast2json.md). ## Running wasm-decompile For example: ```sh # parse binary file test.wasm and write text file test.dcmp $ bin/wasm-decompile test.wasm -o test.dcmp ``` You can use `--help` to get additional help: ```console $ bin/wasm-decompile --help ``` See [decompiler.md](docs/decompiler.md) for more information on the language being generated. ## Running wasm2c See [wasm2c.md](wasm2c/README.md) ## Running the test suite See [test/README.md](test/README.md). ## Sanitizers To build with the [LLVM sanitizers]( append the sanitizer name to the target: ```console $ make clang-debug-asan $ make clang-debug-msan $ make clang-debug-lsan $ make clang-debug-ubsan ``` There are configurations for the Address Sanitizer (ASAN), Memory Sanitizer (MSAN), Leak Sanitizer (LSAN) and Undefined Behavior Sanitizer (UBSAN). You can read about the behaviors of the sanitizers in the link above, but essentially the Address Sanitizer finds invalid memory accesses (use after free, access out-of-bounds, etc.), Memory Sanitizer finds uses of uninitialized memory, the Leak Sanitizer finds memory leaks, and the Undefined Behavior Sanitizer finds undefined behavior (sur... [TRUNCATED]","662, Code, Issues, Pull requests, Actions, Security, Insights, sanitizer failures, good-first-bug, enhancement, interpreter, help wanted, wontfix, question, invalid, duplicate, bug"
caesium-image-compressor,Lymphatus/caesium-image-compressor,2672,"['C++', 'C', 'CMake']","['image-compression', 'caesium', 'libcaesium', 'compression', 'cross-platform']","## Caesium Image Compressor []( []( Try it directly on browser at [caesium.app]( ###### v2.7.1 ### Special Thanks ---------- ### What is it for Caesium is an image compression software that helps you store, send and share digital pictures, supporting JPG, PNG and WebP formats. You can quickly reduce the file size (and resolution, if you want) by preserving the overall quality of the image. ### Supported Platforms - **Windows**: 10 (build 1809 or later) (use old version v1.x for Windows 7 or 8 - [link]( - **MacOS**: 10.15+ - **Linux**: tested on Ubuntu 22.04 and Manjaro Note: only 64bit versions are supported ### Installation Head to the [releases' page]( for the available downloads. - **Windows**: installer and portable versions are available - **MacOS**: DMG package - **Linux**: compile the source code yourself, or download binary from [third-party build]( Note that the main branch can contain unstable code. If you want to build on a stable version, use a tagged version. ### Troubleshooting and/or feature request Please open an [issue]( ### Build from source ##### Requirements - [Rust]( required to compile [libcaesium]( Make sure you have `cargo` executable on you `$PATH` - [Qt6 SDK]( binaries are built on 6.5.3 (open source) - [libssh]( macOS only - [Sparkle]( macOS only. Only version 1.27.1 is supported. #### Build ##### Step 0 (macOS Only) You need to set up Sparkle in order to compile the project ``` brew install --cask sudo cp -R /usr/local/Caskroom/sparkle/1.27.1/Sparkle.framework /Library/Frameworks/Sparkle.framework ``` ##### Step 1 You need to configure CMake first and the command is slightly different for all the platforms: Change the path in variables with the correct directories of the requirements. ###### Windows ``` cmake -B build_dir -DCMAKE_PREFIX_PATH=/path/to/Qt/version -G ""MinGW Makefiles"" ``` ###### MacOS ``` cmake -B build_dir -DCMAKE_PREFIX_PATH=/path/to/Qt/version/macos -DLIBSSH_INCLUDE_DIR=/libssh/dir/include -DSPARKLE_INCLUDE_DIR=/usr/local/Caskroom/sparkle/1.27.1/Sparkle.framework/Versions/Current/Headers ``` ###### Linux Make sure you have all the requirements installed with you own package manager ``` cmake -B build_dir -DCMAKE_PREFIX_PATH=/path/to/Qt/version/gcc_64 ``` ##### Step 2 Then you can build with ``` cmake --build build_dir --config Release --target caesium_image_compressor ``` ### Languages and translations The 1.0 version of Caesium had a lot of community made translations, but this 2.0 release has a whole new set of strings and no old translations can be used anymore. Caesium 2.0 is currently available in: - - - - - - - - - - - - - - - - - - #### How to contribute with your translation You can help translate by opening the `resources/i18n/caesium_en_US.ts` with QtLinguist or any XML editor. Rename it to your language (e.g. `caesium_it_IT.ts`) and translate all the sentences. Then you can start a pull request with your translated file. See [this pull request]( as an example. Thanks to all the people who contributed.","177, Code, Issues, Pull requests, Actions, Projects, Security, Insights, feature request, enhancement, bug, question, wontfix, v1, invalid, help wanted, duplicate, discuss"
flatbuffers,google/flatbuffers,22174,"['C++', 'Rust', 'Python']","['flatbuffers', 'serialization', 'serialization-library', 'json-parser', 'marshalling']","FlatBuffers =========== []( []( []( []( []( []( []( **FlatBuffers** is a cross platform serialization library architected for maximum memory efficiency. It allows you to directly access serialized data without parsing/unpacking it first, while still having great forwards/backwards compatibility. ## Quick Start 1. Build the compiler for flatbuffers (`flatc`) Use `cmake` to create the build files for your platform and then perform the compliation (Linux example). ``` cmake -G ""Unix Makefiles"" make -j ``` 2. Define your flatbuffer schema (`.fbs`) Write the [schema]( to define the data you want to serialize. See [monster.fbs]( for an example. 3. Generate code for your language(s) Use the `flatc` compiler to take your schema and generate language-specific code: ``` ./flatc --cpp --rust monster.fbs ``` Which generates `monster_generated.h` and `monster_generated.rs` files. 4. Serialize data Use the generated code, as well as the `FlatBufferBuilder` to construct your serialized buffer. ([`C++` example]( 5. Transmit/store/save Buffer Use your serialized buffer however you want. Send it to someone, save it for later, etc... 6. Read the data Use the generated accessors to read the data from the serialized buffer. It doesn't need to be the same language/schema version, FlatBuffers ensures the data is readable across languages and schema versions. See the [`Rust` example]( reading the data written by `C++`. ## Documentation **Go to our [landing page][] to browse our documentation.** ## Supported operating systems - Windows - macOS - Linux - Android - And any others with a recent C++ compiler (C++ 11 and newer) ## Supported programming languages Code generation and runtime libraries for many popular languages. 1. C 1. C++ - [snapcraft.io]( 1. C# - [nuget.org]( 1. Dart - [pub.dev]( 1. Go - [go.dev]( 1. Java - [Maven]( 1. JavaScript - [NPM]( 1. Kotlin 1. Lobster 1. Lua 1. PHP 1. Python - [PyPI]( 1. Rust - [crates.io]( 1. Swift - [swiftpackageindex]( 1. TypeScript - [NPM]( 1. Nim ## Versioning FlatBuffers does not follow traditional SemVer versioning (see [rationale]( but rather uses a format of the date of the release. ## Contribution * [FlatBuffers Issues Tracker][] to submit an issue. * [stackoverflow.com][] with [`flatbuffers` tag][] for any questions regarding FlatBuffers. *To contribute to this project,* see [CONTRIBUTING][]. ## Community * [Discord Server]( ## Security Please see our [Security Policy](SECURITY.md) for reporting vulnerabilities. ## Licensing *Flatbuffers* is licensed under the Apache License, Version 2.0. See [LICENSE][] for the full license text. [CONTRIBUTING]: [`flatbuffers` tag]: [FlatBuffers Google Group]: [FlatBuffers Issues Tracker]: [stackoverflow.com]: [landing page]: [LICENSE]:","3.2k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, c++, codegen, stale, python, not-stale, rust, dart, CI, swift, lua, grpc, golang, c#, typescript, pr-requested, json, kotlin, good-first-contribution, documentation, php, nim, javascript, java, help wanted, lobster, enhancement, bug, Release, unactionable, testing"
ppsspp,hrydgard/ppsspp,10616,"['C++', 'C', 'POV-Ray SDL']","['ppsspp', 'emulators', 'psp']","PPSSPP - a fast and portable PSP emulator ========================================= Created by Henrik Rydgrd Additional code by many contributors, see the Credits screen Originally released under the GPL 2.0 (and later) in November 2012 Official website: Discord: No BIOS file required to play, PPSSPP is an ""HLE"" emulator. Default settings balance good compatibility and speed. To contribute, see [the development page]( Help testing, investigating, or fixing is always welcome. See [the list of issues]( For the latest source code, see [our GitHub page]( For documentation of all kinds (usage, reference, development), see the [documentation on the main website]( For build instructions and other development tutorials, see [the wiki]( To download fresh development builds for Android, Windows and Mac, [go to the /devbuilds page]( For game compatibility, see [community compatibility feedback]( What's new in 1.17.1 -------------------- - Fixed green rendering errors on some PowerVR GPUs ([#18781]) - Release all held keys on pause to avoid ""stuck keys"" after unpausing or in run-behind-pause ([#18786]) - UI fixes ([#18785]) - Update libchdr with zstd support, warn the user about bad CHDs ([#18824], [#18803]) - Add workaround for AdHoc mode in Resistance ([#18821]) - Fix graphics in Tokimeki Memorial 4 ([#18822]) - Fix crash in UFC 2010 on Mali GPUs ([#18813]) - Temporarily disable MSAA on Adreno GPUs due to crashing ([#18819]) - Fixed some crashes and optimized the game metadata cache ([#18794], [#18775]) - Additional crashfixes and similar ([#18777], [#18779], [#18823]) - Fixed playback of frame dumps with Vulkan ([#18793]) - Volume slider added for RetroAchievements sounds ([#18772]) What's new in 1.17 ------------------ - Rendering performance and fixes - Fix for very old rendering issue in Tokimeki Memorial 4 ([#18650]) (didn't quite work, see 1.17.1) - Performance improvement in Tactics Ogre by avoiding a readback ([#18599]) - Cull small draws that are quick to check that they are offscreen ([#18446]) - Assorted optimizations ([#18586], [#18573], [#18476], [#18413], [#18416], [#18219]) - Fix HUD in Tiger Woods 06 ([#18554]) - Adrenotools support added - you can now load custom Vulkan drivers on Adreno ([#18532], [#18548], [#18699]) - Fix rendering with bad Z parameters, fixes homebrew Zig example ([#18535]) - Fix Z problem in Hayate no Gotoku!! Nightmare Paradise [#18478] - Fix frozen pitch meters in MLB games ([#18484]) - Enable MSAA on modern mobile devices (Vulkan-only) ([#18472]) - Fix video flicker in Naruto: Ultimate Ninja Heroes 2 ([#18454]) - UI - Track total time played per game ([#18442]) - When opening the pause menu, there's now an option to keep the game running behind the menu. This is enforced in multiplayer to avoid inadvertent desyncs ([#18517], [#18515]) - ISO loading improvements - The CHD file format is now fully supported (use `chdman createdvd`!), including with Remote ISO and Retroachievements - Improvements to [remote ISO]( optional tab on home screen, can now share whole folders ([#18627], [#18639], [#18640], [#18631], [#18632], [#18633],) - Controller and touchscreen fixes - More control bindings, organize into categories ([#18635], [#18589]) - Fix inverse deadzone (low end) for joystick input - Fix analog deadzones for XInput controllers ([#18407]) - Improved tilt control further ([#18533]) - Mouse input supported on Android ([#18551], [#18473]) - Customizable threshold for analog-trigger to button-press mapping, customizable delay for mouse-scroll key-up ([#18621], [#18585]) - Make it work better to bind an analog stick to four buttons, useful for camera control in some games - Can now unpause with the key you bound to pause ([#18591]) - Other fixes and updates - More work on the IR JITs ([#18234], [#18235], [#18228], [#18227], [#18226], many more) - Moving the memstick directory on Android is now faster and safer [#18744] - Workaround problems in Add Doko Demo Issho, Driver 76, Harukanaru Toki no Naka, Ace Combat by slowing down the emulated UMD drive to match reality better ([#18436], [#18445]) - VR: Quest 3 rendering issues fixed ([#18677]) - Various bugfixes in texture replacement ([#18638], [#18610], [#18519], [#18466], [#18747]) - RetroAchievements: Rich presence, renamed Challenge Mode back to the recommended Hardcore Mode, various error handling improvements, configure per game ([#18468], [#18651], [#18488], [#18428], [#18425]) - HLE: Slice large-and-slow memcpy/memset operations, can help with some stalls. ([#18560]) - Other various minor fixes and optimizations ([#18558], [#18555], [#18538], [#18529], [#18450], [#18314], [#18233], [#18678], [#18749], [#18736], [#18704]) - SoftGPU fixes ([#18362]) - Fixed international fonts on Steam Deck ([#18732], [#18734]) - GoExplore (GPS app) now starts up and allows navigation ([#18665], [#18666], [#18668], [#18669]) - SDL: Improve input latency in Vulkan mode by running rendering on a separate thread ([#18268]) - Assorted multiplayer fixes ([#18435]) - Support for emulating the infrared port of the original PSP through sceSircs ([#18684]) What's new in 1.16.6 -------------------- - Fix performance issue with Vulkan descriptor set allocation ([#18332]) - Smoother loading of replacement textures - Fix the store on iOS ([#18323]) - Fix problem with waves background ([#18310]) - Some translation updates - Other minor fixes What's new in 1.16.5 -------------------- - Additional crash and memory-leak fixes ([#18243], [#18244], [#18247]) - Revert bad change that broke things with hardware transform turned off ([#18261]) - Fix menu texture problem in Naruto Kizuna Drive in OpenGL ([#18255]) - Apply flicker fix to WWE SvR 2007 - More efficient handling of accelerometer events ([#18250]) - Fix for jumpy graphics in Harvest Moon ([#18249]) What's new in 1.16.4 -------------------- - Simplify shader cache lookups on Vulkan, hopefully fixing some crashes ([#18218]) - Assorted improvements to the IR JITs ([#18228], [#18235], [#18211], more) - Other crash and stability fixes ([#18221], [#18220], [#18230], [#18216]) - Some translation updates ([#18237], more) - Cleanups and assert fixes ([#18205], [#18201], [#18206]) What's new in 1.16.3 -------------------- - Fix crash bug and performance issue in Vulkan shader cache ([#18183], [#18189]) - Fix crash in icon loading in homebrew store ([#18185]) - Add some memory safety check ([#18184], [#18194]) - Fix problem when changing backend from the Windows menu ([#18182]) What's new in 1.16.2 -------------------- - Fix for HTTP support on Linux on networks with shaky or incomplete IPv6 support - Assorted fixes for leaks and crashes ([#18169], [#18151]) - Fix hang when switching UMD with RetroAchievements enabled ([#18143]) - Fix math bug in new IR JIT for x86 ([#18165]) - Minor math optimization -fno-math-errno ([#18158]) - Fix for software renderer crash What's new in 1.16.1 -------------------- - Move RetroAchievements to the Tools tab in settings ([#18127]) - Fix graphics regressions in Hot Shots Golf 2 / Everybody's Golf 2 and Final Fantasy Tactics ([#18142]) - Fix hang on startup with OpenGL, that happened often if ""buffer commands"" was set to off. - Fix problem with the sc instruction that broke Beats ([#18133], [#18140]) - Fix problem with the chat window accidentally closing on typing X ([#18135]) - Fix some crashes, add some asserts and reporting hooks ([#18129]) - Fix some text rendering in the software renderer ([#18126]) What's new in 1.16 ------------------ Special thanks to unknownbrackets for the new JIT compilers, and fp64 for finally cracking the vrnd instruction. - RetroAchievements support ([#17589], [#17631], many more). See [RetroAchievements on ppsspp.org]( - New JIT backends: - RISC-V, based on IR - x86 JIT based on IR. Often faster than the existing one. - Input fixes - Improve behavior when analog and digital inputs clash ([#17960]) - Combo mapping is now disabled by default ([#17673]) - Android: Better tracking of devices names ([#17562], auto config) - Fix mapping custom touch buttons to analog inputs ([#17433]) - Rendering performance and fixes - Fix flicker in WWE Smackdown vs Raw 2006 ([#18009]), video flicker in Naruto 2 ([#18008]) - Fix bad colors in Syphon Filter: Logan's Shadow menu ([#17965]) - On lower-end devices, avoid ""uber"" shaders due to performance and driver bugs ([#17449], [#17922]) - Allow disabling V-sync on Android with Vulkan, more SDL platforms ([#17903], [#18087]) - On Vulkan, reduce input lag when ""Buffer graphics commands"" is set to off ([#17831]) - Assorted minor perf ([#17810], [#17505], [#17478], [#17471], [#17452], [#17446], [#17442]) - Fix shadows in MotorStorm ([#17602]) (not actually a rendering problem) - Fix rendering issue in Lunar Silver Star ([#17451]) - Add a cache for MakePixelsTexture, improving perf in God of War ([#17534]) - Lots of software renderer improvements ([#17571], [#17569], [#17619], [#17621], [#17618], [#17609], ...) - Networking - HTTPS support now enabled in store and for RA on Windows, Android, Mac, iOS ([#17744], ...) - Ad-hoc: Fix for Metal Gear Acid issue with Link Battle ([#17947]) - Texture replacement fixes - Fix Tactics Ogre texture issues ([#18001], [#18011]) - Fix problem with anisotropic filtering ([#17930]) - Fix glitches on D3D11 with KTX2 textures ([#17749]) - UI changes - Color emoji support on some platforms ([#17854], [#17856]) - Use TTF fonts on SDL where available (macOS, Linux/Steam Deck) ([#17844]), support HiDPI ([#17651]) - Allow setting the PSP's MAC address directly ([#17755]) - Better looking notifications ([#17606], [#17674], [#17672]) - Cheats - Fix loading cheat dbs on Android devices with scoped storage ([#17834]) - VR (Quest, other Android VR devices) - Cinema screen mode improvements ([#17704], [#17752]) - Quest-only passthrough mode ([#17591]) - Cleanups, compatibility fixes, make VR settings per-game ([#17636], [#17656], [#17598], [#17518]) - Other - Fix horrible audio glitch in After Burner ([#18076... [TRUNCATED]","2.1k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, GE emulation, Feature Request, Networking / adhoc, User Interface, Input/Controller, Platform-specific (Android), Vulkan, No Feedback / Outdated?, Platform-specific (iOS), Platform-specific (Linux/POSIX), Libretro, OpenGL, Depth / Z, PSMF / MPEG, Atrac3+, Performance, Audio, Platform-specific (Mac OS X), CPU emulation, I/O, D3D9, HLE/Kernel, Patched-game, D3D11, Platform-specific (Windows), Saving issue, SDL2, Mali GPU, GPU readback, Qt"
async-profiler,async-profiler/async-profiler,7195,"['C++', 'Java', 'C']",[],"# async-profiler This project is a low overhead sampling profiler for Java that does not suffer from [Safepoint bias problem]( It features HotSpot-specific APIs to collect stack traces and to track memory allocations. The profiler works with OpenJDK and other Java runtimes based on the HotSpot JVM. async-profiler can trace the following kinds of events: - CPU cycles - Hardware and Software performance counters like cache misses, branch misses, page faults, context switches etc. - Allocations in Java Heap - Contented lock attempts, including both Java object monitors and ReentrantLocks See our [Wiki]( or [3 hours playlist]( to learn about all features. ## Download Current release (3.0): - Linux x64: [async-profiler-3.0-linux-x64.tar.gz]( - Linux arm64: [async-profiler-3.0-linux-arm64.tar.gz]( - macOS x64/arm64: [async-profiler-3.0-macos.zip]( - Converters between profile formats: [converter.jar]( (JFR to Flame Graph, JFR to pprof, collapsed stacks to Flame Graph) [Previous releases]( async-profiler also comes bundled with IntelliJ IDEA Ultimate 2018.3 and later. For more information refer to [IntelliJ IDEA documentation]( ## Supported platforms | | Officially maintained builds | Other available ports | |-----------|------------------------------|-------------------------------------------| | **Linux** | x64, arm64 | x86, arm32, ppc64le, riscv64, loongarch64 | | **macOS** | x64, arm64 | | ## CPU profiling In this mode profiler collects stack trace samples that include **Java** methods, **native** calls, **JVM** code and **kernel** functions. The general approach is receiving call stacks generated by `perf_events` and matching them up with call stacks generated by `AsyncGetCallTrace`, in order to produce an accurate profile of both Java and native code. Additionally, async-profiler provides a workaround to recover stack traces in some [corner cases]( where `AsyncGetCallTrace` fails. This approach has the following advantages compared to using `perf_events` directly with a Java agent that translates addresses to Java method names: * Does not require `-XX:+PreserveFramePointer`, which introduces performance overhead that can be sometimes as high as 10%. * Does not require generating a map file for translating Java code addresses to method names. * Displays interpreter frames. * Does not produce large intermediate files (perf.data) for further processing in user space scripts. If you wish to resolve frames within `libjvm`, the [debug symbols](#installing-debug-symbols) are required. ## ALLOCATION profiling The profiler can be configured to collect call sites where the largest amount of heap memory is allocated. async-profiler does not use intrusive techniques like bytecode instrumentation or expensive DTrace probes which have significant performance impact. It also does not affect Escape Analysis or prevent from JIT optimizations like allocation elimination. Only actual heap allocations are measured. The profiler features TLAB-driven sampling. It relies on HotSpot-specific callbacks to receive two kinds of notifications: - when an object is allocated in a newly created TLAB; - when an object is allocated on a slow path outside TLAB. Sampling interval can be adjusted with `--alloc` option. For example, `--alloc 500k` will take one sample after 500 KB of allocated space on average. Prior to JDK 11, intervals less than TLAB size will not take effect. ### Installing Debug Symbols Prior to JDK 11, the allocation profiler required HotSpot debug symbols. Some OpenJDK distributions (Amazon Corretto, Liberica JDK, Azul Zulu) already have them embedded in `libjvm.so`, other OpenJDK builds typically provide debug symbols in a separate package. For example, to install OpenJDK debug symbols on Debian / Ubuntu, run: ``` # apt install openjdk-17-dbg ``` (replace `17` with the desired version of JDK). On CentOS, RHEL and some other RPM-based distributions, this could be done with [debuginfo-install]( utility: ``` # debuginfo-install java-1.8.0-openjdk ``` On Gentoo the `icedtea` OpenJDK package can be built with the per-package setting `FEATURES=""nostrip""` to retain symbols. The `gdb` tool can be used to verify if debug symbols are properly installed for the `libjvm` library. For example, on Linux: ``` $ gdb $JAVA_HOME/lib/server/libjvm.so -ex 'info address UseG1GC' ``` This command's output will either contain `Symbol ""UseG1GC"" is at 0xxxxx` or `No symbol ""UseG1GC"" in current context`. ## Wall-clock profiling `-e wall` option tells async-profiler to sample all threads equally every given period of time regardless of thread status: Running, Sleeping or Blocked. For instance, this can be helpful when profiling application start-up time. Wall-clock profiler is most useful in per-thread mode: `-t`. Example: `asprof -e wall -t -i 5ms -f result.html 8983` ## Java method profiling `-e ClassName.methodName` option instruments the given Java method in order to record all invocations of this method with the stack traces. Example: `-e java.util.Properties.getProperty` will profile all places where `getProperty` method is called from. Only non-native Java methods are supported. To profile a native method, use hardware breakpoint event instead, e.g. `-e Java_java_lang_Throwable_fillInStackTrace` **Be aware** that if you attach async-profiler at runtime, the first instrumentation of a non-native Java method may cause the [deoptimization]( of all compiled methods. The subsequent instrumentation flushes only the _dependent code_. The massive CodeCache flush doesn't occur if attaching async-profiler as an agent. Here are some useful native methods that you may want to profile: * ```G1CollectedHeap::humongous_obj_allocate``` - trace _humongous allocations_ of the G1 GC, * ```JVM_StartThread``` - trace creation of new Java threads, * ```Java_java_lang_ClassLoader_defineClass1``` - trace class loading. ## Building Build status: []( Make sure the `JAVA_HOME` environment variable points to your JDK installation, and then run `make`. GCC or Clang is required. After building, the profiler binaries will be in the `build` subdirectory. ## Basic Usage As of Linux 4.6, capturing kernel call stacks using `perf_events` from a non-root process requires setting two runtime variables. You can set them using sysctl or as follows: ``` # sysctl kernel.perf_event_paranoid=1 # sysctl kernel.kptr_restrict=0 ``` async-profiler works in the context of the target Java application, i.e. it runs as an agent in the process being profiled. `asprof` is a tool to attach and control the agent. A typical workflow would be to launch your Java application, attach the agent and start profiling, exercise your performance scenario, and then stop profiling. The agent's output, including the profiling results, will be displayed on the console where you've started `asprof`. Example: ``` $ jps 9234 Jps 8983 Computey $ asprof start 8983 $ asprof stop 8983 ``` The following may be used in lieu of the `pid` (8983): - The keyword `jps`, which will use the most recently launched Java process. - The application name as it appears in the `jps` output: e.g. `Computey` Alternatively, you may specify `-d` (duration) argument to profile the application for a fixed period of time with a single command. ``` $ asprof -d 30 8983 ``` By default, the profiling frequency is 100Hz (every 10ms of CPU time). Here is a sample of the output printed to the Java application's terminal: ``` --- Execution profile --- Total samples: 687 Unknown (native): 1 (0.15%) --- 6790000000 (98.84%) ns, 679 samples [ 0] Primes.isPrime [ 1] Primes.primesThread [ 2] Primes.access$000 [ 3] Primes$1.run [ 4] java.lang.Thread.run ... a lot of output omitted for brevity ... ns percent samples top ---------- ------- ------- --- 6790000000 98.84% 679 Primes.isPrime 40000000 0.58% 4 __do_softirq ... more output omitted ... ``` This indicates that the hottest method was `Primes.isPrime`, and the hottest call stack leading to it comes from `Primes.primesThread`. ## Launching as an Agent If you need to profile some code as soon as the JVM starts up, instead of using the `asprof`, it is possible to attach async-profiler as an agent on the command line. For example: ``` $ java -agentpath:/path/to/libasyncProfiler.so=start,event=cpu,file=profile.html ... ``` Agent library is configured through the JVMTI argument interface. The format of the arguments string is described [in the source code]( `asprof` actually converts command line arguments to that format. For instance, `-e wall` is converted to `event=wall`, `-f profile.html` is converted to `file=profile.html`, and so on. However, some arguments are processed directly by `asprof`. E.g. `-d 5` results in 3 actions: attaching profiler agent with start command, sleeping for 5 seconds, and then attaching the agent again with stop command. ## Multiple events It is possible to profile CPU, allocations, and locks at the same time. Instead of CPU, you may choose any other execution event: wall-clock, perf event, tracepoint, Java method, etc. The only output format that supports multiple events together is JFR. The recording will contain the following event types: - `jdk.ExecutionSample` - `jdk.ObjectAllocationInNewTLAB` (alloc) - `jdk.ObjectAllocationOutsideTLAB` (alloc) - `jdk.JavaMonitorEnter` (lock) - `jdk.ThreadPark` (lock) To start profiling cpu + allocations + locks together, specify ``` asprof -e cpu,alloc,lock -f profile.jfr ... ``` or use `--alloc` and `--lock` parameters with the desired threshold: ``` asprof -e cpu --alloc 2m --lock 10ms -f profile.jfr ... ``` The same, when starting profiler as an agent: ``` -agentpath:/path/to/libasyncProfiler.so=start,event=cpu,alloc=2m,lock=10ms,file=profile.jfr ``` ## Flame Graph visualization async-profiler provides out-of-the-box [Flame Graph]( support. Specify `-o flamegraph` argument to dump profiling results as an interactive HTML Flame Graph. Also, Flame Graph output format will be chosen automatically if the target filename ends with `.html`... [TRUNCATED]","810, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, enhancement, bug, question, zing, wontfix, outdated, off-topic, not a bug, need more details, jvm bug, help wanted, external, duplicate"
codon,exaloop/codon,13913,"['C++', 'Python', 'CMake']","['python', 'compiler', 'llvm', 'high-performance', 'gpu-programming']","Docs FAQ Blog Chat Roadmap Benchmarks ## What is Codon? Codon is a high-performance Python implementation that compiles to native machine code without any runtime overhead. Typical speedups over vanilla Python are on the order of 10-100x or more, on a single thread. Codon's performance is typically on par with (and sometimes better than) that of C/C++. Unlike Python, Codon supports native multithreading, which can lead to speedups many times higher still. *Think of Codon as Python reimagined for static, ahead-of-time compilation, built from the ground up with best possible performance in mind.* ### Goals - :bulb: **No learning curve:** Be as close to CPython as possible in terms of syntax, semantics and libraries - :rocket: **Top-notch performance:** At *least* on par with low-level languages like C, C++ or Rust - :computer: **Hardware support:** Full, seamless support for multicore programming, multithreading (no GIL!), GPU and more - :chart_with_upwards_trend: **Optimizations:** Comprehensive optimization framework that can target high-level Python constructs and libraries - :battery: **Interoperability:** Full interoperability with Python's ecosystem of packages and libraries ### Non-goals - :x: *Drop-in replacement for CPython:* Codon is not a drop-in replacement for CPython. There are some aspects of Python that are not suitable for static compilation we don't support these in Codon. There are ways to use Codon in larger Python codebases via its [JIT decorator]( or [Python extension backend]( Codon also supports calling any Python module via its [Python interoperability]( See also [*""Differences with Python""*]( in the docs. - :x: *New syntax and language constructs:* We try to avoid adding new syntax, keywords or other language features as much as possible. While Codon does add some new syntax in a couple places (e.g. to express parallelism), we try to make it as familiar and intuitive as possible. ## Install Pre-built binaries for Linux (x86_64) and macOS (x86_64 and arm64) are available alongside [each release]( Download and install with: ```bash /bin/bash -c ""$(curl -fsSL ``` Or you can [build from source]( ## Examples Codon is a Python-compatible language, and many Python programs will work with few if any modifications: ```python def fib(n): a, b = 0, 1 while a < n: print(a, end=' ') a, b = b, a+b print() fib(1000) ``` The `codon` compiler has a number of options and modes: ```bash # compile and run the program codon run fib.py # 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 # compile and run the program with optimizations enabled codon run -release fib.py # 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 # compile to executable with optimizations enabled codon build -release -exe fib.py ./fib # 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 # compile to LLVM IR file with optimizations enabled codon build -release -llvm fib.py # outputs file fib.ll ``` See [the docs]( for more options and examples. You can import and use any Python package from Codon. For example: ```python from python import matplotlib.pyplot as plt data = [x**2 for x in range(10)] plt.plot(data) plt.show() ``` (Just remember to set the `CODON_PYTHON` environment variable to the CPython shared library, as explained in the [the docs]( This prime counting example showcases Codon's [OpenMP]( support, enabled with the addition of one line. The `@par` annotation tells the compiler to parallelize the following `for`-loop, in this case using a dynamic schedule, chunk size of 100, and 16 threads. ```python from sys import argv def is_prime(n): factors = 0 for i in range(2, n): if n % i == 0: factors += 1 return factors == 0 limit = int(argv[1]) total = 0 @par(schedule='dynamic', chunk_size=100, num_threads=16) for i in range(2, limit): if is_prime(i): total += 1 print(total) ``` Codon supports writing and executing GPU kernels. Here's an example that computes the [Mandelbrot set]( ```python import gpu MAX = 1000 # maximum Mandelbrot iterations N = 4096 # width and height of image pixels = [0 for _ in range(N * N)] def scale(x, a, b): return a + (x/N)*(b - a) @gpu.kernel def mandelbrot(pixels): idx = (gpu.block.x * gpu.block.dim.x) + gpu.thread.x i, j = divmod(idx, N) c = complex(scale(j, -2.00, 0.47), scale(i, -1.12, 1.12)) z = 0j iteration = 0 while abs(z) <= 2 and iteration < MAX: z = z**2 + c iteration += 1 pixels[idx] = int(255 * iteration/MAX) mandelbrot(pixels, grid=(N*N)//1024, block=1024) ``` GPU programming can also be done using the `@par` syntax with `@par(gpu=True)`. ## Documentation Please see [docs.exaloop.io]( for in-depth documentation.","495, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, enhancement, bug, stdlib, question, help wanted, documentation, cla-signed, typecheck, installation, dependencies, wontfix, invalid, good first issue, duplicate"
cocos-engine,cocos/cocos-engine,5398,"['C++', 'TypeScript', 'JavaScript']","['cocos', 'cocoscreator', 'game-engine', 'game-development', 'open-source']","# Engine for Cocos Creator **Cocos Creator is the new generation of game development tool in Cocos family, it brings a complete set of 3D and 2D features while providing an intuitive, low cost and collaboration friendly workflow to game developers.** Cocos Engine is the runtime framework for Cocos Creator editor. Cocos Creator inherited many good qualities and cool features from its previous versions, such as high performance low level C++ implementation, intuitive editor, cross-platform support. It supports native platforms, web platforms and rapidly expanding instant gaming platforms, including Windows, Mac, iOS, Android, HarmonyOS, Web, Facebook Instant Games, WeChat Mini Game and TikTok Mini Games. Furthermore, Cocos Creator has pushed the engine technology to a whole new level for high performance with scalability on various platforms, full extensibility and easy development. 1. **Modern Graphics**: The GFX implementation is designed to adapt to the modern graphics APIs, it uses Vulkan on Windows and Android, Metal on Mac OS and iOS, WebGL on Web platform. 2. **High Performance**: The runtime engine is built with half C++ and half TypeScript, low level infrastructure, native platform adaptation, renderer and scene management are all written in C++ to ensure high runtime performance. We continue to move heavy lifting work to native as much as possible. 3. **Customizable Render Pipeline**: The render pipeline is designed to be fully customizable, it has supported the builtin forward and deferred render pipeline across all platforms. Developers can customize their own render pipeline following the same approach. 4. **Extensible Surface Shader**: The material system is built on Cocos effect format which uses GLSL 300, the shader programs will be converted to suitable runtime format automatically. The surface shader permit to fully customize the surface material while ensuring universal lighting model. 5. **Physically Based Rendering (PBR)**: The standard effect adopts physically based rendering, along with the physically based camera and the lighting based on physical metrics, developers can easily achieve realistic and seamless rendering results across different environment. 6. **Easy TypeScript API**: The user level API set is provided in TypeScript, along with the powerful VSCode editor, development with Cocos Creator is incredibly efficient. Besides all these highlights, Cocos Creator also provides builtin animation system, physics system, particle system, terrain editing support, complex UI system, instant preview etc. This open source repository is the runtime engine of Cocos Creator, the engine is naturally integrated within Cocos Creator, designed to only be the essential runtime library and not to be used independently. ## Development and Contribution Notice Cocos Creator engine is open source and welcomes community participation, for open source engine development with Cocos Creator editor, you should fork this repository and setup [custom engine]( in the editor. ### Prerequisite - Install [node.js v9.11.2 +]( - Install [gulp-cli v2.3.0 +]( ### Clone Clone this repository into your local environment. ### Install In the cloned engine folder, run the following command to setup development environment: ```bash # download & build engine dependencies npm install ``` This is all you have to do to setup engine development environment. ### Build - If running inside Cocos Creator, the engine will automatically compile and build after the editor window is opened. For more instructions on modifying the engine in Cocos Creator, please refer to [Engine Customization Workflow]( - Outside the editor, you need to run the following command to build: ```bash npm run build ``` Please refer to [native readme](native/README.md) if you want to develop native applications. ### Contribution You can contribute to the Cocos Creator open source engine in many ways, they are very much appreciated: 1. Report bug or feature requests by [creating an issue]( 2. Participate discussions in the [issues]( 3. Create a pull request if you have fixed or improved anything, implemented any features. 4. Improve the documentations with pull request to the [usage documentation repository]( 5. Help other developers in our [Forum]( ### Contribution notice If you are trying to make a pull request, there are some requirements that must be met so that your pull request can be accepted: 1. Follow our [Cpp Coding Style Guide](./docs/CPP_CODING_STYLE.md) and [TypeScript Coding Style Reference](./docs/TS_CODING_STYLE.md). 2. Try to integrate ESLint and [CPP auto fix tools](./docs/CPP_LINTER_AUTOFIX_GUIDE.md) in your coding environment. 3. Link related issues or discussions in your pull request and clearly state the purpose of your pull request. 4. Pass all automatic continuous integration tests. 5. Request file owner or engine developers to review your pull request. 6. Get one valid approval from the engine architects. ## Example Project - [Mind Your Step 3D]( Beginner's step-by-step tutorial project repo. - [Test Cases]( Unit test scenes for every engine module. - [Example Cases]( Simple yet expressive demo scenes for baseline testing and topic-specific case study. - [Awesome Cocos]( You can find out other useful tools and show cases here. ## Links - [Official site]( - [Download]( - [Documentation]( - [API References]( - [Projects and road map]( - [Forum]( - Discord community: Search for Cocos in the Discover panel of Discord.","1.6k, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, Bug, Needs Triage, Feature Request, P2, Optimization, Editor, Scripting, ECO: Feedback, Env: Native, Module: 2D, P1, Module: Physics, P3, Env: Android, PR: Do not merge, Env: iOS, Module: Renderer, Discussion, Module: PAL, Env: Web, Module: AssetSystem, Env: Windows, 2.x, Module: Particle, Module: Input, Module: Scene, Module: Build, Module: Animation, Information needed, GFX: Vulkan"
LIO-SAM,TixiaoShan/LIO-SAM,3124,"['C++', 'Python', 'CMake']","['lidar-odometry', 'lidar-slam', 'loam-velodyne', 'lidar-inertial', '3d-mapping']","# LIO-SAM **A real-time lidar-inertial odometry package. We strongly recommend the users read this document thoroughly and test the package with the provided dataset first. A video of the demonstration of the method can be found on [YouTube]( ## Menu - [**System architecture**](#system-architecture) - [**Package dependency**](#dependency) - [**Package install**](#install) - [**Prepare lidar data**](#prepare-lidar-data) (must read) - [**Prepare IMU data**](#prepare-imu-data) (must read) - [**Sample datasets**](#sample-datasets) - [**Run the package**](#run-the-package) - [**Other notes**](#other-notes) - [**Issues**](#issues) - [**Paper**](#paper) - [**TODO**](#todo) - [**Related Package**](#related-package) - [**Acknowledgement**](#acknowledgement) ## System architecture We design a system that maintains two graphs and runs up to 10x faster than real-time. - The factor graph in ""mapOptimization.cpp"" optimizes lidar odometry factor and GPS factor. This factor graph is maintained consistently throughout the whole test. - The factor graph in ""imuPreintegration.cpp"" optimizes IMU and lidar odometry factor and estimates IMU bias. This factor graph is reset periodically and guarantees real-time odometry estimation at IMU frequency. ## Dependency This is the original ROS1 implementation of LIO-SAM. For a ROS2 implementation see branch `ros2`. - [ROS]( (tested with Kinetic and Melodic. Refer to [#206]( for Noetic) ``` sudo apt-get install -y ros-kinetic-navigation sudo apt-get install -y ros-kinetic-robot-localization sudo apt-get install -y ros-kinetic-robot-state-publisher ``` - [gtsam]( (Georgia Tech Smoothing and Mapping library) ``` sudo add-apt-repository ppa:borglab/gtsam-release-4.0 sudo apt install libgtsam-dev libgtsam-unstable-dev ``` ## Install Use the following commands to download and compile the package. ``` cd ~/catkin_ws/src git clone cd .. catkin_make ``` ## Using Docker Build image (based on ROS1 Kinetic): ```bash docker build -t liosam-kinetic-xenial . ``` Once you have the image, start a container as follows: ```bash docker run --init -it -d \ -v /etc/localtime:/etc/localtime:ro \ -v /etc/timezone:/etc/timezone:ro \ -v /tmp/.X11-unix:/tmp/.X11-unix \ -e DISPLAY=$DISPLAY \ liosam-kinetic-xenial \ bash ``` ## Prepare lidar data The user needs to prepare the point cloud data in the correct format for cloud deskewing, which is mainly done in ""imageProjection.cpp"". The two requirements are: - **Provide point time stamp**. LIO-SAM uses IMU data to perform point cloud deskew. Thus, the relative point time in a scan needs to be known. The up-to-date Velodyne ROS driver should output this information directly. Here, we assume the point time channel is called ""time."" The definition of the point type is located at the top of the ""imageProjection.cpp."" ""deskewPoint()"" function utilizes this relative time to obtain the transformation of this point relative to the beginning of the scan. When the lidar rotates at 10Hz, the timestamp of a point should vary between 0 and 0.1 seconds. If you are using other lidar sensors, you may need to change the name of this time channel and make sure that it is the relative time in a scan. - **Provide point ring number**. LIO-SAM uses this information to organize the point correctly in a matrix. The ring number indicates which channel of the sensor that this point belongs to. The definition of the point type is located at the top of ""imageProjection.cpp."" The up-to-date Velodyne ROS driver should output this information directly. Again, if you are using other lidar sensors, you may need to rename this information. Note that only mechanical lidars are supported by the package currently. ## Prepare IMU data - **IMU requirement**. Like the original LOAM implementation, LIO-SAM only works with a 9-axis IMU, which gives roll, pitch, and yaw estimation. The roll and pitch estimation is mainly used to initialize the system at the correct attitude. The yaw estimation initializes the system at the right heading when using GPS data. Theoretically, an initialization procedure like VINS-Mono will enable LIO-SAM to work with a 6-axis IMU. (**New**: [liorf]( has added support for 6-axis IMU.) The performance of the system largely depends on the quality of the IMU measurements. The higher the IMU data rate, the better the system accuracy. We use Microstrain 3DM-GX5-25, which outputs data at 500Hz. We recommend using an IMU that gives at least a 200Hz output rate. Note that the internal IMU of Ouster lidar is an 6-axis IMU. - **IMU alignment**. LIO-SAM transforms IMU raw data from the IMU frame to the Lidar frame, which follows the ROS REP-105 convention (x - forward, y - left, z - upward). To make the system function properly, the correct extrinsic transformation needs to be provided in ""params.yaml"" file. **The reason why there are two extrinsics is that my IMU (Microstrain 3DM-GX5-25) acceleration and attitude have different cooridinates. Depend on your IMU manufacturer, the two extrinsics for your IMU may or may not be the same**. Using our setup as an example: - we need to set the readings of x-z acceleration and gyro negative to transform the IMU data in the lidar frame, which is indicated by ""extrinsicRot"" in ""params.yaml."" - The transformation of attitude readings might be slightly different. IMU's attitude measurement `q_wb` usually means the rotation of points in the IMU coordinate system to the world coordinate system (e.g. ENU). However, the algorithm requires `q_wl`, the rotation from lidar to world. So we need a rotation from lidar to IMU `q_bl`, where `q_wl = q_wb * q_bl`. For convenience, the user only needs to provide `q_lb` as ""extrinsicRPY"" in ""params.yaml"" (same as the ""extrinsicRot"" if acceleration and attitude have the same coordinate). - **IMU debug**. It's strongly recommended that the user uncomment the debug lines in ""imuHandler()"" of ""imageProjection.cpp"" and test the output of the transformed IMU data. The user can rotate the sensor suite to check whether the readings correspond to the sensor's movement. A YouTube video that shows the corrected IMU data can be found [here (link to YouTube)]( ## Sample datasets * Download some sample datasets to test the functionality of the package. The datasets below are configured to run using the default settings: - **Walking dataset:** [[Google Drive]( - **Park dataset:** [[Google Drive]( - **Garden dataset:** [[Google Drive]( * The datasets below need the parameters to be configured. In these datasets, the point cloud topic is ""points_raw."" The IMU topic is ""imu_correct,"" which gives the IMU data in ROS REP105 standard. Because no IMU transformation is needed for this dataset, the following configurations need to be changed to run this dataset successfully: - The ""imuTopic"" parameter in ""config/params.yaml"" needs to be set to ""imu_correct"". - The ""extrinsicRot"" and ""extrinsicRPY"" in ""config/params.yaml"" needs to be set as identity matrices. - **Rotation dataset:** [[Google Drive]( - **Campus dataset (large):** [[Google Drive]( - **Campus dataset (small):** [[Google Drive]( * Ouster (OS1-128) dataset. No extrinsics need to be changed for this dataset if you are using the default settings. Please follow the Ouster notes below to configure the package to run with Ouster data. A video of the dataset can be found on [YouTube]( - **Rooftop dataset:** [[Google Drive]( * Livox Horizon dataset. Please refer to the following notes section for paramater changes. - **Livox Horizon:** [[Google Drive]( * KITTI dataset. The extrinsics can be found in the Notes KITTI section below. To generate more bags using other KITTI raw data, you can use the python script provided in ""config/doc/kitti2bag"". - **2011_09_30_drive_0028:** [[Google Drive]( ## Run the package 1. Run the launch file: ``` roslaunch lio_sam run.launch ``` 2. Play existing bag files: ``` rosbag play your-bag.bag -r 3 ``` ## Other notes - **Loop closure:** The loop function here gives an example of proof of concept. It is directly adapted from LeGO-LOAM loop closure. For more advanced loop closure implementation, please refer to [ScanContext]( Set the ""loopClosureEnableFlag"" in ""params.yaml"" to ""true"" to test the loop closure function. In Rviz, uncheck ""Map (cloud)"" and check ""Map (global)"". This is because the visualized map - ""Map (cloud)"" - is simply a stack of point clouds in Rviz. Their postion will not be updated after pose correction. The loop closure function here is simply adapted from LeGO-LOAM, which is an ICP-based method. Because ICP runs pretty slow, it is suggested that the playback speed is set to be ""-r 1"". You can try the Garden dataset for testing. - **Using GPS:** The park dataset is provided for testing LIO-SAM with GPS data. This dataset is gathered by [Yewei Huang]( To enable the GPS function, change ""gpsTopic"" in ""params.yaml"" to ""odometry/gps"". In Rviz, uncheck ""Map (cloud)"" and check ""Map (global)"". Also check ""Odom GPS"", which visualizes the GPS odometry. ""gpsCovThreshold"" can be adjusted to filter bad GPS readings. ""poseCovThreshold"" can be used to adjust the frequency of adding GPS factor to the graph. For example, you will notice the trajectory is constantly corrected by GPS whey you set ""poseCovThreshold"" to 1.0. Because of the heavy iSAM optimization, it's recommended that the playback speed is ""-r 1"". - **KITTI:** Since LIO-SAM needs a high-frequency IMU for function properly, we need to use KITTI raw data for testing. One problem remains unsolved is that the intrinsics of the IMU are unknown, which has a big impact on the accuracy of LIO-SAM. Download the provided sample data and make the following changes in ""params.yaml"": - extrinsicTrans: [-8.086759e-01, 3.195559e-01, -7.997231e-01] - extrinsicRot: [9.999976e-01, 7.553071e-04, -2.035826e-03, -7.854027e-04, 9.998898e-01, -1.482298e-02, 2.024406e-03, 1.482454e-02, 9.998881e-01] - extrinsicRPY: [9.999976e-01, 7.553071e-04, -2.035826e-03, -7.854027e-04, 9.998898e-01, -1.482298e-02, 2.024406e-03, 1.... [TRUNCATED]","1.2k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, stale, wontfix, question, performance, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug, Ouster, Loop Closure, IMU, GTSAM, Extrincis, Compile"
fort,tnodir/fort,964,"['C++', 'C', 'Inno Setup']","['firewall', 'windows', 'bandwidth-limiting']","Fort Firewall []( []( []( []( []( Fort is an effective firewall designed for Windows 7 and later versions, offering both simplicity and robustness. ## Features - Filter by network addresses, application groups and more - Filter by `SvcHost.exe` service names - Support for wildcards in application path names - Speed limit application groups - Blocklists via ""Zones"" - Saves traffic statistics - Graphical display of the bandwidth - Has its own kernel driver based on the Windows Filtering Platform (WFP) ## [System Requirements]( ### Which installer should I download? - for **Windows 10 1809** or newer: []( - for **Windows 7** or newer (e.g. Windows 10 1703): []( ----- ## Wiki - [User Guide]( - [Functionality overview]( - [Frequently Asked Questions (FAQ)]( - [Building]( ## Support - Star it on GitHub, Rate on [AlternativeTo]( - [Report bugs]( [Discuss ideas]( ### Sponsoring []( []( ## SAST Tools [PVS-Studio]( - static analyzer for C, C++, C#, and Java code. ## Attribution - [FatCow Free Icons]( -- Nodir Temirkhodjaev,","83, Code, Issues, Pull requests, Discussions, Actions, Wiki, Security, Insights, enhancement, question, work-in-progress, wontfix, need-more-info, invalid, help wanted, duplicate, bug"
lyra,google/lyra,3773,"['C++', 'Starlark', 'Java']",[],"# Lyra: a generative low bitrate speech codec ## What is Lyra? [Lyra]( is a high-quality, low-bitrate speech codec that makes voice communication available even on the slowest networks. To do this it applies traditional codec techniques while leveraging advances in machine learning (ML) with models trained on thousands of hours of data to create a novel method for compressing and transmitting voice signals. ### Overview The basic architecture of the Lyra codec is quite simple. Features are extracted from speech every 20ms and are then compressed for transmission at a desired bitrate between 3.2kbps and 9.2kbps. On the other end, a generative model uses those features to recreate the speech signal. Lyra harnesses the power of new natural-sounding generative models to maintain the low bitrate of parametric codecs while achieving high quality, on par with state-of-the-art waveform codecs used in most streaming and communication platforms today. Computational complexity is reduced by using a cheaper convolutional generative model called SoundStream, which enables Lyra to not only run on cloud servers, but also on-device on low-end phones in real time (with a processing latency of 20ms). This whole system is then trained end-to-end on thousands of hours of speech data with speakers in over 90 languages and optimized to accurately recreate the input audio. Lyra is supported on Android, Linux, Mac and Windows. ## Prerequisites There are a few things you'll need to do to set up your computer to build Lyra. ### Common setup Lyra is built using Google's build system, Bazel. Install it following these [instructions]( Bazel verson 5.0.0 is required, and some Linux distributions may make an older version available in their application repositories, so make sure you are using the required version or newer. The latest version can be downloaded via [Github]( You will also need python3 and numpy installed. Lyra can be built from Linux using Bazel for an ARM Android target, or a Linux target, as well as Mac and Windows for native targets. ### Android requirements Building on android requires downloading a specific version of the android NDK toolchain. If you develop with Android Studio already, you might not need to do these steps if ANDROID_HOME and ANDROID_NDK_HOME are defined and pointing at the right version of the NDK. 1. Download command line tools from 2. Unzip and cd to the directory 3. Check the available packages to install in case they don't match the following steps. ```shell bin/sdkmanager --sdk_root=$HOME/android/sdk --list ``` Some systems will already have the java runtime set up. But if you see an error here like `ERROR: JAVA_HOME is not set and no 'java' command could be found on your PATH.`, this means you need to install the java runtime with `sudo apt install default-jdk` first. You will also need to add `export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64` (type `ls /usr/lib/jvm` to see which path was installed) to your $HOME/.bashrc and reload it with `source $HOME/.bashrc`. 4. Install the r21 ndk, android sdk 30, and build tools: ```shell bin/sdkmanager --sdk_root=$HOME/android/sdk --install ""platforms;android-30"" ""build-tools;30.0.3"" ""ndk;21.4.7075529"" ``` 5. Add the following to .bashrc (or export the variables) ```shell export ANDROID_NDK_HOME=$HOME/android/sdk/ndk/21.4.7075529 export ANDROID_HOME=$HOME/android/sdk ``` 6. Reload .bashrc (with `source $HOME/.bashrc`) ## Building The building and running process differs slightly depending on the selected platform. ### Building for Linux You can build the cc_binaries with the default config. `encoder_main` is an example of a file encoder. ```shell bazel build -c opt lyra/cli_example:encoder_main ``` You can run `encoder_main` to encode a test .wav file with some speech in it, specified by `--input_path`. The `--output_dir` specifies where to write the encoded (compressed) representation, and the desired bitrate can be specified using the `--bitrate` flag. ```shell bazel-bin/lyra/cli_example/encoder_main --input_path=lyra/testdata/sample1_16kHz.wav --output_dir=$HOME/temp --bitrate=3200 ``` Similarly, you can build decoder_main and use it on the output of encoder_main to decode the encoded data back into speech. ```shell bazel build -c opt lyra/cli_example:decoder_main bazel-bin/lyra/cli_example/decoder_main --encoded_path=$HOME/temp/sample1_16kHz.lyra --output_dir=$HOME/temp/ --bitrate=3200 ``` Note: the default Bazel toolchain is automatically configured and likely uses gcc/libstdc++ on Linux. This should be satisfactory for most users, but will differ from the NDK toolchain, which uses clang/libc++. To use a custom clang toolchain on Linux, see toolchain/README.md and .bazelrc. ### Building for Android #### Android App There is an example APK target called `lyra_android_example` that you can build after you have set up the NDK. This example is an app with a minimal GUI that has buttons for two options. One option is to record from the microphone and encode/decode with Lyra so you can test what Lyra would sound like for your voice. The other option runs a benchmark that encodes and decodes in the background and prints the timings to logcat. ```shell bazel build -c opt lyra/android_example:lyra_android_example --config=android_arm64 --copt=-DBENCHMARK adb install bazel-bin/lyra/android_example/lyra_android_example.apk ``` After this you should see an app called ""Lyra Example App"". You can open it, and you will see a simple TextView that says the benchmark is running, and when it finishes. Press ""Record from microphone"", say a few words, and then press ""Encode and decode to speaker"". You should hear your voice being played back after being coded with Lyra. If you press 'Benchmark', you should see something like the following in logcat on a Pixel 6 Pro when running the benchmark: ```shell lyra_benchmark: feature_extractor: max: 1.836 ms min: 0.132 ms mean: 0.153 ms stdev: 0.042 ms lyra_benchmark: quantizer_quantize: max: 1.042 ms min: 0.120 ms mean: 0.130 ms stdev: 0.028 ms lyra_benchmark: quantizer_decode: max: 0.103 ms min: 0.026 ms mean: 0.029 ms stdev: 0.003 ms lyra_benchmark: model_decode: max: 0.820 ms min: 0.191 ms mean: 0.212 ms stdev: 0.031 ms lyra_benchmark: total: max: 2.536 ms min: 0.471 ms mean: 0.525 ms stdev: 0.088 ms ``` This shows that decoding a 50Hz frame (each frame is 20 milliseconds) takes 0.525 milliseconds on average. So decoding is performed at around 38 (20/0.525) times faster than realtime. To build your own android app, you can either use the cc_library target outputs to create a .so that you can use in your own build system. Or you can use it with an [`android_binary`]( rule within bazel to create an .apk file as in this example. There is a tutorial on building for android with Bazel in the [bazel docs]( #### Android command-line binaries There are also the binary targets that you can use to experiment with encoding and decoding .wav files. You can build the example cc_binary targets with: ```shell bazel build -c opt lyra/cli_example:encoder_main --config=android_arm64 bazel build -c opt lyra/cli_example:decoder_main --config=android_arm64 ``` This builds an executable binary that can be run on android 64-bit arm devices (not an android app). You can then push it to your android device and run it as a binary through the shell. ```shell # Push the binary and the data it needs, including the model and .wav files: adb push bazel-bin/lyra/cli_example/encoder_main /data/local/tmp/ adb push bazel-bin/lyra/cli_example/decoder_main /data/local/tmp/ adb push lyra/model_coeffs/ /data/local/tmp/ adb push lyra/testdata/ /data/local/tmp/ adb shell cd /data/local/tmp ./encoder_main --model_path=/data/local/tmp/model_coeffs --output_dir=/data/local/tmp --input_path=testdata/sample1_16kHz.wav ./decoder_main --model_path=/data/local/tmp/model_coeffs --output_dir=/data/local/tmp --encoded_path=sample1_16kHz.lyra ``` The encoder_main/decoder_main as above should also work. ### Building for Mac You will need to install the XCode command line tools in addition to the prerequisites common to all platforms. XCode setup is a required step for using Bazel on Mac. See this [guide]( for how to install XCode command line tools. Lyra has been built successfully using XCode 13.3. You can follow the instructions in the [Building for Linux](#building-for-linux) section once this is completed. ### Building for Windows You will need to install Build Tools for Visual Studio 2019 in addition to the prerequisites common to all platforms. Visual Studio setup is a required step for building C++ for Bazel on Windows. See this [guide]( for how to install MSVC. You may also need to install python 3 support, which is also described in the guide. You can follow the instructions in the [Building for Linux](#building-for-linux) section once this is completed. ## API For integrating Lyra into any project only two APIs are relevant: [LyraEncoder](lyra/lyra_encoder.h) and [LyraDecoder](lyra/lyra_decoder.h). > DISCLAIMER: At this time Lyra's API and bit-stream are **not** guaranteed to > be stable and might change in future versions of the code. On the sending side, `LyraEncoder` can be used to encode an audio stream using the following interface: ```cpp class LyraEncoder : public LyraEncoderInterface { public: static std::unique_ptr Create( int sample_rate_hz, int num_channels, int bitrate, bool enable_dtx, const ghc::filesystem::path& model_path); std::optional> Encode( const absl::Span audio) override; bool set_bitrate(int bitrate) override; int sample_rate_hz() const override; int num_channels() const override; int bitrate() const override; int frame_rate() const override; }; ``` The static `Create` method instantiates a `LyraEncoder` with the desired sample rate in Hertz, number of channels and bitrate, as long as those parameters are supported (see `lyra_encoder.h` for supported parameters). Otherwise it returns a nullptr. The `Create` method also needs to know if DTX s... [TRUNCATED]","355, Code, Issues, Pull requests, Actions, Projects, Security, Insights, question, enhancement, help wanted, bug, documentation, good first issue, duplicate, wontfix, invalid"
Interview_DS_Algo,MAZHARMIK/Interview_DS_Algo,1178,['C++'],"['interview-ds-algo', 'coding-interviews', 'algorithms', 'algorithms-and-data-structures', 'companies-list']","# Repository Name - Interview_DS_Algo # My YouTube Channel Name - codestorywithMIK On a mission to make a Super Repository for Interview Prep for everyone. :checkered_flag: One stop Solution. Help me by joining my Youtube Channel for this Repository as well + System Design - Youtube Channel : codestorywithMIK Official Facebook Page - codestorywithMIK This repo contains solutions to questions asked in various coding interviews topic wise. Every topic will have sub-topics as well to categorize different types/techniques. At the top of the solutions, you will find the link to the question and also list of the Companies who have asked the question in interviews. So, Look for COMPANY TAGS above every solution. :dizzy_face: :tada:LATEST UPDATE:tada: : Frequency also added from now onwards. :tada: :tada:LATEST UPDATE:tada: : Video Explanation in HINGLISH by me also added from now onwards. :tada: Why I am doing this ? Because knowledge should be free. You don't need to pay for courses. Learn free, share free. PEACE :heartbeat: You can join this group on LinkedIn - LinkedIn Page : codestorywithMIK Latest Update - It helped me to crack interviews of ""Microsoft"", ""Tower Research"" and ""Tokopedia"". I hope to add more to this list later Contents : :pencil: Tree Arrays :slot_machine: Mathematical :straight_ruler: Heap :warning: Linked List :link: DP :calendar: Graph :earth_asia: Trie Backtracking :end: Stack :books: Queue :train::train: Bit_Magic :keycap_ten: Greedy :shipit: Hash Map :key: Hash Set :key: Recursion :cyclone: Sliding Window :bus: Design :scissors::triangular_ruler: Strings :bookmark_tabs: Segment Tree # Contributors [](","737, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
ClickHouse,ClickHouse/ClickHouse,34776,"['C++', 'Python', 'Shell']","['dbms', 'olap', 'analytics', 'sql', 'distributed-database']","[]( []( ClickHouse is an open-source column-oriented database management system that allows generating analytical data reports in real-time. ## How To Install (Linux, macOS, FreeBSD) ``` curl | sh ``` ## Useful Links * [Official website]( has a quick high-level overview of ClickHouse on the main page. * [ClickHouse Cloud]( ClickHouse as a service, built by the creators and maintainers. * [Tutorial]( shows how to set up and query a small ClickHouse cluster. * [Documentation]( provides more in-depth information. * [YouTube channel]( has a lot of content about ClickHouse in video format. * [Slack]( and [Telegram]( allow chatting with ClickHouse users in real-time. * [Blog]( contains various ClickHouse-related articles, as well as announcements and reports about events. * [Code Browser (github.dev)]( with syntax highlighting, powered by github.dev. * [Contacts]( can help to get your questions answered if there are any. ## Monthly Release & Community Call Every month we get together with the community (users, contributors, customers, those interested in learning more about ClickHouse) to discuss what is coming in the latest release. If you are interested in sharing what you've built on ClickHouse, let us know. * [v24.5 Community Call]( - May 30 ## Upcoming Events Keep an eye out for upcoming meetups and events around the world. Somewhere else you want us to be? Please feel free to reach out to tyler `` clickhouse `` com. You can also peruse [ClickHouse Events]( for a list of all upcoming trainings, meetups, speaking engagements, etc. * [ClickHouse Happy Hour @ Tom's Watch Bar - Los Angeles]( - May 22 * [ClickHouse & Confluent Meetup in Dubai]( - May 28 * [ClickHouse Meetup in Stockholm]( - Jun 3 * [ClickHouse Meetup @ Cloudflare - San Francisco]( - Jun 4 * [ClickHouse () Meetup Tokyo]( - Jun 5 * [ClickHouse Meetup in Amsterdam]( - Jun 27 * [ClickHouse Meetup in Paris]( - Jul 9 * [ClickHouse Meetup @ Ramp - New York City]( - Jul 9 * [ClickHouse Meetup @ Klaviyo - Boston]( - Jul 11 ## Recent Recordings * **Recent Meetup Videos**: [Meetup Playlist]( Whenever possible recordings of the ClickHouse Community Meetups are edited and presented as individual talks. Current featuring ""Modern SQL in 2023"", ""Fast, Concurrent, and Consistent Asynchronous INSERTS in ClickHouse"", and ""Full-Text Indices: Design and Experiments"" * **Recording available**: [**v24.4 Release Call**]( All the features of 24.4, one convenient video! Watch it now! ## Interested in joining ClickHouse and making it your full-time job? We are a globally diverse and distributed team, united behind a common goal of creating industry-leading, real-time analytics. Here, you will have an opportunity to solve some of the most cutting-edge technical challenges and have direct ownership of your work and vision. If you are a contributor by nature, a thinker and a doer - well definitely click! Check out our **current openings** here: Can't find what you are looking for, but want to let us know you are interested in joining ClickHouse? Email careers@clickhouse.com!","6.5k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, feature, unexpected behaviour, question, performance, usability, can be tested, bug, potential bug, minor, pr-feature, pr-improvement, testing, pr-not-for-changelog, unfinished code, fuzz, easy task, warmup task, comp-joins, experimental feature, pr-performance, help wanted, analyzer, enhancement, flaky test, pr-bugfix, comp-optimizers, comp-dictionary, do not test, comp-rbac, st-discussion"
Marlin,MarlinFirmware/Marlin,15966,"['C++', 'C', 'Python']","['reprap', 'arduino', '3d-printing', 'firmware', 'avr']","Marlin 3D Printer Firmware Additional documentation can be found at the [Marlin Home Page]( Please test this firmware and let us know if it misbehaves in any way. Volunteers are standing by! ## Marlin 2.1 Bugfix Branch __Not for production use. Use with caution!__ Marlin 2.1 takes this popular RepRap firmware to the next level by adding support for much faster 32-bit and ARM-based boards while improving support for 8-bit AVR boards. Read about Marlin's decision to use a ""Hardware Abstraction Layer"" below. This branch is for patches to the latest 2.1.x release version. Periodically this branch will form the basis for the next minor 2.1.x release. Download earlier versions of Marlin on the [Releases page]( ## Example Configurations Before you can build Marlin for your machine you'll need a configuration for your specific hardware. Upon request, your vendor will be happy to provide you with the complete source code and configurations for your machine, but you'll need to get updated configuration files if you want to install a newer version of Marlin. Fortunately, Marlin users have contributed dozens of tested configurations to get you started. Visit the [MarlinFirmware/Configurations]( repository to find the right configuration for your hardware. ## Building Marlin 2.1 To build and upload Marlin you will use one of these tools: - The free [Visual Studio Code]( using the [Auto Build Marlin]( extension. - The free [Arduino IDE]( : See [Building Marlin with Arduino]( - You can also use VSCode with devcontainer : See [Installing Marlin (VSCode devcontainer)]( Marlin is optimized to build with the **PlatformIO IDE** extension for **Visual Studio Code**. You can still build Marlin with **Arduino IDE**, and we hope to improve the Arduino build experience, but at this time PlatformIO is the better choice. ## 8-Bit AVR Boards We intend to continue supporting 8-bit AVR boards in perpetuity, maintaining a single codebase that can apply to all machines. We want casual hobbyists and tinkerers and owners of older machines to benefit from the community's innovations just as much as those with fancier machines. Plus, those old AVR-based machines are often the best for your testing and feedback! ## Hardware Abstraction Layer (HAL) Marlin includes an abstraction layer to provide a common API for all the platforms it targets. This allows Marlin code to address the details of motion and user interface tasks at the lowest and highest levels with no system overhead, tying all events directly to the hardware clock. Every new HAL opens up a world of hardware. At this time we need HALs for RP2040 and the Duet3D family of boards. A HAL that wraps an RTOS is an interesting concept that could be explored. Did you know that Marlin includes a Simulator that can run on Windows, macOS, and Linux? Join the Discord to help move these sub-projects forward! ### Supported Platforms Platform|MCU|Example Boards --------|---|------- [Arduino AVR]( Melzi, RAMBo [Teensy++ 2.0]( [Arduino Due]( RADDS, RAMPS4DUE [ESP32]( E4, E4d@BOX, MRR [LPC1768]( Cortex-M3|MKS SBASE, Re-ARM, Selena Compact [LPC1769]( Cortex-M3|Smoothieboard, Azteeg X5 mini, TH3D EZBoard [STM32F103]( Cortex-M3|Malyan M200, GTM32 Pro, MKS Robin, BTT SKR Mini [STM32F401]( Cortex-M4|ARMED, Rumba32, SKR Pro, Lerdge, FYSETC S6, Artillery Ruby [STM32F7x6]( Cortex-M7|The Borg, RemRam V1 [STM32G0B1RET6]( Cortex-M0+|BigTreeTech SKR mini E3 V3.0 [STM32H743xIT6]( Cortex-M7|BigTreeTech SKR V3.0, SKR EZ V3.0, SKR SE BX V2.0/V3.0 [SAMD51P20A]( Cortex-M4|Adafruit Grand Central M4 [Teensy 3.5]( Cortex-M4| [Teensy 3.6]( Cortex-M4| [Teensy 4.0]( Cortex-M7| [Teensy 4.1]( Cortex-M7| Linux Native|x86/ARM/etc.|Raspberry Pi ## Marlin Support The Issue Queue is reserved for Bug Reports and Feature Requests. Please use the following resources for help with configuration and troubleshooting: - [Marlin Documentation]( - Official Marlin documentation - [Marlin Discord]( - Discuss issues with Marlin users and developers - Facebook Group [""Marlin Firmware""]( - RepRap.org [Marlin Forum]( - Facebook Group [""Marlin Firmware for 3D Printers""]( - [Marlin Configuration]( on YouTube ## Contributing Patches You can contribute patches by submitting a Pull Request to the ([bugfix-2.1.x]( branch. - We use branches named with a ""bugfix"" or ""dev"" prefix to fix bugs and integrate new features. - Follow the [Coding Standards]( to gain points with the maintainers. - Please submit Feature Requests and Bug Reports to the [Issue Queue]( See above for user support. - Whenever you add new features, be sure to add one or more build tests to `buildroot/tests`. Any tests added to a PR will be run within that PR on GitHub servers as soon as they are pushed. To minimize iteration be sure to run your new tests locally, if possible. - Local build tests: - All: `make tests-config-all-local` - Single: `make tests-config-single-local TEST_TARGET=...` - Local build tests in Docker: - All: `make tests-config-all-local-docker` - Single: `make tests-config-all-local-docker TEST_TARGET=...` - To run all unit test suites: - Using PIO: `platformio run -t test-marlin` - Using Make: `make unit-test-all-local` - Using Docker + make: `maker unit-test-all-local-docker` - To run a single unit test suite: - Using PIO: `platformio run -t marlin_` - Using make: `make unit-test-single-local TEST_TARGET=` - Using Docker + make: `maker unit-test-single-local-docker TEST_TARGET=` - If your feature can be unit tested, add one or more unit tests. For more information see our documentation on [Unit Tests](test). ## Contributors Marlin is constantly improving thanks to a huge number of contributors from all over the world bringing their specialties and talents. Huge thanks are due to [all the contributors]( who regularly patch up bugs, help direct traffic, and basically keep Marlin from falling apart. Marlin's continued existence would not be possible without them. ## Project Leadership Name|Role|Link|Donate ----|----|----|---- Scott Lahteine|Project Lead|[[@thinkyhead]( Donate]( Roxanne Neufeld|Admin|[[@Roxy-3D]( Keith Bennett|Admin|[[@thisiskeithb]( Donate]( Jason Smith|Admin|[[@sjasonsmith]( Victor Oliveira|Admin|[[@rhapsodyv]( Chris Pepper|Admin|[[@p3p]( Peter Ellens|Admin|[[@ellensp]( Donate]( Bob Kuhn|Admin|[[@Bob-the-Kuhn]( Erik van der Zalm|Founder|[[@ErikZalm]( ## License Marlin is published under the [GPL license](/LICENSE) because we believe in open development. The GPL comes with both rights and obligations. Whether you use Marlin firmware as the driver for your open or closed-source product, you must keep Marlin open, and you must provide your compatible Marlin source code to end users upon request. The most straightforward way to comply with the Marlin license is to make a fork of Marlin on Github, perform your modifications, and direct users to your modified fork.","19.1k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, T: Feature Request, C: LCD & Controllers, Bug: Potential ?, F: Calibration, C: Motion, Bug: Confirmed !, C: Peripherals, C: Boards/Pins, F: Trinamic, C: Temperatures, Needs: More Data, PR: New Feature, Needs: Work, F: IDEX, PR: Improvement, PR: Bug Fix, F: Z-Probes, F: Toolchange, C: Build / Toolchain, F: Print Recovery, F: CNC / Laser, C: Serial Comms, F: SD Card / Media, help wanted, Needs: Testing, Needs: Discussion, K: Deltabot, C: User Interface, C: Safety, C: Configuration"
NootedRed,ChefKissInc/NootedRed,1507,"['C++', 'Python', 'Shell']","['kext', 'macos', 'macosx', 'amd', 'amd64']","# NootedRed The AMD Vega iGPU support [Lilu]( (1.6.4+) plug-in. > [!IMPORTANT] > The only official source for this kext is the Actions tab of the `ChefKissInc/NootedRed` GitHub repository, provided entirely free of charge. > > Any other source may include malware, be outdated, etc. > > If you purchased this, demand a refund. > > If you got the kext from an unofficial source and you suspect it is violating the license, please help take it down in order to retain our rights to the project. The NootedRed project is licensed under the `Thou Shalt Not Profit License version 1.5`. See `LICENSE`. > [!NOTE] > This project is under active research and development; There will be crashes here and there, but is generally smooth. > > See repository issues and [our site]( for more information.","525, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, Bug, Waiting for response, Enhancement, Won't fix, Question, Invalid, Help wanted, External: Apple, Duplicate, Documentation"
pcm,intel/pcm,2599,"['C++', 'C', 'Shell']","['monitor-performance', 'processor', 'performance-monitoring', 'energy', 'performance-analysis']","-------------------------------------------------------------------------------- Intel Performance Counter Monitor (Intel PCM) -------------------------------------------------------------------------------- [PCM Tools](#pcm-tools) | [Building PCM](#building-pcm-tools) | [Downloading Pre-Compiled PCM](#downloading-pre-compiled-pcm-tools) | [FAQ](#frequently-asked-questions-faq) | [API Documentation](#pcm-api-documentation) | [Environment Variables](#pcm-environment-variables) | [Compilation Options](#custom-compilation-options) Intel Performance Counter Monitor (Intel PCM) is an application programming interface (API) and a set of tools based on the API to monitor performance and energy metrics of Intel Core, Xeon, Atom and Xeon Phi processors. PCM works on Linux, Windows, Mac OS X, FreeBSD, DragonFlyBSD and ChromeOS operating systems. *Github repository statistics:* We welcome bug reports and enhancement requests, which can be submitted via the ""Issues"" section on GitHub. For those interested in contributing to the code, please refer to the guidelines outlined in the CONTRIBUTING.md file. -------------------------------------------------------------------------------- Current Build Status -------------------------------------------------------------------------------- - Linux: []( - Windows: []( - FreeBSD: []( - OS X: []( - Docker container: [](doc/DOCKER_README.md) -------------------------------------------------------------------------------- PCM Tools -------------------------------------------------------------------------------- PCM provides a number of command-line utilities for real-time monitoring: - **pcm** : basic processor monitoring utility (instructions per cycle, core frequency (including Intel(r) Turbo Boost Technology), memory and Intel(r) Quick Path Interconnect bandwidth, local and remote memory bandwidth, cache misses, core and CPU package sleep C-state residency, core and CPU package thermal headroom, cache utilization, CPU and memory energy consumption) - **pcm-sensor-server** : pcm collector exposing metrics over http in JSON or Prometheus (exporter text based) format ([how-to](doc/PCM-EXPORTER.md)). Also available as a [docker container](doc/DOCKER_README.md). More info about Global PCM events is [here](doc/PCM-SENSOR-SERVER-README.md). - **pcm-memory** : monitor memory bandwidth (per-channel and per-DRAM DIMM rank) - **pcm-accel** : [monitor Intel In-Memory Analytics Accelerator (Intel IAA), Intel Data Streaming Accelerator (Intel DSA) and Intel QuickAssist Technology (Intel QAT) accelerators](doc/PCM_ACCEL_README.md) - **pcm-latency** : monitor L1 cache miss and DDR/PMM memory latency - **pcm-pcie** : monitor PCIe bandwidth per-socket - **pcm-iio** : monitor PCIe bandwidth per PCIe device - **pcm-numa** : monitor local and remote memory accesses - **pcm-power** : monitor sleep and energy states of processor, Intel(r) Quick Path Interconnect, DRAM memory, reasons of CPU frequency throttling and other energy-related metrics - **pcm-tsx**: monitor performance metrics for Intel(r) Transactional Synchronization Extensions - **pcm-core** and **pmu-query**: query and monitor arbitrary processor core events - **pcm-raw**: [program arbitrary **core** and **uncore** events by specifying raw register event ID encoding](doc/PCM_RAW_README.md) - **pcm-bw-histogram**: collect memory bandwidth utilization histogram Graphical front ends: - **pcm Grafana dashboard** : front-end for Grafana (in [scripts/grafana](scripts/grafana) directory). Full Grafana Readme is [here](scripts/grafana/README.md) - **pcm-sensor** : front-end for KDE KSysGuard - **pcm-service** : front-end for Windows perfmon There are also utilities for reading/writing model specific registers (**pcm-msr**), PCI configuration registers (**pcm-pcicfg**), memory mapped registers (**pcm-mmio**) and TPMI registers (**pcm-tpmi**) supported on Linux, Windows, Mac OS X and FreeBSD. And finally a daemon that stores core, memory and QPI counters in shared memory that can be be accessed by non-root users. -------------------------------------------------------------------------------- Building PCM Tools -------------------------------------------------------------------------------- Clone PCM repository with submodules: ``` git clone --recursive ``` or clone the repository first, and then update submodules with: ``` git submodule update --init --recursive ``` Install cmake then: ``` mkdir build cd build cmake .. cmake --build . ``` You will get all the utilities (pcm, pcm-memory, etc) in `build/bin` directory. '--parallel' can be used for faster building: ``` cmake --build . --parallel ``` Debug is default on Windows. Specify config to build Release: ``` cmake --build . --config Release ``` On Windows and MacOs additional drivers and steps are required. Please find instructions here: [WINDOWS_HOWTO.md](doc/WINDOWS_HOWTO.md) and [MAC_HOWTO.txt](doc/MAC_HOWTO.txt). FreeBSD/DragonFlyBSD-specific details can be found in [FREEBSD_HOWTO.txt](doc/FREEBSD_HOWTO.txt) -------------------------------------------------------------------------------- Downloading Pre-Compiled PCM Tools -------------------------------------------------------------------------------- - Linux: * Ubuntu/Debian: `sudo apt install pcm` * openSUSE: `sudo zypper install pcm` * RHEL8.5 or later: `sudo dnf install pcm` * Fedora: `sudo yum install pcm` * RPMs and DEBs with the *latest* PCM version for RHEL/SLE/Ubuntu/Debian/openSUSE/etc distributions (binary and source) are available [here]( - Windows: download PCM binaries as [appveyor build service]( artifacts and required Visual C++ Redistributable from [www.microsoft.com]( Additional steps and drivers are required, see [WINDOWS_HOWTO.md](doc/WINDOWS_HOWTO.md). - Docker: see [instructions on how to use pcm-sensor-server pre-compiled container from docker hub](doc/DOCKER_README.md). -------------------------------------------------------------------------------- Executing PCM tools under non-root user on Linux -------------------------------------------------------------------------------- Executing PCM tools under an unprivileged user on a Linux operating system is feasible. However, there are certain prerequisites that need to be met, such as having Linux perf_event support for your processor in the Linux kernel version you are currently running. To successfully run the PCM tools, you need to set the `/proc/sys/kernel/perf_event_paranoid` setting to -1 as root once: ``` echo -1 > /proc/sys/kernel/perf_event_paranoid ``` and configure two specific environment variables when running the tools under a non-root user: ``` export PCM_NO_MSR=1 export PCM_KEEP_NMI_WATCHDOG=1 ``` For instance, you can execute the following commands to set the environment variables and run pcm: ``` export PCM_NO_MSR=1 export PCM_KEEP_NMI_WATCHDOG=1 pcm ``` or (to run the pcm sensor server as non-root): ``` PCM_NO_MSR=1 PCM_KEEP_NMI_WATCHDOG=1 pcm-sensor-server ``` Please keep in mind that when executing PCM tools under an unprivileged user on Linux, certain PCM metrics may be unavailable. This limitation specifically affects metrics that rely solely on direct MSR (Model-Specific Register) register access. Due to the restricted privileges of the user, accessing these registers is not permitted, resulting in the absence of corresponding metrics. -------------------------------------------------------------------------------- Frequently Asked Questions (FAQ) -------------------------------------------------------------------------------- PCM's frequently asked questions (FAQ) are located [here](doc/FAQ.md). -------------------------------------------------------------------------------- PCM API documentation -------------------------------------------------------------------------------- PCM API documentation is embedded in the source code and can be generated into html format from source using Doxygen (www.doxygen.org). -------------------------------------------------------------------------------- PCM environment variables -------------------------------------------------------------------------------- The list of PCM environment variables is located [here](doc/ENVVAR_README.md) -------------------------------------------------------------------------------- Custom compilation options -------------------------------------------------------------------------------- The list of custom compilation options is located [here](doc/CUSTOM-COMPILE-OPTIONS.md) -------------------------------------------------------------------------------- Packaging -------------------------------------------------------------------------------- Packaging with CPack is supported on Debian and Redhat/SUSE system families. To create DEB of RPM package need to call cpack after building in build folder: ``` cd build cpack ``` This creates package: - ""pcm-VERSION-Linux.deb"" on Debian family systems; - ""pcm-VERSION-Linux.rpm"" on Redhat/SUSE-family systems. Packages contain pcm-\* binaries and required for usage opCode-\* files.","452, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, enhancement, help wanted, dependencies, github_actions, wontfix, question, docker, bug, invalid, duplicate"
openMVS,cdcseacave/openMVS,3138,"['C++', 'CMake', 'Python']","['multi-view-stereo', '3d-reconstruction', 'point-cloud', 'stereo-reconstruction-library', 'mesh']","# OpenMVS: open Multi-View Stereo reconstruction library []( ## Introduction [OpenMVS (Multi-View Stereo)]( is a library for computer-vision scientists and especially targeted to the Multi-View Stereo reconstruction community. While there are mature and complete open-source projects targeting Structure-from-Motion pipelines (like [OpenMVG]( which recover camera poses and a sparse 3D point-cloud from an input set of images, there are none addressing the last part of the photogrammetry chain-flow. *OpenMVS* aims at filling that gap by providing a complete set of algorithms to recover the full surface of the scene to be reconstructed. The input is a set of camera poses plus the sparse point-cloud and the output is a textured mesh. The main topics covered by this project are: - **dense point-cloud reconstruction** for obtaining a complete and accurate as possible point-cloud - **mesh reconstruction** for estimating a mesh surface that explains the best the input point-cloud - **mesh refinement** for recovering all fine details - **mesh texturing** for computing a sharp and accurate texture to color the mesh See the complete [documentation]( on wiki. ## Build See the [building]( wiki page. Windows, Ubuntu and MacOS x64 continuous integration status []( Automatic Windows x64 binary builds can be found for each commit on its Artifacts page. ## Example See the usage [example]( wiki page. ## License See the [copyright]( file. ## Contact openmvs[AT]googlegroups.com","887, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, enhancement, help wanted, bug, wontfix, wip, question, invalid, duplicate"
AdvancedLiterateMachinery,AlibabaResearch/AdvancedLiterateMachinery,1037,"['C++', 'Python', 'C']","['artificial-intelligence', 'documentai', 'multimodal', 'multimodal-deep-learning', 'ocr']","# Advanced Literate Machinery ## Introduction The ultimate goal of our research is to build a system that has high-level intelligence, i.e., possessing the abilities to ***read, think and create***, so advanced that it could even surpass human intelligence one day in the future. We name this kind of systems **Advanced Literate Machinery (ALM)**. To start with, we currently focus on teaching machines to ***read*** from images and documents. In years to come, we will explore the possibilities of endowing machines with the intellectual capabilities of ***thinking and creating***, catching up with and surpassing [GPT-4]( and [GPT-4V]( This project is maintained by the ** OCR Team** (-Du Guang means *Reading The Light*) in the [Tongyi Lab, Alibaba Group]( Visit our [-Du Guang Portal]( and [DocMaster]( to experience online demos for OCR and Document Understanding. ## Recent Updates **2024.4 Release** - [**OmniParser**](./OCR/OmniParser/) (*OmniParser: A Unified Framework for Text Spotting, Key Information Extraction and Table Recognition,* CVPR 2024. [paper]( We propose a universal model for parsing visually-situated text across diverse scenarios, called OmniParser, which can simultaneously handle three typical visually-situated text parsing tasks: text spotting, key information extraction, and table recognition. In OmniParser, all tasks share the **unified encoder-decoder architecture**, the unified objective: **point-conditioned text generation**, and the unified input & output representation: **prompt & structured sequences**. **2024.3 Release** - [**GEM**](./DocumentUnderstanding/GEM/) (*GEM: Gestalt Enhanced Markup Language Model for Web Understanding via Render Tree,* EMNLP 2023. [paper]( Web pages serve as crucial carriers for humans to acquire and perceive information. Inspired by the Gestalt psychological theory, we propose an innovative Gestalt Enhanced Markup Language Model (GEM for short) for **hosting heterogeneous visual information from render trees of web pages**, leading to excellent performances on tasks such as web question answering and web information extraction. **2023.9 Release** - [**DocXChain**](./Applications/DocXChain/) (*DocXChain: A Powerful Open-Source Toolchain for Document Parsing and Beyond,* arXiv 2023. [report]( To **promote the level of digitization and structurization for documents**, we develop and release an open-source toolchain, called DocXChain, for precise and detailed document parsing. Currently, basic capabilities, including text detection, text recognition, table structure recognition, and layout analysis, are provided. Also, typical pipelines, i.e., general text reading, table parsing, and document structurization, are built to support more complicated applications related to documents. Most of the algorithmic models are from [ModelScope]( Formula recognition (using models from [RapidLatexOCR]( and whole PDF conversion (PDF to JSON format) are now supported. - [**LISTER**](./OCR/LISTER/) (*LISTER: Neighbor Decoding for Length-Insensitive Scene Text Recognition,* ICCV 2023. [paper]( We propose a method called Length-Insensitive Scene TExt Recognizer (LISTER), which remedies the limitation regarding the **robustness to various text lengths**. Specifically, a Neighbor Decoder is proposed to obtain accurate character attention maps with the assistance of a novel neighbor matrix regardless of the text lengths. Besides, a Feature Enhancement Module is devised to model the long-range dependency with low computation cost, which is able to perform iterations with the neighbor decoder to enhance the feature map progressively.. - [**VGT**](./DocumentUnderstanding/VGT/) (*Vision Grid Transformer for Document Layout Analysis,* ICCV 2023. [paper]( To **fully leverage multi-modal information and exploit pre-training techniques to learn better representation** for document layout analysis (DLA), we present VGT, a two-stream Vision Grid Transformer, in which Grid Transformer (GiT) is proposed and pre-trained for 2D token-level and segment-level semantic understanding. In addition, a new benchmark for assessing document layout analysis algorithms, called [D^4LA]( is curated and released. - [**VLPT-STD**](./OCR/VLPT-STD/) (*Vision-Language Pre-Training for Boosting Scene Text Detectors,* CVPR 2022. [paper]( We adapt **vision-language joint learning for scene text detection**, a task that intrinsically involves cross-modal interaction between the two modalities: vision and language. The pre-trained model is able to produce more informative representations with richer semantics, which could readily benefit existing scene text detectors (such as EAST and DB) in the down-stream text detection task. **2023.6 Release** - [**LiteWeightOCR**](./OCR/LiteWeightOCR/) (*Building A Mobile Text Recognizer via Truncated SVD-based Knowledge Distillation-Guided NAS,* BMVC 2023. [paper]( To make OCR models **deployable on mobile devices while keeping high accuracy**, we propose a light-weight text recognizer that integrates Truncated Singular Value Decomposition (TSVD)-based Knowledge Distillation (KD) into the Neural Architecture Search (NAS) process. **2023.4 Release** - [**GeoLayoutLM**](./DocumentUnderstanding/GeoLayoutLM/) (*GeoLayoutLM: Geometric Pre-training for Visual Information Extraction,* CVPR 2023. [paper]( We propose a multi-modal framework, named GeoLayoutLM, for Visual Information Extraction (VIE). In contrast to previous methods for document pre-training, which usually learn geometric representation in an implicit way, GeoLayoutLM **explicitly models the geometric relations of entities in documents**. **2023.2 Release** - [**LORE-TSR**](./DocumentUnderstanding/LORE-TSR/) (*LORE: Logical Location Regression Network for Table Structure Recognition,* AAAI 2022. [paper]( We model Table Structure Recognition (TSR) as a logical location regression problem and propose a new algorithm called LORE, standing for LOgical location REgression network, which for the first time **combines logical location regression together with spatial location regression** of table cells. **2022.9 Release** - [**MGP-STR**](./OCR/MGP-STR/) (*Multi-Granularity Prediction for Scene Text Recognition,* ECCV 2022. [paper]( Based on [ViT]( and a tailored Adaptive Addressing and Aggregation module, we explore an implicit way for incorporating linguistic knowledge by introducing subword representations to facilitate **multi-granularity** prediction and fusion in scene text recognition. - [**LevOCR**](./OCR/LevOCR/) (*Levenshtein OCR,* ECCV 2022. [paper]( Inspired by [Levenshtein Transformer]( we cast the problem of scene text recognition as an iterative sequence refinement process, which allows for **parallel decoding, dynamic length change and good interpretability**.","132, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
electron,electron/electron,112242,"['C++', 'TypeScript', 'Objective-C++']","['electron', 'javascript', 'c-plus-plus', 'html', 'css']","[]( []( []( []( :memo: Available Translations: . View these docs in other languages on our [Crowdin]( project. The Electron framework lets you write cross-platform desktop applications using JavaScript, HTML and CSS. It is based on [Node.js]( and [Chromium]( and is used by the [Visual Studio Code]( and many other [apps]( Follow [@electronjs]( on Twitter for important announcements. This project adheres to the Contributor Covenant [code of conduct]( By participating, you are expected to uphold this code. Please report unacceptable behavior to [coc@electronjs.org](mailto:coc@electronjs.org). ## Installation To install prebuilt Electron binaries, use [`npm`]( The preferred method is to install Electron as a development dependency in your app: ```sh npm install electron --save-dev ``` For more installation options and troubleshooting tips, see [installation](docs/tutorial/installation.md). For info on how to manage Electron versions in your apps, see [Electron versioning](docs/tutorial/electron-versioning.md). ## Platform support Each Electron release provides binaries for macOS, Windows, and Linux. * macOS (Catalina and up): Electron provides 64-bit Intel and ARM binaries for macOS. Apple Silicon support was added in Electron 11. * Windows (Windows 10 and up): Electron provides `ia32` (`x86`), `x64` (`amd64`), and `arm64` binaries for Windows. Windows on ARM support was added in Electron 5.0.8. Support for Windows 7, 8 and 8.1 was [removed in Electron 23, in line with Chromium's Windows deprecation policy]( * Linux: The prebuilt binaries of Electron are built on Ubuntu 20.04. They have also been verified to work on: * Ubuntu 18.04 and newer * Fedora 32 and newer * Debian 10 and newer ## Quick start & Electron Fiddle Use [`Electron Fiddle`]( to build, run, and package small Electron experiments, to see code examples for all of Electron's APIs, and to try out different versions of Electron. It's designed to make the start of your journey with Electron easier. Alternatively, clone and run the [electron/electron-quick-start]( repository to see a minimal Electron app in action: ```sh git clone cd electron-quick-start npm install npm start ``` ## Resources for learning Electron * [electronjs.org/docs]( - All of Electron's documentation * [electron/fiddle]( - A tool to build, run, and package small Electron experiments * [electron/electron-quick-start]( - A very basic starter Electron app * [electronjs.org/community#boilerplates]( - Sample starter apps created by the community ## Programmatic usage Most people use Electron from the command line, but if you require `electron` inside your **Node app** (not your Electron app) it will return the file path to the binary. Use this to spawn Electron from Node scripts: ```javascript const electron = require('electron') const proc = require('node:child_process') // will print something similar to /Users/maf/.../Electron console.log(electron) // spawn Electron const child = proc.spawn(electron) ``` ### Mirrors * [China]( See the [Advanced Installation Instructions]( to learn how to use a custom mirror. ## Documentation translations We crowdsource translations for our documentation via [Crowdin]( We currently accept translations for Chinese (Simplified), French, German, Japanese, Portuguese, Russian, and Spanish. ## Contributing If you are interested in reporting/fixing issues and contributing directly to the code base, please see [CONTRIBUTING.md](CONTRIBUTING.md) for more information on what we're looking for and how to get started. ## Community Info on reporting bugs, getting help, finding third-party tools and sample apps, and more can be found on the [Community page]( ## License [MIT]( When using Electron logos, make sure to follow [OpenJS Foundation Trademark Policy](","15k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, enhancement ✨, bug 🪲, has-repro-gist, platform/windows, status/confirmed, platform/macOS, platform/linux, 29-x-y, 28-x-y, component/BrowserWindow, 27-x-y, 25-x-y, 30-x-y, documentation 📓, 11-x-y, 10-x-y, 26-x-y, 12-x-y, platform/all, blocked/need-info ❌, semver/minor, api-review/requested 🗳, semver/patch, no-backport, 24-x-y, 13-x-y, has-repro-comment, 23-x-y, 22-x-y, 17-x-y"
khoj,khoj-ai/khoj,8378,"['Python', 'HTML', 'Emacs Lisp']","['semantic-search', 'emacs', 'obsidian-md', 'chat', 'chatgpt']","[]( []( []( The open-source, personal AI for your digital brain [ Read Docs]( [ Khoj Cloud]( [ Get Involved]( [ Read Blog]( *** Khoj is an application that creates always-available, personal AI agents for you to extend your capabilities. - You can share your notes and documents to extend your digital brain. - Your AI agents have access to the internet, allowing you to incorporate realtime information. - Khoj is accessible on Desktop, Emacs, Obsidian, Web and Whatsapp. - You can share pdf, markdown, org-mode, notion files and github repositories. - You'll get fast, accurate semantic search on top of your docs. - Your agents can create deeply personal images and understand your speech. - Khoj is open-source, self-hostable. Always. *** ## See it in action Go to to see Khoj live. ## Full feature list You can see the full feature list [here]( ## Self-Host To get started with self-hosting Khoj, [read the docs]( ## Contributors Cheers to our awesome contributors! Made with [contrib.rocks]( ### Interested in Contributing? We are always looking for contributors to help us build new features, improve the project documentation, or fix bugs. If you're interested, please see our [Contributing Guidelines]( and check out our [Contributors Project Board]( ## [Sponsors]( Shout out to our brilliant sponsors!","426, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, upgrade, fix, plugin, maintain, try, question, good first issue, coverage, wontfix, invalid, help wanted, duplicate, documentation"
pydantic,pydantic/pydantic,19113,"['Python', 'Makefile', 'Shell']","['validation', 'parsing', 'json-schema', 'python37', 'python38']","# Pydantic []( []( []( []( []( []( []( []( Data validation using Python type hints. Fast and extensible, Pydantic plays nicely with your linters/IDE/brain. Define how data should be in pure, canonical Python 3.8+; validate it with Pydantic. ## Pydantic Company :rocket: We've started a company based on the principles that I believe have led to Pydantic's success. Learn more from the [Company Announcement]( ## Pydantic V1.10 vs. V2 Pydantic V2 is a ground-up rewrite that offers many new features, performance improvements, and some breaking changes compared to Pydantic V1. If you're using Pydantic V1 you may want to look at the [pydantic V1.10 Documentation]( or, [`1.10.X-fixes` git branch]( Pydantic V2 also ships with the latest version of Pydantic V1 built in so that you can incrementally upgrade your code base and projects: `from pydantic import v1 as pydantic_v1`. ## Help See [documentation]( for more details. ## Installation Install using `pip install -U pydantic` or `conda install pydantic -c conda-forge`. For more installation options to make Pydantic even faster, see the [Install]( section in the documentation. ## A Simple Example ```py from datetime import datetime from typing import List, Optional from pydantic import BaseModel class User(BaseModel): id: int name: str = 'John Doe' signup_ts: Optional[datetime] = None friends: List[int] = [] external_data = {'id': '123', 'signup_ts': '2017-06-01 12:22', 'friends': [1, '2', b'3']} user = User(**external_data) print(user) #> User id=123 name='John Doe' signup_ts=datetime.datetime(2017, 6, 1, 12, 22) friends=[1, 2, 3] print(user.id) #> 123 ``` ## Contributing For guidance on setting up a development environment and how to make a contribution to Pydantic, see [Contributing to Pydantic]( ## Reporting a Security Vulnerability See our [security policy](","1.7k, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, bug V2, feature request, pending, help wanted, unconfirmed, V3, good first issue, Change, urls, mypy, documentation, bug V1, relnotes-fix, question, ready for review, non-breaking-change, awaiting author revision, relnotes-feature, duplicate, Feedback Wanted, generic, Performance, Meta, linear, hypothesis, dumping, awaiting author response, Schema, Bug, strictness"
whisper,openai/whisper,61950,['Python'],[],"# Whisper [[Blog]]( [[Paper]]( [[Model card]]( [[Colab example]]( Whisper is a general-purpose speech recognition model. It is trained on a large dataset of diverse audio and is also a multitasking model that can perform multilingual speech recognition, speech translation, and language identification. ## Approach A Transformer sequence-to-sequence model is trained on various speech processing tasks, including multilingual speech recognition, speech translation, spoken language identification, and voice activity detection. These tasks are jointly represented as a sequence of tokens to be predicted by the decoder, allowing a single model to replace many stages of a traditional speech-processing pipeline. The multitask training format uses a set of special tokens that serve as task specifiers or classification targets. ## Setup We used Python 3.9.9 and [PyTorch]( 1.10.1 to train and test our models, but the codebase is expected to be compatible with Python 3.8-3.11 and recent PyTorch versions. The codebase also depends on a few Python packages, most notably [OpenAI's tiktoken]( for their fast tokenizer implementation. You can download and install (or update to) the latest release of Whisper with the following command: pip install -U openai-whisper Alternatively, the following command will pull and install the latest commit from this repository, along with its Python dependencies: pip install git+ To update the package to the latest version of this repository, please run: pip install --upgrade --no-deps --force-reinstall git+ It also requires the command-line tool [`ffmpeg`]( to be installed on your system, which is available from most package managers: ```bash # on Ubuntu or Debian sudo apt update && sudo apt install ffmpeg # on Arch Linux sudo pacman -S ffmpeg # on MacOS using Homebrew ( brew install ffmpeg # on Windows using Chocolatey ( choco install ffmpeg # on Windows using Scoop ( scoop install ffmpeg ``` You may need [`rust`]( installed as well, in case [tiktoken]( does not provide a pre-built wheel for your platform. If you see installation errors during the `pip install` command above, please follow the [Getting started page]( to install Rust development environment. Additionally, you may need to configure the `PATH` environment variable, e.g. `export PATH=""$HOME/.cargo/bin:$PATH""`. If the installation fails with `No module named 'setuptools_rust'`, you need to install `setuptools_rust`, e.g. by running: ```bash pip install setuptools-rust ``` ## Available models and languages There are five model sizes, four with English-only versions, offering speed and accuracy tradeoffs. Below are the names of the available models and their approximate memory requirements and inference speed relative to the large model; actual speed may vary depending on many factors including the available hardware. | Size | Parameters | English-only model | Multilingual model | Required VRAM | Relative speed | |:------:|:----------:|:------------------:|:------------------:|:-------------:|:--------------:| | tiny | 39 M | `tiny.en` | `tiny` | ~1 GB | ~32x | | base | 74 M | `base.en` | `base` | ~1 GB | ~16x | | small | 244 M | `small.en` | `small` | ~2 GB | ~6x | | medium | 769 M | `medium.en` | `medium` | ~5 GB | ~2x | | large | 1550 M | N/A | `large` | ~10 GB | 1x | The `.en` models for English-only applications tend to perform better, especially for the `tiny.en` and `base.en` models. We observed that the difference becomes less significant for the `small.en` and `medium.en` models. Whisper's performance varies widely depending on the language. The figure below shows a performance breakdown of `large-v3` and `large-v2` models by language, using WERs (word error rates) or CER (character error rates, shown in *Italic*) evaluated on the Common Voice 15 and Fleurs datasets. Additional WER/CER metrics corresponding to the other models and datasets can be found in Appendix D.1, D.2, and D.4 of [the paper]( as well as the BLEU (Bilingual Evaluation Understudy) scores for translation in Appendix D.3. ## Command-line usage The following command will transcribe speech in audio files, using the `medium` model: whisper audio.flac audio.mp3 audio.wav --model medium The default setting (which selects the `small` model) works well for transcribing English. To transcribe an audio file containing non-English speech, you can specify the language using the `--language` option: whisper japanese.wav --language Japanese Adding `--task translate` will translate the speech into English: whisper japanese.wav --language Japanese --task translate Run the following to view all available options: whisper --help See [tokenizer.py]( for the list of all available languages. ## Python usage Transcription can also be performed within Python: ```python import whisper model = whisper.load_model(""base"") result = model.transcribe(""audio.mp3"") print(result[""text""]) ``` Internally, the `transcribe()` method reads the entire file and processes the audio with a sliding 30-second window, performing autoregressive sequence-to-sequence predictions on each window. Below is an example usage of `whisper.detect_language()` and `whisper.decode()` which provide lower-level access to the model. ```python import whisper model = whisper.load_model(""base"") # load audio and pad/trim it to fit 30 seconds audio = whisper.load_audio(""audio.mp3"") audio = whisper.pad_or_trim(audio) # make log-Mel spectrogram and move to the same device as the model mel = whisper.log_mel_spectrogram(audio).to(model.device) # detect the spoken language _, probs = model.detect_language(mel) print(f""Detected language: {max(probs, key=probs.get)}"") # decode the audio options = whisper.DecodingOptions() result = whisper.decode(model, mel, options) # print the recognized text print(result.text) ``` ## More examples Please use the [ Show and tell]( category in Discussions for sharing more example usages of Whisper and third-party extensions such as web demos, integrations with other tools, ports for different platforms, etc. ## License Whisper's code and model weights are released under the MIT License. See [LICENSE]( for further details.","7.1k, Code, Pull requests, Discussions, Actions, Security, Insights, wontfix, question, invalid, good first issue, enhancement, duplicate, documentation, bug"
OpenCore-Legacy-Patcher,dortania/OpenCore-Legacy-Patcher,11127,"['Python', 'ASL', 'Shell']","['opencore', 'patcher', 'big-sur', 'macos']","OpenCore Legacy Patcher A Python-based project revolving around [Acidanthera's OpenCorePkg]( and [Lilu]( for both running and unlocking features in macOS on supported and unsupported Macs. Our project's main goal is to breathe new life into Macs no longer supported by Apple, allowing for the installation and usage of macOS Big Sur and newer on machines as old as 2007. ---------- ---------- Noteworthy features of OpenCore Legacy Patcher: * Support for macOS Big Sur, Monterey, Ventura, and Sonoma * Native Over the Air (OTA) System Updates * Supports Penryn and newer Macs * Full support for WPA Wi-Fi and Personal Hotspot on BCM943224 and newer wireless chipsets * System Integrity Protection, FileVault 2, .im4m Secure Boot and Vaulting * Recovery OS, Safe Mode and Single-user Mode booting on non-native OSes * Unlocks features such as Sidecar and AirPlay to Mac even on native Macs * Enables enhanced SATA and NVMe power management on non-Apple storage devices * Zero firmware patching required (ie. APFS ROM patching) * Graphics acceleration for both Metal and non-Metal GPUs ---------- Note: Only clean-installs and upgrades are supported. macOS Big Sur installs already patched with other patchers, such as [Patched Sur]( or [bigmac]( cannot be used due to broken file integrity with APFS snapshots and SIP. * You can, however, reinstall macOS with this patcher and retain your original data Note 2: Currently, OpenCore Legacy Patcher officially supports patching to run macOS Big Sur through Sonoma installs. For older OSes, OpenCore may function; however, support is currently not provided from Dortania. * For macOS Mojave and Catalina support, we recommend the use of [dosdude1's patchers]( ## Getting Started To start using the project, please see our in-depth guide: * [OpenCore Legacy Patcher Guide]( ## Support This project is offered on an AS-IS basis, we do not guarantee support for any issues that may arise. However, there is a community server with other passionate users and developers that can aid you: * [OpenCore Patcher Paradise Discord Server]( * Keep in mind that the Discord server is maintained by the community, so we ask everyone to be respectful. * Please review our docs on [how to debug with OpenCore]( to gather important information to help others with troubleshooting. ## Running from source To run the project from source, see here: [Build and run from source](./SOURCE.md) ## Credits * [Acidanthera]( * OpenCorePkg, as well as many of the core kexts and tools * [DhinakG]( * Main co-author * [Khronokernel]( * Main co-author * [Ausdauersportler]( * iMacs Metal GPUs Upgrade Patch set and documentation * Great amounts of help with debugging, and code suggestions * [vit9696]( * Endless amount of help troubleshooting, determining fixes and writing patches * [ASentientBot]( [EduCovas]( and [ASentientHedgehog]( * Legacy Acceleration Patch set and documentation, [Moraea Organization]( * [cdf]( * Mac Pro on OpenCore Patch set and documentation * [Innie]( and [NightShiftEnabler]( * [Syncretic]( * [AAAMouSSE]( [telemetrap]( and [SurPlus]( * [dosdude1]( * Main author of the [original GUI]( * Development of previous patchers, laying out much of what needs to be patched * [parrotgeek1]( * [VMM Patch Set]( * [BarryKN]( * Development of previous patchers, laying out much of what needs to be patched * [mario_bros_tech]( and the rest of the Unsupported Mac Discord * Catalyst that started OpenCore Legacy Patcher * [arter97]( * [SimpleMSR]( to disable firmware throttling in Nehalem+ MacBooks without batteries * [Mr.Macintosh]( * Endless hours helping architect and troubleshoot many portions of the project * [flagers]( * Aid with Nvidia Web Driver research and development * [joevt]( * [FixPCIeLinkrate]( * [Jazzzny]( * Research and various contributions to the project * UEFI Legacy XHCI research and development * NVIDIA OpenCL research and development * `MacBook5,2` research and development * LegacyKeyboardInjector * Pre-Ivy Bridge Aquantia Ethernet Patch * Non-Metal Photo Booth Patch for Monterey+ * GUI and Backend Development * Vaulting implementation * Amazing users who've graciously donate hardware: * [JohnD]( - 2013 Mac Pro * [SpiGAndromeda]( - AMD Vega 64 * [turbomacs]( - 2014 5k iMac * [vinaypundith]( - MacBook7,1 * [ThatStella7922]( - 2017 13"" MacBook Pro (A1708) * zephar - 2008 Mac Pro * jazo97 - 2011 15"" MacBook Pro * And others (reach out if we forgot you!) * MacRumors and Unsupported Mac Communities * Endless testing and reporting issues * Apple * for macOS and many of the kexts, frameworks and other binaries we reimplemented into newer OSes","1.1k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, back-end, help wanted, enhancement, bug, low-priority, wontfix, waiting-for-response, monterey, misc-question, invalid, iMac, front-end, extended-documentation, duplicate, documentation, Xserve, MacBook, MacBook Pro, MacBook Air, Mac mini, Mac Pro"
yolo_tracking,mikel-brostrom/yolo_tracking,6233,"['Python', 'Dockerfile']","['strongsort', 'bytetrack', 'ocsort', 'osnet', 'deep-learning']","# BoxMOT: pluggable SOTA tracking modules for segmentation, object detection and pose estimation models ## Introduction This repo contains a collections of pluggable state-of-the-art multi-object trackers for segmentation, object detection and pose estimation models. For the methods using appearance description, both heavy ([CLIPReID]( and lightweight state-of-the-art ReID models ([LightMBN]( [OSNet]( and more) are available for automatic download. We provide examples on how to use this package together with popular object detection models such as: [Yolov8]( [Yolo-NAS]( and [YOLOX]( | Tracker | HOTA | MOTA | IDF1 | | -------- | ----- | ----- | ----- | | [BoTSORT]( | 77.8 | 78.9 | 88.9 | | [DeepOCSORT]( | 77.4 | 78.4 | 89.0 | | [OCSORT]( | 77.4 | 78.4 | 89.0 | | [HybridSORT]( | 77.3 | 77.9 | 88.8 | | [ByteTrack]( | 75.6 | 74.6 | 86.0 | | [StrongSORT]( | | | | | | | | | NOTES: performed on the 10 first frames of each MOT17 sequence. The detector used is ByteTrack's YoloXm, trained on: CrowdHuman, MOT17, Cityperson and ETHZ. Each tracker is configured with its original parameters found in their respective official repository. Tutorials * [Yolov8 training (link to external repository)]( * [Deep appearance descriptor training (link to external repository)]( * [ReID model export to ONNX, OpenVINO, TensorRT and TorchScript]( * [Evaluation on custom tracking dataset]( * [ReID inference acceleration with Nebullvm]( Experiments In inverse chronological order: * [Evaluation of the params evolved for first half of MOT17 on the complete MOT17]( * [Segmentation model vs object detetion model on MOT metrics]( * [Effect of masking objects before feature extraction]( * [conf-thres vs HOTA, MOTA and IDF1]( * [Effect of KF updates ahead for tracks with no associations on MOT17]( * [Effect of full images vs 1280 input to StrongSORT on MOT17]( * [Effect of different OSNet architectures on MOT16]( * [Yolov5 StrongSORT vs BoTSORT vs OCSORT]( * Yolov5 [BoTSORT]( branch: * [Yolov5 StrongSORT OSNet vs other trackers MOT17]( * [StrongSORT MOT16 ablation study]( * [Yolov5 StrongSORT OSNet vs other trackers MOT16 (deprecated)]( #### News * Enabled tracking per class for all trackers besides StrongSORT by `--per-class` (March 2024) * Enabled trajectory plotting for all trackers besides StrongSORT by `--show-trajectories` (March 2024) * All trackers inherit from BaseTracker (March 2024) * Switched from setuptools to poetry for unified: dependency resolution, packaging and publishing management (March 2024) * ~x3 pipeline speedup by: using pregenerated detections + embeddings and jobs parallelization (March 2024) * Ultra fast exerimentation enabled by allowing local detections and embeddings saving. This data can then be loaded into any tracking algorithm, avoiding the overhead of repeatedly generating it (February 2024) * Centroid-based cost function added to OCSORT and DeepOCSORT (suitable for: small and/or high speed objects and low FPS videos) (January 2024) * Custom Ultralytics package updated from 8.0.124 to 8.0.224 (December 2023) * HybridSORT available (August 2023) * SOTA CLIP-ReID people and vehicle models available (August 2023) ## Why BOXMOT? Today's multi-object tracking options are heavily dependant on the computation capabilities of the underlaying hardware. BoxMOT provides a great variety of tracking methods that meet different hardware limitations, all the way from CPU only to larger GPUs. Morover, we provide scripts for ultra fast experimentation by saving detections and embeddings, which then be loaded into any tracking algorithm. Avoiding the overhead of repeatedly generating this data. ## Installation Start with [**Python>=3.8**]( environment. If you want to run the YOLOv8, YOLO-NAS or YOLOX examples: ``` git clone cd yolo_tracking pip install poetry poetry install --with yolo # installed boxmot + yolo dependencies poetry shell # activates the newly created environment with the installed dependencies ``` but if you only want to import the tracking modules you can simply: ``` pip install boxmot ``` ## YOLOv8 | YOLO-NAS | YOLOX examples Tracking Yolo models ```bash $ python tracking/track.py --yolo-model yolov8n # bboxes only python tracking/track.py --yolo-model yolo_nas_s # bboxes only python tracking/track.py --yolo-model yolox_n # bboxes only yolov8n-seg # bboxes + segmentation masks yolov8n-pose # bboxes + pose estimation ``` Tracking methods ```bash $ python tracking/track.py --tracking-method deepocsort strongsort ocsort bytetrack botsort ``` Tracking sources Tracking can be run on most video formats ```bash $ python tracking/track.py --source 0 # webcam img.jpg # image vid.mp4 # video path/ # directory path/*.jpg # glob ' # YouTube 'rtsp://example.com/media.mp4' # RTSP, RTMP, HTTP stream ``` Select ReID model Some tracking methods combine appearance description and motion in the process of tracking. For those which use appearance, you can choose a ReID model based on your needs from this [ReID model zoo]( These model can be further optimized for you needs by the [reid_export.py]( script ```bash $ python tracking/track.py --source 0 --reid-model lmbn_n_cuhk03_d.pt # lightweight osnet_x0_25_market1501.pt mobilenetv2_x1_4_msmt17.engine resnet50_msmt17.onnx osnet_x1_0_msmt17.pt clip_market1501.pt # heavy clip_vehicleid.pt ... ``` Filter tracked classes By default the tracker tracks all MS COCO classes. If you want to track a subset of the classes that you model predicts, add their corresponding index after the classes flag, ```bash python tracking/track.py --source 0 --yolo-model yolov8s.pt --classes 16 17 # COCO yolov8 model. Track cats and dogs, only ``` [Here]( is a list of all the possible objects that a Yolov8 model trained on MS COCO can detect. Notice that the indexing for the classes in this repo starts at zero Evaluation Evaluate a combination of detector, tracking method and ReID model on standard MOT dataset or you custom one by ```bash # saves dets and embs under ./runs/dets_n_embs separately for each selected yolo and reid model $ python tracking/generate_dets_n_embs.py --source ./assets/MOT17-mini/train --yolo-model yolov8n.pt yolov8s.pt --reid-model weights/osnet_x0_25_msmt17.pt # generate MOT challenge format results based on pregenerated detections and embeddings for a specific trackign method $ python tracking/generate_mot_results.py --dets yolov8n --embs osnet_x0_25_msmt17 --tracking-method botsort # uses TrackEval to generate MOT metrics for the tracking results under ./runs/mot/ $ python tracking/val.py --benchmark MOT17-mini --dets yolov8n --embs osnet_x0_25_msmt17 --tracking-method botsort ``` Evolution We use a fast and elitist multiobjective genetic algorithm for tracker hyperparameter tuning. By default the objectives are: HOTA, MOTA, IDF1. Run it by ```bash # saves dets and embs under ./runs/dets_n_embs separately for each selected yolo and reid model $ python tracking/generate_dets_n_embs.py --source ./assets/MOT17-mini/train --yolo-model yolov8n.pt yolov8s.pt --reid-model weights/osnet_x0_25_msmt17.pt # evolve parameters for specified tracking method using the selected detections and embeddings generated in the previous step $ python tracking/evolve.py --benchmark MOT17-mini --dets yolov8n --embs osnet_x0_25_msmt17 --n-trials 9 --tracking-method botsort ``` The set of hyperparameters leading to the best HOTA result are written to the tracker's config file. ## Custom tracking examples Detection ```python import cv2 import numpy as np from pathlib import Path from boxmot import DeepOCSORT tracker = DeepOCSORT( model_weights=Path('osnet_x0_25_msmt17.pt'), # which ReID model to use device='cuda:0', fp16=False, ) vid = cv2.VideoCapture(0) while True: ret, im = vid.read() # substitute by your object detector, output has to be N X (x, y, x, y, conf, cls) dets = np.array([[144, 212, 578, 480, 0.82, 0], [425, 281, 576, 472, 0.56, 65]]) tracker.update(dets, im) # --> M X (x, y, x, y, id, conf, cls, ind) tracker.plot_results(im, show_trajectories=True) # break on pressing q or space cv2.imshow('BoxMOT detection', im) key = cv2.waitKey(1) & 0xFF if key == ord(' ') or key == ord('q'): break vid.release() cv2.destroyAllWindows() ``` Pose & segmentation ```python import cv2 import numpy as np from pathlib import Path from boxmot import DeepOCSORT tracker = DeepOCSORT( model_weights=Path('osnet_x0_25_msmt17.pt'), # which ReID model to use device='cuda:0', fp16=True, ) vid = cv2.VideoCapture(0) while True: ret, im = vid.read() keypoints = np.random.rand(2, 17, 3) mask = np.random.rand(2, 480, 640) # substitute by your object detector, input to tracker has to be N X (x, y, x, y, conf, cls) dets = np.array([[144, 212, 578, 480, 0.82, 0], [425, 281, 576, 472, 0.56, 65]]) tracks = tracker.update(dets, im) # --> M x (x, y, x, y, id, conf, cls, ind) # xyxys = tracks[:, 0:4].astype('int') # float64 to int # ids = tracks[:, 4].astype('int') # float64 to int # confs = tracks[:, 5] # clss = tracks[:, 6].astype('int') # float64 to int inds = tracks[:, 7].astype('int') # float64 to int # in case you have segmentations or poses alongside with your detections you can use # the ind variable in order to identify which track is associated to each seg or pose by: # masks = masks[inds] # keypoints = keypoints[inds] # such that you then can: zip(tracks, masks) or zip(tracks, keypoints) # break on pressing q or space cv2.imshow('BoxMOT segmentation | pose', im) key = cv2.waitKey(1) & 0xFF if key == ord(' ') or key == ord('q'): break vid.release() cv2.destroyAllWindows() ``` Tiled inference ```py from sahi import AutoDetectionModel from sahi.predict import get_sliced_prediction import cv2 import numpy as np from pathlib import Path from boxmot import DeepOCSORT tracker = DeepOCSORT( model_weights=Path('osnet_x0_25_msmt17.pt'), # which ReID model to use device='cpu', fp16=False, ) detection_model = AutoDetectionModel.from_pretrained( model_type='yolov8', model_path='yolov8n.pt', confidence_threshold=0.5, device=""cpu"", # or 'cuda... [TRUNCATED]","1.7k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, question, bug, python, dependencies, Stale, wontfix, invalid, help wanted, good first issue, github_actions, enhancement, duplicate, documentation"
yt-dlp,yt-dlp/yt-dlp,72935,"['Python', 'Makefile', 'Shell']","['youtube-dl', 'youtube-dlc', 'python', 'video-downloader', 'sponsorblock']","[](#readme) [](#installation ""Installation"") []( ""PyPi"") [](Collaborators.md#collaborators ""Donate"") []( ""Matrix"") []( ""Discord"") [](supportedsites.md ""Supported Sites"") [](LICENSE ""License"") []( ""CI Status"") []( ""Commit History"") []( ""Last activity"") yt-dlp is a feature-rich command-line audio/video downloader with support for [thousands of sites](supportedsites.md). The project is a fork of [youtube-dl]( based on the now inactive [youtube-dlc]( * [INSTALLATION](#installation) * [Detailed instructions]( * [Release Files](#release-files) * [Update](#update) * [Dependencies](#dependencies) * [Compile](#compile) * [USAGE AND OPTIONS](#usage-and-options) * [General Options](#general-options) * [Network Options](#network-options) * [Geo-restriction](#geo-restriction) * [Video Selection](#video-selection) * [Download Options](#download-options) * [Filesystem Options](#filesystem-options) * [Thumbnail Options](#thumbnail-options) * [Internet Shortcut Options](#internet-shortcut-options) * [Verbosity and Simulation Options](#verbosity-and-simulation-options) * [Workarounds](#workarounds) * [Video Format Options](#video-format-options) * [Subtitle Options](#subtitle-options) * [Authentication Options](#authentication-options) * [Post-processing Options](#post-processing-options) * [SponsorBlock Options](#sponsorblock-options) * [Extractor Options](#extractor-options) * [CONFIGURATION](#configuration) * [Configuration file encoding](#configuration-file-encoding) * [Authentication with netrc](#authentication-with-netrc) * [Notes about environment variables](#notes-about-environment-variables) * [OUTPUT TEMPLATE](#output-template) * [Output template examples](#output-template-examples) * [FORMAT SELECTION](#format-selection) * [Filtering Formats](#filtering-formats) * [Sorting Formats](#sorting-formats) * [Format Selection examples](#format-selection-examples) * [MODIFYING METADATA](#modifying-metadata) * [Modifying metadata examples](#modifying-metadata-examples) * [EXTRACTOR ARGUMENTS](#extractor-arguments) * [PLUGINS](#plugins) * [Installing Plugins](#installing-plugins) * [Developing Plugins](#developing-plugins) * [EMBEDDING YT-DLP](#embedding-yt-dlp) * [Embedding examples](#embedding-examples) * [CHANGES FROM YOUTUBE-DL](#changes-from-youtube-dl) * [New features](#new-features) * [Differences in default behavior](#differences-in-default-behavior) * [Deprecated options](#deprecated-options) * [CONTRIBUTING](CONTRIBUTING.md#contributing-to-yt-dlp) * [Opening an Issue](CONTRIBUTING.md#opening-an-issue) * [Developer Instructions](CONTRIBUTING.md#developer-instructions) * [WIKI]( * [FAQ]( # INSTALLATION []( []( []( []( []( [](#release-files) []( You can install yt-dlp using [the binaries](#release-files), [pip]( or one using a third-party package manager. See [the wiki]( for detailed instructions ## RELEASE FILES #### Recommended File|Description :---|:--- [yt-dlp]( [zipimport]( binary. Needs Python (recommended for **Linux/BSD**) [yt-dlp.exe]( (Win7 SP1+) standalone x64 binary (recommended for **Windows**) [yt-dlp_macos]( MacOS (10.15+) standalone executable (recommended for **MacOS**) #### Alternatives File|Description :---|:--- [yt-dlp_x86.exe]( (Win7 SP1+) standalone x86 (32-bit) binary [yt-dlp_min.exe]( (Win7 SP1+) standalone x64 binary built with `py2exe` ([Not recommended](#standalone-py2exe-builds-windows)) [yt-dlp_linux]( standalone x64 binary [yt-dlp_linux_armv7l]( standalone armv7l (32-bit) binary [yt-dlp_linux_aarch64]( standalone aarch64 (64-bit) binary [yt-dlp_win.zip]( Windows executable (no auto-update) [yt-dlp_macos.zip]( MacOS (10.15+) executable (no auto-update) [yt-dlp_macos_legacy]( (10.9+) standalone x64 executable #### Misc File|Description :---|:--- [yt-dlp.tar.gz]( tarball [SHA2-512SUMS]( SHA512 sums [SHA2-512SUMS.sig]( signature file for SHA512 sums [SHA2-256SUMS]( SHA256 sums [SHA2-256SUMS.sig]( signature file for SHA256 sums The public key that can be used to verify the GPG signatures is [available here]( Example usage: ``` curl -L | gpg --import gpg --verify SHA2-256SUMS.sig SHA2-256SUMS gpg --verify SHA2-512SUMS.sig SHA2-512SUMS ``` **Note**: The manpages, shell completion (autocomplete) files etc. are available inside the [source tarball]( ## UPDATE You can use `yt-dlp -U` to update if you are using the [release binaries](#release-files) If you [installed with pip]( simply re-run the same command that was used to install the program For other third-party package managers, see [the wiki]( or refer their documentation There are currently three release channels for binaries: `stable`, `nightly` and `master`. * `stable` is the default channel, and many of its changes have been tested by users of the `nightly` and `master` channels. * The `nightly` channel has releases scheduled to build every day around midnight UTC, for a snapshot of the project's new patches and changes. This is the **recommended channel for regular users** of yt-dlp. The `nightly` releases are available from [yt-dlp/yt-dlp-nightly-builds]( or as development releases of the `yt-dlp` PyPI package (which can be installed with pip's `--pre` flag). * The `master` channel features releases that are built after each push to the master branch, and these will have the very latest fixes and additions, but may also be more prone to regressions. They are available from [yt-dlp/yt-dlp-master-builds]( When using `--update`/`-U`, a release binary will only update to its current channel. `--update-to CHANNEL` can be used to switch to a different channel when a newer version is available. `--update-to [CHANNEL@]TAG` can also be used to upgrade or downgrade to specific tags from a channel. You may also use `--update-to ` (`/`) to update to a channel on a completely different repository. Be careful with what repository you are updating to though, there is no verification done for binaries from different repositories. Example usage: * `yt-dlp --update-to master` switch to the `master` channel and update to its latest release * `yt-dlp --update-to stable@2023.07.06` upgrade/downgrade to release to `stable` channel tag `2023.07.06` * `yt-dlp --update-to 2023.10.07` upgrade/downgrade to tag `2023.10.07` if it exists on the current channel * `yt-dlp --update-to example/yt-dlp@2023.09.24` upgrade/downgrade to the release from the `example/yt-dlp` repository, tag `2023.09.24` **Important**: Any user experiencing an issue with the `stable` release should install or update to the `nightly` release before submitting a bug report: ``` # To update to nightly from stable executable/binary: yt-dlp --update-to nightly # To install nightly with pip: python3 -m pip install -U --pre ""yt-dlp[default]"" ``` ## DEPENDENCIES Python versions 3.8+ (CPython and PyPy) are supported. Other versions and implementations may or may not work correctly. While all the other dependencies are optional, `ffmpeg` and `ffprobe` are highly recommended ### Strongly recommended * [**ffmpeg** and **ffprobe**]( - Required for [merging separate video and audio files](#format-selection) as well as for various [post-processing](#post-processing-options) tasks. License [depends on the build]( There are bugs in ffmpeg that cause various issues when used alongside yt-dlp. Since ffmpeg is such an important dependency, we provide [custom builds]( with patches for some of these issues at [yt-dlp/FFmpeg-Builds]( See [the readme]( for details on the specific issues solved by these builds **Important**: What you need is ffmpeg *binary*, **NOT** [the Python package of the same name]( ### Networking * [**certifi**]( - Provides Mozilla's root certificate bundle. Licensed under [MPLv2]( * [**brotli**]( or [**brotlicffi**]( - [Brotli]( content encoding support. Both licensed under MIT [1]( [2]( * [**websockets**]( - For downloading over websocket. Licensed under [BSD-3-Clause]( * [**requests**]( - HTTP library. For HTTPS proxy and persistent connections support. Licensed under [Apache-2.0]( #### Impersonation The following provide support for impersonating browser requests. This may be required for some sites that employ TLS fingerprinting. * [**curl_cffi**]( (recommended) - Python binding for [curl-impersonate]( Provides impersonation targets for Chrome, Edge and Safari. Licensed under [MIT]( * Can be installed with the `curl-cffi` group, e.g. `pip install ""yt-dlp[default,curl-cffi]""` * Currently only included in `yt-dlp.exe` and `yt-dlp_macos` builds ### Metadata * [**mutagen**]( - For `--embed-thumbnail` in certain formats. Licensed under [GPLv2+]( * [**AtomicParsley**]( - For `--embed-thumbnail` in `mp4`/`m4a` files when `mutagen`/`ffmpeg` cannot. Licensed under [GPLv2+]( * [**xattr**]( [**pyxattr**]( or [**setfattr**]( - For writing xattr metadata (`--xattr`) on **Mac** and **BSD**. Licensed under [MIT]( [LGPL2.1]( and [GPLv2+]( respectively ### Misc * [**pycryptodomex**]( - For decrypting AES-128 HLS streams and various other data. Licensed under [BSD-2-Clause]( * [**phantomjs**]( - Used in extractors where javascript needs to be run. Licensed under [BSD-3-Clause]( * [**secretstorage**]( - For `--cookies-from-browser` to access the **Gnome** keyring while decrypting cookies of **Chromium**-based browsers on **Linux**. Licensed under [BSD-3-Clause]( * Any external downloader that you want to use with `--downloader` ### Deprecated * [**avconv** and **avprobe**]( - Now **deprecated** alternative to ffmpeg. License [depends on the build]( * [**sponskrub**]( - For using the now **deprecated** [sponskrub options](#sponskrub-options). Licensed under [GPLv3+]( * [**rtmpdump**]( - For downloading `rtmp` streams. ffmpeg can be used instead with `--downloader ffmpeg`. Licensed under [GPLv2+]( * [**mplayer**]( or [**mpv**]( - For downloading `rstp`/`mms` streams. ffmpeg can be used instead with `--downloader ffmpeg`. Licensed under [GPLv2+]( To use or redistribute the dependencies, you must agree to their respective licensing terms. The standalone release binaries are built with the Python interpreter and t... [TRUNCATED]","5.8k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, site-bug, triage, site-request, enhancement, site-enhancement, account-needed, can-share-account, bug, geo-blocked, NSFW, stale-pr, patch-available, pending-fixes, cant-reproduce, docs/meta/cleanup, external issue, DRM, good first issue, question, do-not-merge, regression, PR-needed, core-triage, networking, help-wanted, needs-testing, discussion/announcement, hacktoberfest-accepted, wontfix, solved-upstream"
ccxt,ccxt/ccxt,31585,"['Python', 'C#', 'TypeScript']","['altcoin', 'api', 'arbitrage', 'bitcoin', 'bot']","# CCXT CryptoCurrency eXchange Trading Library []( []( []( []( []( []( []( A JavaScript / Python / PHP / C# library for cryptocurrency trading and e-commerce with support for many bitcoin/ether/altcoin exchange markets and merchant APIs. ### [Install](#install) [Usage](#usage) [Manual]( [FAQ]( [Examples]( [Contributing]( [Social](#social) The **CCXT** library is used to connect and trade with cryptocurrency exchanges and payment processing services worldwide. It provides quick access to market data for storage, analysis, visualization, indicator development, algorithmic trading, strategy backtesting, bot programming, and related software engineering. It is intended to be used by **coders, developers, technically-skilled traders, data-scientists and financial analysts** for building trading algorithms. Current feature list: - support for many cryptocurrency exchanges more coming soon - fully implemented public and private APIs - optional normalized data for cross-exchange analytics and arbitrage - an out of the box unified API that is extremely easy to integrate - works in Node 10.4+, Python 3, PHP 8.1+, netstandard2.0/2.1 and web browsers ## Sponsored Promotion ## See Also - []( **[TabTrader]( trading on all exchanges in one app. Available on **[Android]( and **[iOS]( - []( **[Freqtrade]( leading opensource cryptocurrency algorithmic trading software! - []( **[OctoBot]( cryptocurrency trading bot with an advanced web interface. - []( **[TokenBot]( discover and copy the best algorithmic traders in the world. ## Certified Cryptocurrency Exchanges | logo | id | name | ver | certified | pro | discount | |---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------|-------------------------------------------------------------------------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------:|-----------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:| | []( | binance | [Binance]( | []( | []( | []( | []( | | []( | binancecoinm | [Binance COIN-M]( | []( | []( | []( | []( | | []( | binanceusdm | [Binance USD-M]( | []( | []( | []( | []( | | []( | bingx | [BingX]( | []( | []( | []( | | | []( | bitget | [Bitget]( | []( | []( | []( | | | []( | bitmart | [BitMart]( | []( | []( | []( | []( | | []( | bitmex | [BitMEX]( | []( | []( | []( | []( | | []( | bybit | [Bybit]( | []( | []( | []( | | | []( | coinbase | [Coinbase Advanced]( | []( | []( | []( | | | []( | coinbaseinternational | [Coinbase International]( | []( | []( | []( | | | []( | coinex | [CoinEx]( | []( | []( | []( | | | []( | cryptocom | [Crypto.com]( | []( | []( | []( | []( | | []( | gate | [Gate.io]( | []( | []( | []( | []( | | []( | htx | [HTX]( | []( | []( | []( | []( | | []( | kucoin | [KuCoin]( | []( | []( | []( | | | []( | kucoinfutures | [KuCoin Futures]( | []( | []( | []( | | | []( | mexc | [MEXC Global]( | []( | []( | []( | | | []( | okx | [OKX]( | []( | []( | []( | []( | | []( | woo | [WOO X]( | []( | []( | []( | []( | | []( | woofipro | [WOOFI PRO]( | []( | []( | []( | []( | ## Supported Cryptocurrency Exchanges The CCXT library currently supports the following 98 cryptocurrency exchange markets and trading APIs: | logo | id | name | ver | certified | pro | |---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------|-------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------------------------------------------------------------------------:|-----------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------| | []( | ace | [ACE]( | []( | | | | []( | alpaca | [Alpaca]( | []( | | []( | | []( | ascendex | [AscendEX]( | []( | | []( | | []( | bequant | [Bequant]( | []( | | []( | | []( | bigone | [BigONE]( | []( | | | | []( | binance | [Binance]( | []( | []( | []( | | []( | binancecoinm | [Binance COIN-M]( | []( | []( | []( | | []( | binanceus | [Binance US]( | []( | | []( | | []( | binanceusdm | [Binance USD-M]( | []( | []( | []( | | []( | bingx | [BingX]( | []( | []( | []( | | []( | bit2c | [Bit2C]( | []( | | | | []( | bitbank | [bitbank]( | []( | | | | []( | bitbns | [Bitbns]( | []( | | | | []( | bitfinex | [Bitfinex]( | []( | | []( | | []( | bitfinex2 | [Bitfinex]( | []( | | []( | | []( | bitflyer | [bitFlyer]( | []( | | | | []( | bitget | [Bitget]( | []( | []( | []( | | []( | bithumb | [Bithumb]( | []( | | []( | | []( | bitmart | [BitMart]( | []( | []( | []( | | []( | bitmex | [BitMEX]( | []( | []( | []( | | []( | bitopro | [BitoPro]( | []( | | []( | | []( | bitrue | [Bitrue]( | []( | | []( | | []( | bitso | [Bitso]( | []( | | | | []( | bitstamp | [Bitstamp]( | []( | | []( | | []( | bitteam | [BIT.TEAM]( | []( | | | | []( | bitvavo | [Bitvavo]( | []( | | []( | | []( | bl3p | [BL3P]( | []( | | | | []( | blockchaincom | [Blockchain.com]( | []( | | []( | | []( | blofin | [BloFin]( | []( | | | | []( | btcalpha | [BTC-Alpha]( | []( | | | | []( | btcbox | [BtcBox]( | []( | | | | []( | btcmarkets | [BTC Markets]( | []( | | | | []( | btcturk | [BTCTurk]( | []( | | | | []( | bybit | [Bybit]( | []( | []( | []( | | []( | cex | [CEX.IO]( | []( | | []( | | []( | coinbase | [Coinbase Advanced]( | []( | []( | []( | | []( | coinbaseexchange | [Coinbase Exchange]( | []( | | []( | | []( | coinbaseinternational | [Coinbase International]( | []( | []( | []( | | []( | coincheck | [coincheck]( | []( | | | | []( | coinex | [CoinEx]( | []( | []( | []( | | []( | coinlist | [Coinlist]( | []( | | | | []( | coinmate | [CoinMate]( | []( | | | | []( | coinmetro | [Coinmetro]( | []( | | | | []( | coinone | [CoinOne]( | []( | | | | []( | coinsph | [Coins.ph]( | []( | | | | []( | coinspot | [CoinSpot]( | []( | | | | []( | cryptocom | [Crypto.com]( | []( | []( | []( | | []( | currencycom | [Currency.com]( | []( | | []( | | []( | delta | [Delta Exchange]( | []( | | | | []( | deribit | [Deribit]( | []( | | []( | | []( | digifinex | [DigiFinex]( | []( | | | | []( | exmo | [EXMO]( | []( | | | | []( | fmfwio | [FMFW.io]( | []( | | | | []( | gate | [Gate.io]( | []( | []( | []( | | []( | gemini | [Gemini]( | []( | | []( | | []( | hitbtc | [HitBTC]( | []( | | | | []( | hollaex | [HollaEx]( | []( | | []( | | []( | htx | [HTX]( | []( | []( | []( | | []( | huobijp | [Huobi Japan]( | []( | | []( | | []( | hyperliquid | [Hyperliquid]( | []( | | []( | | []( | idex | [IDEX]( | []( | | []( | | []( | independentreserve | [Independent Reserve]( | []( | | []( | | []( | indodax | [INDODAX]( | []( | | | | []( | kraken | [Kraken]( | []( | | []( | | []( | krakenfutures | [Kraken Futures]( | []( | | []( | | []( | kucoin | [KuCoin]( | []( | []( | []( | | []( | kucoinfutures | [KuCoin Futures]( | []( | []( | []( | | []( | kuna | [Kuna]( | []( | | | | []( | latoken | [Latoken]( | []( | | | | []( | lbank | [LBank]( | []( | | []( | | []( | luno | [luno]( | []( | | []( | | []( | lykke | [Lykke]( | []( | | | | []( | mercado | [Mercado Bitcoin]( | []( | | | | []( | mexc | [MEXC Global]( | []( | []( | []( | | []( | ndax | [NDAX]( | []( | | []( | | []( | novadax | [NovaDAX]( | []( | | | | []( | oceanex | [OceanEx]( | []( | | | | []( | okcoin | [OKCoin]( | []( | | []( | | []( | okx | [OKX]( | []( | []( | []( | | []( | onetrading | [One Trading]( | []( | | []( | | []( | p2b | [p2b]( | []( | | []( | | []( | paymium | [Paymium]( | []( | | | | []( | phemex | [Phemex]( | []( | | []( | | []( | poloniex | [Poloniex]( | []( | | []( | | []( | poloniexfutures | [Poloniex Futures]( | []( | | []( | | []( | probit | [ProBit]( | []( | | []( | | []( | timex | [TimeX]( | []( | | | | []( | tokocrypto | [Tokocrypto]( | []( | | | | []( | tradeogre | [tradeogre]( | []( | | | | []( | upbit | [Upbit]( | []( | | []( | | []( | wavesexchange | [Waves.Exchange]( | []( | | | | []( | wazirx | [WazirX]( | []( | | []( | | []( | whitebit | [WhiteBit]( | []( | | []( | | []( | woo | [WOO X]( | []( | []( | []( | | []( | woofipro | [WOOFI PRO]( | []( | []( | []( | | []( | yobit | [YoBit]( | []( | | | | []( | zaif | [Zaif]( | []( | | | | []( | zonda | [Zonda]( | []( | | | The list above is updated frequently, new crypto markets, exchanges, bug fixes, and API endpoints are introduced on a regular basis. See the [Manual]( for more details. If you can't find a cryptocurrency exchange in the list above and want it to be added, post a link to it by opening an issue here on GitHub or send us an email. The library is under [MIT license]( that means it's absolutely free for any developer to build commercial and opensource software on top of it, but use it at your own risk with no warranties, as is. --- ## Install The easiest way to install the CCXT library is to use a package manager: - [ccxt in **NPM**]( (JavaScript / Node v7.6+) - [ccxt in **PyPI**]( (Python 3.7.0+) - [ccxt in **Packagist/Composer**]( (PHP 7.0+) - [ccxt in **Nuget**]( (netstandard 2.0) This library is shipped as an all-in-one module implementation with minimalistic dependencies and requirements: - [js/]( in JavaScript - [python/]( in Python (generated from JS) - [php/]( in PHP (generated from JS) You can also clone it into ... [TRUNCATED]","7.3k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, enhancement, question, new exchange, bug, important, ws, new language, announcement, suggestion, 3rd party apps, scam report, wontfix/invalid, duplicate, python, php, javascript, dependencies, critical, c#"
langchain,langchain-ai/langchain,85834,"['Python', 'Jupyter Notebook', 'Makefile']",[],"# LangChain Build context-aware reasoning applications []( []( []( []( []( []( []( []( []( []( []( Looking for the JS/TS library? Check out [LangChain.js]( To help you ship LangChain apps to production faster, check out [LangSmith]( [LangSmith]( is a unified developer platform for building, testing, and monitoring LLM applications. Fill out [this form]( to speak with our sales team. ## Quick Install With pip: ```bash pip install langchain ``` With conda: ```bash conda install langchain -c conda-forge ``` ## What is LangChain? **LangChain** is a framework for developing applications powered by large language models (LLMs). For these applications, LangChain simplifies the entire application lifecycle: - **Open-source libraries**: Build your applications using LangChain's [modular building blocks]( and [components]( Integrate with hundreds of [third-party providers]( - **Productionization**: Inspect, monitor, and evaluate your apps with [LangSmith]( so that you can constantly optimize and deploy with confidence. - **Deployment**: Turn any chain into a REST API with [LangServe]( ### Open-source libraries - **`langchain-core`**: Base abstractions and LangChain Expression Language. - **`langchain-community`**: Third party integrations. - Some integrations have been further split into **partner packages** that only rely on **`langchain-core`**. Examples include **`langchain_openai`** and **`langchain_anthropic`**. - **`langchain`**: Chains, agents, and retrieval strategies that make up an application's cognitive architecture. - **[`LangGraph`]( A library for building robust and stateful multi-actor applications with LLMs by modeling steps as edges and nodes in a graph. ### Productionization: - **[LangSmith]( A developer platform that lets you debug, test, evaluate, and monitor chains built on any LLM framework and seamlessly integrates with LangChain. ### Deployment: - **[LangServe]( A library for deploying LangChain chains as REST APIs. ## What can you build with LangChain? ** Question answering with RAG** - [Documentation]( - End-to-end Example: [Chat LangChain]( and [repo]( ** Extracting structured output** - [Documentation]( - End-to-end Example: [SQL Llama2 Template]( ** Chatbots** - [Documentation]( - End-to-end Example: [Web LangChain (web researcher chatbot)]( and [repo]( And much more! Head to the [Use cases]( section of the docs for more. ## How does LangChain help? The main value props of the LangChain libraries are: 1. **Components**: composable building blocks, tools and integrations for working with language models. Components are modular and easy-to-use, whether you are using the rest of the LangChain framework or not 2. **Off-the-shelf chains**: built-in assemblages of components for accomplishing higher-level tasks Off-the-shelf chains make it easy to get started. Components make it easy to customize existing chains and build new ones. ## LangChain Expression Language (LCEL) LCEL is the foundation of many of LangChain's components, and is a declarative way to compose chains. LCEL was designed from day 1 to support putting prototypes in production, with no code changes, from the simplest prompt + LLM chain to the most complex chains. - **[Overview]( LCEL and its benefits - **[Interface]( The standard interface for LCEL objects - **[Primitives]( More on the primitives LCEL includes ## Components Components fall into the following **modules**: ** Model I/O:** This includes [prompt management]( [prompt optimization]( a generic interface for [chat models]( and [LLMs]( and common utilities for working with [model outputs]( ** Retrieval:** Retrieval Augmented Generation involves [loading data]( from a variety of sources, [preparing it]( [then retrieving it]( for use in the generation step. ** Agents:** Agents allow an LLM autonomy over how a task is accomplished. Agents make decisions about which Actions to take, then take that Action, observe the result, and repeat until the task is complete done. LangChain provides a [standard interface for agents]( a [selection of agents]( to choose from, and examples of end-to-end agents. ## Documentation Please see [here]( for full documentation, which includes: - [Getting started]( installation, setting up the environment, simple examples - [Use case]( walkthroughs and best practice [guides]( - Overviews of the [interfaces]( [components]( and [integrations]( You can also check out the full [API Reference docs]( ## Ecosystem - [ LangSmith]( Tracing and evaluating your language model applications and intelligent agents to help you move from prototype to production. - [ LangGraph]( Creating stateful, multi-actor applications with LLMs, built on top of (and intended to be used with) LangChain primitives. - [ LangServe]( Deploying LangChain runnables and chains as REST APIs. - [LangChain Templates]( Example applications hosted with LangServe. ## Contributing As an open-source project in a rapidly developing field, we are extremely open to contributions, whether it be in the form of a new feature, improved infrastructure, or better documentation. For detailed information on how to contribute, see [here]( ## Contributors [](","13.3k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, 🤖:bug, 🤖:improvement, 🔌: openai, Ɑ: vector store, Ɑ: models, 🤖:docs, Ɑ: agent, size:L, Ɑ: doc loader, 🤖:enhancement, Ɑ: embeddings, size:XS, size:M, stale, Ɑ: retriever, Ɑ: memory, Ɑ: Runnables, size:S, Ɑ: parsing, 🔌: chroma, 🔌: huggingface, 🔌: google, 🤖:question, lgtm, partner, 🔌: aws, size:XXL, 🔌: anthropic, Ɑ: text splitters, size:XL"
airflow,apache/airflow,34818,"['Python', 'TypeScript', 'Shell']","['airflow', 'apache', 'apache-airflow', 'python', 'scheduler']","# Apache Airflow []( []( []( []( []( []( []( []( []( []( []( []( []( []( [Apache Airflow]( (or simply Airflow) is a platform to programmatically author, schedule, and monitor workflows. When workflows are defined as code, they become more maintainable, versionable, testable, and collaborative. Use Airflow to author workflows as directed acyclic graphs (DAGs) of tasks. The Airflow scheduler executes your tasks on an array of workers while following the specified dependencies. Rich command line utilities make performing complex surgeries on DAGs a snap. The rich user interface makes it easy to visualize pipelines running in production, monitor progress, and troubleshoot issues when needed. **Table of contents** - [Project Focus](#project-focus) - [Principles](#principles) - [Requirements](#requirements) - [Getting started](#getting-started) - [Installing from PyPI](#installing-from-pypi) - [Official source code](#official-source-code) - [Convenience packages](#convenience-packages) - [User Interface](#user-interface) - [Semantic versioning](#semantic-versioning) - [Version Life Cycle](#version-life-cycle) - [Support for Python and Kubernetes versions](#support-for-python-and-kubernetes-versions) - [Base OS support for reference Airflow images](#base-os-support-for-reference-airflow-images) - [Approach to dependencies of Airflow](#approach-to-dependencies-of-airflow) - [Contributing](#contributing) - [Voting Policy](#voting-policy) - [Who uses Apache Airflow?](#who-uses-apache-airflow) - [Who maintains Apache Airflow?](#who-maintains-apache-airflow) - [What goes into the next release?](#what-goes-into-the-next-release) - [Can I use the Apache Airflow logo in my presentation?](#can-i-use-the-apache-airflow-logo-in-my-presentation) - [Links](#links) - [Sponsors](#sponsors) ## Project Focus Airflow works best with workflows that are mostly static and slowly changing. When the DAG structure is similar from one run to the next, it clarifies the unit of work and continuity. Other similar projects include [Luigi]( [Oozie]( and [Azkaban]( Airflow is commonly used to process data, but has the opinion that tasks should ideally be idempotent (i.e., results of the task will be the same, and will not create duplicated data in a destination system), and should not pass large quantities of data from one task to the next (though tasks can pass metadata using Airflow's [XCom feature]( For high-volume, data-intensive tasks, a best practice is to delegate to external services specializing in that type of work. Airflow is not a streaming solution, but it is often used to process real-time data, pulling data off streams in batches. ## Principles - **Dynamic**: Airflow pipelines are configuration as code (Python), allowing for dynamic pipeline generation. This allows for writing code that instantiates pipelines dynamically. - **Extensible**: Easily define your own operators, executors and extend the library so that it fits the level of abstraction that suits your environment. - **Elegant**: Airflow pipelines are lean and explicit. Parameterizing your scripts is built into the core of Airflow using the powerful **Jinja** templating engine. - **Scalable**: Airflow has a modular architecture and uses a message queue to orchestrate an arbitrary number of workers. ## Requirements Apache Airflow is tested with: | | Main version (dev) | Stable version (2.9.1) | |-------------|------------------------------|-----------------------------| | Python | 3.8, 3.9, 3.10, 3.11, 3.12 | 3.8, 3.9, 3.10, 3.11, 3.12 | | Platform | AMD64/ARM64(\*) | AMD64/ARM64(\*) | | Kubernetes | 1.26, 1.27, 1.28, 1.29, 1.30 | 1.26, 1.27, 1.28, 1.29 | | PostgreSQL | 12, 13, 14, 15, 16 | 12, 13, 14, 15, 16 | | MySQL | 8.0, 8.4, Innovation | 8.0, Innovation | | SQLite | 3.15.0+ | 3.15.0+ | \* Experimental **Note**: MySQL 5.x versions are unable to or have limitations with running multiple schedulers -- please see the [Scheduler docs]( MariaDB is not tested/recommended. **Note**: SQLite is used in Airflow tests. Do not use it in production. We recommend using the latest stable version of SQLite for local development. **Note**: Airflow currently can be run on POSIX-compliant Operating Systems. For development, it is regularly tested on fairly modern Linux Distros and recent versions of macOS. On Windows you can run it via WSL2 (Windows Subsystem for Linux 2) or via Linux Containers. The work to add Windows support is tracked via [#10388]( but it is not a high priority. You should only use Linux-based distros as ""Production"" execution environment as this is the only environment that is supported. The only distro that is used in our CI tests and that is used in the [Community managed DockerHub image]( is `Debian Bookworm`. We also have support for legacy ``Debian Bullseye`` base image if you want to build a custom image but it is deprecated and option to do it will be removed in the Dockerfile that will accompany Airflow 2.9.1 so you are advised to switch to ``Debian Bookworm`` for your custom images. ## Getting started Visit the official Airflow website documentation (latest **stable** release) for help with [installing Airflow]( [getting started]( or walking through a more complete [tutorial]( > Note: If you're looking for documentation for the main branch (latest development branch): you can find it on [s.apache.org/airflow-docs]( For more information on Airflow Improvement Proposals (AIPs), visit the [Airflow Wiki]( Documentation for dependent projects like provider packages, Docker image, Helm Chart, you'll find it in [the documentation index]( ## Installing from PyPI We publish Apache Airflow as `apache-airflow` package in PyPI. Installing it however might be sometimes tricky because Airflow is a bit of both a library and application. Libraries usually keep their dependencies open, and applications usually pin them, but we should do neither and both simultaneously. We decided to keep our dependencies as open as possible (in `pyproject.toml`) so users can install different versions of libraries if needed. This means that `pip install apache-airflow` will not work from time to time or will produce unusable Airflow installation. To have repeatable installation, however, we keep a set of ""known-to-be-working"" constraint files in the orphan `constraints-main` and `constraints-2-0` branches. We keep those ""known-to-be-working"" constraints files separately per major/minor Python version. You can use them as constraint files when installing Airflow from PyPI. Note that you have to specify correct Airflow tag/version/branch and Python versions in the URL. 1. Installing just Airflow: > Note: Only `pip` installation is currently officially supported. While it is possible to install Airflow with tools like [Poetry]( or [pip-tools]( they do not share the same workflow as `pip` - especially when it comes to constraint vs. requirements management. Installing via `Poetry` or `pip-tools` is not currently supported. There are known issues with ``bazel`` that might lead to circular dependencies when using it to install Airflow. Please switch to ``pip`` if you encounter such problems. ``Bazel`` community works on fixing the problem in `this PR `_ so it might be that newer versions of ``bazel`` will handle it. If you wish to install Airflow using those tools, you should use the constraint files and convert them to the appropriate format and workflow that your tool requires. ```bash pip install 'apache-airflow==2.9.1' \ --constraint "" ``` 2. Installing with extras (i.e., postgres, google) ```bash pip install 'apache-airflow[postgres,google]==2.8.3' \ --constraint "" ``` For information on installing provider packages, check [providers]( ## Official source code Apache Airflow is an [Apache Software Foundation]( (ASF) project, and our official source code releases: - Follow the [ASF Release Policy]( - Can be downloaded from [the ASF Distribution Directory]( - Are cryptographically signed by the release manager - Are officially voted on by the PMC members during the [Release Approval Process]( Following the ASF rules, the source packages released must be sufficient for a user to build and test the release provided they have access to the appropriate platform and tools. ## Convenience packages There are other ways of installing and using Airflow. Those are ""convenience"" methods - they are not ""official releases"" as stated by the `ASF Release Policy`, but they can be used by the users who do not want to build the software themselves. Those are - in the order of most common ways people install Airflow: - [PyPI releases]( to install Airflow using standard `pip` tool - [Docker Images]( to install airflow via `docker` tool, use them in Kubernetes, Helm Charts, `docker-compose`, `docker swarm`, etc. You can read more about using, customising, and extending the images in the [Latest docs]( and learn details on the internals in the [images]( document. - [Tags in GitHub]( to retrieve the git project sources that were used to generate official source packages via git All those artifacts are not official releases, but they are prepared using officially released sources. Some of those artifacts are ""development"" or ""pre-release"" ones, and they are clearly marked as such following the ASF Policy. ## User Interface - **DAGs**: Overview of all DAGs in your environment. - **Grid**: Grid representation of a DAG that spans across time. - **Graph**: Visualization of a DAG's dependencies and their current status for a specific run. - **Task Duration**: Total time spent on different tasks over time. - **Gantt**: Duration and overlap of a DAG. - **Code**: Quick way to view source code of a DAG. ## Semantic versioning As of Airflow 2.0.0, we support a strict [SemVer]( approach for all packages released. There are few specific rules that we agreed to that define details of versioning of the different packages: * **Airflow**: SemVer rules apply to core airflow only (excludes any changes to providers). Changing limits for... [TRUNCATED]","13.6k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, kind:feature, kind:bug, good first issue, area:providers, area:core, area:UI, kind:documentation, kind:meta, area:Scheduler, provider:cncf-kubernetes, area:webserver, needs-triage, provider:google, area:helm-chart, area:API, provider:amazon-aws, kind:task, stale, area:core-operators, affected_version:2.6, area:logging, area:dev-tools, pending-response, provider:databricks, area:dynamic-task-mapping, pinned, Stale Bug Report, provider:openlineage, area:CLI, area:serialization"
giskard,Giskard-AI/giskard,3296,"['Python', 'JavaScript', 'HTML']","['mlops', 'ml-validation', 'ml-testing', 'ai-testing', 'ai-safety']","The Evaluation & Testing framework for LLMs & ML models Control risks of performance, bias and security issues in AI models []( []( []( []( []( Docs Blog Website Discord ## Install Giskard Install the latest version of Giskard from PyPi using pip: ```sh pip install ""giskard[llm]"" -U ``` We officially support Python 3.9, 3.10 and 3.11. ## Try in Colab [Open Colab notebook]( ______________________________________________________________________ Giskard is an open-source Python library that **automatically detects performance, bias & security issues in AI applications**. The library covers LLM-based applications such as RAG agents, all the way to traditional ML models for tabular data. ## Scan: Automatically assess your LLM-based agents for performance, bias & security issues Issues detected include: - Hallucinations - Harmful content generation - Prompt injection - Robustness issues - Sensitive information disclosure - Stereotypes & discrimination - many more... ## RAG Evaluation Toolkit (RAGET): Automatically generate evaluation datasets & evaluate RAG application answers If you're testing a RAG application, you can get an even more in-depth assessment using **RAGET**, Giskard's RAG Evaluation Toolkit. - **RAGET** can generate automatically a list of `question`, `reference_answer` and `reference_context` from the knowledge base of the RAG. You can then use this generated test set to evaluate your RAG agent. - **RAGET** computes scores *for each component of the RAG agent*. The scores are computed by aggregating the correctness of the agents answers on different question types. - Here is the list of components evaluated with **RAGET**: - `Generator`: the LLM used inside the RAG to generate the answers - `Retriever`: fetch relevant documents from the knowledge base according to a user query - `Rewriter`: rewrite the user query to make it more relevant to the knowledge base or to account for chat history - `Router`: filter the query of the user based on his intentions - `Knowledge Base`: the set of documents given to the RAG to generate the answers Giskard works with any model, in any environment and integrates seamlessly with your favorite tools # Contents - **[Quickstart](#quickstart)** - **1**. [Build a LLM agent](#build-a-llm-agent) - **2**. [Scan your model for issues](#scan-your-model-for-issues) - **3**. [Automatically generate an evaluation dataset for your RAG applications](#automatically-generate-an-evaluation-dataset-for-your-rag-applications) - **[Community](#community)** Quickstart 1. Build a LLM agent Let's build an agent that answers questions about climate change, based on the 2023 Climate Change Synthesis Report by the IPCC. Before starting let's install the required libraries: ```sh pip install langchain tiktoken ""pypdf<=3.17.0"" ``` ```python from langchain import OpenAI, FAISS, PromptTemplate from langchain.embeddings import OpenAIEmbeddings from langchain.document_loaders import PyPDFLoader from langchain.chains import RetrievalQA from langchain.text_splitter import RecursiveCharacterTextSplitter # Prepare vector store (FAISS) with IPPC report text_splitter = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=100, add_start_index=True) loader = PyPDFLoader("" db = FAISS.from_documents(loader.load_and_split(text_splitter), OpenAIEmbeddings()) # Prepare QA chain PROMPT_TEMPLATE = """"""You are the Climate Assistant, a helpful AI assistant made by Giskard. Your task is to answer common questions on climate change. You will be given a question and relevant excerpts from the IPCC Climate Change Synthesis Report (2023). Please provide short and clear answers based on the provided context. Be polite and helpful. Context: {context} Question: {question} Your answer: """""" llm = OpenAI(model=""gpt-3.5-turbo-instruct"", temperature=0) prompt = PromptTemplate(template=PROMPT_TEMPLATE, input_variables=[""question"", ""context""]) climate_qa_chain = RetrievalQA.from_llm(llm=llm, retriever=db.as_retriever(), prompt=prompt) ``` 2. Scan your model for issues Next, wrap your agent to prepare it for Giskard's scan: ```python import giskard import pandas as pd def model_predict(df: pd.DataFrame): """"""Wraps the LLM call in a simple Python function. The function takes a pandas.DataFrame containing the input variables needed by your model, and must return a list of the outputs (one for each row). """""" return [climate_qa_chain.run({""query"": question}) for question in df[""question""]] # Dont forget to fill the `name` and `description`: they are used by Giskard # to generate domain-specific tests. giskard_model = giskard.Model( model=model_predict, model_type=""text_generation"", name=""Climate Change Question Answering"", description=""This model answers any question about climate change based on IPCC reports"", feature_names=[""question""], ) ``` Then run Giskard's magical scan ```python scan_results = giskard.scan(giskard_model) ``` Once the scan completes, you can display the results directly in your notebook: ```python display(scan_results) # Or save it to a file scan_results.to_html(""scan_results.html"") ``` *If you're facing issues, check out our [docs]( for more information.* 3. Automatically generate an evaluation dataset for your RAG applications If the scan found issues in your model, you can automatically extract an evaluation dataset based on the issues found: ```python test_suite = scan_results.generate_test_suite(""My first test suite"") ``` By default, RAGET automatically generates 6 different question types (these can be selected if needed, see advanced question generation). The total number of questions is divided equally between each question type. To make the question generation more relevant and accurate, you can also provide a description of your agent. ```python from giskard.rag import generate_testset, KnowledgeBase # Load your data and initialize the KnowledgeBase df = pd.read_csv(""path/to/your/knowledge_base.csv"") knowledge_base = KnowledgeBase.from_pandas(df, columns=[""column_1"", ""column_2""]) # Generate a testset with 10 questions & answers for each question types (this will take a while) testset = generate_testset( knowledge_base, num_questions=60, language='en', # optional, we'll auto detect if not provided agent_description=""A customer support chatbot for company X"", # helps generating better questions ) ``` Depending on how many questions you generate, this can take a while. Once youre done, you can save this generated test set for future use: ```python # Save the generated testset testset.save(""my_testset.jsonl"") ``` You can easily load it back ```python from giskard.rag import QATestset loaded_testset = QATestset.load(""my_testset.jsonl"") # Convert it to a pandas dataframe df = loaded_testset.to_pandas() ``` Heres an example of a generated question: | question | reference_context | reference_answer | metadata | |----------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------|-------------------------------------------------------| | For which countries can I track my shipping? | Document 1: We offer free shipping on all orders over $50. For orders below $50, we charge a flat rate of $5.99. We offer shipping services to customers residing in all 50 states of the US, in addition to providing delivery options to Canada and Mexico. Document 2: Once your purchase has been successfully confirmed and shipped, you will receive a confirmation email containing your tracking number. You can simply click on the link provided in the email or visit our websites order tracking page. | We ship to all 50 states in the US, as well as to Canada and Mexico. We offer tracking for all our shippings. | `{""question_type"": ""simple"", ""seed_document_id"": 1, ""topic"": ""Shipping policy""}` | Each row of the test set contains 5 columns: - `question`: the generated question - `reference_context`: the context that can be used to answer the question - `reference_answer`: the answer to the question (generated with GPT-4) - `conversation_history`: not shown in the table above, contain the history of the conversation with the agent as a list, only relevant for conversational question, otherwise it contains an empty list. - `metadata`: a dictionary with various metadata about the question, this includes the question_type, seed_document_id the id of the document used to generate the question and the topic of the question Community We welcome contributions from the AI community! Read this [guide](./CONTRIBUTING.md) to get started, and join our thriving community on [Discord]( [Leave us a star]( it helps the project to get discovered by others and keeps us motivated to build awesome open-source tools! If you find our work useful, please consider [sponsoring us]( on GitHub. With a monthly sponsoring, you can get a sponsor badge, display your company in this readme, and get your bug reports prioritized. We also offer one-time sponsoring if you want us to get involved in a consulting project, run a workshop, or give a talk at your company.","214, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, enhancement, good first issue, question, scan, on hold, Serialization, Python, Lockfile, Integrations, yt, yt_client:webedia, yt_client:unifai, yt_client:sysdig, yt_client:l'oréal, yt_client:digitregroup, yt_client:crossdata, yt_client:continuity, yt_client:citibeats, yt_client:cgi, yt_client:altaroad, xhr, wip, webedia, v2.0, v1.5, user-test, security, safe for build, saas, push-feature"
transformers,huggingface/transformers,126658,"['Python', 'Cuda', 'Dockerfile']","['nlp', 'natural-language-processing', 'pytorch', 'language-model', 'tensorflow']","English | | | | Espaol | | | | ortugus | | Franais | Deutsch | Ting Vit | State-of-the-art Machine Learning for JAX, PyTorch and TensorFlow Transformers provides thousands of pretrained models to perform tasks on different modalities such as text, vision, and audio. These models can be applied on: * Text, for tasks like text classification, information extraction, question answering, summarization, translation, and text generation, in over 100 languages. * Images, for tasks like image classification, object detection, and segmentation. * Audio, for tasks like speech recognition and audio classification. Transformer models can also perform tasks on **several modalities combined**, such as table question answering, optical character recognition, information extraction from scanned documents, video classification, and visual question answering. Transformers provides APIs to quickly download and use those pretrained models on a given text, fine-tune them on your own datasets and then share them with the community on our [model hub]( At the same time, each python module defining an architecture is fully standalone and can be modified to enable quick research experiments. Transformers is backed by the three most popular deep learning libraries [Jax]( [PyTorch]( and [TensorFlow]( with a seamless integration between them. It's straightforward to train your models with one before loading them for inference with the other. ## Online demos You can test most of our models directly on their pages from the [model hub]( We also offer [private model hosting, versioning, & an inference API]( for public and private models. Here are a few examples: In Natural Language Processing: - [Masked word completion with BERT]( - [Named Entity Recognition with Electra]( - [Text generation with Mistral]( - [Natural Language Inference with RoBERTa]( - [Summarization with BART]( - [Question answering with DistilBERT]( - [Translation with T5]( In Computer Vision: - [Image classification with ViT]( - [Object Detection with DETR]( - [Semantic Segmentation with SegFormer]( - [Panoptic Segmentation with Mask2Former]( - [Depth Estimation with Depth Anything]( - [Video Classification with VideoMAE]( - [Universal Segmentation with OneFormer]( In Audio: - [Automatic Speech Recognition with Whisper]( - [Keyword Spotting with Wav2Vec2]( - [Audio Classification with Audio Spectrogram Transformer]( In Multimodal tasks: - [Table Question Answering with TAPAS]( - [Visual Question Answering with ViLT]( - [Image captioning with LLaVa]( - [Zero-shot Image Classification with SigLIP]( - [Document Question Answering with LayoutLM]( - [Zero-shot Video Classification with X-CLIP]( - [Zero-shot Object Detection with OWLv2]( - [Zero-shot Image Segmentation with CLIPSeg]( - [Automatic Mask Generation with SAM]( ## 100 projects using Transformers Transformers is more than a toolkit to use pretrained models: it's a community of projects built around it and the Hugging Face Hub. We want Transformers to enable developers, researchers, students, professors, engineers, and anyone else to build their dream projects. In order to celebrate the 100,000 stars of transformers, we have decided to put the spotlight on the community, and we have created the [awesome-transformers](./awesome-transformers.md) page which lists 100 incredible projects built in the vicinity of transformers. If you own or use a project that you believe should be part of the list, please open a PR to add it! ## If you are looking for custom support from the Hugging Face team ## Quick tour To immediately use a model on a given input (text, image, audio, ...), we provide the `pipeline` API. Pipelines group together a pretrained model with the preprocessing that was used during that model's training. Here is how to quickly use a pipeline to classify positive versus negative texts: ```python >>> from transformers import pipeline # Allocate a pipeline for sentiment-analysis >>> classifier = pipeline('sentiment-analysis') >>> classifier('We are very happy to introduce pipeline to the transformers repository.') [{'label': 'POSITIVE', 'score': 0.9996980428695679}] ``` The second line of code downloads and caches the pretrained model used by the pipeline, while the third evaluates it on the given text. Here, the answer is ""positive"" with a confidence of 99.97%. Many tasks have a pre-trained `pipeline` ready to go, in NLP but also in computer vision and speech. For example, we can easily extract detected objects in an image: ``` python >>> import requests >>> from PIL import Image >>> from transformers import pipeline # Download an image with cute cats >>> url = "" >>> image_data = requests.get(url, stream=True).raw >>> image = Image.open(image_data) # Allocate a pipeline for object detection >>> object_detector = pipeline('object-detection') >>> object_detector(image) [{'score': 0.9982201457023621, 'label': 'remote', 'box': {'xmin': 40, 'ymin': 70, 'xmax': 175, 'ymax': 117}}, {'score': 0.9960021376609802, 'label': 'remote', 'box': {'xmin': 333, 'ymin': 72, 'xmax': 368, 'ymax': 187}}, {'score': 0.9954745173454285, 'label': 'couch', 'box': {'xmin': 0, 'ymin': 1, 'xmax': 639, 'ymax': 473}}, {'score': 0.9988006353378296, 'label': 'cat', 'box': {'xmin': 13, 'ymin': 52, 'xmax': 314, 'ymax': 470}}, {'score': 0.9986783862113953, 'label': 'cat', 'box': {'xmin': 345, 'ymin': 23, 'xmax': 640, 'ymax': 368}}] ``` Here, we get a list of objects detected in the image, with a box surrounding the object and a confidence score. Here is the original image on the left, with the predictions displayed on the right: You can learn more about the tasks supported by the `pipeline` API in [this tutorial]( In addition to `pipeline`, to download and use any of the pretrained models on your given task, all it takes is three lines of code. Here is the PyTorch version: ```python >>> from transformers import AutoTokenizer, AutoModel >>> tokenizer = AutoTokenizer.from_pretrained(""google-bert/bert-base-uncased"") >>> model = AutoModel.from_pretrained(""google-bert/bert-base-uncased"") >>> inputs = tokenizer(""Hello world!"", return_tensors=""pt"") >>> outputs = model(**inputs) ``` And here is the equivalent code for TensorFlow: ```python >>> from transformers import AutoTokenizer, TFAutoModel >>> tokenizer = AutoTokenizer.from_pretrained(""google-bert/bert-base-uncased"") >>> model = TFAutoModel.from_pretrained(""google-bert/bert-base-uncased"") >>> inputs = tokenizer(""Hello world!"", return_tensors=""tf"") >>> outputs = model(**inputs) ``` The tokenizer is responsible for all the preprocessing the pretrained model expects and can be called directly on a single string (as in the above examples) or a list. It will output a dictionary that you can use in downstream code or simply directly pass to your model using the ** argument unpacking operator. The model itself is a regular [Pytorch `nn.Module`]( or a [TensorFlow `tf.keras.Model`]( (depending on your backend) which you can use as usual. [This tutorial]( explains how to integrate such a model into a classic PyTorch or TensorFlow training loop, or how to use our `Trainer` API to quickly fine-tune on a new dataset. ## Why should I use transformers? 1. Easy-to-use state-of-the-art models: - High performance on natural language understanding & generation, computer vision, and audio tasks. - Low barrier to entry for educators and practitioners. - Few user-facing abstractions with just three classes to learn. - A unified API for using all our pretrained models. 1. Lower compute costs, smaller carbon footprint: - Researchers can share trained models instead of always retraining. - Practitioners can reduce compute time and production costs. - Dozens of architectures with over 400,000 pretrained models across all modalities. 1. Choose the right framework for every part of a model's lifetime: - Train state-of-the-art models in 3 lines of code. - Move a single model between TF2.0/PyTorch/JAX frameworks at will. - Seamlessly pick the right framework for training, evaluation, and production. 1. Easily customize a model or an example to your needs: - We provide examples for each architecture to reproduce the results published by its original authors. - Model internals are exposed as consistently as possible. - Model files can be used independently of the library for quick experiments. ## Why shouldn't I use transformers? - This library is not a modular toolbox of building blocks for neural nets. The code in the model files is not refactored with additional abstractions on purpose, so that researchers can quickly iterate on each of the models without diving into additional abstractions/files. - The training API is not intended to work on any model but is optimized to work with the models provided by the library. For generic machine learning loops, you should use another library (possibly, [Accelerate]( - While we strive to present as many use cases as possible, the scripts in our [examples folder]( are just that: examples. It is expected that they won't work out-of-the-box on your specific problem and that you will be required to change a few lines of code to adapt them to your needs. ## Installation ### With pip This repository is tested on Python 3.8+, Flax 0.4.1+, PyTorch 1.11+, and TensorFlow 2.6+. You should install Transformers in a [virtual environment]( If you're unfamiliar with Python virtual environments, check out the [user guide]( First, create a virtual environment with the version of Python you're going to use and activate it. Then, you will need to install at least one of Flax, PyTorch, or TensorFlow. Please refer to [TensorFlow installation page]( [PyTorch installation page]( and/or [Flax]( and [Jax]( installation pages regarding the specific installation command for your platform. When one of those backends has been installed, Transformers can be installed using pip as follows: ```bash pip install transformers ``` If you'd like to play with the examples or need the bleeding edge of the code and can't wait for ... [TRUNCATED]","25.1k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, New model, Feature request, WIP, Good Second Issue, Audio, trainer, bug, Vision, Good Difficult Issue, Good First Issue, DeepSpeed, Generation, Examples, Core: Pipeline, TensorFlow, Core: Tokenization, Compilation, Cache, Performance, dependencies, Should Fix, PyTorch FSDP, Benchmarks, run-slow, optimization, Quantization, Flax, Flash Attention, python, jax"
yolov5,ultralytics/yolov5,47612,"['Python', 'Shell', 'Dockerfile']","['yolov3', 'yolov5', 'object-detection', 'pytorch', 'onnx']","[]( | []( | []( | []( | [Deutsch]( | [Franais]( | [Espaol]( | [Portugus]( | [Trke]( | [Ting Vit]( | []( | []( YOLOv5 is the world's most loved vision AI, representing Ultralytics open-source research into future vision AI methods, incorporating lessons learned and best practices evolved over thousands of hours of research and development. We hope that the resources here will help you get the most out of YOLOv5. Please browse the YOLOv5 Docs for details, raise an issue on GitHub for support, and join our Discord community for questions and discussions! To request an Enterprise License please complete the form at [Ultralytics Licensing]( ## YOLOv8 NEW We are thrilled to announce the launch of Ultralytics YOLOv8 , our NEW cutting-edge, state-of-the-art (SOTA) model released at **[ YOLOv8 is designed to be fast, accurate, and easy to use, making it an excellent choice for a wide range of object detection, image segmentation and image classification tasks. See the [YOLOv8 Docs]( for details and get started with: []( []( ```bash pip install ultralytics ``` ## Documentation See the [YOLOv5 Docs]( for full documentation on training, testing and deployment. See below for quickstart examples. Install Clone repo and install [requirements.txt]( in a [**Python>=3.8.0**]( environment, including [**PyTorch>=1.8**]( ```bash git clone # clone cd yolov5 pip install -r requirements.txt # install ``` Inference YOLOv5 [PyTorch Hub]( inference. [Models]( download automatically from the latest YOLOv5 [release]( ```python import torch # Model model = torch.hub.load(""ultralytics/yolov5"", ""yolov5s"") # or yolov5n - yolov5x6, custom # Images img = "" # or file, Path, PIL, OpenCV, numpy, list # Inference results = model(img) # Results results.print() # or .show(), .save(), .crop(), .pandas(), etc. ``` Inference with detect.py `detect.py` runs inference on a variety of sources, downloading [models]( automatically from the latest YOLOv5 [release]( and saving results to `runs/detect`. ```bash python detect.py --weights yolov5s.pt --source 0 # webcam img.jpg # image vid.mp4 # video screen # screenshot path/ # directory list.txt # list of images list.streams # list of streams 'path/*.jpg' # glob ' # YouTube 'rtsp://example.com/media.mp4' # RTSP, RTMP, HTTP stream ``` Training The commands below reproduce YOLOv5 [COCO]( results. [Models]( and [datasets]( download automatically from the latest YOLOv5 [release]( Training times for YOLOv5n/s/m/l/x are 1/2/4/6/8 days on a V100 GPU ([Multi-GPU]( times faster). Use the largest `--batch-size` possible, or pass `--batch-size -1` for YOLOv5 [AutoBatch]( Batch sizes shown for V100-16GB. ```bash python train.py --data coco.yaml --epochs 300 --weights '' --cfg yolov5n.yaml --batch-size 128 yolov5s 64 yolov5m 40 yolov5l 24 yolov5x 16 ``` Tutorials - [Train Custom Data]( RECOMMENDED - [Tips for Best Training Results]( - [Multi-GPU Training]( - [PyTorch Hub]( NEW - [TFLite, ONNX, CoreML, TensorRT Export]( - [NVIDIA Jetson platform Deployment]( NEW - [Test-Time Augmentation (TTA)]( - [Model Ensembling]( - [Model Pruning/Sparsity]( - [Hyperparameter Evolution]( - [Transfer Learning with Frozen Layers]( - [Architecture Summary]( NEW - [Roboflow for Datasets, Labeling, and Active Learning]( - [ClearML Logging]( NEW - [YOLOv5 with Neural Magic's Deepsparse]( NEW - [Comet Logging]( NEW ## Integrations | Roboflow | ClearML NEW | Comet NEW | Neural Magic NEW | | :--------------------------------------------------------------------------------------------------------------------------: | :---------------------------------------------------------------------------------------------------------------------------------: | :--------------------------------------------------------------------------------------------------------------------------------------------------------: | :----------------------------------------------------------------------------------------------------: | | Label and export your custom datasets directly to YOLOv5 for training with [Roboflow]( | Automatically track, visualize and even remotely train YOLOv5 using [ClearML]( (open-source!) | Free forever, [Comet]( lets you save YOLOv5 models, resume training, and interactively visualise and debug predictions | Run YOLOv5 inference up to 6x faster with [Neural Magic DeepSparse]( | ## Ultralytics HUB Experience seamless AI with [Ultralytics HUB]( , the all-in-one solution for data visualization, YOLOv5 and YOLOv8 model training and deployment, without any coding. Transform images into actionable insights and bring your AI visions to life with ease using our cutting-edge platform and user-friendly [Ultralytics App]( Start your journey for **Free** now! ## Why YOLOv5 YOLOv5 has been designed to be super easy to get started and simple to learn. We prioritize real-world results. YOLOv5-P5 640 Figure Figure Notes - **COCO AP val** denotes mAP@0.5:0.95 metric measured on the 5000-image [COCO val2017]( dataset over various inference sizes from 256 to 1536. - **GPU Speed** measures average inference time per image on [COCO val2017]( dataset using a [AWS p3.2xlarge]( V100 instance at batch-size 32. - **EfficientDet** data from [google/automl]( at batch size 8. - **Reproduce** by `python val.py --task study --data coco.yaml --iou 0.7 --weights yolov5n6.pt yolov5s6.pt yolov5m6.pt yolov5l6.pt yolov5x6.pt` ### Pretrained Checkpoints | Model | size(pixels) | mAPval50-95 | mAPval50 | SpeedCPU b1(ms) | SpeedV100 b1(ms) | SpeedV100 b32(ms) | params(M) | FLOPs@640 (B) | | ----------------------------------------------------------------------------------------------- | --------------------- | -------------------- | ----------------- | ---------------------------- | ----------------------------- | ------------------------------ | ------------------ | ---------------------- | | [YOLOv5n]( | 640 | 28.0 | 45.7 | **45** | **6.3** | **0.6** | **1.9** | **4.5** | | [YOLOv5s]( | 640 | 37.4 | 56.8 | 98 | 6.4 | 0.9 | 7.2 | 16.5 | | [YOLOv5m]( | 640 | 45.4 | 64.1 | 224 | 8.2 | 1.7 | 21.2 | 49.0 | | [YOLOv5l]( | 640 | 49.0 | 67.3 | 430 | 10.1 | 2.7 | 46.5 | 109.1 | | [YOLOv5x]( | 640 | 50.7 | 68.9 | 766 | 12.1 | 4.8 | 86.7 | 205.7 | | | | | | | | | | | | [YOLOv5n6]( | 1280 | 36.0 | 54.4 | 153 | 8.1 | 2.1 | 3.2 | 4.6 | | [YOLOv5s6]( | 1280 | 44.8 | 63.7 | 385 | 8.2 | 3.6 | 12.6 | 16.8 | | [YOLOv5m6]( | 1280 | 51.3 | 69.3 | 887 | 11.1 | 6.8 | 35.7 | 50.0 | | [YOLOv5l6]( | 1280 | 53.7 | 71.3 | 1784 | 15.8 | 10.5 | 76.8 | 111.4 | | [YOLOv5x6]( [TTA] | 12801536 | 55.0**55.8** | 72.7**72.7** | 3136- | 26.2- | 19.4- | 140.7- | 209.8- | Table Notes - All checkpoints are trained to 300 epochs with default settings. Nano and Small models use [hyp.scratch-low.yaml]( hyps, all others use [hyp.scratch-high.yaml]( - **mAPval** values are for single-model single-scale on [COCO val2017]( dataset.Reproduce by `python val.py --data coco.yaml --img 640 --conf 0.001 --iou 0.65` - **Speed** averaged over COCO val images using a [AWS p3.2xlarge]( instance. NMS times (~1 ms/img) not included.Reproduce by `python val.py --data coco.yaml --img 640 --task speed --batch 1` - **TTA** [Test Time Augmentation]( includes reflection and scale augmentations.Reproduce by `python val.py --data coco.yaml --img 1536 --iou 0.7 --augment` ## Segmentation Our new YOLOv5 [release v7.0]( instance segmentation models are the fastest and most accurate in the world, beating all current [SOTA benchmarks]( We've made them super simple to train, validate and deploy. See full details in our [Release Notes]( and visit our [YOLOv5 Segmentation Colab Notebook]( for quickstart tutorials. Segmentation Checkpoints We trained YOLOv5 segmentations models on COCO for 300 epochs at image size 640 using A100 GPUs. We exported all models to ONNX FP32 for CPU speed tests and to TensorRT FP16 for GPU speed tests. We ran all speed tests on Google [Colab Pro]( notebooks for easy reproducibility. | Model | size(pixels) | mAPbox50-95 | mAPmask50-95 | Train time300 epochsA100 (hours) | SpeedONNX CPU(ms) | SpeedTRT A100(ms) | params(M) | FLOPs@640 (B) | | ------------------------------------------------------------------------------------------ | --------------------- | -------------------- | --------------------- | --------------------------------------------- | ------------------------------ | ------------------------------ | ------------------ | ---------------------- | | [YOLOv5n-seg]( | 640 | 27.6 | 23.4 | 80:17 | **62.7** | **1.2** | **2.0** | **7.1** | | [YOLOv5s-seg]( | 640 | 37.6 | 31.7 | 88:16 | 173.3 | 1.4 | 7.6 | 26.4 | | [YOLOv5m-seg]( | 640 | 45.0 | 37.1 | 108:36 | 427.0 | 2.2 | 22.0 | 70.8 | | [YOLOv5l-seg]( | 640 | 49.0 | 39.9 | 66:43 (2x) | 857.4 | 2.9 | 47.9 | 147.7 | | [YOLOv5x-seg]( | 640 | **50.7** | **41.4** | 62:56 (3x) | 1579.2 | 4.5 | 88.8 | 265.7 | - All checkpoints are trained to 300 epochs with SGD optimizer with `lr0=0.01` and `weight_decay=5e-5` at image size 640 and all default settings.Runs logged to - **Accuracy** values are for single-model single-scale on COCO dataset.Reproduce by `python segment/val.py --data coco.yaml --weights yolov5s-seg.pt` - **Speed** averaged over 100 inference images using a [Colab Pro]( A100 High-RAM instance. Values indicate inference speed only (NMS adds about 1ms per image). Reproduce by `python segment/val.py --data coco.yaml --weights yolov5s-seg.pt --batch 1` - **Export** to ONNX at FP32 and TensorRT at FP16 done with `export.py`. Reproduce by `python export.py --weights yolov5s-seg.pt --include engine --device 0 --half` Segmentation Usage Examples ### Train YOLOv5 segmentation training supports auto-download COCO128-seg segmentation dataset with `--data coco128-seg.yaml` argument and manual download of COCO-segments dataset with `bash data/scripts/get_coco.sh --train --val --segments` and then `python train.py --data coco.yaml`. ```bash # Single-GPU python segment/train.py --data coco128-seg.yaml --weights yolov5s-seg.pt --img 640 # Multi-GPU DDP python -m torch.distributed.run --npr... [TRUNCATED]","15.7k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, question, Stale, enhancement, documentation, bug, TODO, help wanted, dependencies, wontfix, python, invalid, good first issue, fixed, duplicate"
authentik,goauthentik/authentik,7120,"['Python', 'TypeScript', 'Go']","['saml', 'saml-idp', 'saml-sp', 'oauth2', 'oauth2-server']","--- []( []( []( []( []( []( ## What is authentik? authentik is an open-source Identity Provider that emphasizes flexibility and versatility. It can be seamlessly integrated into existing environments to support new protocols. authentik is also a great solution for implementing sign-up, recovery, and other similar features in your application, saving you the hassle of dealing with them. ## Installation For small/test setups it is recommended to use Docker Compose; refer to the [documentation]( For bigger setups, there is a Helm Chart [here]( This is documented [here]( ## Screenshots | Light | Dark | | ----------------------------------------------------------- | ---------------------------------------------------------- | | | | | | | ## Development See [Developer Documentation]( ## Security See [SECURITY.md](SECURITY.md) ## Adoption and Contributions Your organization uses authentik? We'd love to add your logo to the readme and our website! Email us @ hello@goauthentik.io or open a GitHub Issue/PR! For more information on how to contribute to authentik, please refer to our [CONTRIBUTING.md file](./CONTRIBUTING.md).","555, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, enhancement, question, bug, enhancement/confirmed, bug/confirmed, needs_documentation, status/reviewing, hackathon, dependencies, pr_wanted, wontfix, status/awaiting-contributor, documentation, javascript, enterprise, deploy_me, customer, status/wontfix, status/invalid, python, help wanted, good first issue, go, github_actions, from_authentik, duplicate, docker"
sahi,obss/sahi,3658,['Python'],"['object-detection', 'instance-segmentation', 'computer-vision', 'small-object-detection', 'large-image']","SAHI: Slicing Aided Hyper Inference A lightweight vision library for performing large scale object detection & instance segmentation ## Overview Object detection and instance segmentation are by far the most important applications in Computer Vision. However, the detection of small objects and inference on large images still need to be improved in practical usage. Here comes the SAHI to help developers overcome these real-world problems with many vision utilities. | Command | Description | |---|---| | [predict]( | perform sliced/standard video/image prediction using any [yolov5]( model | | [predict-fiftyone]( | perform sliced/standard prediction using any [yolov5]( model and explore results in [fiftyone app]( | | [coco slice]( | automatically slice COCO annotation and image files | | [coco fiftyone]( | explore multiple prediction results on your COCO dataset with [fiftyone ui]( ordered by number of misdetections | | [coco evaluate]( | evaluate classwise COCO AP and AR for given predictions and ground truth | | [coco analyse]( | calculate and export many error analysis plots | | [coco yolov5]( | automatically convert any COCO dataset to [yolov5]( format | ## Quick Start Examples [ List of publications that cite SAHI (currently 150+)]( [ List of competition winners that used SAHI]( ### Tutorials - [Introduction to SAHI]( - [Official paper]( (ICIP 2022 oral) - [Pretrained weights and ICIP 2022 paper files]( - [Visualizing and Evaluating SAHI predictions with FiftyOne]( (2024) (NEW) - ['Exploring SAHI' Research Article from 'learnopencv.com']( - ['VIDEO TUTORIAL: Slicing Aided Hyper Inference for Small Object Detection - SAHI']( (RECOMMENDED) - [Video inference support is live]( - [Kaggle notebook]( - [Satellite object detection]( - [Error analysis plots & evaluation]( (RECOMMENDED) - [Interactive result visualization and inspection]( (RECOMMENDED) - [COCO dataset conversion]( - [Slicing operation notebook](demo/slicing.ipynb) - `YOLOX` + `SAHI` demo: (RECOMMENDED) - `RT-DETR` + `SAHI` walkthrough: (NEW) - `YOLOv8` + `SAHI` walkthrough: (NEW) - `SuperGradients/YOLONAS` + `SAHI`: (NEW) - `DeepSparse` + `SAHI` walkthrough: - `HuggingFace` + `SAHI` walkthrough: - `YOLOv5` + `SAHI` walkthrough: - `MMDetection` + `SAHI` walkthrough: - `Detectron2` + `SAHI` walkthrough: - `TorchVision` + `SAHI` walkthrough: ### Installation Installation details: - Install `sahi` using pip: ```console pip install sahi ``` - On Windows, `Shapely` needs to be installed via Conda: ```console conda install -c conda-forge shapely ``` - Install your desired version of pytorch and torchvision (cuda 11.3 for detectron2, cuda 11.7 for rest): ```console conda install pytorch=1.10.2 torchvision=0.11.3 cudatoolkit=11.3 -c pytorch ``` ```console conda install pytorch=1.13.1 torchvision=0.14.1 pytorch-cuda=11.7 -c pytorch -c nvidia ``` - Install your desired detection framework (yolov5): ```console pip install yolov5==7.0.13 ``` - Install your desired detection framework (ultralytics): ```console pip install ultralytics==8.0.207 ``` - Install your desired detection framework (mmdet): ```console pip install mim mim install mmdet==3.0.0 ``` - Install your desired detection framework (detectron2): ```console pip install detectron2 -f ``` - Install your desired detection framework (huggingface): ```console pip install transformers timm ``` - Install your desired detection framework (super-gradients): ```console pip install super-gradients==3.3.1 ``` ### Framework Agnostic Sliced/Standard Prediction Find detailed info on `sahi predict` command at [cli.md](docs/cli.md#predict-command-usage). Find detailed info on video inference at [video inference tutorial]( Find detailed info on image/dataset slicing utilities at [slicing.md](docs/slicing.md). ### Error Analysis Plots & Evaluation Find detailed info at [Error Analysis Plots & Evaluation]( ### Interactive Visualization & Inspection Find detailed info at [Interactive Result Visualization and Inspection]( ### Other utilities Find detailed info on COCO utilities (yolov5 conversion, slicing, subsampling, filtering, merging, splitting) at [coco.md](docs/coco.md). Find detailed info on MOT utilities (ground truth dataset creation, exporting tracker metrics in mot challenge format) at [mot.md](docs/mot.md). ## Citation If you use this package in your work, please cite it as: ``` @article{akyon2022sahi, title={Slicing Aided Hyper Inference and Fine-tuning for Small Object Detection}, author={Akyon, Fatih Cagatay and Altinuc, Sinan Onur and Temizel, Alptekin}, journal={2022 IEEE International Conference on Image Processing (ICIP)}, doi={10.1109/ICIP46576.2022.9897990}, pages={966-970}, year={2022} } ``` ``` @software{obss2021sahi, author = {Akyon, Fatih Cagatay and Cengiz, Cemil and Altinuc, Sinan Onur and Cavusoglu, Devrim and Sahin, Kadir and Eryuksel, Ogulcan}, title = {{SAHI: A lightweight vision library for performing large scale object detection and instance segmentation}}, month = nov, year = 2021, publisher = {Zenodo}, doi = {10.5281/zenodo.5718950}, url = { } ``` ## Contributing `sahi` library currently supports all [YOLOv5 models]( [MMDetection models]( [Detectron2 models]( and [HuggingFace object detection models]( Moreover, it is easy to add new frameworks. All you need to do is, create a new .py file under [sahi/models/]( folder and create a new class in that .py file that implements [DetectionModel class]( You can take the [MMDetection wrapper]( or [YOLOv5 wrapper]( as a reference. Before opening a PR: - Install required development packages: ```bash pip install -e .""[dev]"" ``` - Reformat with black and isort: ```bash python -m scripts.run_code_style format ``` ## Contributors Fatih Cagatay Akyon Sinan Onur Altinuc Devrim Cavusoglu Cemil Cengiz Ogulcan Eryuksel Kadir Nar Burak Maden Pushpak Bhoge M. Can V. Christoffer Edlund Ishwor Mehmet Ecevit Kadir Sahin Wey Youngjae Alzbeta Tureckova So Uchida Yonghye Kwon Neville Janne Myr Christoffer Edlund Ilker Manap Nguyn Th An Wei Ji Aynur Susuz Pranav Durai Lakshay Mehra Karl-Joan Alesma Jacob Marks William Lung Amogh Dhaliwal","547, Code, Pull requests, Discussions, Actions, Projects, Security, Insights, enhancement, workflows, wontfix, question, invalid, help wanted, good first issue, duplicate, documentation, cli, bug"
yfinance,ranaroussi/yfinance,12064,['Python'],"['python', 'pandas', 'yahoo-finance-api', 'yahoo-finance', 'stock-data']","# Download market data from Yahoo! Finance's API #### \*\*\* IMPORTANT LEGAL DISCLAIMER \*\*\* --- **Yahoo!, Y!Finance, and Yahoo! finance are registered trademarks of Yahoo, Inc.** yfinance is **not** affiliated, endorsed, or vetted by Yahoo, Inc. It's an open-source tool that uses Yahoo's publicly available APIs, and is intended for research and educational purposes. **You should refer to Yahoo!'s terms of use** ([here]( [here]( and [here]( **for details on your rights to use the actual data downloaded. Remember - the Yahoo! finance API is intended for personal use only.** --- **yfinance** offers a threaded and Pythonic way to download market data from [Yahoo! finance]( Check out this [Blog post]( for a detailed tutorial with code examples. [Changelog ]( --- - [Installation](#installation) - [Quick start](#quick-start) - [Advanced](#logging) - [Wiki]( - [Contribute](#developers-want-to-contribute) --- ## Installation Install `yfinance` using `pip`: ``` {.sourceCode .bash} $ pip install yfinance --upgrade --no-cache-dir ``` [With Conda]( To install with optional dependencies, replace `optional` with: `nospam` for [caching-requests](#smarter-scraping), `repair` for [price repair]( or `nospam,repair` for both: ``` {.sourceCode .bash} $ pip install ""yfinance[optional]"" ``` [Required dependencies](./requirements.txt) , [all dependencies](./setup.py#L62). --- ## Quick Start ### The Ticker module The `Ticker` module, which allows you to access ticker data in a more Pythonic way: ```python import yfinance as yf msft = yf.Ticker(""MSFT"") # get all stock info msft.info # get historical market data hist = msft.history(period=""1mo"") # show meta information about the history (requires history() to be called first) msft.history_metadata # show actions (dividends, splits, capital gains) msft.actions msft.dividends msft.splits msft.capital_gains # only for mutual funds & etfs # show share count msft.get_shares_full(start=""2022-01-01"", end=None) # show financials: # - income statement msft.income_stmt msft.quarterly_income_stmt # - balance sheet msft.balance_sheet msft.quarterly_balance_sheet # - cash flow statement msft.cashflow msft.quarterly_cashflow # see `Ticker.get_income_stmt()` for more options # show holders msft.major_holders msft.institutional_holders msft.mutualfund_holders msft.insider_transactions msft.insider_purchases msft.insider_roster_holders # show recommendations msft.recommendations msft.recommendations_summary msft.upgrades_downgrades # Show future and historic earnings dates, returns at most next 4 quarters and last 8 quarters by default. # Note: If more are needed use msft.get_earnings_dates(limit=XX) with increased limit argument. msft.earnings_dates # show ISIN code - *experimental* # ISIN = International Securities Identification Number msft.isin # show options expirations msft.options # show news msft.news # get option chain for specific expiration opt = msft.option_chain('YYYY-MM-DD') # data available via: opt.calls, opt.puts ``` If you want to use a proxy server for downloading data, use: ```python import yfinance as yf msft = yf.Ticker(""MSFT"") msft.history(..., proxy=""PROXY_SERVER"") msft.get_actions(proxy=""PROXY_SERVER"") msft.get_dividends(proxy=""PROXY_SERVER"") msft.get_splits(proxy=""PROXY_SERVER"") msft.get_capital_gains(proxy=""PROXY_SERVER"") msft.get_balance_sheet(proxy=""PROXY_SERVER"") msft.get_cashflow(proxy=""PROXY_SERVER"") msft.option_chain(..., proxy=""PROXY_SERVER"") ... ``` ### Multiple tickers To initialize multiple `Ticker` objects, use ```python import yfinance as yf tickers = yf.Tickers('msft aapl goog') # access each ticker using (example) tickers.tickers['MSFT'].info tickers.tickers['AAPL'].history(period=""1mo"") tickers.tickers['GOOG'].actions ``` To download price history into one table: ```python import yfinance as yf data = yf.download(""SPY AAPL"", period=""1mo"") ``` #### `yf.download()` and `Ticker.history()` have many options for configuring fetching and processing. [Review the Wiki]( for more options and detail. ### Logging `yfinance` now uses the `logging` module to handle messages, default behaviour is only print errors. If debugging, use `yf.enable_debug_mode()` to switch logging to debug with custom formatting. ### Smarter scraping Install the `nospam` packages for smarter scraping using `pip` (see [Installation](#installation)). These packages help cache calls such that Yahoo is not spammed with requests. To use a custom `requests` session, pass a `session=` argument to the Ticker constructor. This allows for caching calls to the API as well as a custom way to modify requests via the `User-agent` header. ```python import requests_cache session = requests_cache.CachedSession('yfinance.cache') session.headers['User-agent'] = 'my-program/1.0' ticker = yf.Ticker('msft', session=session) # The scraped response will be stored in the cache ticker.actions ``` Combine `requests_cache` with rate-limiting to avoid triggering Yahoo's rate-limiter/blocker that can corrupt data. ```python from requests import Session from requests_cache import CacheMixin, SQLiteCache from requests_ratelimiter import LimiterMixin, MemoryQueueBucket from pyrate_limiter import Duration, RequestRate, Limiter class CachedLimiterSession(CacheMixin, LimiterMixin, Session): pass session = CachedLimiterSession( limiter=Limiter(RequestRate(2, Duration.SECOND*5)), # max 2 requests per 5 seconds bucket_class=MemoryQueueBucket, backend=SQLiteCache(""yfinance.cache""), ) ``` ### Managing Multi-Level Columns The following answer on Stack Overflow is for [How to deal with multi-level column names downloaded with yfinance?]( - `yfinance` returns a `pandas.DataFrame` with multi-level column names, with a level for the ticker and a level for the stock price data - The answer discusses: - How to correctly read the the multi-level columns after saving the dataframe to a csv with `pandas.DataFrame.to_csv` - How to download single or multiple tickers into a single dataframe with single level column names and a ticker column ### Persistent cache store To reduce Yahoo, yfinance store some data locally: timezones to localize dates, and cookie. Cache location is: - Windows = C:/Users/\/AppData/Local/py-yfinance - Linux = /home/\/.cache/py-yfinance - MacOS = /Users/\/Library/Caches/py-yfinance You can direct cache to use a different location with `set_tz_cache_location()`: ```python import yfinance as yf yf.set_tz_cache_location(""custom/cache/location"") ... ``` --- ## Developers: want to contribute? `yfinance` relies on community to investigate bugs and contribute code. Developer guide: --- ### Legal Stuff **yfinance** is distributed under the **Apache Software License**. See the [LICENSE.txt](./LICENSE.txt) file in the release for details. AGAIN - yfinance is **not** affiliated, endorsed, or vetted by Yahoo, Inc. It's an open-source tool that uses Yahoo's publicly available APIs, and is intended for research and educational purposes. You should refer to Yahoo!'s terms of use ([here]( [here]( and [here]( for details on your rights to use the actual data downloaded. --- ### P.S. Please drop me an note with any feedback you have. **Ran Aroussi**","2.2k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, enhancement, Help wanted, yf prices, Yahoo spam, documentation, Yahoo database, Review wanted, yf scraping, yf financials, question, networking, duplicate"
diffusers,huggingface/diffusers,23024,"['Python', 'Dockerfile', 'Makefile']","['deep-learning', 'diffusion', 'image-generation', 'pytorch', 'score-based-generative-modeling']","Diffusers is the go-to library for state-of-the-art pretrained diffusion models for generating images, audio, and even 3D structures of molecules. Whether you're looking for a simple inference solution or training your own diffusion models, Diffusers is a modular toolbox that supports both. Our library is designed with a focus on [usability over performance]( [simple over easy]( and [customizability over abstractions]( Diffusers offers three core components: - State-of-the-art [diffusion pipelines]( that can be run in inference with just a few lines of code. - Interchangeable noise [schedulers]( for different diffusion speeds and output quality. - Pretrained [models]( that can be used as building blocks, and combined with schedulers, for creating your own end-to-end diffusion systems. ## Installation We recommend installing Diffusers in a virtual environment from PyPI or Conda. For more details about installing [PyTorch]( and [Flax]( please refer to their official documentation. ### PyTorch With `pip` (official package): ```bash pip install --upgrade diffusers[torch] ``` With `conda` (maintained by the community): ```sh conda install -c conda-forge diffusers ``` ### Flax With `pip` (official package): ```bash pip install --upgrade diffusers[flax] ``` ### Apple Silicon (M1/M2) support Please refer to the [How to use Stable Diffusion in Apple Silicon]( guide. ## Quickstart Generating outputs is super easy with Diffusers. To generate an image from text, use the `from_pretrained` method to load any pretrained diffusion model (browse the [Hub]( for 25.000+ checkpoints): ```python from diffusers import DiffusionPipeline import torch pipeline = DiffusionPipeline.from_pretrained(""runwayml/stable-diffusion-v1-5"", torch_dtype=torch.float16) pipeline.to(""cuda"") pipeline(""An image of a squirrel in Picasso style"").images[0] ``` You can also dig into the models and schedulers toolbox to build your own diffusion system: ```python from diffusers import DDPMScheduler, UNet2DModel from PIL import Image import torch scheduler = DDPMScheduler.from_pretrained(""google/ddpm-cat-256"") model = UNet2DModel.from_pretrained(""google/ddpm-cat-256"").to(""cuda"") scheduler.set_timesteps(50) sample_size = model.config.sample_size noise = torch.randn((1, 3, sample_size, sample_size), device=""cuda"") input = noise for t in scheduler.timesteps: with torch.no_grad(): noisy_residual = model(input, t).sample prev_noisy_sample = scheduler.step(noisy_residual, t, input).prev_sample input = prev_noisy_sample image = (input / 2 + 0.5).clamp(0, 1) image = image.cpu().permute(0, 2, 3, 1).numpy()[0] image = Image.fromarray((image * 255).round().astype(""uint8"")) image ``` Check out the [Quickstart]( to launch your diffusion journey today! ## How to navigate the documentation | **Documentation** | **What can I learn?** | |---------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | [Tutorial]( | A basic crash course for learning how to use the library's most important features like using models and schedulers to build your own diffusion system, and training your own diffusion model. | | [Loading]( | Guides for how to load and configure all the components (pipelines, models, and schedulers) of the library, as well as how to use different schedulers. | | [Pipelines for inference]( | Guides for how to use pipelines for different inference tasks, batched generation, controlling generated outputs and randomness, and how to contribute a pipeline to the library. | | [Optimization]( | Guides for how to optimize your diffusion model to run faster and consume less memory. | | [Training]( | Guides for how to train a diffusion model for different tasks with different training techniques. | ## Contribution We contributions from the open-source community! If you want to contribute to this library, please check out our [Contribution guide]( You can look out for [issues]( you'd like to tackle to contribute to the library. - See [Good first issues]( for general opportunities to contribute - See [New model/pipeline]( to contribute exciting new diffusion models / diffusion pipelines - See [New scheduler]( Also, say in our public Discord channel . We discuss the hottest trends about diffusion models, help each other with contributions, personal projects or just hang out . ## Popular Tasks & Pipelines Task Pipeline Hub Unconditional Image Generation DDPM google/ddpm-ema-church-256 Text-to-Image Stable Diffusion Text-to-Image runwayml/stable-diffusion-v1-5 Text-to-Image unCLIP kakaobrain/karlo-v1-alpha Text-to-Image DeepFloyd IF DeepFloyd/IF-I-XL-v1.0 Text-to-Image Kandinsky kandinsky-community/kandinsky-2-2-decoder Text-guided Image-to-Image ControlNet lllyasviel/sd-controlnet-canny Text-guided Image-to-Image InstructPix2Pix timbrooks/instruct-pix2pix Text-guided Image-to-Image Stable Diffusion Image-to-Image runwayml/stable-diffusion-v1-5 Text-guided Image Inpainting Stable Diffusion Inpainting runwayml/stable-diffusion-inpainting Image Variation Stable Diffusion Image Variation lambdalabs/sd-image-variations-diffusers Super Resolution Stable Diffusion Upscale stabilityai/stable-diffusion-x4-upscaler Super Resolution Stable Diffusion Latent Upscale stabilityai/sd-x2-latent-upscaler ## Popular libraries using Diffusers - - - - - - - - - - +11.000 other amazing GitHub repositories Thank you for using us . ## Credits This library concretizes previous work by many different authors and would not have been possible without their great research and implementations. We'd like to thank, in particular, the following implementations which have helped us in our development and without which the API could not have been as polished today: - @CompVis' latent diffusion models library, available [here]( - @hojonathanho original DDPM implementation, available [here]( as well as the extremely useful translation into PyTorch by @pesser, available [here]( - @ermongroup's DDIM implementation, available [here]( - @yang-song's Score-VE and Score-VP implementations, available [here]( We also want to thank @heejkoo for the very helpful overview of papers, code and resources on diffusion models, available [here]( as well as @crowsonkb and @rromb for useful discussions and insights. ## Citation ```bibtex @misc{von-platen-etal-2022-diffusers, author = {Patrick von Platen and Suraj Patil and Anton Lozhkov and Pedro Cuenca and Nathan Lambert and Kashif Rasul and Mishig Davaadorj and Dhruv Nair and Sayak Paul and William Berman and Yiyi Xu and Steven Liu and Thomas Wolf}, title = {Diffusers: State-of-the-art diffusion models}, year = {2022}, publisher = {GitHub}, journal = {GitHub repository}, howpublished = {\url{ } ```","4.8k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, stale, bug, contributions-welcome, New pipeline/model, wip, Good second issue, community-examples, enhancement, good first issue, help wanted, training, single_file, New scheduler, scheduler, should-move-to-discussion, jax/flax, documentation, video, refactor, needs-code-example, inpainting, advanced, wontfix, peft, low-priority, dependencies, conversion script, ONNX, spam, question"
stable-diffusion-webui,AUTOMATIC1111/stable-diffusion-webui,132192,"['Python', 'JavaScript', 'CSS']","['deep-learning', 'diffusion', 'image-generation', 'image2image', 'img2img']","# Stable Diffusion web UI A web interface for Stable Diffusion, implemented using Gradio library. ## Features [Detailed feature showcase with images]( - Original txt2img and img2img modes - One click install and run script (but you still must install python and git) - Outpainting - Inpainting - Color Sketch - Prompt Matrix - Stable Diffusion Upscale - Attention, specify parts of text that the model should pay more attention to - a man in a `((tuxedo))` - will pay more attention to tuxedo - a man in a `(tuxedo:1.21)` - alternative syntax - select text and press `Ctrl+Up` or `Ctrl+Down` (or `Command+Up` or `Command+Down` if you're on a MacOS) to automatically adjust attention to selected text (code contributed by anonymous user) - Loopback, run img2img processing multiple times - X/Y/Z plot, a way to draw a 3 dimensional plot of images with different parameters - Textual Inversion - have as many embeddings as you want and use any names you like for them - use multiple embeddings with different numbers of vectors per token - works with half precision floating point numbers - train embeddings on 8GB (also reports of 6GB working) - Extras tab with: - GFPGAN, neural network that fixes faces - CodeFormer, face restoration tool as an alternative to GFPGAN - RealESRGAN, neural network upscaler - ESRGAN, neural network upscaler with a lot of third party models - SwinIR and Swin2SR ([see here]( neural network upscalers - LDSR, Latent diffusion super resolution upscaling - Resizing aspect ratio options - Sampling method selection - Adjust sampler eta values (noise multiplier) - More advanced noise setting options - Interrupt processing at any time - 4GB video card support (also reports of 2GB working) - Correct seeds for batches - Live prompt token length validation - Generation parameters - parameters you used to generate images are saved with that image - in PNG chunks for PNG, in EXIF for JPEG - can drag the image to PNG info tab to restore generation parameters and automatically copy them into UI - can be disabled in settings - drag and drop an image/text-parameters to promptbox - Read Generation Parameters Button, loads parameters in promptbox to UI - Settings page - Running arbitrary python code from UI (must run with `--allow-code` to enable) - Mouseover hints for most UI elements - Possible to change defaults/mix/max/step values for UI elements via text config - Tiling support, a checkbox to create images that can be tiled like textures - Progress bar and live image generation preview - Can use a separate neural network to produce previews with almost none VRAM or compute requirement - Negative prompt, an extra text field that allows you to list what you don't want to see in generated image - Styles, a way to save part of prompt and easily apply them via dropdown later - Variations, a way to generate same image but with tiny differences - Seed resizing, a way to generate same image but at slightly different resolution - CLIP interrogator, a button that tries to guess prompt from an image - Prompt Editing, a way to change prompt mid-generation, say to start making a watermelon and switch to anime girl midway - Batch Processing, process a group of files using img2img - Img2img Alternative, reverse Euler method of cross attention control - Highres Fix, a convenience option to produce high resolution pictures in one click without usual distortions - Reloading checkpoints on the fly - Checkpoint Merger, a tab that allows you to merge up to 3 checkpoints into one - [Custom scripts]( with many extensions from community - [Composable-Diffusion]( a way to use multiple prompts at once - separate prompts using uppercase `AND` - also supports weights for prompts: `a cat :1.2 AND a dog AND a penguin :2.2` - No token limit for prompts (original stable diffusion lets you use up to 75 tokens) - DeepDanbooru integration, creates danbooru style tags for anime prompts - [xformers]( major speed increase for select cards: (add `--xformers` to commandline args) - via extension: [History tab]( view, direct and delete images conveniently within the UI - Generate forever option - Training tab - hypernetworks and embeddings options - Preprocessing images: cropping, mirroring, autotagging using BLIP or deepdanbooru (for anime) - Clip skip - Hypernetworks - Loras (same as Hypernetworks but more pretty) - A separate UI where you can choose, with preview, which embeddings, hypernetworks or Loras to add to your prompt - Can select to load a different VAE from settings screen - Estimated completion time in progress bar - API - Support for dedicated [inpainting model]( by RunwayML - via extension: [Aesthetic Gradients]( a way to generate images with a specific aesthetic by using clip images embeds (implementation of [ - [Stable Diffusion 2.0]( support - see [wiki]( for instructions - [Alt-Diffusion]( support - see [wiki]( for instructions - Now without any bad letters! - Load checkpoints in safetensors format - Eased resolution restriction: generated image's dimensions must be a multiple of 8 rather than 64 - Now with a license! - Reorder elements in the UI from settings screen - [Segmind Stable Diffusion]( support ## Installation and Running Make sure the required [dependencies]( are met and follow the instructions available for: - [NVidia]( (recommended) - [AMD]( GPUs. - [Intel CPUs, Intel GPUs (both integrated and discrete)]( (external wiki page) - [Ascend NPUs]( (external wiki page) Alternatively, use online services (like Google Colab): - [List of Online Services]( ### Installation on Windows 10/11 with NVidia-GPUs using release package 1. Download `sd.webui.zip` from [v1.0.0-pre]( and extract its contents. 2. Run `update.bat`. 3. Run `run.bat`. > For more details see [Install-and-Run-on-NVidia-GPUs]( ### Automatic Installation on Windows 1. Install [Python 3.10.6]( (Newer version of Python does not support torch), checking ""Add Python to PATH"". 2. Install [git]( 3. Download the stable-diffusion-webui repository, for example by running `git clone 4. Run `webui-user.bat` from Windows Explorer as normal, non-administrator, user. ### Automatic Installation on Linux 1. Install the dependencies: ```bash # Debian-based: sudo apt install wget git python3 python3-venv libgl1 libglib2.0-0 # Red Hat-based: sudo dnf install wget git python3 gperftools-libs libglvnd-glx # openSUSE-based: sudo zypper install wget git python3 libtcmalloc4 libglvnd # Arch-based: sudo pacman -S wget git python3 ``` 2. Navigate to the directory you would like the webui to be installed and execute the following command: ```bash wget -q ``` 3. Run `webui.sh`. 4. Check `webui-user.sh` for options. ### Installation on Apple Silicon Find the instructions [here]( ## Contributing Here's how to add code to this repo: [Contributing]( ## Documentation The documentation was moved from this README over to the project's [wiki]( For the purposes of getting Google and other search engines to crawl the wiki, here's a link to the (not for humans) [crawlable wiki]( ## Credits Licenses for borrowed code can be found in `Settings -> Licenses` screen, and also in `html/licenses.html` file. - Stable Diffusion - - k-diffusion - - Spandrel - implementing - GFPGAN - - CodeFormer - - ESRGAN - - SwinIR - - Swin2SR - - LDSR - - MiDaS - - Ideas for optimizations - - Cross Attention layer optimization - Doggettx - original idea for prompt editing. - Cross Attention layer optimization - InvokeAI, lstein - (originally - Sub-quadratic Cross Attention layer optimization - Alex Birch ( Amin Rezaei ( - Textual Inversion - Rinon Gal - (we're not using his code, but we are using his ideas). - Idea for SD upscale - - Noise generation for outpainting mk2 - - CLIP interrogator idea and borrowing some code - - Idea for Composable Diffusion - - xformers - - DeepDanbooru - interrogator for anime diffusers - Sampling in float32 precision from a float16 UNet - marunine for the idea, Birch-san for the example Diffusers implementation ( - Instruct pix2pix - Tim Brooks (star), Aleksander Holynski (star), Alexei A. Efros (no star) - - Security advice - RyotaK - UniPC sampler - Wenliang Zhao - - TAESD - Ollin Boer Bohan - - LyCORIS - KohakuBlueleaf - Restart sampling - lambertae - - Hypertile - tfernd - - Initial Gradio script - posted on 4chan by an Anonymous user. Thank you Anonymous user. - (You)","25.4k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, bug-report, enhancement, asking-for-help-with-local-system-issues, extension-request, platform:mac, platform:amd, bug, upstream, gradio, not-an-issue, sdxl, cannot-reproduce, documentation, question, help-wanted, announcement, wontfix"
nerfstudio,nerfstudio-project/nerfstudio,8674,"['Python', 'JavaScript', 'TypeScript']","['nerf', 'pytorch', '3d', '3d-graphics', '3d-reconstruction']","A collaboration friendly studio for NeRFs - [Quickstart](#quickstart) - [Learn more](#learn-more) - [Supported Features](#supported-features) # About _Its as simple as plug and play with nerfstudio!_ Nerfstudio provides a simple API that allows for a simplified end-to-end process of creating, training, and testing NeRFs. The library supports a **more interpretable implementation of NeRFs by modularizing each component.** With more modular NeRFs, we hope to create a more user-friendly experience in exploring the technology. This is a contributor-friendly repo with the goal of building a community where users can more easily build upon each other's contributions. Nerfstudio initially launched as an opensource project by Berkeley students in [KAIR lab]( at [Berkeley AI Research (BAIR)]( in October 2022 as a part of a research project ([paper]( It is currently developed by Berkeley students and community contributors. We are committed to providing learning resources to help you understand the basics of (if you're just getting started), and keep up-to-date with (if you're a seasoned veteran) all things NeRF. As researchers, we know just how hard it is to get onboarded with this next-gen technology. So we're here to help with tutorials, documentation, and more! Have feature requests? Want to add your brand-spankin'-new NeRF model? Have a new dataset? **We welcome [contributions]( Please do not hesitate to reach out to the nerfstudio team with any questions via [Discord]( Have feedback? We'd love for you to fill out our [Nerfstudio Feedback Form]( if you want to let us know who you are, why you are interested in Nerfstudio, or provide any feedback! We hope nerfstudio enables you to build faster :hammer: learn together :books: and contribute to our NeRF community :sparkling_heart:. ## Sponsors Sponsors of this work includes [Luma AI]( and the [BAIR commons]( # Quickstart The quickstart will help you get started with the default vanilla NeRF trained on the classic Blender Lego scene. For more complex changes (e.g., running with your own data/setting up a new NeRF graph), please refer to our [references](#learn-more). ## 1. Installation: Setup the environment ### Prerequisites You must have an NVIDIA video card with CUDA installed on the system. This library has been tested with version 11.8 of CUDA. You can find more information about installing CUDA [here]( ### Create environment Nerfstudio requires `python >= 3.8`. We recommend using conda to manage dependencies. Make sure to install [Conda]( before proceeding. ```bash conda create --name nerfstudio -y python=3.8 conda activate nerfstudio pip install --upgrade pip ``` ### Dependencies Install PyTorch with CUDA (this repo has been tested with CUDA 11.7 and CUDA 11.8) and [tiny-cuda-nn]( `cuda-toolkit` is required for building `tiny-cuda-nn`. For CUDA 11.8: ```bash pip install torch==2.1.2+cu118 torchvision==0.16.2+cu118 --extra-index-url conda install -c ""nvidia/label/cuda-11.8.0"" cuda-toolkit pip install ninja git+ ``` See [Dependencies]( in the Installation documentation for more. ### Installing nerfstudio Easy option: ```bash pip install nerfstudio ``` **OR** if you want the latest and greatest: ```bash git clone cd nerfstudio pip install --upgrade pip setuptools pip install -e . ``` **OR** if you want to skip all installation steps and directly start using nerfstudio, use the docker image: See [Installation]( - **Use docker image**. ## 2. Training your first model! The following will train a _nerfacto_ model, our recommended model for real world scenes. ```bash # Download some test data: ns-download-data nerfstudio --capture-name=poster # Train model ns-train nerfacto --data data/nerfstudio/poster ``` If everything works, you should see training progress like the following: Navigating to the link at the end of the terminal will load the webviewer. If you are running on a remote machine, you will need to port forward the websocket port (defaults to 7007). ### Resume from checkpoint / visualize existing run It is possible to load a pretrained model by running ```bash ns-train nerfacto --data data/nerfstudio/poster --load-dir {outputs/.../nerfstudio_models} ``` ## Visualize existing run Given a pretrained model checkpoint, you can start the viewer by running ```bash ns-viewer --load-config {outputs/.../config.yml} ``` ## 3. Exporting Results Once you have a NeRF model you can either render out a video or export a point cloud. ### Render Video First we must create a path for the camera to follow. This can be done in the viewer under the ""RENDER"" tab. Orient your 3D view to the location where you wish the video to start, then press ""ADD CAMERA"". This will set the first camera key frame. Continue to new viewpoints adding additional cameras to create the camera path. We provide other parameters to further refine your camera path. Once satisfied, press ""RENDER"" which will display a modal that contains the command needed to render the video. Kill the training job (or create a new terminal if you have lots of compute) and run the command to generate the video. Other video export options are available, learn more by running ```bash ns-render --help ``` ### Generate Point Cloud While NeRF models are not designed to generate point clouds, it is still possible. Navigate to the ""EXPORT"" tab in the 3D viewer and select ""POINT CLOUD"". If the crop option is selected, everything in the yellow square will be exported into a point cloud. Modify the settings as desired then run the command at the bottom of the panel in your command line. Alternatively you can use the CLI without the viewer. Learn about the export options by running ```bash ns-export pointcloud --help ``` ## 4. Using Custom Data Using an existing dataset is great, but likely you want to use your own data! We support various methods for using your own data. Before it can be used in nerfstudio, the camera location and orientations must be determined and then converted into our format using `ns-process-data`. We rely on external tools for this, instructions and information can be found in the documentation. | Data | Capture Device | Requirements | `ns-process-data` Speed | | --------------------------------------------------------------------------------------------- | -------------- | ----------------------------------------------------------------- | ----------------------- | | [Images]( | Any | [COLMAP]( | | | [Video]( | Any | [COLMAP]( | | | [360 Data]( | Any | [COLMAP]( | | | [Polycam]( | IOS with LiDAR | [Polycam App]( | | | [KIRI Engine]( | IOS or Android | [KIRI Engine App]( | | | [Record3D]( | IOS with LiDAR | [Record3D app]( | | | [Spectacular AI]( | IOS, OAK, [others]( | [App]( / [`sai-cli`]( | | | [Metashape]( | Any | [Metashape]( | | | [RealityCapture]( | Any | [RealityCapture]( | | | [ODM]( | Any | [ODM]( | | | [Aria]( | Aria glasses | [Project Aria]( | | | [Custom]( | Any | Camera Poses | | ## 5. Advanced Options ### Training models other than nerfacto We provide other models than nerfacto, for example if you want to train the original nerf model, use the following command ```bash ns-train vanilla-nerf --data DATA_PATH ``` For a full list of included models run `ns-train --help`. ### Modify Configuration Each model contains many parameters that can be changed, too many to list here. Use the `--help` command to see the full list of configuration options. ```bash ns-train nerfacto --help ``` ### Tensorboard / WandB / Viewer We support four different methods to track training progress, using the viewer[tensorboard]( [Weights and Biases]( and ,[Comet]( You can specify which visualizer to use by appending `--vis {viewer, tensorboard, wandb, comet viewer+wandb, viewer+tensorboard, viewer+comet}` to the training command. Simultaneously utilizing the viewer alongside wandb or tensorboard may cause stuttering issues during evaluation steps. The viewer only works for methods that are fast (ie. nerfacto, instant-ngp), for slower methods like NeRF, use the other loggers. # Learn More And that's it for getting started with the basics of nerfstudio. If you're interested in learning more on how to create your own pipelines, develop with the viewer, run benchmarks, and more, please check out some of the quicklinks below or visit our [documentation]( directly. | Section | Description | | ---------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------- | | [Documentation]( | Full API documentation and tutorials | | [Viewer]( | Home page for our web viewer | | **Educational** | | [Model Descriptions]( | Description of all the models supported by nerfstudio and explanations of component parts. | | [Component Descriptions]( | Interactive notebooks that explain notable/commonly used modules in various models. | | **Tutorials** | | [Getting Started]( | A more in-depth guide on how to get started with nerfstudio from installation to contributing. | | [Using the Viewer]( | A quick demo video on how to navigate the viewer. | | [Using Record3D]( | Demo video on how to run nerfstudio without using COLMAP. | | **For Developers** | | [Creating pipelines]( | Learn how to easily build new neural rendering pipelines by using and/or implementing new modules. | | [Creating datasets]( | Have a new dataset? Learn how to run it with nerfstudio. | | [Contributing]( | Walk-through for how you can start contributing now. | | **Community** | | [Discord]( | Join our community to discuss more. We would love to hear from you! | | [Twitter]( | Follow us on Twitter @nerfstudioteam to see cool updates and announcements | | [Feedback Form](TODO) | We welcome any feedback! This is our chance to learn what you all are using Nerfstudio for. | # Supported Features We provide the following support structures to make life easier for getting started with NeRFs. **If you are looking for a feature that is not currently supported, please do n... [TRUNCATED]","1.1k, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, enhancement, bug, feature request, python, viewer, core, colab, pre-release, documentation, custom dataset, pending clarification, windows, speedup, question, quality of life, help wanted, good first issue, data processing, wontfix, quick fixes, javascript, invalid, installation, duplicate, dependencies, Docker"
dgl,dmlc/dgl,13081,"['Python', 'C++', 'Jupyter Notebook']","['deep-learning', 'graph-neural-networks']","[]( []( []( []( [](./LICENSE) []( [Website]( | [A Blitz Introduction to DGL]( | Documentation ([Latest]( | [Stable]( | [Official Examples](examples/README.md) | [Discussion Forum]( | [Slack Channel]( DGL is an easy-to-use, high performance and scalable Python package for deep learning on graphs. DGL is framework agnostic, meaning if a deep graph model is a component of an end-to-end application, the rest of the logics can be implemented in any major frameworks, such as PyTorch, Apache MXNet or TensorFlow. Figure: DGL Overall Architecture ## Highlighted Features ### A GPU-ready graph library DGL provides a powerful graph object that can reside on either CPU or GPU. It bundles structural data as well as features for better control. We provide a variety of functions for computing with graph objects including efficient and customizable message passing primitives for Graph Neural Networks. ### A versatile tool for GNN researchers and practitioners The field of graph deep learning is still rapidly evolving and many research ideas emerge by standing on the shoulders of giants. To ease the process, [DGl-Go]( is a command-line interface to get started with training, using and studying state-of-the-art GNNs. DGL collects a rich set of [example implementations]( of popular GNN models of a wide range of topics. Researchers can [search]( for related models to innovate new ideas from or use them as baselines for experiments. Moreover, DGL provides many state-of-the-art [GNN layers and modules]( for users to build new model architectures. DGL is one of the preferred platforms for many standard graph deep learning benchmarks including [OGB]( and [GNNBenchmarks]( ### Easy to learn and use DGL provides plenty of learning materials for all kinds of users from ML researchers to domain experts. The [Blitz Introduction to DGL]( is a 120-minute tour of the basics of graph machine learning. The [User Guide]( explains in more details the concepts of graphs as well as the training methodology. All of them include code snippets in DGL that are runnable and ready to be plugged into ones own pipeline. ### Scalable and efficient It is convenient to train models using DGL on large-scale graphs across **multiple GPUs** or **multiple machines**. DGL extensively optimizes the whole stack to reduce the overhead in communication, memory consumption and synchronization. As a result, DGL can easily scale to billion-sized graphs. Get started with the [tutorials]( and [user guide]( for distributed training. See the [system performance note]( for the comparison with other tools. ## Get Started Users can install DGL from [pip and conda]( You can also download GPU enabled DGL docker [containers]( (backended by PyTorch) from NVIDIA NGC for both x86 and ARM based linux systems. Advanced users can follow the [instructions]( to install from source. For absolute beginners, start with [the Blitz Introduction to DGL]( It covers the basic concepts of common graph machine learning tasks and a step-by-step on building Graph Neural Networks (GNNs) to solve them. For acquainted users who wish to learn more, * Experience state-of-the-art GNN models in only two command-lines using [DGL-Go]( * Learn DGL by [example implementations]( of popular GNN models. * Read the [User Guide]( ([]( which explains the concepts and usage of DGL in much more details. * Go through the tutorials for advanced features like [stochastic training of GNNs]( training on [multi-GPU]( or [multi-machine]( * [Study classical papers]( on graph machine learning alongside DGL. * Search for the usage of a specific API in the [API reference manual]( which organizes all DGL APIs by their namespace. All the learning materials are available at our [documentation site]( If you are new to deep learning in general, check out the open source book [Dive into Deep Learning]( ## Community ### Get connected We provide multiple channels to connect you to the community of the DGL developers, users, and the general GNN academic researchers: * Our Slack channel, [click to join]( * Our discussion forum: * Our [Zhihu blog (in Chinese)]( * Monthly GNN User Group online seminar ([event link]( | [past videos]( Take the survey [here]( and leave any feedback to make DGL better fit for your needs. Thanks! ### DGL-powered projects * DGL-LifeSci: a DGL-based package for various applications in life science with graph neural networks. * DGL-KE: a high performance, easy-to-use, and scalable package for learning large-scale knowledge graph embeddings. * Benchmarking GNN: * OGB: a collection of realistic, large-scale, and diverse benchmark datasets for machine learning on graphs. * Graph4NLP: an easy-to-use library for R&D at the intersection of Deep Learning on Graphs and Natural Language Processing. * GNN-RecSys: * Amazon Neptune ML: a new capability of Neptune that uses Graph Neural Networks (GNNs), a machine learning technique purpose-built for graphs, to make easy, fast, and more accurate predictions using graph data. * GNNLens2: Visualization tool for Graph Neural Networks. * RNAGlib: A package to facilitate construction, analysis, visualization and machine learning on RNA 2.5D Graphs. Includes a pre-built dataset: * OpenHGNN: Model zoo and benchmarks for Heterogeneous Graph Neural Networks. * TGL: A graph learning framework for large-scale temporal graphs. * gtrick: Bag of Tricks for Graph Neural Networks. * ArangoDB-DGL Adapter: Import [ArangoDB]( graphs into DGL and vice-versa. * DGLD: [DGLD]( is an open-source library for Deep Graph Anomaly Detection based on pytorch and DGL. ### Awesome Papers Using DGL 1. [**Benchmarking Graph Neural Networks**]( *Vijay Prakash Dwivedi, Chaitanya K. Joshi, Thomas Laurent, Yoshua Bengio, Xavier Bresson* 1. [**Open Graph Benchmarks: Datasets for Machine Learning on Graphs**]( NeurIPS'20, *Weihua Hu, Matthias Fey, Marinka Zitnik, Yuxiao Dong, Hongyu Ren, Bowen Liu, Michele Catasta, Jure Leskovec* 1. [**DropEdge: Towards Deep Graph Convolutional Networks on Node Classification**]( ICLR'20, *Yu Rong, Wenbing Huang, Tingyang Xu, Junzhou Huan* 1. [**Discourse-Aware Neural Extractive Text Summarization**]( ACL'20, *Jiacheng Xu, Zhe Gan, Yu Cheng, Jingjing Liu* 1. [**GCC: Graph Contrastive Coding for Graph Neural Network Pre-Training**]( KDD'20, *Jiezhong Qiu, Qibin Chen, Yuxiao Dong, Jing Zhang, Hongxia Yang, Ming Ding, Kuansan Wang, Jie Tang* 1. [**DGL-KE: Training Knowledge Graph Embeddings at Scale**]( SIGIR'20, *Da Zheng, Xiang Song, Chao Ma, Zeyuan Tan, Zihao Ye, Jin Dong, Hao Xiong, Zheng Zhang, George Karypis* 1. [**Improving Graph Neural Network Expressivity via Subgraph Isomorphism Counting**]( *Giorgos Bouritsas, Fabrizio Frasca, Stefanos Zafeiriou, Michael M. Bronstein* 1. [**INT: An Inequality Benchmark for Evaluating Generalization in Theorem Proving**]( *Yuhuai Wu, Albert Q. Jiang, Jimmy Ba, Roger Grosse* 1. [**Finding Patient Zero: Learning Contagion Source with Graph Neural Networks**]( *Chintan Shah, Nima Dehmamy, Nicola Perra, Matteo Chinazzi, Albert-Lszl Barabsi, Alessandro Vespignani, Rose Yu* 1. [**FeatGraph: A Flexible and Efficient Backend for Graph Neural Network Systems**]( SC'20, *Yuwei Hu, Zihao Ye, Minjie Wang, Jiali Yu, Da Zheng, Mu Li, Zheng Zhang, Zhiru Zhang, Yida Wang* more 11. [**BP-Transformer: Modelling Long-Range Context via Binary Partitioning.**]( *Zihao Ye, Qipeng Guo, Quan Gan, Xipeng Qiu, Zheng Zhang* 12. [**OptiMol: Optimization of Binding Affinities in Chemical Space for Drug Discovery**]( *Jacques Boitreaud,Vincent Mallet, Carlos Oliver, Jrme Waldisphl* 1. [**JAKET: Joint Pre-training of Knowledge Graph and Language Understanding**]( *Donghan Yu, Chenguang Zhu, Yiming Yang, Michael Zeng* 1. [**Architectural Implications of Graph Neural Networks**]( *Zhihui Zhang, Jingwen Leng, Lingxiao Ma, Youshan Miao, Chao Li, Minyi Guo* 1. [**Combining Reinforcement Learning and Constraint Programming for Combinatorial Optimization**]( *Quentin Cappart, Thierry Moisan, Louis-Martin Rousseau1, Isabeau Prmont-Schwarz, and Andre Cire* 1. [**Therapeutics Data Commons: Machine Learning Datasets and Tasks for Therapeutics**]( ([code repo]( *Kexin Huang, Tianfan Fu, Wenhao Gao, Yue Zhao, Yusuf Roohani, Jure Leskovec, Connor W. Coley, Cao Xiao, Jimeng Sun, Marinka Zitnik* 1. [**Sparse Graph Attention Networks**]( *Yang Ye, Shihao Ji* 1. [**On Self-Distilling Graph Neural Network**]( *Yuzhao Chen, Yatao Bian, Xi Xiao, Yu Rong, Tingyang Xu, Junzhou Huang* 1. [**Learning Robust Node Representations on Graphs**]( *Xu Chen, Ya Zhang, Ivor Tsang, and Yuangang Pan* 1. [**Recurrent Event Network: Autoregressive Structure Inference over Temporal Knowledge Graphs**]( *Woojeong Jin, Meng Qu, Xisen Jin, Xiang Ren* 1. [**Graph Neural Ordinary Differential Equations**]( *Michael Poli, Stefano Massaroli, Junyoung Park, Atsushi Yamashita, Hajime Asama, Jinkyoo Park* 1. [**FusedMM: A Unified SDDMM-SpMM Kernel for Graph Embedding and Graph Neural Networks**]( *Md. Khaledur Rahman, Majedul Haque Sujon, , Ariful Azad* 1. [**An Efficient Neighborhood-based Interaction Model for Recommendation on Heterogeneous Graph**]( KDD'20 *Jiarui Jin, Jiarui Qin, Yuchen Fang, Kounianhua Du, Weinan Zhang, Yong Yu, Zheng Zhang, Alexander J. Smola* 1. [**Learning Interaction Models of Structured Neighborhood on Heterogeneous Information Network**]( *Jiarui Jin, Kounianhua Du, Weinan Zhang, Jiarui Qin, Yuchen Fang, Yong Yu, Zheng Zhang, Alexander J. Smola* 1. [**Graphein - a Python Library for Geometric Deep Learning and Network Analysis on Protein Structures**]( *Arian R. Jamasb, Pietro Li, Tom L. Blundell* 1. [**Graph Policy Gradients for Large Scale Robot Control**]( *Arbaaz Khan, Ekaterina Tolstaya, Alejandro Ribeiro, Vijay Kumar* 1. [**Heterogeneous Molecular Graph Neural Networks for Predicting Molecule Properties**]( *Zeren Shui, George Karypis* 1. [**Could Graph Neural Networks Learn Better Molecular Representation for Drug Discovery? A Comparison Study of Descriptor-based and Graph-based Models**... [TRUNCATED]","3k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, Work Item, feature request, stale-issue, bug:confirmed, topic: doc, topic: Sparse API, topic: Message Passing API, help wanted, bug:unconfirmed, topic: Distributed DGL, topic: GNN Utilities, topic: system performance, pr: Suspended, RFC, topic: CI/CD, has workaround, topic: python api, topic: TensorFlow, topic: Refactor, topic: Dataloader, topic: compiler, topic: MXNet, topic: DGL-Go, topic: C++ api, Release Candidate, Release Blocker, topic: dataset, topic: PyTorch, expedited"
DeepLabCut,DeepLabCut/DeepLabCut,4334,"['Python', 'Shell', 'Makefile']","['behavior-analysis', 'deep-learning', 'pose-estimation', 'feature-detectors', 'toolbox']","[Documentation]( | [ Installation]( | [ Home Page]( | [ Model Zoo]( | [ News]( | [ Reporting Issues]( [ Getting Assistance]( | [ DeepLabCut Online Course]( | [ Publications]( | [ DeepLabCut AI Residency]( []( []( []( []( []( []( ""Average time to resolve an issue"") []( ""Percentage of issues still open"") []( []( []( [](CONTRIBUTING.md) # Welcome! **DeepLabCut** is a toolbox for state-of-the-art markerless pose estimation of animals performing various behaviors. As long as you can see (label) what you want to track, you can use this toolbox, as it is animal and object agnostic. [Read a short development and application summary below]( # [Installation: how to install DeepLabCut]( Very quick start: `pip install ""deeplabcut[gui,tf]""` that includes all functions plus GUIs, or `pip install deeplabcut[tf]` (headless version with PyTorch and TensorFlow). * We recommend using our conda file, see [here]( or the new [`deeplabcut-docker` package]( Please note that currently we support Python 3.9 (see conda files for guidance). # [Documentation: The DeepLabCut Process]( Our docs walk you through using DeepLabCut, and key API points. For an overview of the toolbox and workflow for project management, see our step-by-step at [Nature Protocols paper]( For a deeper understanding and more resources for you to get started with Python and DeepLabCut, please check out our free online course! # [DEMO the code](/examples) demo []( demo []( - See [more demos here]( We provide data and several Jupyter Notebooks: one that walks you through a demo dataset to test your installation, and another Notebook to run DeepLabCut from the beginning on your own data. We also show you how to use the code in Docker, and on Google Colab. # Why use DeepLabCut? In 2018, we demonstrated the capabilities for [trail tracking]( [reaching in mice]( and various Drosophila behaviors during egg-laying (see [Mathis et al.]( for details). There is, however, nothing specific that makes the toolbox only applicable to these tasks and/or species. The toolbox has already been successfully applied (by us and others) to [rats]( humans, various fish species, bacteria, leeches, various robots, cheetahs, [mouse whiskers]( and [race horses]( DeepLabCut utilized the feature detectors (ResNets + readout layers) of one of the state-of-the-art algorithms for human pose estimation by Insafutdinov et al., called DeeperCut, which inspired the name for our toolbox (see references below). Since this time, the package has changed substantially. The code has been re-tooled and re-factored since 2.1+: We have added faster and higher performance variants with MobileNetV2s, EfficientNets, and our own DLCRNet backbones (see [Pretraining boosts out-of-domain robustness for pose estimation]( and [Lauer et al 2022]( Additionally, we have improved the inference speed and provided both additional and novel augmentation methods, added real-time, and multi-animal support. We currently provide state-of-the-art performance for animal pose estimation. **Left:** Due to transfer learning it requires **little training data** for multiple, challenging behaviors (see [Mathis et al. 2018]( for details). **Mid Left:** The feature detectors are robust to video compression (see [Mathis/Warren]( for details). **Mid Right:** It allows 3D pose estimation with a single network and camera (see [Mathis/Warren]( **Right:** It allows 3D pose estimation with a single network trained on data from multiple cameras together with standard triangulation methods (see [Nath* and Mathis* et al. 2019]( **DeepLabCut** is embedding in a larger open-source eco-system, providing behavioral tracking for neuroscience, ecology, medical, and technical applications. Moreover, many new tools are being actively developed. See [DLC-Utils]( for some helper code. ## Code contributors: DLC code was originally developed by [Alexander Mathis]( & [Mackenzie Mathis]( and was extended in 2.0 with the core dev team consisting of [Tanmay Nath]( (2.0-2.1), and currently (2.1+) with [Jessy Lauer]( and (2.3+) [Niels Poulsen]( DeepLabCut is an open-source tool and has benefited from suggestions and edits by many individuals including Mert Yuksekgonul, Tom Biasi, Richard Warren, Ronny Eichler, Hao Wu, Federico Claudi, Gary Kane and Jonny Saunders as well as the [100+ contributors]( Please see [AUTHORS]( for more details! This is an actively developed package and we welcome community development and involvement. # Get Assistance & be part of the DLC Community: | Platform | Goal | Estimated Response Time | Support Squad | |------------------------------------------------------------|-----------------------------------------------------------------------------|---------------------------|----------------------------------------| | []( Tag: DeepLabCut | To ask help and support questions | Promptly | DLC Team and The DLC Community | | GitHub DeepLabCut/[Issues]( | To report bugs and code issues (we encourage you to search issues first) | 2-3 days | DLC Team | |[]( | To discuss with other users, share ideas and collaborate | 2 days | The DLC Community | | GitHub DeepLabCut/[Contributing]( | To contribute your expertise and experience | Promptly | DLC Team | | GitHub DeepLabCut/[Roadmap]( | To learn more about our journey | N/A | N/A | | []( | To keep up with our latest news and updates | Daily | DLC Team | | The DeepLabCut [AI Residency Program]( | To come and work with us next summer | Annually | DLC Team | ## References: If you use this code or data we kindly ask that you please [cite Mathis et al, 2018]( and, if you use the Python package (DeepLabCut2.x) please also cite [Nath, Mathis et al, 2019]( If you utilize the MobileNetV2s or EfficientNets please cite [Mathis, Biasi et al. 2021]( If you use versions 2.2beta+ or 2.2rc1+, please cite [Lauer et al. 2022]( DOIs (#ProTip, for helping you find citations for software, check out [CiteAs.org]( - Mathis et al 2018: [10.1038/s41593-018-0209-y]( - Nath, Mathis et al 2019: [10.1038/s41596-019-0176-0]( - Lauer et al 2022: [10.1038/s41592-022-01443-0]( Please check out the following references for more details: @article{Mathisetal2018, title = {DeepLabCut: markerless pose estimation of user-defined body parts with deep learning}, author = {Alexander Mathis and Pranav Mamidanna and Kevin M. Cury and Taiga Abe and Venkatesh N. Murthy and Mackenzie W. Mathis and Matthias Bethge}, journal = {Nature Neuroscience}, year = {2018}, url = { @article{NathMathisetal2019, title = {Using DeepLabCut for 3D markerless pose estimation across species and behaviors}, author = {Nath*, Tanmay and Mathis*, Alexander and Chen, An Chi and Patel, Amir and Bethge, Matthias and Mathis, Mackenzie W}, journal = {Nature Protocols}, year = {2019}, url = { @InProceedings{Mathis_2021_WACV, author = {Mathis, Alexander and Biasi, Thomas and Schneider, Steffen and Yuksekgonul, Mert and Rogers, Byron and Bethge, Matthias and Mathis, Mackenzie W.}, title = {Pretraining Boosts Out-of-Domain Robustness for Pose Estimation}, booktitle = {Proceedings of the IEEE/CVF Winter Conference on Applications of Computer Vision (WACV)}, month = {January}, year = {2021}, pages = {1859-1868}} @article{Lauer2022MultianimalPE, title={Multi-animal pose estimation, identification and tracking with DeepLabCut}, author={Jessy Lauer and Mu Zhou and Shaokai Ye and William Menegas and Steffen Schneider and Tanmay Nath and Mohammed Mostafizur Rahman and Valentina Di Santo and Daniel Soberanes and Guoping Feng and Venkatesh N. Murthy and George Lauder and Catherine Dulac and M. Mathis and Alexander Mathis}, journal={Nature Methods}, year={2022}, volume={19}, pages={496 - 504}} @article{insafutdinov2016eccv, title = {DeeperCut: A Deeper, Stronger, and Faster Multi-Person Pose Estimation Model}, author = {Eldar Insafutdinov and Leonid Pishchulin and Bjoern Andres and Mykhaylo Andriluka and Bernt Schiele}, booktitle = {ECCV'16}, url = { Review & Educational articles: @article{Mathis2020DeepLT, title={Deep learning tools for the measurement of animal behavior in neuroscience}, author={Mackenzie W. Mathis and Alexander Mathis}, journal={Current Opinion in Neurobiology}, year={2020}, volume={60}, pages={1-11}} @article{Mathis2020Primer, title={A Primer on Motion Capture with Deep Learning: Principles, Pitfalls, and Perspectives}, author={Alexander Mathis and Steffen Schneider and Jessy Lauer and Mackenzie W. Mathis}, journal={Neuron}, year={2020}, volume={108}, pages={44-65}} Other open-access pre-prints related to our work on DeepLabCut: @article{MathisWarren2018speed, author = {Mathis, Alexander and Warren, Richard A.}, title = {On the inference speed and video-compression robustness of DeepLabCut}, year = {2018}, doi = {10.1101/457242}, publisher = {Cold Spring Harbor Laboratory}, URL = { eprint = { journal = {bioRxiv}} ## License: This project is primarily licensed under the GNU Lesser General Public License v3.0. Note that the software is provided ""as is"", without warranty of any kind, express or implied. If you use the code or data, please cite us! Note, artwork (DeepLabCut logo) and images are copyrighted; please do not take or use these images without written permission. SuperAnimal models are provided for research use only (non-commercial use). ## Major Versions: - For all versions, please see [here]( VERSION 2.3: Model Zoo SuperAnimals, and a whole new GUI experience. VERSION 2.2: Multi-animal pose estimation, identification, and tracking with DeepLabCut is supported (as well as single-animal projects). VERSION 2.0-2.1: This is the **Python package** of [DeepLabCut]( that was originally released in Oct 2018 with our [Nature Protocols]( paper (preprint [here]( This package includes graphical user interfaces to label your data, and take you from data set creation to automatic behavioral analysis. It also introduces an active learning framework to efficiently use DeepLabCut on large experimental projects, and data augmentation tools that improve network performance, especia... [TRUNCATED]","1.6k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, enhancement, 3D, more-data-requested-by-us, maDLC, ModelZoo, GUI, Another package code issue, high-priority, documentation, Feature-request, stale issue (closed), low-priority, howtousedlc, bug, backwards compatibility, DLC3.0🔥, wontfix, tests, tensorflow/training, temple not complete, reID, question, pytorch, new feature, macos, issue with non-DLC code, invalid, help wanted, gpu, good first issue"
machine_learning_examples,lazyprogrammer/machine_learning_examples,8130,['Python'],"['deep-learning', 'machine-learning', 'reinforcement-learning', 'python', 'natural-language-processing']","machine_learning_examples ========================= A collection of machine learning examples and tutorials. Find associated tutorials at Find associated courses at Please note that not all code from all courses will be found in this repository. Some newer code examples (e.g. most of Tensorflow 2.0) were done in Google Colab. Therefore, you should check the instructions given in the lectures for the course you are taking. How to I find the code for a particular course? =============================================== The code for each course is separated by folder. You can determine which folder corresponds with which course by watching the ""Where to get the code"" lecture inside the course (usually Lecture 2 or 3). Remember: one folder = one course. Why you should not fork this repo ================================= I've noticed that many people have out-of-date forks. Thus, I recommend not forking this repository if you take one of my courses. I am constantly updating my courses, and your fork will soon become out-of-date. You should clone the repository instead to make it easy to get updates (i.e. just ""git pull"" randomly and frequently). Where is the code for your latest courses? ========================================== Beginning with Tensorflow 2, I started to use Google Colab. For those courses, unless otherwise noted, the code will be on Google Colab. Links to the notebooks are provided in the course. See the lecture ""Where to get the code"" for further details. VIP Course Links =================== **Data Science: Transformers for Natural Language Processing** **Machine Learning: Natural Language Processing in Python (V2)** **Time Series Analysis, Forecasting, and Machine Learning** **Financial Engineering and Artificial Intelligence in Python** **PyTorch: Deep Learning and Artificial Intelligence** **Tensorflow 2.0: Deep Learning and Artificial Intelligence** (VIP Version) **Math 0-1: Linear Algebra for Data Science & Machine Learning** Deep Learning Courses Exclusives ================================ Data Science: Bayesian Linear Regression in Python Data Science: Bayesian Classification in Python Classical Statistical Inference and A/B Testing in Python Linear Programming for Linear Regression in Python MATLAB for Students, Engineers, and Professionals in STEM Other Course Links ================== Math 0-1: Matrix Calculus for Data Science & Machine Learning Machine Learning: Modern Computer Vision & Generative AI DeepFakes & Voice Cloning: Machine Learning The Easy Way Financial Analysis: Build a ChatGPT Pairs Trading Bot Math 0-1: Calculus for Data Science & Machine Learning Data Science & Machine Learning: Naive Bayes in Python Cutting-Edge AI: Deep Reinforcement Learning in Python Recommender Systems and Deep Learning in Python Machine Learning and AI: Support Vector Machines in Python Deep Learning: Advanced Computer Vision Deep Learning: Advanced NLP and RNNs Deep Learning: GANs and Variational Autoencoders Advanced AI: Deep Reinforcement Learning in Python Artificial Intelligence: Reinforcement Learning in Python Natural Language Processing with Deep Learning in Python Deep Learning: Recurrent Neural Networks in Python Unsupervised Machine Learning: Hidden Markov Models in Python Deep Learning Prerequisites: The Numpy Stack in Python Deep Learning Prerequisites: Linear Regression in Python Deep Learning Prerequisites: Logistic Regression in Python Data Science: Deep Learning and Neural Networks in Python Cluster Analysis and Unsupervised Machine Learning in Python Data Science: Supervised Machine Learning in Python Bayesian Machine Learning in Python: A/B Testing Data Science: Natural Language Processing in Python Modern Deep Learning in Python Ensemble Machine Learning in Python: Random Forest and AdaBoost Deep Learning: Convolutional Neural Networks in Python Unsupervised Deep Learning in Python","6.3k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, wontfix, question, invalid, help wanted, enhancement, duplicate, bug"
llama_index,run-llama/llama_index,32030,"['Python', 'Jupyter Notebook', 'Makefile']","['agents', 'application', 'data', 'fine-tuning', 'framework']","# LlamaIndex []( []( []( []( LlamaIndex (GPT Index) is a data framework for your LLM application. Building with LlamaIndex typically involves working with LlamaIndex core and a chosen set of integrations (or plugins). There are two ways to start building with LlamaIndex in Python: 1. **Starter**: `llama-index` ( A starter Python package that includes core LlamaIndex as well as a selection of integrations. 2. **Customized**: `llama-index-core` ( Install core LlamaIndex and add your chosen LlamaIndex integration packages on [LlamaHub]( that are required for your application. There are over 300 LlamaIndex integration packages that work seamlessly with core, allowing you to build with your preferred LLM, embedding, and vector store providers. The LlamaIndex Python library is namespaced such that import statements which include `core` imply that the core package is being used. In contrast, those statements without `core` imply that an integration package is being used. ```python # typical pattern from llama_index.core.xxx import ClassABC # core submodule xxx from llama_index.xxx.yyy import ( SubclassABC, ) # integration yyy for submodule xxx # concrete example from llama_index.core.llms import LLM from llama_index.llms.openai import OpenAI ``` ### Important Links LlamaIndex.TS (Typescript/Javascript): Documentation: Twitter: Discord: ### Ecosystem - LlamaHub (community library of data loaders): - LlamaLab (cutting-edge AGI projects using LlamaIndex): ## Overview **NOTE**: This README is not updated as frequently as the documentation. Please check out the documentation above for the latest updates! ### Context - LLMs are a phenomenal piece of technology for knowledge generation and reasoning. They are pre-trained on large amounts of publicly available data. - How do we best augment LLMs with our own private data? We need a comprehensive toolkit to help perform this data augmentation for LLMs. ### Proposed Solution That's where **LlamaIndex** comes in. LlamaIndex is a ""data framework"" to help you build LLM apps. It provides the following tools: - Offers **data connectors** to ingest your existing data sources and data formats (APIs, PDFs, docs, SQL, etc.). - Provides ways to **structure your data** (indices, graphs) so that this data can be easily used with LLMs. - Provides an **advanced retrieval/query interface over your data**: Feed in any LLM input prompt, get back retrieved context and knowledge-augmented output. - Allows easy integrations with your outer application framework (e.g. with LangChain, Flask, Docker, ChatGPT, anything else). LlamaIndex provides tools for both beginner users and advanced users. Our high-level API allows beginner users to use LlamaIndex to ingest and query their data in 5 lines of code. Our lower-level APIs allow advanced users to customize and extend any module (data connectors, indices, retrievers, query engines, reranking modules), to fit their needs. ## Contributing Interested in contributing? Contributions to LlamaIndex core as well as contributing integrations that build on the core are both accepted and highly encouraged! See our [Contribution Guide](CONTRIBUTING.md) for more details. ## Documentation Full documentation can be found here: Please check it out for the most up-to-date tutorials, how-to guides, references, and other resources! ## Example Usage ```sh # custom selection of integrations to work with core pip install llama-index-core pip install llama-index-llms-openai pip install llama-index-llms-replicate pip install llama-index-embeddings-huggingface ``` Examples are in the `docs/examples` folder. Indices are in the `indices` folder (see list of indices below). To build a simple vector store index using OpenAI: ```python import os os.environ[""OPENAI_API_KEY""] = ""YOUR_OPENAI_API_KEY"" from llama_index.core import VectorStoreIndex, SimpleDirectoryReader documents = SimpleDirectoryReader(""YOUR_DATA_DIRECTORY"").load_data() index = VectorStoreIndex.from_documents(documents) ``` To build a simple vector store index using non-OpenAI LLMs, e.g. Llama 2 hosted on [Replicate]( where you can easily create a free trial API token: ```python import os os.environ[""REPLICATE_API_TOKEN""] = ""YOUR_REPLICATE_API_TOKEN"" from llama_index.core import Settings, VectorStoreIndex, SimpleDirectoryReader from llama_index.embeddings.huggingface import HuggingFaceEmbedding from llama_index.llms.replicate import Replicate from transformers import AutoTokenizer # set the LLM llama2_7b_chat = ""meta/llama-2-7b-chat:8e6975e5ed6174911a6ff3d60540dfd4844201974602551e10e9e87ab143d81e"" Settings.llm = Replicate( model=llama2_7b_chat, temperature=0.01, additional_kwargs={""top_p"": 1, ""max_new_tokens"": 300}, ) # set tokenizer to match LLM Settings.tokenizer = AutoTokenizer.from_pretrained( ""NousResearch/Llama-2-7b-chat-hf"" ) # set the embed model Settings.embed_model = HuggingFaceEmbedding( model_name=""BAAI/bge-small-en-v1.5"" ) documents = SimpleDirectoryReader(""YOUR_DATA_DIRECTORY"").load_data() index = VectorStoreIndex.from_documents( documents, ) ``` To query: ```python query_engine = index.as_query_engine() query_engine.query(""YOUR_QUESTION"") ``` By default, data is stored in-memory. To persist to disk (under `./storage`): ```python index.storage_context.persist() ``` To reload from disk: ```python from llama_index.core import StorageContext, load_index_from_storage # rebuild storage context storage_context = StorageContext.from_defaults(persist_dir=""./storage"") # load index index = load_index_from_storage(storage_context) ``` ## Dependencies We use poetry as the package manager for all Python packages. As a result, the dependencies of each Python package can be found by referencing the `pyproject.toml` file in each of the package's folders. ```bash cd pip install poetry poetry install --with dev ``` ## Citation Reference to cite if you use LlamaIndex in a paper: ``` @software{Liu_LlamaIndex_2022, author = {Liu, Jerry}, doi = {10.5281/zenodo.1234}, month = {11}, title = {{LlamaIndex}}, url = { year = {2022} } ```","4.4k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, question, triage, bug, enhancement, stale, P1, size:L, p2, documentation, size:M, size:S, P0, v0.10.X, lgtm, size:XXL, size:XL, discord, vector store, ollama, weaviate, storage, size:XS, request contribution board, reader, huggingface, evaluation, bedrock, azure, wontfix, safety"
pytorch3d,facebookresearch/pytorch3d,8389,"['Python', 'C++', 'Cuda']",[],"[]( []( # Introduction PyTorch3D provides efficient, reusable components for 3D Computer Vision research with [PyTorch]( Key features include: - Data structure for storing and manipulating triangle meshes - Efficient operations on triangle meshes (projective transformations, graph convolution, sampling, loss functions) - A differentiable mesh renderer - Implicitron, see [its README](projects/implicitron_trainer), a framework for new-view synthesis via implicit representations. ([blog post]( PyTorch3D is designed to integrate smoothly with deep learning methods for predicting and manipulating 3D data. For this reason, all operators in PyTorch3D: - Are implemented using PyTorch tensors - Can handle minibatches of hetereogenous data - Can be differentiated - Can utilize GPUs for acceleration Within FAIR, PyTorch3D has been used to power research projects such as [Mesh R-CNN]( See our [blog post]( to see more demos and learn about PyTorch3D. ## Installation For detailed instructions refer to [INSTALL.md](INSTALL.md). ## License PyTorch3D is released under the [BSD License](LICENSE). ## Tutorials Get started with PyTorch3D by trying one of the tutorial notebooks. ||| |:-----------------------------------------------------------------------------------------------------------:|:--------------------------------------------------:| | [Deform a sphere mesh to dolphin]( [Bundle adjustment]( | | | |:------------------------------------------------------------:|:--------------------------------------------------:| | [Render textured meshes]( [Camera position optimization]( | | |:------------------------------------------------------------:|:--------------------------------------------------:| | [Render textured pointclouds]( [Fit a mesh with texture]( | | |:------------------------------------------------------------:|:--------------------------------------------------:| | [Render DensePose data]( [Load & Render ShapeNet data]( | | |:------------------------------------------------------------:|:--------------------------------------------------:| | [Fit Textured Volume]( [Fit A Simple Neural Radiance Field]( | | |:------------------------------------------------------------:|:--------------------------------------------------:| | [Fit Textured Volume in Implicitron]( [Implicitron Config System]( ## Documentation Learn more about the API by reading the PyTorch3D [documentation]( We also have deep dive notes on several API components: - [Heterogeneous Batching]( - [Mesh IO]( - [Differentiable Rendering]( ### Overview Video We have created a short (~14 min) video tutorial providing an overview of the PyTorch3D codebase including several code examples. Click on the image below to watch the video on YouTube: ## Development We welcome new contributions to PyTorch3D and we will be actively maintaining this library! Please refer to [CONTRIBUTING.md](./.github/CONTRIBUTING.md) for full instructions on how to run the code, tests and linter, and submit your pull requests. ## Development and Compatibility - `main` branch: actively developed, without any guarantee, Anything can be broken at any time - REMARK: this includes nightly builds which are built from `main` - HINT: the commit history can help locate regressions or changes - backward-compatibility between releases: no guarantee. Best efforts to communicate breaking changes and facilitate migration of code or data (incl. models). ## Contributors PyTorch3D is written and maintained by the Facebook AI Research Computer Vision Team. In alphabetical order: * Amitav Baruah * Steve Branson * Krzysztof Chalupka * Jiali Duan * Luya Gao * Georgia Gkioxari * Taylor Gordon * Justin Johnson * Patrick Labatut * Christoph Lassner * Wan-Yen Lo * David Novotny * Nikhila Ravi * Jeremy Reizenstein * Dave Schnizlein * Roman Shapovalov * Olivia Wiles ## Citation If you find PyTorch3D useful in your research, please cite our tech report: ```bibtex @article{ravi2020pytorch3d, author = {Nikhila Ravi and Jeremy Reizenstein and David Novotny and Taylor Gordon and Wan-Yen Lo and Justin Johnson and Georgia Gkioxari}, title = {Accelerating 3D Deep Learning with PyTorch3D}, journal = {arXiv:2007.08501}, year = {2020}, } ``` If you are using the pulsar backend for sphere-rendering (the `PulsarPointRenderer` or `pytorch3d.renderer.points.pulsar.Renderer`), please cite the tech report: ```bibtex @article{lassner2020pulsar, author = {Christoph Lassner and Michael Zollh\""ofer}, title = {Pulsar: Efficient Sphere-based Neural Rendering}, journal = {arXiv:2004.07484}, year = {2020}, } ``` ## News Please see below for a timeline of the codebase updates in reverse chronological order. We are sharing updates on the releases as well as research projects which are built with PyTorch3D. The changelogs for the releases are available under [`Releases`]( and the builds can be installed using `conda` as per the instructions in [INSTALL.md](INSTALL.md). **[Oct 31st 2023]:** PyTorch3D [v0.7.5]( released. **[May 10th 2023]:** PyTorch3D [v0.7.4]( released. **[Apr 5th 2023]:** PyTorch3D [v0.7.3]( released. **[Dec 19th 2022]:** PyTorch3D [v0.7.2]( released. **[Oct 23rd 2022]:** PyTorch3D [v0.7.1]( released. **[Aug 10th 2022]:** PyTorch3D [v0.7.0]( released with Implicitron and MeshRasterizerOpenGL. **[Apr 28th 2022]:** PyTorch3D [v0.6.2]( released **[Dec 16th 2021]:** PyTorch3D [v0.6.1]( released **[Oct 6th 2021]:** PyTorch3D [v0.6.0]( released **[Aug 5th 2021]:** PyTorch3D [v0.5.0]( released **[Feb 9th 2021]:** PyTorch3D [v0.4.0]( released with support for implicit functions, volume rendering and a [reimplementation of NeRF]( **[November 2nd 2020]:** PyTorch3D [v0.3.0]( released, integrating the pulsar backend. **[Aug 28th 2020]:** PyTorch3D [v0.2.5]( released **[July 17th 2020]:** PyTorch3D tech report published on ArXiv: **[April 24th 2020]:** PyTorch3D [v0.2.0]( released **[March 25th 2020]:** [SynSin]( codebase released using PyTorch3D: **[March 8th 2020]:** PyTorch3D [v0.1.1]( bug fix release **[Jan 23rd 2020]:** PyTorch3D [v0.1.0]( released. [Mesh R-CNN]( codebase released:","1.3k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, enhancement, CLA Signed, how to, question, installation, do-not-reap, Stale, bug, potential-bug, documentation, wontfix, pulsar, invalid, implicitron, help wanted, great-firewall, good first issue, fh:direct-merge-enabled, fb-exported, duplicate, call-for-collaboration, Merged"
cleanrl,vwxyzjn/cleanrl,4608,"['Python', 'Shell', 'HCL']","['wandb', 'reinforcement-learning', 'pytorch', 'python', 'gym']","# CleanRL (Clean Implementation of RL Algorithms) []( []( []( []( []( []( []( []( []( CleanRL is a Deep Reinforcement Learning library that provides high-quality single-file implementation with research-friendly features. The implementation is clean and simple, yet we can scale it to run thousands of experiments using AWS Batch. The highlight features of CleanRL are: * Single-file implementation * *Every detail about an algorithm variant is put into a single standalone file.* * For example, our `ppo_atari.py` only has 340 lines of code but contains all implementation details on how PPO works with Atari games, **so it is a great reference implementation to read for folks who do not wish to read an entire modular library**. * Benchmarked Implementation (7+ algorithms and 34+ games at * Tensorboard Logging * Local Reproducibility via Seeding * Videos of Gameplay Capturing * Experiment Management with [Weights and Biases]( * Cloud Integration with docker and AWS You can read more about CleanRL in our [JMLR paper]( and [documentation]( CleanRL only contains implementations of **online** deep reinforcement learning algorithms. If you are looking for **offline** algorithms, please check out [corl-team/CORL]( which shares a similar design philosophy as CleanRL. > **Support for Gymnasium**: [Farama-Foundation/Gymnasium]( is the next generation of [`openai/gym`]( that will continue to be maintained and introduce new features. Please see their [announcement]( for further detail. We are migrating to `gymnasium` and the progress can be tracked in [vwxyzjn/cleanrl#277]( > **NOTE**: CleanRL is *not* a modular library and therefore it is not meant to be imported. At the cost of duplicate code, we make all implementation details of a DRL algorithm variant easy to understand, so CleanRL comes with its own pros and cons. You should consider using CleanRL if you want to 1) understand all implementation details of an algorithm's varaint or 2) prototype advanced features that other modular DRL libraries do not support (CleanRL has minimal lines of code so it gives you great debugging experience and you don't have do a lot of subclassing like sometimes in modular DRL libraries). ## Get started Prerequisites: * Python >=3.7.1,<3.11 * [Poetry 1.2.1+]( To run experiments locally, give the following a try: ```bash git clone && cd cleanrl poetry install # alternatively, you could use `poetry shell` and do # `python run cleanrl/ppo.py` poetry run python cleanrl/ppo.py \ --seed 1 \ --env-id CartPole-v0 \ --total-timesteps 50000 # open another terminal and enter `cd cleanrl/cleanrl` tensorboard --logdir runs ``` To use experiment tracking with wandb, run ```bash wandb login # only required for the first time poetry run python cleanrl/ppo.py \ --seed 1 \ --env-id CartPole-v0 \ --total-timesteps 50000 \ --track \ --wandb-project-name cleanrltest ``` If you are not using `poetry`, you can install CleanRL with `requirements.txt`: ```bash # core dependencies pip install -r requirements/requirements.txt # optional dependencies pip install -r requirements/requirements-atari.txt pip install -r requirements/requirements-mujoco.txt pip install -r requirements/requirements-mujoco_py.txt pip install -r requirements/requirements-procgen.txt pip install -r requirements/requirements-envpool.txt pip install -r requirements/requirements-pettingzoo.txt pip install -r requirements/requirements-jax.txt pip install -r requirements/requirements-docs.txt pip install -r requirements/requirements-cloud.txt ``` To run training scripts in other games: ``` poetry shell # classic control python cleanrl/dqn.py --env-id CartPole-v1 python cleanrl/ppo.py --env-id CartPole-v1 python cleanrl/c51.py --env-id CartPole-v1 # atari poetry install -E atari python cleanrl/dqn_atari.py --env-id BreakoutNoFrameskip-v4 python cleanrl/c51_atari.py --env-id BreakoutNoFrameskip-v4 python cleanrl/ppo_atari.py --env-id BreakoutNoFrameskip-v4 python cleanrl/sac_atari.py --env-id BreakoutNoFrameskip-v4 # NEW: 3-4x side-effects free speed up with envpool's atari (only available to linux) poetry install -E envpool python cleanrl/ppo_atari_envpool.py --env-id BreakoutNoFrameskip-v4 # Learn Pong-v5 in ~5-10 mins # Side effects such as lower sample efficiency might occur poetry run python ppo_atari_envpool.py --clip-coef=0.2 --num-envs=16 --num-minibatches=8 --num-steps=128 --update-epochs=3 # procgen poetry install -E procgen python cleanrl/ppo_procgen.py --env-id starpilot python cleanrl/ppg_procgen.py --env-id starpilot # ppo + lstm poetry install -E atari python cleanrl/ppo_atari_lstm.py --env-id BreakoutNoFrameskip-v4 ``` You may also use a prebuilt development environment hosted in Gitpod: []( ## Algorithms Implemented | Algorithm | Variants Implemented | | ----------- | ----------- | | [Proximal Policy Gradient (PPO)]( | [`ppo.py`]( [docs]( | | | [`ppo_atari.py`]( [docs]( | | [`ppo_continuous_action.py`]( [docs]( | | [`ppo_atari_lstm.py`]( [docs]( | | [`ppo_atari_envpool.py`]( [docs]( | | [`ppo_atari_envpool_xla_jax.py`]( [docs]( | | [`ppo_atari_envpool_xla_jax_scan.py`]( [docs]( | | [`ppo_procgen.py`]( [docs]( | | [`ppo_atari_multigpu.py`]( [docs]( | | [`ppo_pettingzoo_ma_atari.py`]( [docs]( | | [`ppo_continuous_action_isaacgym.py`]( [docs]( | [Deep Q-Learning (DQN)]( | [`dqn.py`]( [docs]( | | | [`dqn_atari.py`]( [docs]( | | | [`dqn_jax.py`]( [docs]( | | | [`dqn_atari_jax.py`]( [docs]( | | [Categorical DQN (C51)]( | [`c51.py`]( [docs]( | | | [`c51_atari.py`]( [docs]( | | | [`c51_jax.py`]( [docs]( | | | [`c51_atari_jax.py`]( [docs]( | | [Soft Actor-Critic (SAC)]( | [`sac_continuous_action.py`]( [docs]( | | | [`sac_atari.py`]( [docs]( | | [Deep Deterministic Policy Gradient (DDPG)]( | [`ddpg_continuous_action.py`]( [docs]( | | | [`ddpg_continuous_action_jax.py`]( [docs]( | [Twin Delayed Deep Deterministic Policy Gradient (TD3)]( | [`td3_continuous_action.py`]( [docs]( | | | [`td3_continuous_action_jax.py`]( [docs]( | | [Phasic Policy Gradient (PPG)]( | [`ppg_procgen.py`]( [docs]( | | [Random Network Distillation (RND)]( | [`ppo_rnd_envpool.py`]( [docs](/rl-algorithms/ppo-rnd/#ppo_rnd_envpoolpy) | | [Qdagger]( | [`qdagger_dqn_atari_impalacnn.py`]( [docs]( | | | [`qdagger_dqn_atari_jax_impalacnn.py`]( [docs]( | ## Open RL Benchmark To make our experimental data transparent, CleanRL participates in a related project called [Open RL Benchmark]( which contains tracked experiments from popular DRL libraries such as ours, [Stable-baselines3]( [openai/baselines]( [jaxrl]( and others. Check out for a collection of Weights and Biases reports showcasing tracked DRL experiments. The reports are interactive, and researchers can easily query information such as GPU utilization and videos of an agent's gameplay that are normally hard to acquire in other RL benchmarks. In the future, Open RL Benchmark will likely provide an dataset API for researchers to easily access the data (see [repo]( ## Support and get involved We have a [Discord Community]( for support. Feel free to ask questions. Posting in [Github Issues]( and PRs are also welcome. Also our past video recordings are available at [YouTube]( ## Citing CleanRL If you use CleanRL in your work, please cite our technical [paper]( ```bibtex @article{huang2022cleanrl, author = {Shengyi Huang and Rousslan Fernand Julien Dossa and Chang Ye and Jeff Braga and Dipam Chakraborty and Kinal Mehta and Joo G.M. Arajo}, title = {CleanRL: High-quality Single-file Implementations of Deep Reinforcement Learning Algorithms}, journal = {Journal of Machine Learning Research}, year = {2022}, volume = {23}, number = {274}, pages = {1--18}, url = { } ``` ## Acknowledgement CleanRL is a community-powered by project and our contributors run experiments on a variety of hardware. * We thank many contributors for using their own computers to run experiments * We thank Google's [TPU research cloud]( for providing TPU resources. * We thank [Hugging Face]( cluster for providing GPU resources.","542, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, help wanted, require expertise, wontfix, question, open rl benchmark, invalid, good first issue, enhancement, duplicate, documentation, 🔥 developing this month, dependencies, bug, HACKTOBERFEST-ACCEPTED, HACKTOBERFEST"
prisma-client-py,RobertCraigie/prisma-client-py,1719,"['Python', 'Jinja', 'Dockerfile']","['python', 'orm', 'database', 'prisma', 'postgresql']","Prisma Client Python Type-safe database access for Python ## What is Prisma Client Python? Prisma Client Python is a next-generation ORM built on top of [Prisma]( that has been designed from the ground up for ease of use and correctness. [Prisma]( is a TypeScript ORM with zero-cost type safety for your database, although don't worry, Prisma Client Python [interfaces](#how-does-prisma-python-interface-with-prisma) with Prisma using Rust, you don't need Node or TypeScript. Prisma Client Python can be used in _any_ Python backend application. This can be a REST API, a GraphQL API or _anything_ else that needs a database. > _Note that the only language server that is known to support this form of autocompletion is Pylance / Pyright._ ## Why should you use Prisma Client Python? Unlike other Python ORMs, Prisma Client Python is **fully type safe** and offers native support for usage **with and without** `async`. All you have to do is [specify the type of client]( you would like to use for your project in the [Prisma schema file](#the-prisma-schema). However, the arguably best feature that Prisma Client Python provides is [autocompletion support](#auto-completion-for-query-arguments) (see the GIF above). This makes writing database queries easier than ever! Core features: - [Prisma Migrate]( - [Full type safety]( - [With / without async]( - [Recursive and pseudo-recursive types]( - [Atomic updates]( - [Complex cross-relational queries]( - [Partial type generation]( - [Batching write queries]( Supported database providers: - PostgreSQL - MySQL - SQLite - CockroachDB - MongoDB (experimental) - SQL Server (experimental) ## Support Have any questions or need help using Prisma? Join the [community discord]( If you don't want to join the discord you can also: - Create a new [discussion]( - Ping me on the [Prisma Slack]( `@Robert Craigie` ## How does Prisma work? This section provides a high-level overview of how Prisma works and its most important technical components. For a more thorough introduction, visit the [documentation]( ### The Prisma schema Every project that uses a tool from the Prisma toolkit starts with a [Prisma schema file]( The Prisma schema allows developers to define their _application models_ in an intuitive data modeling language. It also contains the connection to a database and defines a _generator_: ```prisma // database datasource db { provider = ""sqlite"" url = ""file:database.db"" } // generator generator client { provider = ""prisma-client-py"" recursive_type_depth = 5 } // data models model Post { id Int @id @default(autoincrement()) title String content String? views Int @default(0) published Boolean @default(false) author User? @relation(fields: [author_id], references: [id]) author_id Int? } model User { id Int @id @default(autoincrement()) email String @unique name String? posts Post[] } ``` In this schema, you configure three things: - **Data source**: Specifies your database connection. In this case we use a local SQLite database however you can also use an environment variable. - **Generator**: Indicates that you want to generate Prisma Client Python. - **Data models**: Defines your application models. --- On this page, the focus is on the generator as this is the only part of the schema that is specific to Prisma Client Python. You can learn more about [Data sources]( and [Data models]( on their respective documentation pages. ### Prisma generator A prisma schema can define one or more generators, defined by the `generator` block. A generator determines what assets are created when you run the `prisma generate` command. The `provider` value defines which Prisma Client will be created. In this case, as we want to generate Prisma Client Python, we use the `prisma-client-py` value. You can also define where the client will be generated to with the `output` option. By default Prisma Client Python will be generated to the same location it was installed to, whether that's inside a virtual environment, the global python installation or anywhere else that python packages can be imported from. For more options see [configuring Prisma Client Python]( --- ### Accessing your database with Prisma Client Python Just want to play around with Prisma Client Python and not worry about any setup? You can try it out online on [gitpod]( #### Installing Prisma Client Python The first step with any python project should be to setup a virtual environment to isolate installed packages from your other python projects, however that is out of the scope for this page. In this example we'll use an asynchronous client, if you would like to use a synchronous client see [setting up a synchronous client]( ```sh pip install -U prisma ``` #### Generating Prisma Client Python Now that we have Prisma Client Python installed we need to actually generate the client to be able to access the database. Copy the Prisma schema file shown above to a `schema.prisma` file in the root directory of your project and run: ```sh prisma db push ``` This command will add the data models to your database and generate the client, you should see something like this: ``` Prisma schema loaded from schema.prisma Datasource ""db"": SQLite database ""database.db"" at ""file:database.db"" SQLite database database.db created at file:database.db Your database is now in sync with your schema. Done in 26ms Generated Prisma Client Python to ./.venv/lib/python3.9/site-packages/prisma in 265ms ``` It should be noted that whenever you make changes to your `schema.prisma` file you will have to re-generate the client, you can do this automatically by running `prisma generate --watch`. The simplest asynchronous Prisma Client Python application will either look something like this: ```py import asyncio from prisma import Prisma async def main() -> None: prisma = Prisma() await prisma.connect() # write your queries here user = await prisma.user.create( data={ 'name': 'Robert', 'email': 'robert@craigie.dev' }, ) await prisma.disconnect() if __name__ == '__main__': asyncio.run(main()) ``` or like this: ```py import asyncio from prisma import Prisma from prisma.models import User async def main() -> None: db = Prisma(auto_register=True) await db.connect() # write your queries here user = await User.prisma().create( data={ 'name': 'Robert', 'email': 'robert@craigie.dev' }, ) await db.disconnect() if __name__ == '__main__': asyncio.run(main()) ``` #### Query examples For a more complete list of queries you can perform with Prisma Client Python see the [documentation]( All query methods return [pydantic models]( **Retrieve all `User` records from the database** ```py users = await db.user.find_many() ``` **Include the `posts` relation on each returned `User` object** ```py users = await db.user.find_many( include={ 'posts': True, }, ) ``` **Retrieve all `Post` records that contain `""prisma""`** ```py posts = await db.post.find_many( where={ 'OR': [ {'title': {'contains': 'prisma'}}, {'content': {'contains': 'prisma'}}, ] } ) ``` **Create a new `User` and a new `Post` record in the same query** ```py user = await db.user.create( data={ 'name': 'Robert', 'email': 'robert@craigie.dev', 'posts': { 'create': { 'title': 'My first post from Prisma!', }, }, }, ) ``` **Update an existing `Post` record** ```py post = await db.post.update( where={ 'id': 42, }, data={ 'views': { 'increment': 1, }, }, ) ``` #### Usage with static type checkers All Prisma Client Python methods are fully statically typed, this means you can easily catch bugs in your code without having to run it! For more details see the [documentation]( #### How does Prisma Client Python interface with Prisma? Prisma Client Python connects to the database and executes queries using Prisma's rust-based Query Engine, of which the source code can be found here: Prisma Client Python exposes a CLI interface which wraps the [Prisma CLI]( This works by downloading a Node binary, if you don't already have Node installed on your machine, installing the CLI with `npm` and running the CLI using Node. The CLI interface is the exact same as the standard [Prisma CLI]( with [some additional commands]( ## Affiliation Prisma Client Python is _not_ an official Prisma product although it is very generously sponsored by Prisma. ## Room for improvement Prisma Client Python is a fairly new project and as such there are some features that are missing or incomplete. ### Auto completion for query arguments Prisma Client Python query arguments make use of `TypedDict` types. Support for completion of these types within the Python ecosystem is now fairly widespread. This section is only here for documenting support. Supported editors / extensions: - VSCode with [pylance]( v2021.9.4 or higher - Sublime Text with [LSP-Pyright]( v1.1.196 or higher - PyCharm [2022.1 EAP 3]() added support for completing `TypedDict`s - This does not yet work for Prisma Client Python unfortunately, see [this issue]( - Any editor that supports the Language Server Protocol and has an extension supporting Pyright v1.1.196 or higher - vim and neovim with [coc.nvim]( - [emacs]( ```py user = await db.user.find_first( where={ '|' } ) ``` Given the cursor is where the `|` is, an IDE should suggest the following completions: - id - email - name - posts ### Performance While there has currently not been any work done on improving the performance of Prisma Client Python queries, they should be reasonably fast as the core query building and connection handling is performed by Prisma. Performance is something that will be worked on in the future and there is room for massive improvements. ### Supported platforms Windows, MacOS and Linux are all officially supported. ## Version guarantees Prisma Client Python is _not_ stable. Breaking changes will be documented and released under a new **MINOR** version following this format. `MAJOR`.`MINOR`.`PATCH` New releases are scheduled bi-weekly, however as this is a solo project, no guarantees are made that this schedule will be stuck to. ## Contrib... [TRUNCATED]","69, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, level/advanced, kind/feature, kind/improvement, priority/medium, level/intermediate, topic: client, priority/low, priority/high, topic: internal, level/unknown, topic: types, kind/bug, process/candidate, bug/2-confirmed, topic: perf, topic: dx, kind/epic, kind/docs, topic: generation, topic: docs, level/beginner, topic: binaries, topic: interpreter, topic: external, topic: crash, kind/discussion, good first issue, bug/1-repro-available, topic: extension, topic: breaking change"
awesome-css-frameworks,troxler/awesome-css-frameworks,7421,['CSS'],"['css', 'css-framework', 'awesome', 'awesome-list', 'list']","# Awesome CSS Frameworks []( List of awesome CSS frameworks. Feel free to [contribute]( **Supported by [FrontAid CMS]( ## Contents - [Base / Reset / Normalize](#base--reset--normalize) - [Class-less](#class-less) - [Very Lightweight](#very-lightweight) - [General Purpose](#general-purpose) - [Material Design](#material-design) - [Utility-based](#utility-based) - [Specialized](#specialized) - [Toolkits](#toolkits) - [Stalled Development](#stalled-development) ## Base / Reset / Normalize - [**modern-normalize**]( - Normalize browsers' default style. [Repo]( | #CSS - [**ress**]( - Modern CSS reset. [Repo]( | #CSS - [**Natural Selection**]( - Collection of best-practice CSS selectors. | #CSS ## Class-less Frameworks that use semantic HTML and do not rely on classes. - [**MVP.css**]( - Minimalist stylesheet for HTML elements. [Docs]( [Repo]( | #CSS - [**sakura**]( - Minimal classless CSS framework/theme. [Demo]( [Repo]( | #SCSS - [**Simple.css**]( - Lightweight, classless CSS framework. [Demo]( [Docs]( [Repo]( | #CSS - [**Tacit**]( - CSS framework for dummies, without classes. [Repo]( | #SCSS ## Very Lightweight Frameworks that are smaller than ~5KB. - [**Pure**]( - Set of small, responsive CSS modules that you can use in every web project. [Demo]( [Docs]( [Repo]( | #CSS - [**Picnic CSS**]( - Lightweight and beautiful library. [Demo]( [Docs]( [Repo]( | #SCSS - [**Chota**]( - Really small CSS framework. [Demo]( [Docs]( [Repo]( | #CSS ## General Purpose - [**Bootstrap**]( - The most popular HTML, CSS, and JavaScript framework for developing responsive, mobile first projects on the web. [Demo]( [Docs]( [Repo]( | #SCSS - [**Bulma**]( - Modern CSS framework based on Flexbox. [Demo]( [Docs]( [Repo]( | #Sass - [**Foundation**]( - The most advanced responsive front-end framework in the world. [Demo]( [Docs]( [Repo]( | #SCSS - [**UIkit**]( - Lightweight and modular front-end framework for developing fast and powerful web interfaces. [Demo]( [Docs]( [Repo]( | #LESS #SCSS - [**Primer**]( - CSS framework that powers GitHub's front-end design. [Docs]( [Repo]( | #SCSS - [**Pico.css**]( - Elegant styles for all native HTML elements, dark mode automatically enabled. [Demo]( [Docs]( [Repo]( | #SCSS - [**Carbon Components**]( - Component library behind IBM's Carbon Design System. [Docs]( [Repo]( | #SCSS - [**Fomantic-UI**]( - Build beautiful websites fast, with concise HTML, intuitive javascript, and simplified debugging. [Docs]( [Repo]( | #LESS - [**Blaze UI**]( - Open source modular toolkit providing great structure for building websites quickly with a scalable and maintainable foundation. [Demo]( [Docs]( [Repo]( | #SCSS - [**Cirrus**]( - Component and utility centric SCSS framework designed for rapid prototyping. [Demo]( [Docs]( [Repo]( | #CSS - [**Vanilla Framework**]( - Simple, extensible CSS framework. Written by the Canonical Web Team. [Demo]( [Docs]( [Repo]( | #SCSS - [**PatternFly**]( - UI framework for enterprise web applications. [Demo]( [Docs]( [Repo]( | #SCSS #LESS - [**Stacks**]( - UI components used by Stack Overflow. [Docs]( [Repo]( | #LESS - [**HiQ**]( - Simple CSS foundation with responsive typography and input styling. [Docs]( [Repo]( | #PostCSS ## Material Design - [**Material Components Web**]( - Modular and customizable Material Design UI components for the web. [Demo]( [Docs]( [Repo]( | #SCSS - [**Beer CSS**]( - Build material design interfaces in record time without stress for devs. [Repo]( | #CSS - [**Materialize**]( - Responsive front-end library based on Google's Material Design. [Docs]( [Repo]( | #SCSS ## Utility-based - [**Tailwind CSS**]( - Utility-first CSS framework for rapid UI development. [Docs]( [Repo]( | #CSS - [**Open Props**]( - CSS custom properties to help accelerate adaptive and consistent design. [Demo]( [Docs]( [Repo]( | #CSS #PostCSS ## Specialized - [**NES.css**]( - NES-style CSS Framework. [Demo]( [Docs]( [Repo]( | #SCSS - [**98.css**]( - CSS library for building interfaces that look like Windows 98. [Repo]( | #CSS - [**Tufte CSS**]( - Style your webpage like Edward Tuftes handouts. [Repo]( | #CSS - [**Gutenberg**]( - Modern framework to print the web correctly. [Demo]( [Docs]( | #SCSS - [**XP.css**]( - CSS library for building interfaces that look like Windows XP. [Repo]( | #PostCSS - [**TuiCss**]( - Library to create MS-DOS interfaces. [Demo]( [Docs]( | #SCSS - [**7.css**]( - CSS library for building interfaces that look like Windows 7. [Repo]( | #PostCSS - [**Bojler**]( - Email framework for developing responsive and lightweight email templates. [Docs]( [Repo]( | #SCSS ## Toolkits Toolkits are closer to a library than to a framework. They do not provide actual styling but utilities (e.g. mixins) that you can use in your CSS preprocessor. - [**Bourbon**]( - Lightweight Sass tool set. [Docs]( [Repo]( | #SCSS ## Stalled Development Frameworks that have not seen any real development for more than about one year or officially have been deprecated. We are keeping them here for reference/inspiration and hope for a revival. Show Section - [**Semantic UI**]( - User interface is the language of the web. [Docs]( [Repo]( | #LESS - [**Materialize**]( - CSS framework based on material design. [Demo]( [Docs]( [Repo]( | #SCSS - [**Spectre.css**]( - Lightweight, responsive and modern CSS framework. [Docs]( [Repo]( | #SCSS - [**Tachyons**]( - Quickly build and design new UI without writing CSS. [Demo]( [Docs]( [Repo]( | #CSS - [**Milligram**]( - Minimalist CSS framework. [Demo]( [Docs]( [Repo]( | #Sass - [**Water.css**]( - Just-add-CSS collection of styles to make simple websites just a little nicer. [Repo]( | #CSS - [**Basscss**]( - Low-level CSS toolkit. [Repo]( - [**sanitize.css**]( - The best-practices CSS foundation. [Repo]( | #CSS - [**MUI**]( - Lightweight CSS framework that follows Google's Material Design guidelines. [Docs]( [Repo]( | #SCSS - [**modern-css-reset**]( - Tiny little reset that you can use as the basis of your CSS projects. [Repo]( | #CSS - [**minireset.css**]( - Tiny modern CSS reset. [Repo]( | #Sass - [**CSS Remedy**]( - Start your project with a remedy for the technical debt of CSS. | #CSS - [**inuitcss**]( - Extensible, scalable, Sass-based, OOCSS framework for large and long-lasting UI projects. [Repo]( | #SCSS - [**Cutestrap**]( - Sassy, opinionated CSS framework, a tiny alternative to Bootstrap. [Repo]( - [**unsemantic**]( - Fluid grid for mobile, tablet, and desktop. [Demo]( [Docs]( [Repo]( - [**Base**]( - Rock solid, responsive HTML/CSS framework. [Docs]( [Repo]( | #SCSS #LESS - [**Propeller**]( - Front-end responsive framework based on Google's Material Design standards & Bootstrap. [Docs]( [Repo]( | #SCSS - [**Concise CSS**]( - Give up the bloat. Stop tripping over your classes. Be concise. [Docs]( [Repo]( | #SCSS - [**Responsive Boilerplate**]( - Powerful, accessible, developer friendly framework for building responsive websites. [Docs]( [Repo]( | #SCSS - [**turretcss**]( - Responsive front-end framework for accessible and semantic websites. [Demo]( [Docs]( [Repo]( | #CSS - [**Centurion**]( - Web-based framework for rapid prototyping and building larger web projects. [Docs]( [Repo]( --- ## License License [CC0 1.0]( > You can copy, modify, distribute and perform the work, even for commercial purposes, all without asking permission. Images of GitHub stars are provided by [Shields](","422, Code, Issues, Pull requests, Security, Insights, wontfix, waiting, question, invalid, help wanted, enhancement, duplicate, bug, PR-welcome"
icheck,drgullin/icheck,7391,"['CSS', 'HTML', 'JavaScript']",[],"# [iCheck plugin]( [1.0.3](#october-10-2020) #### Highly customizable checkboxes and radio buttons for jQuery and Zepto. Refer to the [iCheck website]( for examples. **Note: [iCheck v2.0]( is on the way**, it got a huge performance boost, many new options and methods. It's in a release candidate state, so you may try to use it. Feel free to submit an issue if you find something not working. Features -------- * **Identical inputs across different browsers and devices** both [desktop and mobile](#browser-support) * **Touch devices support** iOS, Android, BlackBerry, Windows Phone, Amazon Kindle * **Keyboard accessible inputs** `Tab`, `Spacebar`, `Arrow up/down` and other shortcuts * **Customization freedom** use any HTML and CSS to style inputs (try [6 Retina-ready skins]( * **jQuery and Zepto** JavaScript libraries support from single file * **Screenreader accessible inputs** [ARIA]( attributes for VoiceOver and others * **Lightweight size** 1 kb gzipped ----- * [32 options](#options) to customize checkboxes and radio buttons * [11 callbacks](#callbacks) to handle changes * [9 methods](#methods) to make changes programmatically * Saves changes to original inputs, [works carefully](#initialize) with any selectors How it works ------------ iCheck works with checkboxes and radio buttons like a constructor. **It wraps each input with a div**, which may be customized by you or using one of the [available skins]( You may also place inside that div some HTML code or text using `insert` option. For this HTML: ```html Foo Bar Bar ``` With default options you'll get nearly this: ```html Foo Bar Bar ``` **By default, iCheck doesn't provide any CSS styles for wrapper divs** (if you don't use [skins]( Options ------- These options are default: ```js { // 'checkbox' or 'radio' to style only checkboxes or radio buttons, both by default handle: '', // base class added to customized checkboxes checkboxClass: 'icheckbox', // base class added to customized radio buttons radioClass: 'iradio', // class added on checked state (input.checked = true) checkedClass: 'checked', // if not empty, used instead of 'checkedClass' option (input type specific) checkedCheckboxClass: '', checkedRadioClass: '', // if not empty, added as class name on unchecked state (input.checked = false) uncheckedClass: '', // if not empty, used instead of 'uncheckedClass' option (input type specific) uncheckedCheckboxClass: '', uncheckedRadioClass: '', // class added on disabled state (input.disabled = true) disabledClass: 'disabled', // if not empty, used instead of 'disabledClass' option (input type specific) disabledCheckboxClass: '', disabledRadioClass: '', // if not empty, added as class name on enabled state (input.disabled = false) enabledClass: '', // if not empty, used instead of 'enabledClass' option (input type specific) enabledCheckboxClass: '', enabledRadioClass: '', // class added on indeterminate state (input.indeterminate = true) indeterminateClass: 'indeterminate', // if not empty, used instead of 'indeterminateClass' option (input type specific) indeterminateCheckboxClass: '', indeterminateRadioClass: '', // if not empty, added as class name on determinate state (input.indeterminate = false) determinateClass: '', // if not empty, used instead of 'determinateClass' option (input type specific) determinateCheckboxClass: '', determinateRadioClass: '', // class added on hover state (pointer is moved onto input) hoverClass: 'hover', // class added on focus state (input has gained focus) focusClass: 'focus', // class added on active state (mouse button is pressed on input) activeClass: 'active', // adds hoverClass to customized input on label hover and labelHoverClass to label on input hover labelHover: true, // class added to label if labelHover set to true labelHoverClass: 'hover', // increase clickable area by given % (negative number to decrease) increaseArea: '', // true to set 'pointer' CSS cursor over enabled inputs and 'default' over disabled cursor: false, // set true to inherit original input's class name inheritClass: false, // if set to true, input's id is prefixed with 'iCheck-' and attached inheritID: false, // set true to activate ARIA support aria: false, // add HTML code or text inside customized input insert: '' } ``` There's no need to copy and paste all of them, you can just mention the ones you need: ```js $('input').iCheck({ labelHover: false, cursor: true }); ``` You can choose any class names and style them as you want. Initialize ---------- Just include `icheck.js` after [jQuery v1.7+]( (or [Zepto]( [polyfill, event, data]). iCheck supports any selectors, but handles only checkboxes and radio buttons: ```js // customize all inputs (will search for checkboxes and radio buttons) $('input').iCheck(); // handle inputs only inside $('.block') $('.block input').iCheck(); // handle only checkboxes inside $('.test') $('.test input').iCheck({ handle: 'checkbox' }); // handle .vote class elements (will search inside the element, if it's not an input) $('.vote').iCheck(); // you can also change options after inputs are customized $('input.some').iCheck({ // different options }); ``` Indeterminate --------- HTML5 allows specifying [indeterminate]( (""partially"" checked) state for checkboxes. iCheck supports this for both checkboxes and radio buttons. You can make an input indeterminate through HTML using additional attributes (supported by iCheck). Both do the same job, but `indeterminate=""true""` may not work in some browsers (like IE7): ```html indeterminate=""true"" determinate=""false"" ``` `indeterminate` and `determinate` [methods](#methods) can be used to toggle indeterminate state. Callbacks --------- iCheck provides plenty callbacks, which may be used to handle changes. Callback name When used ifClicked user clicked on a customized input or an assigned label ifChanged input's ""checked"", ""disabled"" or ""indeterminate"" state is changed ifChecked input's state is changed to ""checked"" ifUnchecked ""checked"" state is removed ifToggled input's ""checked"" state is changed ifDisabled input's state is changed to ""disabled"" ifEnabled ""disabled"" state is removed ifIndeterminate input's state is changed to ""indeterminate"" ifDeterminate ""indeterminate"" state is removed ifCreated input is just customized ifDestroyed customization is just removed Use `on()` method to bind them to inputs: ```js $('input').on('ifChecked', function(event){ alert(event.type + ' callback'); }); ``` `ifCreated` callback should be binded before plugin init. Methods ------- These methods can be used to make changes programmatically (any selectors can be used): ```js // change input's state to 'checked' $('input').iCheck('check'); // remove 'checked' state $('input').iCheck('uncheck'); // toggle 'checked' state $('input').iCheck('toggle'); // change input's state to 'disabled' $('input').iCheck('disable'); // remove 'disabled' state $('input').iCheck('enable'); // change input's state to 'indeterminate' $('input').iCheck('indeterminate'); // remove 'indeterminate' state $('input').iCheck('determinate'); // apply input changes, which were done outside the plugin $('input').iCheck('update'); // remove all traces of iCheck $('input').iCheck('destroy'); ``` You may also specify some function, that will be executed on each method call: ```js $('input').iCheck('check', function(){ alert('Well done, Sir'); }); ``` Feel free to fork and submit pull-request or submit an issue if you find something not working. Comparison ---------- iCheck is created to avoid routine of reinventing the wheel when working with checkboxes and radio buttons. It provides an expected identical result for the huge number of browsers, devices and their versions. Callbacks and methods can be used to easily handle and make changes at customized inputs. There are some CSS3 ways available to style checkboxes and radio buttons, like [this one]( You have to know about some of the disadvantages of similar methods: * inputs are keyboard inaccessible, since `display: none` or `visibility: hidden` used to hide them * poor browser support * multiple bugs on mobile devices * tricky, harder to maintain CSS code * JavaScript is still needed to fix specific issues While CSS3 method is quite limited solution, iCheck is made to be an everyday replacement covering most of the tasks. Browser support --------------- iCheck is verified to work in Internet Explorer 6+, Firefox 2+, Opera 9+, Google Chrome and Safari browsers. Should also work in many others. Mobile browsers (like Opera mini, Chrome mobile, Safari mobile, Android browser, Silk and others) are also supported. Tested on iOS (iPad, iPhone, iPod), Android, BlackBerry and Windows Phone devices. Changelog --------------- ## October 10, 2020 * iOS 13 support @markusbroman * Reformatted changelog @lasseeee * Fire change event when toggled @rafatmyo ### March 03, 2014 * Better HiDPI screens support @ddctd143 ### January 23, 2014 ([v2.0 release candidate]( * Three ways to set an options: global object (`window.icheck`), data attributes (`<input data-checkedClass=""checked""`) and direct JavaScript object (`$(input).icheck({ options })`) * Huge performance boost (takes less than 1s to customize 1000 inputs) * Minimized number of function calls (some slow jQuery functions are replaced with a faster vanilla alternatives without using any dependencies) * AMD module definition support (both for jQuery and Zepto) * Unblocked native events - iCheck 2.x doesn't stop your newly or past binded events from being processed * Pointer events support - full support for phones and tablets that use Windows OS (such as Lumia, HP tablets, desktops with a touch screen, etc) * WebOS and Firefox OS support * New methods: `$(input).icheck('data')` to get all the options were used for customization (also stores a current states values - `checked`, `disabled` and `indeterminate`), `$('input').icheck('styler')` to get a wrapper div (that's used for customization) * Better handling of the `indeterminate` state * Ability to set callbacks in three ways: global object, direct JavaScript object or using bind method (`$(input).on(callback)`) * Ability to switch off some of the callbacks when you don't need them (global or per input) * Inline styles dropped - iCheck won't add any inline styles to the elements until it's highly needed (`cursor` or `area` option) * Fast click support - removes a 300ms click delay on mobile devices without any dependencies (iCheck compatible with the `fastclick` plugin), see the `tap` option * Ability to ignore customization for the selected inputs using `init` option (if set to `false`) * Optimized event bindings - iCheck binds only a few global events for the all inputs (doesn't increase on elements addition), instead of a couple for the each customized element * Doesn't store tons of arbitrary data (event in jQuery or Zepto cache), defines customized elements by specific classnames * Extra `ins` tag is dropped (less DOM modifications), iCheck wraps each input with a single `div` and doesn't use any extra markup for the any option * Optimized reflows and repaints on init and state changes * Better options handling - iCheck will never run a single line of JS to process an options that are off or empty * Ability to auto customize the ajax loaded inputs without using any extra code (`autoAjax` option, on by default) * Auto inits on domready using the specified selector (`autoInit` option) - searches for `.icheck` by default. Classnames can be changed using the `window.classes` object * Memory usage optimization - uses only a few amount of memory (works well on low-memory devices) * Betters callbacks architecture - these are fired only after changes are applied to the input * Ability to set a mirror classes between the inputs and assigned labels using the `hoverLabelClass`, `focusLabelClass`, `activeLabelClass`, `checkedLabelClass`, `disabledLabelClass` and `indeterminateLabelClass` options (`mirror` option should be set to `true` to make this happen) * Fixes some issues of the mobile devices * Fixes the issues of the wrapper labels, that loose a click ability in some browsers (if no `for` attribute is set) * Some other options and improvements * Various bug fixes Note: extended docs and usage examples will be available later. ### December 19, 2013 * Added Bower support * Added to jQuery plugin registry ### December 18, 2013 * Added ARIA attributes support (for VoiceOver and others) @myfreeweb * Added Amazon Kindle support @skinofstars * Fixed clickable links inside labels @LeGaS * Fixed lines separation between labels and inputs * Merged two versions of the plugin (jQuery and Zepto) into one * Fixed demo links * Fixed callbacks @PepijnSenders License ------- iCheck plugin is released under the [MIT License]( Feel free to use it in personal and commercial projects.","1.6k, Code, Issues, Pull requests, Actions, Security, Insights, enhancements, questions, features, bugs, skins, incorrect"
json-api,json-api/json-api,7330,"['CSS', 'JavaScript', 'HTML']",[],JSON:API ======== Documentation for the [application/vnd.api+json media type]( a specification for APIs that use JSON. This repository is the source code for [ Resources --------- * IRC channel: #jsonapi on freenode.net * Twitter: @jsonapi * Discourse: [ Status ------ This standard is currently under development. To assist: 1. Get the dependencies: `$ bundle` 1. Host the site locally while editing: `$ bundle exec rake preview:browser` 1. Edit the Markdown files. 1. Commit your changes. 1. Send a Pull Request when finished. The website is automatically built by [GitHub Pages]( when changes are pushed to the `gh-pages` branch. Archive ------- older versions of the JSON:API documentations * RC3 -,"830, Code, Issues, Pull requests, Actions, Projects, Security, Insights, extension, website, profile, implementations, json-schema, hypermedia, pr-welcome, enhancement, has-pr, question, wontfix, recommendation, needs-discussion, invalid, erratum, duplicate, bug"
spring-petclinic,spring-projects/spring-petclinic,7303,"['CSS', 'Java', 'HTML']",[],"# Spring PetClinic Sample Application []( []( []( ## Understanding the Spring Petclinic application with a few diagrams [See the presentation here]( ## Run Petclinic locally Spring Petclinic is a [Spring Boot]( application built using [Maven]( or [Gradle]( You can build a jar file and run it from the command line (it should work just as well with Java 17 or newer): ```bash git clone cd spring-petclinic ./mvnw package java -jar target/*.jar ``` You can then access the Petclinic at . Or you can run it from Maven directly using the Spring Boot Maven plugin. If you do this, it will pick up changes that you make in the project immediately (changes to Java source files require a compile as well - most people use an IDE for this): ```bash ./mvnw spring-boot:run ``` > NOTE: If you prefer to use Gradle, you can build the app using `./gradlew build` and look for the jar file in `build/libs`. ## Building a Container There is no `Dockerfile` in this project. You can build a container image (if you have a docker daemon) using the Spring Boot build plugin: ```bash ./mvnw spring-boot:build-image ``` ## In case you find a bug/suggested improvement for Spring Petclinic Our issue tracker is available [here]( ## Database configuration In its default configuration, Petclinic uses an in-memory database (H2) which gets populated at startup with data. The h2 console is exposed at ` and it is possible to inspect the content of the database using the `jdbc:h2:mem:` URL. The UUID is printed at startup to the console. A similar setup is provided for MySQL and PostgreSQL if a persistent database configuration is needed. Note that whenever the database type changes, the app needs to run with a different profile: `spring.profiles.active=mysql` for MySQL or `spring.profiles.active=postgres` for PostgreSQL. You can start MySQL or PostgreSQL locally with whatever installer works for your OS or use docker: ```bash docker run -e MYSQL_USER=petclinic -e MYSQL_PASSWORD=petclinic -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=petclinic -p 3306:3306 mysql:8.4 ``` or ```bash docker run -e POSTGRES_USER=petclinic -e POSTGRES_PASSWORD=petclinic -e POSTGRES_DB=petclinic -p 5432:5432 postgres:16.3 ``` Further documentation is provided for [MySQL]( and [PostgreSQL]( Instead of vanilla `docker` you can also use the provided `docker-compose.yml` file to start the database containers. Each one has a profile just like the Spring profile: ```bash docker-compose --profile mysql up ``` or ```bash docker-compose --profile postgres up ``` ## Test Applications At development time we recommend you use the test applications set up as `main()` methods in `PetClinicIntegrationTests` (using the default H2 database and also adding Spring Boot Devtools), `MySqlTestApplication` and `PostgresIntegrationTests`. These are set up so that you can run the apps in your IDE to get fast feedback and also run the same classes as integration tests against the respective database. The MySql integration tests use Testcontainers to start the database in a Docker container, and the Postgres tests use Docker Compose to do the same thing. ## Compiling the CSS There is a `petclinic.css` in `src/main/resources/static/resources/css`. It was generated from the `petclinic.scss` source, combined with the [Bootstrap]( library. If you make changes to the `scss`, or upgrade Bootstrap, you will need to re-compile the CSS resources using the Maven profile ""css"", i.e. `./mvnw package -P css`. There is no build profile for Gradle to compile the CSS. ## Working with Petclinic in your IDE ### Prerequisites The following items should be installed in your system: - Java 17 or newer (full JDK, not a JRE) - [Git command line tool]( - Your preferred IDE - Eclipse with the m2e plugin. Note: when m2e is available, there is an m2 icon in `Help -> About` dialog. If m2e is not there, follow the install process [here]( - [Spring Tools Suite]( (STS) - [IntelliJ IDEA]( - [VS Code]( ### Steps 1. On the command line run: ```bash git clone ``` 1. Inside Eclipse or STS: Open the project via `File -> Import -> Maven -> Existing Maven project`, then select the root directory of the cloned repo. Then either build on the command line `./mvnw generate-resources` or use the Eclipse launcher (right-click on project and `Run As -> Maven install`) to generate the CSS. Run the application's main method by right-clicking on it and choosing `Run As -> Java Application`. 1. Inside IntelliJ IDEA: In the main menu, choose`File -> Open` and select thePetclinic [pom.xml](pom.xml). Click on the `Open` button. - CSS files are generated from the Maven build. You can build them on the command line `./mvnw generate-resources` or right-click on the `spring-petclinic` project then `Maven -> Generates sources and Update Folders`. - A run configuration named `PetClinicApplication` should have been created for you if you're using a recent Ultimate version. Otherwise, run the application by right-clicking on the `PetClinicApplication` main class and choosing `Run 'PetClinicApplication'`. 1. Navigate to the Petclinic Visit [ in your browser. ## Looking for something in particular? |Spring Boot Configuration | Class or Java property files | |--------------------------|---| |The Main Class | [PetClinicApplication]( | |Properties Files | [application.properties]( | |Caching | [CacheConfiguration]( | ## Interesting Spring Petclinic branches and forks The Spring Petclinic ""main"" branch in the [spring-projects]( GitHub org is the ""canonical"" implementation based on Spring Boot and Thymeleaf. There are [quite a few forks]( in the GitHub org [spring-petclinic]( If you are interested in using a different technology stack to implement the Pet Clinic, please join the community there. ## Interaction with other open-source projects One of the best parts about working on the Spring Petclinic application is that we have the opportunity to work in direct contact with many Open Source projects. We found bugs/suggested improvements on various topics such as Spring, Spring Data, Bean Validation and even Eclipse! In many cases, they've been fixed/implemented in just a few days. Here is a list of them: | Name | Issue | |------|-------| | Spring JDBC: simplify usage of NamedParameterJdbcTemplate | [SPR-10256]( and [SPR-10257]( | | Bean Validation / Hibernate Validator: simplify Maven dependencies and backward compatibility |[HV-790]( and [HV-792]( | | Spring Data: provide more flexibility when working with JPQL queries | [DATAJPA-292]( | ## Contributing The [issue tracker]( is the preferred channel for bug reports, feature requests and submitting pull requests. For pull requests, editor preferences are available in the [editor config](.editorconfig) for easy use in common text editors. Read more and download plugins at . If you have not previously done so, please fill out and submit the [Contributor License Agreement]( ## License The Spring PetClinic sample application is released under version 2.0 of the [Apache License](","22.7k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, ideal-for-contribution, enhancement, wontfix, waiting-for-feedback, question, invalid, duplicate, dependencies, bug"
odometer,HubSpot/odometer,7284,"['CSS', 'CoffeeScript', 'HTML']",[],Odometer ======== Odometer is a Javascript and CSS library for smoothly transitioning numbers. ### [Overview]( ### [Docs and Demo](,"710, Code, Issues, Pull requests, Actions, Projects, Security, Insights, enhancement, wontfix, question, invalid, duplicate, bug"
DataTables,DataTables/DataTables,7284,"['CSS', 'JavaScript']",[],"# Legacy repository Please note that this is a **legacy repo** for DataTables. The main source repo [is DataTables/DataTablesSrc]( Our distribution repos (for NPM, Nuget, etc packages) are the `DataTables/Dist-*` repos - e.g. [DataTables/Dist-DataTables]( Each distribution repo has a core Javascript file or styling for DataTables or an extension. Please use our [download builder]( to obtain the files you need, including for NPM, Nuget, CDN and download. # DataTables plug-in for jQuery DataTables is a table enhancing plug-in for the [jQuery](//jquery.com) Javascript library, adding sorting, paging and filtering abilities to plain HTML tables with minimal effort. The stated goal of DataTables is: > To enhance the accessibility of data in HTML tables. To meet this goal, DataTables is developed with two distinct groups of users in mind: * You the developers using DataTables. For developers DataTables provides a wide array of options for how data should be obtained, displayed and acted upon, along with an extensive API for accessing and manipulating the table. * End users. For those using the interface DataTables presents, actions to get the most from the information contained in tables, such as sorting and filtering, along with paging and scrolling of the data in table, are easy to use, intuitive and fast. ## Installing DataTables To use DataTables, the primary way to obtain the software is to use the [DataTables downloader](//datatables.net/download). You can also include the individual files from the [DataTables CDN](//cdn.datatables.net). See the [documentation](//datatables.net/manual/installation) for full details. ### NPM and Bower If you prefer to use a package manager such as NPM or Bower, distribution repositories are available with software built from this repository under the name `datatables.net`. Styling packages for Bootstrap, Foundation and other styling libraries are also available by adding a suffix to the package name. Please see the DataTables [NPM](//datatables.net/download/npm) and [Bower](//datatables.net/download/bower) installation pages for further information. The [DataTables installation manual](//datatables.net/manual/installation) also has details on how to use package managers with DataTables. ## Usage In its simplest case, DataTables can be initialised with a single line of Javascript: ```js $('table').dataTable(); ``` where the jQuery selector is used to obtain a reference to the table you want to enhance with DataTables. Optional configuration parameters can be passed in to DataTables to have it perform certain actions by using a configuration object as the parameter passed in to the DataTables constructor. For example: ```js $('table').dataTable( { paginate: false, scrollY: 300 } ); ``` will disable paging and enable scrolling. A full list of the options available for DataTables are available in the [documentation](//datatables.net). ## Documentation Full documentation of the DataTables options, API and plug-in interface are available on the [DataTables web-site](//datatables.net). The site also contains information on the wide variety of plug-ins that are available for DataTables, which can be used to enhance and customise your table even further. ## Support Support for DataTables is available through the [DataTables forums](//datatables.net/forums) and [commercial support options](//datatables.net/support) are available. ## License DataTables is release under the [MIT license](//datatables.net/license). You are free to use, modify and distribute this software, as long as the copyright header is left intact (specifically the comment block which starts with `/*!`).","2.2k, Code, Pull requests, Actions, Projects, Security, Insights, Feature, v1.11, v2.x, v.Next, v1.10.x, Support - please ask in forums, PR welcome, Needs test case, More info required, Bug, Bluesky"
css-loaders,lukehaas/css-loaders,7041,"['CSS', 'Less', 'SCSS']",[],"# [Single Element CSS Spinners]( This is a collection of loading spinners animated with CSS. Each spinner consists of a single `div` with a class of `loader` and content text of ""Loading..."". The text is for screen readers and can be used as a fallback state for older browsers. The aim of this project was to create a set of minimal loading spinners that are visually appealing and also convey their intended meaning. A strict limit of one element per loader (not including pseudo-elements) was placed on this project based on the belief that something as simple as a loader doesn't deserve more. Each loader is given a font size in pixels and all other sizes are in ems so to change the size of a loader, just adjust the font-size. ## Demo []( > [Check it live]( ## Browser Support | | | | --- | --- | --- | --- | --- | IE 10+ | Chrome 4.0+ | Firefox 16.0+ | Opera 15.0+ | Safari 4.0+ | ## Contributing 1. Fork it! 2. Create your feature branch: `git checkout -b my-new-feature` 3. Commit your changes: `git commit -m 'Add some feature'` 4. Push to the branch: `git push origin my-new-feature` 5. Submit a pull request :) ## History For detailed changelog, check [Releases]( ## License [MIT License]( Browser testing via [](","1k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, wontfix, question, invalid, help wanted, enhancement, duplicate, bug"
vex,HubSpot/vex,6933,"['CSS', 'JavaScript', 'HTML']",[],"## vex ### [Demo]( [Documentation]( vex is a modern dialog library which is highly configurable, easily stylable, and gets out of the way. You'll love vex because it's tiny (`5.6kb` minified and gzipped), has a clear and simple API, works on mobile devices, and can be customized to match your style in seconds. ### Features - Drop-in replacement for `alert`, `confirm`, and `prompt` - Easily configurable animations which are smooth as butter - Lightweight with no external dependencies - Looks and behaves great on mobile devices - Open multiple dialogs at once and close them individually or all at once - Built in CSS spinner for asynchronous dialogs (TODO) - UMD support ### Documentation - [Getting started](/docs/intro.md) - [API Docs](/docs/api/1-Basic.md) - [Plugins](/docs/api/4-Plugins.md) [](","497, Code, Issues, Pull requests, Actions, Projects, Security, Insights, HackIllinois, wontfix, review in progress, question, invalid, enhancement, duplicate, docs, bug"
weather-icons,erikflowers/weather-icons,6869,"['CSS', 'HTML', 'Less']",[],"# Weather Icons ## 222 Weather Themed Icons and CSS Weather Icons is the only icon font and CSS with 222 weather themed icons, ready to be dropped right into [Bootstrap]( or any project that needs high quality weather, maritime, and meteorological based icons! Get started at [ ## Basic Usage Place the 5 font files and the main `weather-icons.min.css` file in your project, with the assumption that the fonts are located up `../` from your CSS directory. The icons are displayed by using an `i` element and adding the base class `wi` and then the icon class you want, such as `day-sunny`. This then looks like ``. To add a modifier, include the class you want after the icon name, which looks like ``. You can flip, rotate, or add a fixed width. See it all at [ ## API Usage This set includes companion CSS files for popular weather service API. Presently there are mappings for Forecast.io, Open Weather Map, World Meteorological Organization, Weather Underground, and Yahoo. Check the [API List]( to see the class names. ## Wind Usage To use the wind indicators, you must also use `weather-icons-wind.min.css` along with the default CSS file. To display a wind indicator, you must use the base class `wi` and `wi-wind`, and then include the towards/from direction you want, like `from-293-deg`. This ends up looking like . You can use any degree from 0 to 359 in this manner. **Note:** A ""from"" class has the point of the arrow at the opposite end of the degree. For example, a ""from 90 degrees"" icon would point to the 270 degree mark, wheras a ""towards 270 degrees"" would point at the same 270 degree mark. Included in the set as well are aliases to point to cardinal directions. They work the same as degrees, for example `` would be an arrow pointing to the South by Southeast (roughly 158 degrees). ## Contributing If you feel so inclined to add icon ideas, icon art, or other fixes/changes to how the package works, feel free to help! ## Credit The icon designs are originally by [Lukas Bischoff]( Icon art for v1.1 forward, HTML, Less, and CSS are by [me (Erik)]( ## Licensing * Weather Icons licensed under [SIL OFL 1.1]( * Code licensed under [MIT License]( * Documentation licensed under [CC BY 3.0](","849, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, new icon, enhancement, question, bug, wontfix, invalid, duplicate"
compass,Compass/compass,6734,"['CSS', 'Ruby', 'HTML']",[],# Compass Stylesheet Authoring Framework **Depreciated:** Compass is no longer supported. Build Status: []( Code Quality: []( ## Resources * [Compass Homepage]( * [Installing Compass]( * [Compass Reference]( ## Author Compass is written by [Chris Eppstein]( Chris is a software engineer at [LinkedIn]( and a member of the [Sass]( core team. ## Core Team Members * [Scott Davis]( * [Miriam Suzanne]( * [Brandon Mathis]( ## Major Contributors * [Nico Hagenburger]( ## License Copyright (c) 2008-2014 Christopher M. Eppstein All Rights Reserved. Released under a [slightly modified MIT License](LICENSE.markdown).,"1.2k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, feature request, bug, documentation, css3, sprites, compass core, needs patch, low priority, x-browser-bug, windows, requires_ruby_skills, no_ruby_skills_needed, scss, configuration, unverified bug, sass-extension, needs_tests, needs_sass_3.3, in progress, command line, blocker, yui, v0.10, unconfirmed, svg, rails31, rails, merb, i18n, html 5"
Anki-Android,ankidroid/Anki-Android,7979,"['Kotlin', 'HTML', 'Shell']","['anki', 'android', 'ankidroid', 'srs', 'flashcards']","# AnkiDroid A semi-official port of the open source [Anki]( spaced repetition flashcard system to Android. Memorize anything with AnkiDroid! ### Features - Night mode - Whiteboard - Progress widget - Detailed statistics - Syncing with AnkiWeb - Write answers (optional) - Text-to-speech integration - More than 6000 premade decks - Spaced repetition (supermemo 2 algorithm) - Supported contents: text, images, sounds, MathJax - Add cards by intent from other applications like dictionaries Install --------- Wiki ---- View [Wiki]( Help ---- Check the [user manual]( and the wiki for usage instructions. See the [help page]( for how to submit a bug report or contact a project member, etc. Contribute ---------- You can contribute to AnkiDroid by beta testing, translating, or submitting code. See the [contribution wiki page]( for more info. Join Us On ---------- ## Credits ### Code Contributors Thanks to these awesome code contributors who keep this project going ### [Sponsors]( ### [Backers]( A big thank you to each of our backers Your generous donations mean the world to us, and we can't express our gratitude enough. Your support fuels our mission and helps us make a real difference ### [Translators]( Thanks to our 1400 translators, for allowing us to be available, partially or totally, in 99 languages as of July 2022. License ------- * [GPL-3.0 License]( * [AGPL-3.0 Licence]( for some part of the back-end * [LGPL-3.0 License]( for the AnkiDroid API","2.2k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, Keep Open, Bug, Needs Triage, Help Wanted, Enhancement, Priority-Low, Accepted, Dev, Good First Issue!, Anki Ecosystem Compatibility, Needs Author Reply, 2.17, UI, Reproduced, Priority-High, 2.16, Strings, Has Conflicts, Card Browser, Priority-Medium, Needs Review, Blocked by dependency, Deprecation, Release process, Needs Second Approval, GSoC, Advanced Reminders, squash-merge, Translation, Tests"
Exposed,JetBrains/Exposed,7960,['Kotlin'],"['kotlin', 'sql', 'dao', 'orm']","[]( []( []( []( []( ## Welcome to **Exposed**, an ORM framework for [Kotlin]( Exposed is a lightweight SQL library on top of a JDBC driver for the Kotlin language. Exposed has two flavors of database access: typesafe SQL wrapping DSL and lightweight Data Access Objects (DAO). With Exposed, you have two options for database access: wrapping DSL and a lightweight DAO. Our official mascot is the cuttlefish, which is well-known for its outstanding mimicry ability that enables it to blend seamlessly into any environment. Similar to our mascot, Exposed can be used to mimic a variety of database engines, which helps you to build applications without dependencies on any specific database engine and to switch between them with very little or no changes. ## Supported Databases - H2 (versions 2.x; 1.x version is deprecated and will be removed in future releases) - []( - []( - []( - []( (Also, PostgreSQL using the [pgjdbc-ng]( JDBC driver) - []( - []( ## Dependencies ### Maven Central configuration Releases of Exposed are available in the Maven Central repository. You can declare this repository in your build script as follows: #### Gradle Groovy and Kotlin DSL **Warning:** You might need to set your Kotlin JVM target to 8, and when using Spring to 17, in order for this to work properly: ```kotlin repositories { // Versions after 0.30.1 // Versions before 0.30.1 is unavailable for now mavenCentral() } ``` #### Maven The Maven Central repository is enabled by default for Maven users. ### Exposed modules `Exposed` consists of the following modules: * exposed-core - base module, which contains both DSL api along with mapping * exposed-crypt - provides additional column types to store encrypted data in DB and encode/decode it on client-side * exposed-dao - DAO api * exposed-java-time - date-time extensions based on Java8 Time API * exposed-jdbc - transport level implementation based on Java JDBC API * exposed-jodatime - date-time extensions based on JodaTime library * exposed-json - JSON and JSONB data type extensions * exposed-kotlin-datetime - date-time extensions based on kotlinx-datetime * exposed-money - extensions to support MonetaryAmount from ""javax.money:money-api"" * exposed-spring-boot-starter - a starter for [Spring Boot]( to utilize Exposed as the ORM instead of [Hibernate]( ```xml org.jetbrains.exposed exposed-core 0.50.1 org.jetbrains.exposed exposed-crypt 0.50.1 org.jetbrains.exposed exposed-dao 0.50.1 org.jetbrains.exposed exposed-java-time 0.50.1 org.jetbrains.exposed exposed-jdbc 0.50.1 org.jetbrains.exposed exposed-jodatime 0.50.1 org.jetbrains.exposed exposed-json 0.50.1 org.jetbrains.exposed exposed-kotlin-datetime 0.50.1 org.jetbrains.exposed exposed-money 0.50.1 org.jetbrains.exposed exposed-spring-boot-starter 0.50.1 ``` #### Gradle Groovy ```groovy dependencies { implementation 'org.jetbrains.exposed:exposed-core:0.50.1' implementation 'org.jetbrains.exposed:exposed-crypt:0.50.1' implementation 'org.jetbrains.exposed:exposed-dao:0.50.1' implementation 'org.jetbrains.exposed:exposed-jdbc:0.50.1' implementation 'org.jetbrains.exposed:exposed-jodatime:0.50.1' // or implementation 'org.jetbrains.exposed:exposed-java-time:0.50.1' // or implementation 'org.jetbrains.exposed:exposed-kotlin-datetime:0.50.1' implementation 'org.jetbrains.exposed:exposed-json:0.50.1' implementation 'org.jetbrains.exposed:exposed-money:0.50.1' implementation 'org.jetbrains.exposed:exposed-spring-boot-starter:0.50.1' } ``` #### Gradle Kotlin DSL In `build.gradle.kts`: ```kotlin val exposedVersion: String by project dependencies { implementation(""org.jetbrains.exposed:exposed-core:$exposedVersion"") implementation(""org.jetbrains.exposed:exposed-crypt:$exposedVersion"") implementation(""org.jetbrains.exposed:exposed-dao:$exposedVersion"") implementation(""org.jetbrains.exposed:exposed-jdbc:$exposedVersion"") implementation(""org.jetbrains.exposed:exposed-jodatime:$exposedVersion"") // or implementation(""org.jetbrains.exposed:exposed-java-time:$exposedVersion"") // or implementation(""org.jetbrains.exposed:exposed-kotlin-datetime:$exposedVersion"") implementation(""org.jetbrains.exposed:exposed-json:$exposedVersion"") implementation(""org.jetbrains.exposed:exposed-money:$exposedVersion"") implementation(""org.jetbrains.exposed:exposed-spring-boot-starter:$exposedVersion"") } ``` and in `gradle.properties` ``` exposedVersion=0.50.1 ``` ## Samples Check out the [samples](samples/README.md) for a quick start. ## Links Currently, Exposed is available for **maven/gradle builds**. Check the [Maven Central]( and read [Getting Started]( to get an insight on setting up Exposed. For more information visit the links below: - [Documentation]( with examples and docs - [Contributing to Exposed](#contributing) - [Migration Guide]( - [Breaking changes]( and any migration details - [Slack Channel]( - [Issue Tracker]( ## Filing issues Please note that we are moving away from GitHub Issues for reporting of bugs and features. Please log any new requests on [YouTrack]( You must be logged in to view and log issues, otherwise you will be met with a 404. ## Community Do you have questions? Feel free to [request an invitation]( for the [kotlinlang slack]( and join the project conversation at our [#exposed]( channel. ## Pull requests We actively welcome your pull requests. However, linking your work to an existing issue is preferred. - Fork the repo and create your branch from main. - Name your branch something that is descriptive to the work you are doing. i.e. adds-new-thing. - If you've added code that should be tested, add tests and ensure the test suite passes. - Make sure you address any lint warnings. - If you make the existing code better, please let us know in your PR description. See the [contribution guidelines]( for more details. ## Examples ### SQL DSL ```kotlin import org.jetbrains.exposed.sql.* import org.jetbrains.exposed.sql.SqlExpressionBuilder.like import org.jetbrains.exposed.sql.transactions.transaction object Users : Table() { val id: Column = varchar(""id"", 10) val name: Column = varchar(""name"", length = 50) val cityId: Column = (integer(""city_id"") references Cities.id).nullable() override val primaryKey = PrimaryKey(id, name = ""PK_User_ID"") // name is optional here } object Cities : Table() { val id: Column = integer(""id"").autoIncrement() val name: Column = varchar(""name"", 50) override val primaryKey = PrimaryKey(id, name = ""PK_Cities_ID"") } fun main() { Database.connect(""jdbc:h2:mem:test"", driver = ""org.h2.Driver"", user = ""root"", password = """") transaction { addLogger(StdOutSqlLogger) SchemaUtils.create(Cities, Users) val saintPetersburgId = Cities.insert { it[name] = ""St. Petersburg"" } get Cities.id val munichId = Cities.insert { it[name] = ""Munich"" } get Cities.id val pragueId = Cities.insert { it.update(name, stringLiteral("" Prague "").trim().substring(1, 2)) }[Cities.id] val pragueName = Cities.selectAll().where { Cities.id eq pragueId }.single()[Cities.name] println(""pragueName = $pragueName"") Users.insert { it[id] = ""andrey"" it[name] = ""Andrey"" it[Users.cityId] = saintPetersburgId } Users.insert { it[id] = ""sergey"" it[name] = ""Sergey"" it[Users.cityId] = munichId } Users.insert { it[id] = ""eugene"" it[name] = ""Eugene"" it[Users.cityId] = munichId } Users.insert { it[id] = ""alex"" it[name] = ""Alex"" it[Users.cityId] = null } Users.insert { it[id] = ""smth"" it[name] = ""Something"" it[Users.cityId] = null } Users.update({ Users.id eq ""alex"" }) { it[name] = ""Alexey"" } Users.deleteWhere{ Users.name like ""%thing"" } println(""All cities:"") for (city in Cities.selectAll()) { println(""${city[Cities.id]}: ${city[Cities.name]}"") } println(""Manual join:"") (Users innerJoin Cities) .select(Users.name, Cities.name) .where { (Users.id.eq(""andrey"") or Users.name.eq(""Sergey"")) and Users.id.eq(""sergey"") and Users.cityId.eq(Cities.id) }.forEach { println(""${it[Users.name]} lives in ${it[Cities.name]}"") } println(""Join with foreign key:"") (Users innerJoin Cities) .select(Users.name, Users.cityId, Cities.name) .where { Cities.name.eq(""St. Petersburg"") or Users.cityId.isNull() } .forEach { if (it[Users.cityId] != null) { println(""${it[Users.name]} lives in ${it[Cities.name]}"") } else { println(""${it[Users.name]} lives nowhere"") } } println(""Functions and group by:"") ((Cities innerJoin Users) .select(Cities.name, Users.id.count()) .groupBy(Cities.name) ).forEach { val cityName = it[Cities.name] val userCount = it[Users.id.count()] if (userCount > 0) { println(""$userCount user(s) live(s) in $cityName"") } else { println(""Nobody lives in $cityName"") } } SchemaUtils.drop(Users, Cities) } } ``` Generated SQL: ```sql SQL: CREATE TABLE IF NOT EXISTS Cities (id INT AUTO_INCREMENT, name VARCHAR(50) NOT NULL, CONSTRAINT PK_Cities_ID PRIMARY KEY (id)) SQL: CREATE TABLE IF NOT EXISTS Users (id VARCHAR(10), name VARCHAR(50) NOT NULL, city_id INT NULL, CONSTRAINT PK_User_ID PRIMARY KEY (id), CONSTRAINT FK_Users_city_id__ID FOREIGN KEY (city_id) REFERENCES Cities(id) ON DELETE RESTRICT ON UPDATE RESTRICT) SQL: INSERT INTO Cities (name) VALUES ('St. Petersburg') SQL: INSERT INTO Cities (name) VALUES ('Munich') SQL: INSERT INTO Cities (name) VALUES (SUBSTRING(TRIM(' Prague '), 1, 2)) SQL: SELECT Cities.id, Cities.name FROM Cities WHERE Cities.id = 3 pragueName = Pr SQL: INSERT INTO Users (id, name, city_id) VALUES ('andrey', 'Andrey', 1) SQL: INSERT INTO Users (id, name, city_id) VALUES ('sergey', 'Sergey', 2) SQL: INSERT INTO Users (id, name, city_id) VALUES ('eugene', 'Eugene', 2) SQL: INSERT INTO Users (id, name, city_id) VALUES ('alex', 'Alex', NULL) SQL: INSERT INTO Users (id, name, city_id) VALUES ('smth', 'Something', NULL) SQL: UPDATE Users SET name='Alexey' WHERE Users.id = 'alex' SQL: DELETE FROM Users WHERE Users.name LIKE '%thing' All cities: SQL: SELECT Cities.id, Cities.name FROM Cities 1: St. Petersburg 2: Munich 3: Pr Manual join: SQL: SELECT Users.name, Cities.name FROM Users INNER JOIN Cities ON Cities.id = Users.city_id WHERE ((Users.id = 'andrey') or (Users.name = 'Sergey')) and (Users.id = 'sergey') and (Users.city_id = Cities.id) Sergey lives in Munich Join with foreign key: SQL: SELECT Users.name, Users.city_id, Cities.name FROM Users INNER JOIN Cities ON Cities.id = Users.city_id WHERE (Cities.name = 'St. Petersburg') or (Users.city_id IS NULL) Andrey lives in St. Petersburg Functions and group by: SQL: SELECT Cities.name, COUNT(Users.id) FROM Cities INNER JOIN Users ON Cities.id = Users.city_id GROUP BY Cities.name 1 user(s) live(s) in St. Petersburg 2 user(s) live(s) in Munich SQL: DROP TABLE IF EXISTS Users SQL: DROP TABLE IF EXISTS Cities ``` ### DAO ```kotlin import org.jetbrains.exposed.dao.* import org.jetbrains.exposed.dao.id.EntityID import org.jetbrains.exposed.dao.id.IntIdTable import org.jetbrains.exposed.sql.* import org.jetbrains.exposed.sql.transactions.transaction object Users : IntIdTable() { val name = varchar(""name"", 50).index() val city = reference(""city"", Cities) val age = integer(""age"") } object Cities: IntIdTable() { val name = varchar(""name"", 50) } class User(id: EntityID) : IntEntity(id) { companion object : IntEntityClass(Users) var name by Users.name var city by City referencedOn Users.city var age by Users.age } class City(id: EntityID) : IntEntity(id) { companion object : IntEntityClass(Cities) var name by Cities.name val users by User referrersOn Users.city } fun main() { Database.connect(""jdbc:h2:mem:test"", driver = ""org.h2.Driver"", user = ""root"", password = """") transaction { addLogger(StdOutSqlLogger) SchemaUtils.create(Cities, Users) val stPete = City.new { name = ""St. Petersburg"" } val munich = City.new { name = ""Munich"" } User.new { name = ""a"" city = stPete age = 5 } User.new { name = ""b"" city = stPete age = 27 } User.new { name = ""c"" city = munich age = 42 } println(""Cities: ${City.all().joinToString { it.name }}"") println(""Users in ${stPete.name}: ${stPete.users.joinToString { it.name }}"") println(""Adults: ${User.find { Users.age greaterEq 18 }.joinToString { it.name }}"") } } ``` Generated SQL: ```sql SQL: CREATE TABLE IF NOT EXISTS Cities (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(50) NOT NULL) SQL: CREATE TABLE IF NOT EXISTS Users (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(50) NOT NULL, city INT NOT NULL, age INT NOT NULL, CONSTRAINT FK_Users_city__ID FOREIGN KEY (city) REFERENCES Cities(id) ON DELETE RESTRICT ON UPDATE RESTRICT) SQL: CREATE INDEX Users_name ON Users (name) SQL: INSERT INTO Cities (name) VALUES ('St. Petersburg') SQL: INSERT INTO Cities (name) VALUES ('Munich') SQL: SELECT Cities.id, Cities.name FROM Cities Cities: St. Petersburg, Munich SQL: INSERT INTO Users (name, city, age) VALUES ('a', 1, 5) SQL: INSERT INTO Users (name, city, age) VALUES ('b', 1, 27) SQL: INSERT INTO Users (name, city, age) VALUES ('c', 2, 42) SQL: SELECT Users.id, Users.name, Users.city, Users.age FROM Users WHERE Users.city = 1 Users in St. Petersburg: a, b SQL: SELECT Users.id, Users.name, Users.city, Users.age FROM Users WHERE Users.age >= 18 Adults: b, c ``` ## Contributing Please see the [contribution guide]( before contributing. By contributing to the Exposed project, you agree that your contributions will be licensed under [Apache License, Version 2.0](","660, Code, Issues, Pull requests, Actions, Security, Insights, enhancement, waiting for reply, postgresql, good-first-issue, documentation, bug, sqlite, sql server, datetime, to be documented, performance, duplicate, wontfix, spring-boot, question, oracle, mysql, invalid, h2, dependencies"
LibreTube,libre-tube/LibreTube,7845,"['Kotlin', 'Shell']","['kotlin', 'android', 'youtube']","[]( []( []( []( > **Note** > We don't accept feature or bug requests on these platforms. Kindly submit requests only on GitHub. []( []( []( Credits Readme Design and Banners by [XelXen]( Readme Screenshots by [ARBoyGo]( Readme Emoji is from [openmoji]( Icons [Default App Icon]( by [XelXen]( [Boosted Bird]( by [Margot Albert-Heuzey]( About YouTube has an extremely invasive [privacy policy]( which relies on using user data in unethical ways. They store a lot of your personal data - ranging from ideas, music taste, content, political opinions, and much more than you think. This project is aimed at improving the users' privacy by being independent from Google and bypassing their data collection. Therefore, the app is using the [Piped API]( which uses proxies to circumvent Google's data collection and includes some other additional features. If you have questions or need help, please make sure to read the [FAQ]( before asking for help at the community channels. The [Matrix room]( is considered as the main communication channel, all other forums or social media accounts are maintained by volunteers from the community but not the developer(s). Screenshots [](fastlane/metadata/android/en-US/images/phoneScreenshots/Screenshot_1.jpg) [](fastlane/metadata/android/en-US/images/phoneScreenshots/Screenshot_2.jpg) [](fastlane/metadata/android/en-US/images/phoneScreenshots/Screenshot_3.jpg) [](fastlane/metadata/android/en-US/images/phoneScreenshots/Screenshot_4.jpg) [](fastlane/metadata/android/en-US/images/phoneScreenshots/Screenshot_9.jpg) * For more [Screenshot]( Features - [x] No Ads - [x] User Accounts - [x] Subscriptions - [x] Subscription Groups - [x] User Playlists - [x] Playlist Bookmarks - [x] Watch/Search History - [x] SponsorBlock - [x] DeArrow - [x] ReturnYouTubeDislike - [x] Downloads Contributing Whether you have ideas, translations, design changes, code cleaning or really heavy code changes, help is always welcome. The more is done, the better it gets! Please respect our [Code of Conduct]( in order to keep all interactions and dicussions healthy. You can open and build the project like any other normal Android project by using Android Studio. If creating a pull request containing code changes, please make sure to format your code with `ktlint --code-style=android_studio -F` before. Please make sure the title of your pull request and the commit messages follow the [conventional commit types]( (e.g. `feat: support for xy`). The most common commit types are ""feat"", ""fix"", ""refactor"", ""ci"" and ""chore"". > **Note** > Any issue avoiding the issue template will be ignored and forced to be closed. Donate Donations can be made at: * * Contributions in any form are welcome! Translations Differences to NewPipe With NewPipe, the extraction is done locally on your phone, and all the requests sent towards YouTube/Google are done directly from the network you're connected to, which doesn't use a middleman server in between. Therefore, Google can still access information such as the user's IP address. Aside from that, subscriptions can only be stored locally. LibreTube takes this one step further and proxies all requests via Piped (which uses the NewPipeExtractor). This prevents Google servers from accessing your IP address or any other personal data. Apart from that, Piped allows syncing your subscriptions between LibreTube and Piped, which can be used on desktop too. If the NewPipeExtractor breaks, it only requires an update of Piped and not LibreTube itself. Therefore, fixes usually arrive faster than in NewPipe. While LibreTube only supports YouTube, NewPipe also allows the use of other platforms like SoundCloud, PeerTube, Bandcamp and media.ccc.de. Both are great clients for watching YouTube videos. It depends on the individual's use case which one fits their needs better. Privacy Policy and Disclaimer LibreTube aims to protect the privacy of its users. [Our Privacy Policy](/PRIVACY_POLICY.md) gives detailed information on which data the app stores in order to work, how it is being used, and how the project protects your personal information. It is recommended to read the privacy policy of LibreTube as well as the privacy policy of the instance you have chosen inside the app. ## License []( LibreTube is [Free Software]( You can use, study, share and modify it at your will. The app can be redistributed and/or modified under the terms of the [GNU General Public License version 3 or later]( published by the [Free Software Foundation]( Scroll to top","422, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, bug, enhancement, priority: low, help wanted, can't reproduce, wontfix, discussion, contribution-friendly, testers needed, release builds only, release blocker, question, priority: high, invalid, duplicate, dependencies"
Unciv,yairm210/Unciv,7820,"['Kotlin', 'Dockerfile', 'Shell']","['civilization-v', 'android', 'libgdx', 'civilization', 'game']","# Unciv - Civ V remake for Android & Desktop []( []( []( []( []( []( []( []( []( ## What is this? An open source, moddability-focused Android and Desktop remake of Civ V, made with LibGDX ## Is this any good? Depends what you're looking for. If you're in the market for high-res graphics, amazing soundtracks, animations etc, I highly recommend Firaxis's Civ-V-like game, ""Civilization V"". If you want a small, fast, moddable, FOSS, in-depth 4X that can still run on a potato, you've come to the right place :) ## What's the roadmap? In this order: * Polish! As you may have noticed, Unciv is fully functional but rough around the edges. This means: * UI+UX improvements ([suggestions welcome!]( * Better automation, AI etc. in-game * G&K mechanics - espionage, small other changes (see [#4697]( * BNW mechanics - trade routes, world congress, etc. ## Contributing Programmers start [here]( Translators start [here]( Modders start [here]( You can join us in any of the open issue, or work on improving anything you want - once you're finished, issue a pull request and it'll go into the next version! If not, you can help by spreading the word - vote for Unciv where you can, mention it on Reddit or Twitter etc, and help us with new ideas of how to get the word out! ## FAQ ## How do I install? - **Android** - [Google Play]( or [F-droid]( - **Windows/Linux** - [itch.io]( Flatpak via [Flathub]( or [AUR]( - **Raspberry Pi** - [Pi-apps]( - **MacOS** - Install [with this guide]( - Jars, APKs and Windows/Linux builds also available in [Releases]( (run jar with `java -jar Unciv.jar`) - *not recommended* since we update frequently and you will quickly become out-of-date - [Build from scratch]( if that's your thing ### How about IOS? I'm not planning on it. It means paying money to Apple, yet another release path, and since I don't have an IOS device it means I can't test it properly. ### Steam release? Steam has decided that they don't want to host Unciv, they probably don't want to risk legal issues with Firaxis (although those should be non-existent, see below) ### Will you implement {feature}? If it's in the original Civ V, then yes! If not, then the feature won't be added to the base game - possibly it will be added as a way to mod the game, which is constantly expanding #### Why not? This is its own game, why not add features that weren't in Civ V? Having a clear vision is important for actually getting things done. Anyone can make a suggestion. Not all are good, viable, or simple. Not many can actually implement stuff. As an open source project, this stuff is done in our spare time, of which there isn't much. We need a clear-cut criteria to decide what to work on and what not to work on. #### Will you implement Civ VI? Considering how long it took to get this far, no. ### How can I learn to play? Where's the wiki? All the tutorial information is available in-game at menu > civilopedia > tutorials All the information is included in the amazing [Civ V wiki]( Since this is a Civ V clone, you can search Google for how to play Civ V and there are loads of answers =) Alternatively, you could [join us on Discord]( and ask there =D ### Aren't you basically making a Civ V clone? Is that even legal? According to the [US Copyright Office FL-108]( intellectual property rights *do not* apply to mechanics - as I'm sure you know, there are a billion Flappy Bird knockoffs It is definitely illegal: - To use any assets from the original game (images, sound etc) - they belong to Firaxis It is probably illegal (no solid sources on this): - To use the Civilization name - To impersonate the Civ games (so calling yourself civi|zation with a similar logo, for instance) Interestingly, [Civilization is a registered trademark]( but it looks like it's only *that particular logo* which is trademarked, so technically you could make another game called ""Civilization"" and it'll stick. In any case we're not going there :) ## Run with Docker []( If you have docker compose installed: ```$ docker compose build && docker compose up``` and then goto If just docker: ```$ docker build . -t unciv && docker run -d -p 6901:6901 -p 5901:5901 unciv ``` Or just use our already built one: ```$ docker run -d -p 6901:6901 -p 5901:5901 ghcr.io/yairm210/unciv ``` and then goto ## [Credits and 3rd parties](docs/Credits.md)","1.5k, Code, Issues, Pull requests, Actions, Security, Insights, bug, feature, Will not stale, AI, help wanted, Stale, Conflicts, enhancement, UI, Missing saved game, wontfix, Documentation, performance, not enough translations, mergeable translation, Toolchain, Solved, Contains Saved Game"
ViMusic,vfsfitvnm/ViMusic,7810,['Kotlin'],"['android', 'jetpack-compose', 'music-player', 'youtube', 'music']","ViMusic An Android application for streaming music from YouTube Music --- ## Features - Play (almost) any song or video from YouTube Music - Background playback - Cache audio chunks for offline playback - Search for songs, albums, artists videos and playlists - Bookmark artists and albums - Import playlists - Fetch, display and edit songs lyrics or synchronized lyrics - Local playlist management - Reorder songs in playlist or queue - Light/Dark/Dynamic theme - Skip silence - Sleep timer - Audio normalization - Android Auto - Persistent queue - Open YouTube/YouTube Music links (`watch`, `playlist`, `channel`) - ... ## Installation []( []( []( ## Acknowledgments - [**YouTube-Internal-Clients**]( A python script that discovers hidden YouTube API clients. Just a research project. - [**ionicons**]( Premium hand-crafted icons built by Ionic, for Ionic apps and web apps everywhere. App icon based on icon created by Ilham Fitrotul Hayat - Flaticon ## Disclaimer This project and its contents are not affiliated with, funded, authorized, endorsed by, or in any way associated with YouTube, Google LLC or any of its affiliates and subsidiaries. Any trademark, service mark, trade name, or other intellectual property rights used in this project are owned by the respective owners.","631, Code, Issues, Pull requests, Actions, Security, Insights, bug, enhancement, needs traction, can't reproduce, ui, contributions only, api change, help wanted, wontfix, stale, question, invalid, duplicate, documentation"
cheesesquare,chrisbanes/cheesesquare,7741,['Kotlin'],[],"Cheesesquare Sample =================================== Demos the new Android Design library. This is not an exhaustive sample, but shows some of the important features in the Design library: - Collapsing Toolbar - FloatingActionButton - View anchoring - NavigationView - Snackbar Pre-requisites -------------- - Android SDK v22 - Android Build Tools v22.0.1 - Android Support Repository r16 (for v22.2.1) License ------- Copyright 2014 The Android Open Source Project, Inc. Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","1.8k, Code, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, enhancement, duplicate, cla: yes, cla: no, bug"
RIBs,uber/RIBs,7692,"['Kotlin', 'Java', 'Swift']","['ios', 'android', 'mobile', 'mobile-app', 'mobile-development']","[]( []( []( []( []( RIBs is the cross-platform architecture framework behind many mobile apps at Uber. The name RIBs is short for Router, Interactor and Builder, which are core components of this architecture. This framework is designed for mobile apps with a large number of engineers and nested states. The RIBs architecture provides: * **Shared architecture across iOS and Android.** Build cross-platform apps that have similar architecture, enabling iOS and Android teams to cross-review business logic code. * **Testability and Isolation.** Classes must be easy to unit test and reason about in isolation. Individual RIB classes have distinct responsibilities like: routing, business, view logic, creation. Plus, most RIB logic is decoupled from child RIB logic. This makes RIB classes easy to test and reason about independently. * **Tooling for developer productivity.** RIBs come with IDE tooling around code generation, memory leak detection, static analysis and runtime integrations - all which improve developer productivity for large teams or small. * **An architecture that scales.** This architecture has proven to scale to hundreds of engineers working on the same codebase and apps with hundreds of RIBs. ## Documentation To get started with RIBs, please refer to the [RIBs documentation]( This describes key concepts on RIBs, from what they are for, their structure and common use cases. To get more hands on with RIBs, we have written a [series of tutorials]( that run you through the main aspects of the architecture with hands-on examples. To read about the backstory on why we created RIBs, see [this blog post]( we wrote when releasing RIBs in production the first time and see [this short video]( where we discussed how the RIBs architecture works. #### What is the difference between RIBs and MV*/VIPER? MVC, MVP, MVI, MVVM and VIPER are architecture patterns. RIBs is a framework. What differentiates RIBs from frameworks based on MV*/VIPER is: - **Business logic drives the app, not the view tree**. Unlike with MV*/VIPER, a RIB does not have to have a view. This means that the app hierarchy is driven by the business logic, not the view tree. - **Independent business logic and view trees**. RIBs decouple how the business logic scopes are structured from view hierarchies. This allows the application to have a deep business logic tree, isolating business logic nodes, while maintaining a shallow view hierarchy making layouts, animations and transitions easy. There are some other novel things about RIBs. However, these could also be implemented with other MV*/VIPER frameworks. These are: - **Cross-platform approach**, allowing iOS and Android architecture to stay in sync. - **Tooling for easier adoption** on larger apps or teams. Tooling we are open sourcing includes IDE plugins for code generation and static code analysis. - **Strong opinions about how state should be communicated**, using DI and Rx. Each RIB defines its dependencies and what dependencies it needs from its parent. Parent components that fulfill a childs parent dependencies are provided to child Builders as a constructor dependency to allow for hierarchical DI scoping. This means that information is communicated via these dependencies up and down the tree. ## Usage 1. Clone this repository 2. Integrate using your preferred installation mechanism For usage of the tooling built around RIBs, please see the [Tooling section]( in our documentation. ## Installation for Android To integrate the recommended minimum setup for RIBs add the following to your `build.gradle`: ```gradle dependencies { annotationProcessor 'com.uber.rib:rib-compiler-test:0.16.2' implementation 'com.uber.rib:rib-android:0.16.2' testImplementation 'com.uber.rib:rib-test:0.16.2' } ``` There are a number of extension packages available as well including Kotlin extensions, Jetpack Compose support, Coroutines support ## Installation for iOS #### CocoaPods To integrate RIBs into your project add the following to your `Podfile`: ```ruby pod 'RIBs', '~> 0.9' ``` #### Carthage To integrate RIBs into your project using Carthage add the following to your `Cartfile`: ```ruby github ""uber/RIBs"" ~> 0.9 ``` ## Related projects If you like RIBs, check out other related open source projects from our team: - [Needle]( a compile-time safe Swift dependency injection framework. - [Motif]( An abstract on top of Dagger offering simpler APIs for nested scopes. - [Swift Concurrency]( a set of concurrency utility classes used by Uber, inspired by the equivalent [java.util.concurrent]( package classes. - [Swift Abstract Class]( a light-weight library along with an executable that enables compile-time safe abstract class development for Swift projects. - [Swift Common]( common libraries used by this set of Swift open source projects. ## License Copyright (C) 2017 Uber Technologies Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","902, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, Android, iOS, question, enhancement, help wanted, documentation, bug, nice to have, wontfix, invalid, duplicate"
Pokedex,skydoves/Pokedex,7652,['Kotlin'],"['android', 'kotlin', 'pokemon', 'pokedex', 'mvvm']","Pokedex Pokedex demonstrates modern Android development with Hilt, Coroutines, Flow, Jetpack (Room, ViewModel), and Material Design based on MVVM architecture. > [!TIP] > If you want to see the Jetpack Compose version of Pokedex, check out the [Pokedex Compose]( repository. ## Download Go to the [Releases]( to download the latest APK. ## Tech stack & Open-source libraries - Minimum SDK level 21 - [Kotlin]( based, [Coroutines]( + [Flow]( for asynchronous. - Jetpack - Lifecycle: Observe Android lifecycles and handle UI states upon the lifecycle changes. - ViewModel: Manages UI-related data holder and lifecycle aware. Allows data to survive configuration changes such as screen rotations. - DataBinding: Binds UI components in your layouts to data sources in your app using a declarative format rather than programmatically. - Room: Constructs Database by providing an abstraction layer over SQLite to allow fluent database access. - [Hilt]( for dependency injection. - Architecture - MVVM Architecture (View - DataBinding - ViewModel - Model) - [Bindables]( Android DataBinding kit for notifying data changes to UI layers. - Repository Pattern - [Retrofit2 & OkHttp3]( Construct the REST APIs and paging network data. - [Sandwich]( Construct a lightweight and modern response interface to handle network payload for Android. - [Moshi]( A modern JSON library for Kotlin and Java. - [WhatIf]( Check nullable objects and empty collections more fluently. - [Bundler]( Android Intent & Bundle extensions, which insert and retrieve values elegantly. - [ksp]( Kotlin Symbol Processing API. - [Turbine]( A small testing library for kotlinx.coroutines Flow. - [Material-Components]( Material design components for building ripple animation, and CardView. - [Glide]( [GlidePalette]( Loading images from network. - [TransformationLayout]( Implementing transformation motion animations. - Custom Views - [Rainbow]( An easy way to apply gradations and tinting for Android. - [AndroidRibbon]( A simple way to implement a beautiful ribbon with the shimmering on Android. - [ProgressView]( A polished and flexible ProgressView, fully customizable with animations. - [Timber]( A logger with a small, extensible API. ## Architecture **Pokedex** is based on the MVVM architecture and the Repository pattern, which follows the [Google's official architecture guidance]( The overall architecture of **Pokedex** is composed of two layers; the UI layer and the data layer. Each layer has dedicated components and they have each different responsibilities, as defined below: **Pokedex** was built with [Guide to app architecture]( so it would be a great sample to show how the architecture works in real-world projects. ### Architecture Overview - Each layer follows [unidirectional event/data flow]( the UI layer emits user events to the data layer, and the data layer exposes data as a stream to other layers. - The data layer is designed to work independently from other layers and must be pure, which means it doesn't have any dependencies on the other layers. With this loosely coupled architecture, you can increase the reusability of components and scalability of your app. ### UI Layer The UI layer consists of UI elements to configure screens that could interact with users and [ViewModel]( that holds app states and restores data when configuration changes. - UI elements observe the data flow via [DataBinding]( which is the most essential part of the MVVM architecture. - With [Bindables]( which is an Android DataBinding kit for notifying data changes, you can implement two-way binding, and data observation in XML very clean. ### Data Layer The data Layer consists of repositories, which include business logic, such as querying data from the local database and requesting remote data from the network. It is implemented as an offline-first source of business logic and follows the [single source of truth]( principle. **Pokedex** is an offline-first app is an app that is able to perform all, or a critical subset of its core functionality without access to the internet. So users don't need to be up-to-date on the network resources every time and it will decrease users' data consumption. For further information, you can check out [Build an offline-first app]( ## Modularization **Pokedex** adopted modularization strategies below: - **Reusability**: Modulizing reusable codes properly enable opportunities for code sharing and limits code accessibility in other modules at the same time. - **Parallel Building**: Each module can be run in parallel and it reduces the build time. - **Strict visibility control**: Modules restrict to expose dedicated components and access to other layers, so it prevents they're being used outside the module - **Decentralized focusing**: Each developer team can assign their dedicated module and they can focus on their own modules. For more information, check out the [Guide to Android app modularization]( ## MAD Score ## Open API Pokedex using the [PokeAPI]( for constructing RESTful API. PokeAPI provides a RESTful API interface to highly detailed objects built from thousands of lines of data related to Pokmon. ## Find this repository useful? :heart: Support it by joining __[stargazers]( for this repository. :star: Also, __[follow me]( on GitHub for my next creations! # License ```xml Designed and developed by 2022 skydoves (Jaewoong Eum) Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. ```","1k, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, enhancement, wontfix, question, invalid, help wanted, good first issue, duplicate, documentation, bug"
uhabits,iSoron/uhabits,7370,"['Kotlin', 'Java', 'Swift']","['android', 'habits', 'habit-tracker', 'streak', 'java']","Loop Habit Tracker Loop is a mobile app that helps you create and maintain good habits, allowing you to achieve your long-term goals. Detailed graphs and statistics show you how your habits improved over time. It is completely ad-free and open source. ## Screenshots [![Main screen][screen1th]][screen1] [![Edit habit][screen2th]][screen2] [![Habit strength][screen3th]][screen3] [![Habit history and streaks][screen4th]][screen4] [![Widgets][screen5th]][screen5] [![Night mode][screen6th]][screen6] ## Features * Beautiful, minimalistic and lightweight interface. Loop has an elegant and minimalistic interface that is very easy to use, even for first-time users. Highly optimized for speed, the app works well even on older phones. * Habit score. Loop has an advanced formula for calculating the strength of your habits. Every repetition makes your habit stronger and every missed day makes it weaker. A few missed days after a long streak, however, will not completely destroy your progress, unlike many other don't-break-the-chain apps. * Flexible schedules. In addition to daily habits, Loop supports habits with more complex schedules, such as 3 times per week or every other day. * Reminders. Schedule notifications to remind you of your habits. Each habit can have its own reminder, at a chosen time of the day. Easily check or dismiss your habit directly from the notification. * Widgets. Be reminded of your habits whenever you unlock your phone. Colorful widgets allow you to track your habits directly from your home screen, without even opening the app. * Take control of your data. If you want to further analyze your data, or move it to another service, Loop allows you to export it to spreadsheets (CSV) or to a database file (SQLite). For power users, checkmarks can be added through other apps, such as Tasker. * No limitations. Track as many habits as you wish. Loop imposes no artificial limits on how many habits you can have. All features are available to all users. There are no in-app purchases. * Completely ad-free and open source. There are no advertisements, annoying notifications or intrusive permissions in this app, and there will never be. The app is completely open-source (GPLv3). * Works offline and respects your privacy. Loop doesn't require an Internet connection or online account registration. Your confidential data is never sent to anyone. Neither the developers nor any third-parties have access to it. ## Installing The easiest way to install Loop is through the [Google Play Store][playstore] or [F-Droid][fdroid]. You may also download and install the APK from the [releases page][releases]; note, however, that the app will not be updated automatically. To build this app from the source code, see [build instructions][build]. ## Contributing Loop is an open source project developed entirely by volunteers. If you would like to contribute to the project, you are very welcome. There are many ways to contribute, even if you are not a software developer. * **Report bugs, suggest features.** The easiest way to contribute is to simply use the app and let us know if you find any problems or have any suggestions to improve it. To report a problem, please [create a new bug report]( To request a new feature or vote on existing feature requests, please visit our [GitHub Discussions page]( If you would like to receive the newest versions of the app earlier than everyone else, [join our open beta on Google Play][beta]. * **Spread the word.** If you like the app, share it with your family, friends and colleagues. You can also rate and review the app on Google Play Store, to help other users find it more easily. * **Translate the app into your own language.** If you are not a native English speaker, and would like to see the app translated into your own language, please join our [open translation project][poedit]. If the translation is already completed, you are also very welcome to join and proofread it. * **Write some code.** If you are an Android developer, you are very welcome to contribute with code. Please see the [guidelines]( ## License Copyright (C) 2016-2021 linson Santos Xavier Loop Habit Tracker is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. Loop Habit Tracker is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see . [screen1]: screenshots/1.png [screen2]: screenshots/2.png [screen3]: screenshots/3.png [screen4]: screenshots/4.png [screen5]: screenshots/5.png [screen6]: screenshots/6.png [screen1th]: screenshots/1.thumb.png [screen2th]: screenshots/2.thumb.png [screen3th]: screenshots/3.thumb.png [screen4th]: screenshots/4.thumb.png [screen5th]: screenshots/5.thumb.png [screen6th]: screenshots/6.thumb.png [poedit]: [playstore]: [releases]: [fdroid]: [build]: [beta]:","913, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, java, dependencies, bug, refactoring, new-feature, confirmed, needs-info, low-severity, wont-fix, small-enhancement, performance, on-hold, invalid, high-severity, github_actions, duplicate, documentation, cant-reproduce, announcement, Available in Loop 2.1, Available in Loop 2.0"
mihon,mihonapp/mihon,7295,['Kotlin'],[],"# Mihon [App](#) ### Full-featured reader Discover and read manga, webtoons, comics, and more easier than ever on your Android device. []( []( []( [](/LICENSE) []( ## Download []( []( *Requires Android 8.0 or higher.* ## Features * Local reading of content. * A configurable reader with multiple viewers, reading directions and other settings. * Tracker support: [MyAnimeList]( [AniList]( [Kitsu]( [MangaUpdates]( [Shikimori]( and [Bangumi]( support. * Categories to organize your library. * Light and dark themes. * Schedule updating your library for new chapters. * Create backups locally to read offline or to your desired cloud service. * Plus much more... ## Contributing [Code of conduct](./CODE_OF_CONDUCT.md) [Contributing guide](./CONTRIBUTING.md) Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change. Before reporting a new issue, take a look at the [FAQ]( the [changelog]( and the already opened [issues]( if you got any questions, join our [Discord server]( ### Repositories []( []( ### Credits Thank you to all the people who have contributed! ### Disclaimer The developer(s) of this application does not have any affiliation with the content providers available, and this application hosts zero content. ### License Copyright 2015 Javier Toms Copyright 2024 The Mihon Open Source Project Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","281, Code, Issues, Pull requests, Actions, Projects, Security, Insights, Feature request, Bug, Dependencies, wontfix, question, invalid, help wanted, good first issue, duplicate, documentation"
flutter_ui_challenges,lohanidamodar/flutter_ui_challenges,4528,"['Dart', 'C++', 'CMake']","['flutter', 'flutter-examples', 'flutter-demo', 'flutter-ui-challenges', 'flutter-ui']","# Flutter UI Challenges My effort on replicating various apps UI on flutter. > Exciting News! > > Level up your Flutter skills in just 30 days with [30DaysMasterFlutter]( > > [Join the fun and become a Flutter pro!]( ## Live [Flutter UI Challenges Web]( []( []( []( ## Building and running the code [ **Updated** ] - Should work on all platforms with Flutter Stable Release ### Table of contents - **[Animation Examples UI](#animations)** - **[Ecommerce UIs](#ecommerce)** - **[Login/signup UIs](#user-flow-screens)** - **[Settings UIs](#settings-uis)** - **[Dashboard UIs](#dashboard-uis)** - **[Quotes App UIs](#quotes-app-uis)** - **[Motorbike App UIs](#motorbike-app-uis)** - **[Profile UIs](#profile-screens)** - **[Invitation App UIs](#inviation-app-ui)** - **[Lists UIs](#lists-uis)** - **[Navigation UIs](#navigations)** - **[Onboarding UIs](#onboarding-screens)** - **[Miscellaneous UIs](#miscellaneous-widgets)** - **[Blog UIs](#blog)** - **[Food App UIs](#food-app)** - **[Quiz App UIs](#quiz-app)** - **[Todo App UIs](#todo-app)** - **[Hotel App UIs](#hotel-app)** - **[Travel App UIs](#travel-app)** - **[Grocery App UI Kit](#grocery-app-ui-kit)** - **[Bank App Clone](#bank-app-clone)** - **[Furniture App UI](#furniture-app-ui)** ## Contributors 1. [Damodar Lohani]( 2. [Aparna Dulal] ( 2. [Sudip Thapa]( 3. [Shyam Adhikari (UI/UX Designer)]( 4. [Mausam Rayamajhi]( 5. [Siddhartha Joshi]( ## Packages Used - Flutter Swiper ( - Flutter Custom Clippers ( ## Credits The code for Springy Widget is taken and refactored from ( ## Animations ## Ecommerce ## User Flow Screens ## Settings UIs ## Dashboard UIs ## Quotes App UIs ## Motorbike App UIs ## Profile Screens ## Inviation App UI ## Lists UIs ## Navigations ## Onboarding Screens (Smart walled onboarding is from ## miscellaneous widgets ## Blog ## Food App ## Quiz App ## Todo App ## Hotel App ## Travel App ## grocery App UI Kit (design credit: ### Whats implemented - Working bottom navigator to show different pages - Navigation push/pop to show details page - Stateless & Stateful Widgets - Custom widgets for list items, category items etc. ## Bank App Clone Bank app clone by [Mausam Rayamajhi]( ## Furniture App UI Furniture App by [Mausam Rayamajhi]( ## Plant App UI Plant UI Clone by [Ambika Dulal]( ## TravelUi Clone Furniture App by [Ambika Dulal]( ## Wallet App Clone Furniture App by [Ambika Dulal](","1.4k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, bug"
flutter_vignettes,gskinnerTeam/flutter_vignettes,4432,"['Dart', 'C++', 'CMake']",[],"### The Flutter Vignettes A collection of explorations into the exciting user experience possibilities enabled by the Flutter platform. Built by [gskinner]( in partnership with Google, these vignettes range from the practical to the novel. They aim to inspire both developers and designers to build delightful and beautiful experiences with Flutter. In addition to forking and reviewing the [MIT licensed code](LICENSE.md) available here, you can also check out more information on the [Vignette Showcase Website]( ### About gskinner We exist to build inovative digital experiences for smart clients, and we love how easy Flutter makes that. Don't hesitate to [stop by our site]( to learn more about what we do. We'd love to hear from you! ### The Vignettes Travel Cards Use a Stack widget to create a parallax effect inside of a list, while also using a Transform to give it a 3D card effect. View Code Mindfulness Gooey Transition Draw curved vector paths and use them to mask content. Utilizes a small physics simulation to calculate tension between a set of points. View Code Boarding Pass Cards Uses the Transform widget to create a folding card effect. In this case a boarding pass with multiple folds, each fold containing a child widget. View Code Inbox Swipe Particles Demonstrates how you can use particles in your Flutter app and how to tie multiple actions to a list swipe. View Code Icon Flip Button Bar Example of a bespoke NavigationBar with animated buttons that change size, shape, and color when selected. View Code Liquid Rewards Cards Shows how to easily create resizeable list items using AnimatedContainer; also uses the Canvas API to simulate a liquid effect. View Code Dog Toy Slider Use a Flare animation to create a custom Slider control. Creates a custom FlareControl class for playback while the slider itself is painted on a Canvas. View Code Guide To the Stars Particles Shows how to use an animated Canvas as the primary background for your app. In this case, a starfield effect that controls its animation speed based on user scrolling and page transitions. View Code Paris Travel Hero Transition Shows how you can create a custom Hero effect that contains complex animations and retains its state between pages. View Code Fluid Button Bar Uses a Canvas to create a fluid-style navigation bar that has a fun bouncy feel to it; also shows how to use the Path API to draw, and animate some custom icons. View Code Product Zoom Transition Example of an animated png sequence within a Hero animation; also uses a Canvas to render and animate a product detail overlay. View Code Article Dark Mode Shows how a png sequence can be used to mask an arbitrary widget. Here that technique is used in a page transition between light and dark themes. View Code Sports App Pull To Refresh Shows how to create a custom pull to refresh animation. In this example, we used a sprite sequence to render a basketball spinning around the hoop as it loads. View Code Plant Shopping Cart An example of multi-part form validation and the ability to customize the form contents based on the country the user has selected. View Code Feature Artist Carousel Uses a custom 3D model renderer and blending mask to create a fun and unique background effect. View Code Sparkle Party Particles Uses the drawVertices API to draw a ton of particles extremely quickly. The particles are animated using a sprite sheet and comes with 4 different presets. View Code BudgetTracker Graphs Demonstrates how charts and graphs can be implemented using the Canvas API. It also provides an example of arbitrary panning and scrolling in a view. View Code ### Installation If you're new to Flutter the first thing you'll need is to follow the [setup instructions]( Once you're set up and can compile the sample Flutter app, you're ready to run some vignettes! Each vignette is stored in its own folder in the repository. Using your IDE of choice, open the vignette directory you'd like to run. Then, using the terminal inside your IDE, run `flutter pub get` to fetch any dependencies, and `flutter run` to deploy to your connected device or simulator. If you would like to try these for Flutter for web, you can use `flutter run -d chrome`. Note that Flutter for web is currently a technical preview and not all of the vignettes will work correctly. For more information on enabling Flutter for web follow the [setup instructions]( ### License These vignettes are released under the [MIT license](LICENSE.md). You can use the code for any purpose, including commercial projects. [](","975, Code, Issues, Pull requests, Actions, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
getwidget,ionicfirebaseapp/getwidget,4429,"['Dart', 'C++', 'CMake']","['flutter', 'dart', 'flutter-ui', 'flutter-widget', 'widgetkit']","[]( []( []( []( []( GetWidget, a leading [**Flutter app development company**]( proudly operates as a 100% free and open-source platform. We encourage and support an active, healthy community that accepts contributions from the public including you. There are a couple of ways in which you can contribute to the growing community of getwidget. UI Kit library built with Flutter SDK to make Flutter development easier and more joyful than ever. GetWidget has 1000+ pre-build widgets that you can reuse to develop both Flutter mobile app and web app. Our motto is to provide the best Flutter UI library to the Flutter community to speed up their development process and build awesome apps with [**pre-build Flutter Library Components**]( ## Table of contents - [Screenshot](#screenshot) - [Quick start](#quick-start) - [Features](#features) - [Demo](#demo) - [Contributing](#contributing) - [Documentation](#documentation) - [Copyright and license](#copyright-and-license) - [Marketplace]( ## Screenshot ## Quick start Read the [Getting started page]( Forum [Support and discussion ]( ## Features we have launched the library with the following components : [GETWIDGET WIDGET COLLECTION]( #### [Flutter Button Widget]( | [Flutter Elevated Button Widget]( | [Flutter Rounded Button Widget]( | [Flutter Square Button Widget]( | [Flutter Icon Button Widget]( | [Flutter Social Button Widget]( | [Flutter Badge Widget]( | [Flutter Avatar Widget]( | [Flutter Image Widget]( | [Flutter Card Widget]( | [Flutter Carousel Widget]( | [Flutter Tile Widget]( | [Flutter Tabbar Widget]( | [Flutter Typography]( | [Flutter Toaster Widget]( | [Flutter Switch Toggle Widget]( | [Flutter Drawer Widget]( | [Flutter Accordian Widget]( | [Flutter Alert Widget]( | [Flutter Appbar Widget]( | [Flutter Searchbar Widget]( | [Flutter Floating Widget]( | [Flutter Rating Widget]( | [Flutter Dropdown Widget]( | [Flutter Loader Widget]( | [Flutter Progress Bar Widget]( | [Flutter Shimmer Widget]( | [Flutter Animation Widget]( | [Flutter Border Widget]( | [Flutter Bottomsheet Widget]( | [Flutter Checkbox Widget]( | [Flutter CheckboxListTile Widget]( | [Flutter Radio Button Widget]( | [Flutter Radio ListTile Widget]( | [Flutter Sticky Header Widget]( ## Demo ### Play Store ### An Open-Source News App Built With GetWidget & Flutter Ionicfirebaseapp.com has been developed an open-source News Mobile App with GetWidget, So can start building app faster to get an overview and do customization. You can Download News App Souce Code here: ## Contributing GetWidget is **100% free** and **open source**. We encourage and support an active, healthy community that accepts contributions from the public including you. There are a couple of ways in which you can contribute to the growing community of `getwidget`. * Pick up any issue marked with [""good first issue""]( * Fix a bug * Write and improve some **documentation**. Documentation is very critical to us. We would appreciate help in adding multiple languages to our docs. * If you are a developer, feel free to check out the source and submit pull requests. * Dig into [**CONTRIBUTING.MD**](CONTRIBUTING.md), which covers submitting bugs, requesting new features, preparing your code for a pull request, etc. * Please don't forget to **like**, **follow**, and **star our repo**! Join our growing [community]( to keep up to date with the latest GetWidget development. ## Flutter Getwidget Documentation [**Installation Guide**]( ### Social Media Twitter: Facebook: Linkedin: Instagram: ## Copyright-and-license Code and documentation Copyright 2017-2020 the [GETWIDGET Authors]( and [IONICFIREBASEAPP]( Code released under the [MIT License]. Docs released under [Creative Commons]( ## Contributors ### Code Contributors This project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)]. ### Financial Contributors Become a financial contributor and help us sustain our community. [[Contribute]( #### Individuals #### Organizations Support this project with your organization. Your logo will show up here with a link to your website. [[Contribute](","590, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, enhancement, wontfix, question, invalid, help wanted, good first issue, duplicate, documentation, bug, Investigate"
fvm,leoafarias/fvm,4344,"['Dart', 'Shell', 'PowerShell']","['flutter', 'cli', 'dart', 'flutter-sdk-versions', 'flutter-releases']","# fvm []( []( []( []( []( []( FVM streamlines Flutter version management. It allows per project SDK versions, ensuring consistent app builds and easier testing of new releases, thereby boosting the efficiency of your Flutter project tasks. ## Why FVM? - Need for simultaneous use of multiple Flutter SDKs. - SDK testing requires constant [channel]( switching. - Channel switches are slow and need repeated reinstalls. - Difficulty managing the latest successful SDK version used in an app. - Flutter's major updates demand total app migration. - Inconsistencies occur in development environments within teams. For more information, read [FVM documentation]( ## Contributors --- Checkout Flutter Sidekick. [Read more about it here.]( ## Troubleshooting Please view our [FAQ]( ## License This project is licensed under the MIT License; see [LICENSE](LICENSE) file for details.","210, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, bug, enhancement, help wanted, good first issue, docker, pinned, need info, working as intended, wontfix, windows, question, invalid, dx, duplicate"
packages,flutter/packages,4047,"['Dart', 'Java', 'Objective-C']",[],"# Flutter Packages []( []( []( This repo is a companion repo to the main [flutter repo]( It contains the source code for Flutter's first-party packages (i.e., packages developed by the core Flutter team). Check the [`packages`](./packages) directory to see all packages. These packages are also available on [pub]( ## Issues Please file any issues, bugs, or feature requests in the [main flutter repo]( Issues pertaining to this repository are [labeled ""package""]( ## Contributing If you wish to contribute a new package to the Flutter ecosystem, please see the documentation for [developing packages]( You can store your package source code in any GitHub repository (the present repo is only intended for packages developed by the core Flutter team). Once your package is ready you can [publish]( to the [pub repository]( If you wish to contribute a change to any of the existing packages in this repo, please review our [contribution guide]( and send a [pull request]( ## Packages These are the packages hosted in this repository: | Package | Pub | Points | Popularity | Issues | Pull requests | |---------|-----|--------|------------|--------|---------------| | [animations](./packages/animations/) | []( | []( | []( | []( | []( | | [camera](./packages/camera/) | []( | []( | []( | []( | []( | | [cross\_file](./packages/cross_file/) | []( | []( | []( | []( | []( | | [css\_colors](./packages/css_colors/) | []( | []( | []( | []( | []( | | [cupertino\_icons](./third_party/packages/cupertino_icons/) | []( | []( | []( | []( | []( | | [espresso](./packages/espresso/) | []( | []( | []( | []( | []( | | [extension\_google\_sign\_in\_as\_googleapis\_auth](./packages/extension_google_sign_in_as_googleapis_auth/) | []( | []( | []( | []( | []( | | [file\_selector](./packages/file_selector/) | []( | []( | []( | []( | []( | | [flutter\_adaptive\_scaffold](./packages/flutter_adaptive_scaffold/) | []( | []( | []( | []( | []( | | [flutter\_image](./packages/flutter_image/) | []( | []( | []( | []( | []( | | [flutter\_lints](./packages/flutter_lints/) | []( | []( | []( | []( | []( | | [flutter\_markdown](./packages/flutter_markdown/) | []( | []( | []( | []( | []( | | [flutter\_plugin\_android\_lifecycle](./packages/flutter_plugin_android_lifecycle/) | []( | []( | []( | []( | []( | | [flutter\_template\_images](./packages/flutter_template_images/) | []( | []( | []( | []( | []( | | [go\_router](./packages/go_router/) | []( | []( | []( | []( | []( | | [go\_router\_builder](./packages/go_router_builder/) | []( | []( | []( | []( | []( | | [google\_maps\_flutter](./packages/google_maps_flutter/) | []( | []( | []( | []( | []( | | [google\_sign\_in](./packages/google_sign_in/) | []( | []( | []( | []( | []( | | [image\_picker](./packages/image_picker/) | []( | []( | []( | []( | []( | | [interactive\_media\_ads](./packages/interactive_media_ads/) | []( | []( | []( | []( | []( | | [in\_app\_purchase](./packages/in_app_purchase/) | []( | []( | []( | []( | []( | | [ios\_platform\_images](./packages/ios_platform_images/) | []( | []( | []( | []( | []( | | [local\_auth](./packages/local_auth/) | []( | []( | []( | []( | []( | | [metrics\_center](./packages/metrics_center/) | []( | []( | []( | []( | []( | | [multicast\_dns](./packages/multicast_dns/) | []( | []( | []( | []( | []( | | [palette\_generator](./packages/palette_generator/) | []( | []( | []( | []( | []( | | [path\_provider](./packages/path_provider/) | []( | []( | []( | []( | []( | | [pigeon](./packages/pigeon/) | []( | []( | []( | []( | []( | | [platform](./packages/platform/) | []( | []( | []( | []( | []( | | [pointer\_interceptor](./packages/pointer_interceptor/) | []( | []( | []( | []( | []( | | [plugin\_platform\_interface](./packages/plugin_platform_interface/) | []( | []( | []( | []( | []( | | [process](./packages/process/) | []( | []( | []( | []( | []( | | [quick\_actions](./packages/quick_actions/) | []( | []( | []( | []( | []( | | [google\_identity\_services\_web](./packages/google_identity_services_web/) | []( | []( | []( | []( | []( | | [rfw](./packages/rfw/) | []( | []( | []( | []( | []( | | [shared\_preferences](./packages/shared_preferences/) | []( | []( | []( | []( | []( | | [standard\_message\_codec](./packages/standard_message_codec/) | []( | []( | []( | []( | []( | | [two\_dimensional\_scrollables](./packages/two_dimensional_scrollables/) | []( | []( | []( | []( | []( | | [url\_launcher](./packages/url_launcher/) | []( | []( | []( | []( | []( | | [video\_player](./packages/video_player/) | []( | []( | []( | []( | []( | | [web\_benchmarks](./packages/web_benchmarks/) | []( | []( | []( | []( | []( | | [webview\_flutter](./packages/webview_flutter/) | []( | []( | []( | []( | []( | | [xdg\_directories](./packages/xdg_directories/) | []( | []( | []( | []( | []( |","2.6k, Code, Pull requests, Actions, Security, Insights, platform-android, java, dependencies, platform-ios, platform-web, p: google_maps_flutter, p: camera, platform-macos, p: video_player, p: webview_flutter, p: local_auth, p: url_launcher, p: image_picker, p: pigeon, p: in_app_purchase, p: google_sign_in, p: go_router, p: shared_preferences, p: espresso, waiting for stable update, platform-windows, p: rfw, p: path_provider, p: flutter_plugin_android_lifecycle, team, p: quick_actions, p: file_selector, team: infra, platform-linux, p: multicast_dns"
hive,isar/hive,3894,['Dart'],"['flutter', 'dart', 'key-value', 'nosql', 'encryption']","Fast, Enjoyable & Secure NoSQL Database Hive is a lightweight and buzzing-fast key-value database made for Flutter and Dart. ## Features - Bee everywhere: mobile, desktop, browser - Buzzing speed: Faster than a bee on caffeine! - Sweet, powerful, & intuitive API - Queen's Guard: Encryption built right in. - Thinking in swarms: Multi-isolate support. - Everything a bee needs and more! > Bee fact: A single bee can visit 5,000 flowers in a day! ## Buzz into Action Feeling the excitement? Great! Let's help you take your first flight with Hive. #### Add dependencies To kickstart the journey add `hive`, `isar_flutter_libs` and `path_provider` to your `pubspec.yaml`. ```yaml dependencies: hive: ^4.0.0 isar_flutter_libs: ^4.0.0-dev.13 path_provider: ^2.1.0 ``` Pssst! `path_provider` will help you to find the optimal directory for each platform. #### Designate a Home Hive needs a place to call home. Using `path_provider` we can find a valid directory. ```dart void main() async { WidgetsFlutterBinding.ensureInitialized(); final dir = await getApplicationDocumentsDirectory(); Hive.defaultDirectory = dir.path; // ... } ``` #### And... Action! Woohoo! You're all set. Jump in and let your Hive adventure begin! ```dart import 'package:hive/hive.dart'; final box = Hive.box(); box.put('name', 'David'); final name = box.get('name'); print('Name: $name'); ``` > Bee fact: Honeybees can fly at a speed of up to 30 kilometers per hour! # Hive Handbook In Hive, data is neatly organized into containers known as boxes. Think of boxes as tables you'd find in SQL, but far more flexible they don't stick to a set structure and can contain a variety of data. Boxes can be encrypted to store sensitive data. ## Table of Contents Want to jump to a specific section? Here's a handy table of contents: - [Opening Boxes](#-opening-boxes) - [Closing Boxes](#-bidding-adieu-closing-boxes) - [Inserting](#-filling-the-honeycomb-inserting-data) - [Reading](#-extracting-honey-i-mean-data) - [Deleting](#-deleting-data) - [Using Boxes like Lists](#-using-boxes-like-lists) - [Type safety](#-type-safety) - [Non-primitive Objects](#-bee-yond-the-basics-non-primitive-objects) - [Transactions](#-transactions) - [Isolates](#-the-isolate-dance) - [FAQ](#-buzzworthy-questions) > Bee fact: Bees have five eyes three simple eyes on top of the head, and two compound eyes, with numerous hexagonal facets. ### Opening Boxes Your journey with Hive begins with opening your first box. Trust me, it's unbee-lievably easy: ```dart final box = Hive.box(name: 'myBox'); ``` When you call `Hive.box(name: 'myBox')` for the first time with a given name, Hive will create a new box for you. If you call it again with the same name, Hive will return the already existing box. You can also use `Hive.box()` without providing a name. In this case, Hive will return the default box. There are optional parameters you can pass to `Hive.box()`: | Parameter | Description | | --------------- | ------------------------------------------------------------------------- | | `name` | Label your box with a distinct name | | `directory` | Select a home for your box. If omitted, Hive uses the `defaultDirectory`. | | `encryptionKey` | Hand over this key, and Hive will encrypt your box. Keep it safe! | | `maxSizeMiB` | The maximum size of the box in MiB. Go for a modest number. | > Bee fact: Beeswax, which is secreted from the abdomen of worker bees, is used to construct the honeycomb. ### Bidding Adieu: Closing Boxes It's not advised to close boxes that might be accessed again. This prevents unnecessary overhead of reopening the box and ensures smooth data retrieval. To close a box just call `box.close()`. Wipe the box from the face of the earth with `box.deleteFromDisk()`. > Bee fact: When a bee finds a good source of nectar, it flies back to the hive and shows its friends where the nectar source is by doing a dance. ### Filling the Honeycomb: Inserting Data Once we have a box, it's time to fill it with sweet data! At its core, a box is just a key-value store. String keys are mapped to arbitrary primitive values. You can think of a box as a persisted `Map`. ```dart final box = Hive.box(); box.put('danceMoves', 'Waggle Dance'); box.put('wingSpeed', 200); ``` Updating values? If a particular key already exists, Hive simply updates its corresponding value. And complex types like lists and maps? They're in too! ```dart box.put('friends', ['Buzzy', 'Stinger', 'Honey']); box.put('memories', {'firstFlight': 'Sunny Day', 'bestNectar': 'Rose'}); ``` Instead of `.put()` you prefer the syntax of maps? Hive gets you: ```dart box['danceMoves'] = 'Round Dance'; box['wingSpeed'] = 220; ``` Got a bucket of honey facts? Drop them all at once with `box.putAll()`: ```dart box.putAll({'favoriteFlower': 'Lavender', 'wingSpeed': 210}); ``` > Bee fact: A single bee colony can produce anywhere from 30 to 100 pounds of honey in a year, depending on the availability of nectar sources. ### Extracting Honey... I mean, Data! Need a snippet of info from your Hive? No need to don the beekeeper suit; just scoop it out using `box.get()` or `box.getAll()`. If a key doesn't exist, `box.get()` simply return a `null`. But fret not; you can tell it to have a backup plan: ```dart final box = Hive.box(name: 'beeees'); final fav = box.get('favoriteFlower'); final moves = box.get('danceMoves', defaultValue: 'waggle'); ``` Oh, and if you're feeling fancy, use the `[]` operator for a more stylish approach: ```dart final fav = box['favoriteFlower']; final moves = box['danceMoves'] ?? 'waggle'; ``` > Bee fact: Worker bees are the only bees most people ever see flying around outside the hive. They're female, and their roles are to forage for food, build and protect the hive, and more. ### Deleting Data Time for some spring cleaning in the hive! To remove a single entry from your box, use `box.delete()`: ```dart final deleted = box.delete('lavenderHoney'); print('Honey eaten: $deleted'); // Honey eaten: true ``` Perhaps it's time for a complete reset, making space for a fresh batch of honey. If you're looking to remove all key-value pairs from a box, use `box.clear()`: ```dart box.clear(); ``` > Bee fact: Bees have been around for more than 30 million years! Their long history predates the existence of humans and even dinosaurs. ### Using Boxes like Lists In the bee world, honeycombs aren't just random compartments; they're methodically organized. Similarly, while we've been viewing Hive boxes as maps so far, they can be used just like lists: ```dart final box = Hive.box(); box.add('Rose'); box.add('Tulip'); print(box.getAt(0)); // Rose print(box.getAt(1)); // Tulip ``` But remember, bees can't retrieve honey from a comb that's empty or doesn't exist. Likewise, index-based operations will throw an error if you try an index out of bounds: ```dart final box = Hive.box(); box.add('Daisy'); print(box.getAt(1)); // Error! This will make the bees buzz in confusion ``` Even if we insert a key-value pair we can still access the values by index. ```dart final box = Hive.box(); box.add('Lily'); box.put('key', 'Orchid'); print(box.getAt(0)); // Lily print(box.getAt(1)); // Orchid ``` Of course, we can also use the `[]` operator in combination with indexes : ```dart final box = Hive.box(); box.add('Marigold'); print(box[0]); // Marigold box[0] = 'Daffodil'; box[1] = 'Bluebell'; // Error! This will get the bees in a whirl ``` > Bee fact: To produce one pound of honey, a hive's bees must visit 2 million flowers and fly over 55,000 miles. ### Type safety Safety is the bee's priority! To keep your data sweet and pure boxes have an optional generic type parameter. It allows you to store only values of a specific type in a box: ```dart final box = Hive.box(name: 'BeeTreasures'); box.put('DaisyDance', 'SweetNectarShake'); box.put('RoseRumba', 'GoldenPollenParty'); box.put('TulipTango', 777); // Error - You can't fool the bees! ``` Make sure to use the same type whenever you get the box. Otherwise, you'll get an error: ```dart Hive.box(name: 'BeeTreasures'); // Error - We already have a String box! ``` > Bee fact: Bees have two stomachs. One is for eating, and the other is for storing nectar collected from flowers or water so they can carry it back to their hive. Talk about a sweet backpack! ### Bee-yond the Basics: Non-primitive Objects Hive goes beyond storing just basic data types! Along with primitives, lists, and maps, Hive can store any Dart object of your liking. The only buzz you need to know? Your object should come equipped with a `.fromJson()` and `.toJson()` method: ```dart class Bee { Bee({required this.name, required this.role}); factory Bee.fromJson(Map json) => Bee( name: json['name'] as String, role: json['role'] as String, ); final String name; final String role; Map toJson() => { 'name': name, 'role': role, }; } ``` Before our bee-friends can buzz around in Hive, you need to do the beekeeper's job and register the `Bee` class: ```dart Hive.registerAdapter('Bee', Bee.fromJson); ``` Now, you're all set to let your bees fly: ```dart final box = Hive.box(); final bumble = Bee(name: 'Bumble', role: 'Worker'); box.put('BumbleID', bumble); print(box.get('BumbleID')); // Bumble - Worker ``` > Bee fact: Bees are responsible for pollinating about one-third of the world's food crops. ### Transactions Transactions are an efficient way to update multiple values at once. They are also useful if you want to make sure that a Box is not changed by other code while you are working with it. ```dart final box = Hive.box(); box.write(() { box.store('nectar1', 'GoldenNectar'); box.store('nectar2', 'WildflowerBrew'); box.store('nectar3', 'CloverDew'); }); box.read(() { box.get('nectar1'); // GoldenNectar }); ``` Changes made in a transaction are always atomic. Either all changes are applied or none of them. So if an error occurs during a transaction, the box will not be changed. ```dart final box = Hive.box(); box.put('honeyLevel', 5); box.write(() { box.put('honeyLevel', 6); throw Exception('Oh no!!!'); }); print(box.get('honeyLevel')); // 5 ``` > Bee fact: Bees can recognize human faces, and they can even be trained to associate a picture of a face with sweet treats! ### The Isolate Dance Just like a beehive where multiple bees work simultaneously, you can buzz into Hive from various Isolates at the same time. This nifty trick is great when you wish to keep those database activities separate from your UI thread. Hive comes with a sweet `Hive.compute()` method that runs a function in a different isolate. The best part? It also does the honey-making job of setting up and tidying resources for you. ```dart // Opening the bee's box final box = Hive.box(); // Storing some sweet nectar box.put('nectarType', 'wildflower'); await Hive.compute(() { // Accessing the same box from another worker bee final box = Hive.box(); print(box.get('nectarType')); // wildflower // Updating the nectar's quality box.put('nectarType', 'lavender'); }); // Tasting the updated honey flavor print(honeycomb.get('nectarType')); // lavender ``` Just remember, while the bees dance in harmony, ensure your Isolates do too! > Bee fact: Bees have two pairs of wings, and they beat 11,400 times per minute. ### Buzzworthy Questions #### To bee or not to bee: Hive or Isar? > It's not always black and yellow! Both Hive and Isar have their sweet spots. Hive is a lightweight wrapper around Isar so if you are looking for a simple key-value store, Hive might be enough. Isar is the way to go if you need queries, relations, and more advanced features. #### Will using Hive make my app as fast as a bee? > While we can't promise your app will gain wings, Hive sure will give it the speed it deserves. Hive is very resource efficient and optimized for mobile devices. Flutter like a butterfly, sting like a bee! #### Where in the beehive does Hive hide my honey... I mean, data? > Remember the `defaultDirectory` we set at the beginning? That's where Hive stores your data in a file named `yourBoxName.isar` or `yourBoxName.sqlite`. #### I've got some bee-autiful images! Can I store them directly in Hive? > While you might be tempted to put those pics right into Hive, it's best to store your images and other binary data as files outside Hive. You can then store the file path in Hive. Think of it like leaving honey out in the open; it's better to keep it neatly stored in the appropriate place. #### Yikes! What if my app meets an untimely demise (gets killed)? What becomes of my Hive? > No need for a bee-mergency! If your app buzzes off unexpectedly, Hive ensures that your data remains safe and sound. Transactions are atomic, so either all changes are applied or none of them. If an error occurs during a transaction, the box will not be changed. #### How does Hive keep our data safe from sticky fingers? > We've got the queen's guard on duty! If you encrypt your box Hive uses 256-bit AES in CBC mode. Every database page is safeguarded separately, ensuring your sweet stuff remains secure and only accessible to those with the right key. Buzz-worthy protection, right? #### When should I rally the troops and use transactions? > Just like a hive making big decisions together, you'll want to use transactions when you have several operations that should be executed together. If one fails, they all fail. It ensures your data stays consistent, safe, and buzzing in harmony! #### What if I'm allergic to bees? > No worries! Hive is 100% sting-free, although we're pretty sure you'll get a buzz out of its performance. #### Hive operations are synchronous. Doesn't that make the bee waltz a bit slow? > Hive is incredibly fast and efficient. It's built on top of Isar, a high-performance database engine. If you want to keep database operations away from your UI isolate, you can use `compute()` or `Isolate.run()` to run them in a separate isolate. #### How many boxes should a wise beekeeper have? > While the sky's the limit in the world of bees, in Hive, every box becomes a separate file. So, even if you're buzzing with excitement, it's wise not to overdo it. ### License ``` Copyright 2023 Simon Choi Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. ```","387, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, question, problem, enhancement, needs-author-feedback, documentation, help wanted, bug, wontfix, wip, more-information-needed, duplicate"
flutter-folio,gskinnerTeam/flutter-folio,3807,"['Dart', 'C++', 'CMake']",[],"# Flutter Folio A demo app showcasing how Flutter can deliver a great multi-platform experience, targeting iOS, Android, MacOS, Windows, Linux, and web. Built by [gskinner]( in partnership with Google, Flutter Folio purposefully considers user expectations, input devices and idioms for each platform, ensuring it feels at home on every device. In addition to forking and reviewing the [MIT licensed](LICENSE.md) code available here, you can check out more information on the [Flutter Folio Showcase Website]( ### About gskinner We exist to build innovative digital experiences for smart clients, and we love how easy Flutter makes that experience. Don't hesitate to [stop by our site]( to learn more about what we do. We'd love to hear from you! ### Demo Builds To preview the app you can download from the app store on your device by visiting: ### Installation If you're new to Flutter the first thing you'll need is to follow the [setup instructions]( Once Flutter is setup, you can use the latest `stable` channel: * Run `flutter channel stable` * Run `flutter upgrade` Once you're on `dev` and desktop is enabled, you're ready to run the app: * `flutter run -d windows` * `flutter run -d macos` * `flutter run -d linux` * `flutter run -d android` * `flutter run -d ios` * `flutter run -d web` If you re-start your IDE, you should also see a new launch option for your current desktop platform. ### Client Keys This repo includes a set of Keys for Cloudinary and Firebase that are on the free pricing plans. Depending on traffic, these may reach their limit. If that happens, you will need to provide your own keys in order to run the app locally, those can be found in `AppKeys.dart`. These limits should refresh each month, so your mileage will vary here. ### License This application is released under the [MIT license](LICENSE.md). You can use the code for any purpose, including commercial projects. [](","782, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, flutter sdk issue, p2, wontfix, p1, linked to external issue, question, p3, help wanted, good first issue, enhancement, documentation, bug"
wsa_pacman,alesimula/wsa_pacman,3805,"['Dart', 'C++', 'CMake']",[],"# wsa_pacman A GUI package manager and package installer for Windows Subsystem for Android (WSA). Currently provides a double-click GUI installer for .apk and .xapk files that shows app information (package, icon, version and permissions), allows normal installations as well as upgrades and downgrades. The app additionally provides a button to open Android settings and one to open the ""Manage Applications"" Android settings page, from which you can uninstall or disable applications and grant or revoke permissions ## Settings - Autostart WSA - on/off - Android port - Default: 58526 - Language - [All options](./locale/) - Theme mode - System - Dark - Light - Window transparency (mica) - Full - Partial - Disabled - Adaptive icon shape - Squircle - Circle - Rounded square - Disabled ## FAQ **Q:** WSA PacMan is always showing the Offline status, why is that? **A:** First things first make sure WSA is installed (duh); Open the 'Windows Subsystem for Android Settings' app, in the Developer tab and make sure the 'Developer mode' switch is enabled; inside manage developer settings, make sure the 'USB debugging' option is enabled. Should all of the above fail, [try following this procedure]( make sure to check the 'always allow' option. ## **Q:** Can I use WSA PacMan on older versions of Windows (eg. Windows 10)? **A:** WSA PacMan depends on Windows Subsystem for Linux, which is only ***officially*** supported on Windows 11. However, you may be able to install WSA on Windows 10 [using this project]( by JimDude7404 and following the step-by-step guide on the GitHub page. ## **Q:** Can i install the Play Store? **A:** The play store is not _officially_ supported on WSA, and at the moment it is only possible to install it using an unofficial WSA build. I recommend installing the [Aurora Store]( instead, which is an unofficial Play Store client; but if you really want the Play Store and other Google apps, [check out this project]( ## More screenshots","823, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
dart-sass,sass/dart-sass,3802,"['Dart', 'HTML', 'Shell']","['sass', 'css-preprocessor', 'dart', 'dart-sass']","A [Dart][dart] implementation of [Sass][sass]. **Sass makes CSS fun**. [dart]: [sass]: * [Using Dart Sass](#using-dart-sass) * [From Chocolatey or Scoop (Windows)](#from-chocolatey-or-scoop-windows) * [From Homebrew (macOS)](#from-homebrew-macos-or-linux) * [Standalone](#standalone) * [From npm](#from-npm) * [Dart Sass in the Browser](#dart-sass-in-the-browser) * [Legacy JavaScript API](#legacy-javascript-api) * [Using Sass with Jest](#using-sass-with-jest) * [From Pub](#from-pub) * [`sass_api` Package](#sass_api-package) * [From Source](#from-source) * [In Docker](#in-docker) * [Why Dart?](#why-dart) * [Compatibility Policy](#compatibility-policy) * [Browser Compatibility](#browser-compatibility) * [Node.js Compatibility](#nodejs-compatibility) * [Invalid CSS](#invalid-css) * [Embedded Dart Sass](#embedded-dart-sass) * [Usage](#usage) * [Behavioral Differences from Ruby Sass](#behavioral-differences-from-ruby-sass) ## Using Dart Sass There are a few different ways to install and run Dart Sass, depending on your environment and your needs. ### From Chocolatey or Scoop (Windows) If you use [the Chocolatey package manager]( or [the Scoop package manager]( for Windows, you can install Dart Sass by running ```cmd choco install sass ``` or ```cmd scoop install sass ``` That'll give you a `sass` executable on your command line that will run Dart Sass. See [the CLI docs][cli] for details. [cli]: ### From Homebrew (macOS or Linux) If you use [the Homebrew package manager]( you can install Dart Sass by running ```sh brew install sass/sass/sass ``` That'll give you a `sass` executable on your command line that will run Dart Sass. ### Standalone You can download the standalone Dart Sass archive for your operating systemcontaining the Dart VM and the snapshot of the executablefrom [the GitHub release page][]. Extract it, [add the directory to your path][], restart your terminal, and the `sass` executable is ready to run! [the GitHub release page]: [add the directory to your path]: ### From npm Dart Sass is available, compiled to JavaScript, [as an npm package][npm]. You can install it globally using `npm install -g sass` which will provide access to the `sass` executable. You can also add it to your project using `npm install --save-dev sass`. This provides the executable as well as a library: [npm]: ```js const sass = require('sass'); const result = sass.compile(scssFilename); // OR // Note that `compileAsync()` is substantially slower than `compile()`. const result = await sass.compileAsync(scssFilename); ``` See [the Sass website][js api] for full API documentation. [js api]: #### Dart Sass in the Browser The `sass` npm package can also be run directly in the browser. It's compatible with all major web bundlers as long as you disable renaming (such as [`--keep-names`] in esbuild). You can also import it directly from a browser as an ECMAScript Module without any bundling (assuming `node_modules` is served as well): [`--keep-names`]: ```html ``` Or from a CDN: ```html ``` Or even bundled with all its dependencies: ```html ``` Since the browser doesn't have access to the filesystem, the [`compile()`] and `compileAsync()` functions aren't available for it. If you want to load other files, you'll need to pass a [custom importer] to [`compileString()`] or [`compileStringAsync()`]. The [legacy API] is also not supported in the browser. [`compile()`]: [`compileAsync()`]: [custom importer]: [`compileString()`]: [`compileStringAsync()`]: [legacy API]: #legacy-javascript-api #### Legacy JavaScript API Dart Sass also supports an older JavaScript API that's fully compatible with [Node Sass] (with a few exceptions listed below), with support for both the [`render()`] and [`renderSync()`] functions. This API is considered deprecated and will be removed in Dart Sass 2.0.0, so it should be avoided in new projects. [Node Sass]: [`render()`]: [`renderSync()`]: Sass's support for the legacy JavaScript API has the following limitations: * Only the `""expanded""` and `""compressed""` values of [`outputStyle`] are supported. * Dart Sass doesn't support the [`precision`] option. Dart Sass defaults to a sufficiently high precision for all existing browsers, and making this customizable would make the code substantially less efficient. * Dart Sass doesn't support the [`sourceComments`] option. Source maps are the recommended way of locating the origin of generated selectors. [`outputStyle`]: [`precision`]: [`sourceComments`]: #### Using Sass with Jest If you're using [Jest] to run your tests, be aware that it has a [longstanding bug] where its default test environment breaks JavaScript's built-in [`instanceof` operator]. Dart Sass's JS package uses `instanceof` fairly heavily, so in order to avoid breaking Sass you'll need to install [`jest-environment-node-single-context`] and add `testEnvironment: 'jest-environment-node-single-context'` to your Jest config. [Jest]: [longstanding bug]: [`instanceof` operator]: [`jest-environment-node-single-context`]: ### From Pub If you're a Dart user, you can install Dart Sass globally using `pub global activate sass`, which will provide a `sass` executable. You can also add it to your pubspec and use it as a library. We strongly recommend importing it with the prefix `sass`: ```dart import 'package:sass/sass.dart' as sass; void main(List args) { print(sass.compile(args.first)); } ``` See [the Dart API docs][api] for details. [api]: #### `sass_api` Package Dart users also have access to more in-depth APIs via the [`sass_api` package]. This provides access to the Sass AST and APIs for resolving Sass loads without running a full compilation. It's separated out into its own package so that it can increase its version number independently of the main `sass` package. [`sass_api` package]: ### From Source Assuming you've already checked out this repository: 1. [Install Dart]( If you download an archive manually rather than using an installer, make sure the SDK's `bin` directory is on your `PATH`. 2. [Install Buf]. This is used to build the protocol buffers for the [embedded compiler]. 3. In this repository, run `dart pub get`. This will install Dart Sass's dependencies. 4. Run `dart run grinder protobuf`. This will download and build the embedded protocol definition. 5. Run `dart bin/sass.dart path/to/file.scss`. [Install Buf]: [embedded compiler]: #embedded-dart-sass That's it! ### In Docker You can install and run Dart Sass within Docker using the following Dockerfile commands: ```Dockerfile # Dart stage FROM bufbuild/buf AS buf FROM dart:stable AS dart # Add your scss files COPY --from=another_stage /app /app # Include Protocol Buffer binary COPY --from=buf /usr/local/bin/buf /usr/local/bin/ WORKDIR /dart-sass RUN git clone . && \ dart pub get && \ dart run grinder protobuf # This is where you run sass.dart on your scss file(s) RUN dart ./bin/sass.dart /app/sass/example.scss /app/public/css/example.css ``` ## Why Dart? Dart Sass has replaced Ruby Sass as the canonical implementation of the Sass language. We chose Dart because it presented a number of advantages: * It's fast. The Dart VM is highly optimized, and getting faster all the time (for the latest performance numbers, see [`perf.md`][perf]). It's much faster than Ruby, and close to par with C++. * It's portable. The Dart VM has no external dependencies and can compile applications into standalone snapshot files, so we can distribute Dart Sass as only three files (the VM, the snapshot, and a wrapper script). Dart can also be compiled to JavaScript, which makes it easy to distribute Sass through npm, which the majority of our users use already. * It's easy to write. Dart is a higher-level language than C++, which means it doesn't require lots of hassle with memory management and build systems. It's also statically typed, which makes it easier to confidently make large refactors than with Ruby. * It's friendlier to contributors. Dart is substantially easier to learn than Ruby, and many Sass users in Google in particular are already familiar with it. More contributors translates to faster, more consistent development. [perf]: ## Compatibility Policy For the most part, Dart Sass follows [semantic versioning][]. We consider all of the following to be part of the versioned API: [semantic versioning]: * The Sass language semantics implemented by Dart Sass. * The Dart API. * The JavaScript API. * The command-line interface. Because Dart Sass has a single version that's shared across the Dart, JavaScript, and standalone distributions, this may mean that we increment the major version number when there are in fact no breaking changes for one or more distributions. However, we will attempt to limit the number of breaking changes we make and group them in as few releases as possible to minimize churn. We strongly encourage users to use [the changelog][] for a full understanding of all the changes in each release. [the changelog]: There is one exception where breaking changes may be made outside of a major version revision. It is occasionally the case that CSS adds a feature that's incompatible with existing Sass syntax in some way. Because Sass is committed to full CSS compatibility, we occasionally need to break compatibility with old Sass code in order to remain compatible with CSS. In these cases, we will first release a version of Sass that emits deprecation warnings for any stylesheets whose behavior will change. Then, at least three months after the release of a version with these deprecation warnings, we will release a minor version with the breaking change to the Sass language semantics. ### Browser Compatibility In general, we consider any change to Dart Sass's CSS output that would cause that CSS to stop working in a real browser to be a breaking change. However, there are some cases where such a change would have substantial benefits and would only negatively affect a small minority of rarely-used browsers. We don't want to have to block such a change on a major version release. As such, if a change would break compatibility with less than 2% of the global market share of browser according to [StatCounter GlobalStats][], we may release a minor version of Dart Sass with that change. [StatCounter GlobalStats]: ### Node.js Compatibility We consider dropping support for a given version of Node.js to be a breaking change *as long as* that version is still supported by Node.js. This means that releases listed as Current, Active LTS, or Maintenance LTS according to [the Node.js release page][]. Once a Node.js version is out of LTS, Dart Sass considers itself free to break support if necessary. [the Node.js release page]: ### Invalid CSS Changes to the behavior of Sass stylesheets that produce invalid CSS output are _not_ considered breaking changes. Such changes are almost always necessary when adding support for new CSS features, and delaying all such features until a new major version would be unduly burdensome for most users. For example, when Sass began parsing `calc()` expressions, the invalid expression `calc(1 +)` became a Sass error where before it was passed through as-is. This was not considered a breaking change, because `calc(1 +)` was never valid CSS to begin with. ## Embedded Dart Sass Dart Sass includes an implementation of the compiler side of the [Embedded Sass protocol]. It's designed to be embedded in a host language, which then exposes an API for users to invoke Sass and define custom functions and importers. [Embedded Sass protocol]: ### Usage * `sass --embedded` starts the embedded compiler and listens on stdin. * `sass --embedded --version` prints `versionResponse` with `id = 0` in JSON and exits. The `--embedded` command-line flag is not available when you install Dart Sass as an [npm package]. No other command-line flags are supported with `--embedded`. [npm package]: #from-npm ## Behavioral Differences from Ruby Sass There are a few intentional behavioral differences between Dart Sass and Ruby Sass. These are generally places where Ruby Sass has an undesired behavior, and it's substantially easier to implement the correct behavior than it would be to implement compatible behavior. These should all have tracking bugs against Ruby Sass to update the reference behavior. 1. `@extend` only accepts simple selectors, as does the second argument of `selector-extend()`. See [issue 1599][]. 2. Subject selectors are not supported. See [issue 1126][]. 3. Pseudo selector arguments are parsed as ``s rather than having a more limited custom parsing. See [issue 2120][]. 4. The numeric precision is set to 10. See [issue 1122][]. 5. The indented syntax parser is more flexible: it doesn't require consistent indentation across the whole document. See [issue 2176][]. 6. Colors do not support channel-by-channel arithmetic. See [issue 2144][]. 7. Unitless numbers aren't `==` to unit numbers with the same value. In addition, map keys follow the same logic as `==`-equality. See [issue 1496][]. 8. `rgba()` and `hsla()` alpha values with percentage units are interpreted as percentages. Other units are forbidden. See [issue 1525][]. 9. Too many variable arguments passed to a function is an error. See [issue 1408][]. 10. Allow `@extend` to reach outside a media query if there's an identical `@extend` defined outside that query. This isn't tracked explicitly, because it'll be irrelevant when [issue 1050][] is fixed. 11. Some selector pseudos containing placeholder selectors will be compiled where they wouldn't be in Ruby Sass. This better matches the semantics of the selectors in question, and is more efficient. See [issue 2228][]. 12. The old-style `:property value` syntax is not supported in the indented syntax. See [issue 2245][]. 13. The reference combinator is not supported. See [issue 303][]. 14. Universal selector unification is symmetrical. See [issue 2247][]. 15. `@extend` doesn't produce an error if it matches but fails to unify. See [issue 2250][]. 16. Dart Sass currently only supports UTF-8 documents. We'd like to support more, but Dart currently doesn't support them. See [dart-lang/sdk#11744][], for example. [issue 1599]: [issue 1126]: [issue 2120]: [issue 1122]: [issue 2176]: [issue 2144]: [issue 1496]: [issue 1525]: [issue 1408]: [issue 1050]: [issue 2228]: [issue 2245]: [issue 303]: [issue 2247]: [issue 2250]: [dart-lang/sdk#11744]: Disclaimer: this is not an official Google product.","347, Code, Issues, Pull requests, Actions, Projects, Security, Insights, enhancement, needs info, blocked, bug, help wanted, JavaScript, cosmetic, CLI, low priority, infrastructure, pending deprecation, question, embedded, Dart, AST API, wontfix, invalid, github_actions, duplicate, documentation, dependencies"
flutter_easy_refresh,xuelongqy/flutter_easy_refresh,3801,"['Dart', 'C++', 'CMake']","['refresh', 'load-more', 'easy-refresh', 'flutter']","# flutter_easy_refresh [](/LICENSE) []( []( ## English | []( Just like the name, EasyRefresh can easily implement pull-down refresh and pull-up load on Flutter applications. It supports almost all Flutter Scrollable widgets. Its function is very similar to Android's SmartRefreshLayout, and it also absorbs the advantages of many third-party libraries. EasyRefresh integrates various styles of Header and Footer, but it has no limitations, you can easily customize it. Using Flutter's powerful animations, even just a simple control can be done. The goal of EasyRefresh is to create a powerful, stable and mature pull-to-refresh framework for Flutter. ### [Online demo]( ### [APK download]( ### [API reference]( ## Features: - Supports all scrollable widgets - Scrolling physics scope, exactly matching scrollable widgets - Integrate multiple cool Header and Footer - Support custom styles to achieve various animation effects - Support pull-down refresh, pull-up load (Can be triggered and finished with a controller) - Support indicator position setting, combined with listeners can also be placed in any position - Support refresh when the page starts, and customize the view - Support safe area, no more occlusion - Customize scroll parameters to allow lists to have different scrolling feedback and inertia ## Sample #### 1. Default constructor - In the child scope, all scrolling components will share one physics. If there is scroll nesting, use EasyRefresh.builder or set the scope with ScrollConfiguration ```dart EasyRefresh( onRefresh: () async { .... }, onLoad: () async { .... }, child: ListView(), ); ``` #### 2. Builder constructor ```dart EasyRefresh.builder( onRefresh: () async { .... return IndicatorResult.success; }, onLoad: () async { .... }, childBuilder: (context, physics) { return ListView( physics: physics, ); }, ); ``` #### 3. Indicator locate ```dart EasyRefresh( header: Header( position: IndicatorPosition.locator, ), footer: Footer( position: IndicatorPosition.locator, ), onRefresh: () async { .... }, onLoad: () async { .... return IndicatorResult.noMore; }, child: CustomScrollView( slivers: [ SliverAppBar(), const HeaderLocator.sliver(), ... const FooterLocator.sliver(), ], ), ); ``` #### 4. Use controller ```dart EasyRefreshController _controller = EasyRefreshController( controlFinishRefresh: true, controlFinishLoad: true, ); .... EasyRefresh( controller: _controller, onRefresh: () async { .... _controller.finishRefresh(); _controller.resetFooter(); }, onLoad: () async { .... _controller.finishLoad(IndicatorResult.noMore); }, .... ); .... _controller.callRefresh(); _controller.callLoad(); ``` #### 5. Specify Header and Footer ```dart EasyRefresh( header: MaterialHeader(), footer: MaterialFooter(), child: ListView(), .... ); // Global EasyRefresh.defaultHeaderBuilder = () => ClassicHeader(); EasyRefresh.defaultFooterBuilder = () => ClassicFooter(); ``` #### 6. NestedScrollView ```dart EasyRefresh.builder( header: MaterialHeader( clamping: true, ), onRefresh: () async { .... }, onLoad: () async { .... }, childBuilder: (context, physics) { return NestedScrollView( physics: physics, body: ListView( physics: physics, ); ); }, ); // or EasyRefresh.builder( header: MaterialHeader( clamping: true, position: IndicatorPosition.locator, ), onRefresh: () async { .... }, onLoad: () async { .... }, childBuilder: (context, physics) { return NestedScrollView( physics: physics, headerSliverBuilder: (context, innerBoxIsScrolled) { return [ const HeaderLocator.sliver(clearExtent: false), .... ]; }, body: ListView( physics: physics, ); ); }, ); ``` ## Feel free to contribute One's maintenance is lonely. If you have good suggestions and changes, feel free to contribute your code. If you have really cool styles, It's even cooler to share with everyone. #### Thanks to all the people who already contributed! ## QQ Group - 554981921 #### Into the group of instructions The group is not only solve the problem of EasyRefresh, any Flutter related issues can be discussed. Just as its name, craigslist, as long as there is time, group of Lord will help you solve problems together. ## Thanks [SmartRefreshLayout]( [flutter_spinkit]( ## Licenses ``` MIT License Copyright (c) 2018 xuelongqy Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ```","621, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, bug"
dioxus,DioxusLabs/dioxus,18751,"['Rust', 'R', 'TypeScript']","['rust', 'virtualdom', 'react', 'ui', 'wasm']","Website | Examples | Guide | | PT-BR | | Trke Build for web, desktop, and mobile, and more with a single codebase. Zero-config setup, integrated hotreloading, and signals-based state management. Add backend functionality with Server Functions and bundle with our CLI. ```rust fn app() -> Element { let mut count = use_signal(|| 0); rsx! { h1 { ""High-Five counter: {count}"" } button { onclick: move |_| count += 1, ""Up high!"" } button { onclick: move |_| count -= 1, ""Down low!"" } } } ``` ## Unique features: - Cross-platform apps in three lines of code (web, desktop, mobile, server, and more) - [Ergonomic state management]( combines the best of React, Solid, and Svelte - Extremely performant, powered by Rust's fastest wasm-framework [sledgehammer]( - Integrated bundler for deploying to the web, macOS, Linux, and Windows - And more! Read the [take a tour of Dioxus]( ## Instant hot-reloading With one command, `dx serve` and your app is running. Edit your markup and styles and see the results in real time. Rust code hotreloading is not yet 1st class, but possible with [hot-lib-reloader]( ## Bundler for deploying to the web and desktop Simply run `dx bundle` and your app will be built and bundled with maximization optimizations. On the web, take advantage of [`.avif` generation, `.wasm` compression, minification]( and more. Build webapps weighing [less than 50kb]( and desktop/mobile apps less than 15mb. ## Fantastic documentation We've put a ton of effort into building clean, readable, and comprehensive documentation. All html elements and listeners are documented with MDN docs, and our docsite runs continuous integration with Dioxus itself to ensure that the docs are always up to date. Check out the [Dioxus website]( for guides, references, recipes, and more. Fun fact: we use the Dioxus website as a testbed for new diouxs features - [check it out!]( ## Emphasis on developer experience Dioxus prioritizes developer experience, and we've put a ton of effort into end-to-end tooling. We've built a [VSCode extension]( that autoformats your RSX code, converts HTML to RSX, and more. We've also built a very powerful [CLI]( that supports creating new apps, serving them, and cross-platform bundling, with deployment on the roadmap. ## Community Dioxus is a community-driven project, with a very active [Discord]( and [GitHub]( community. We're always looking for help, and we're happy to answer questions and help you get started. [Our SDK]( is community-run and we even have a [GitHub organization]( for the best Dioxus crates that receive free upgrades and support. ## Full-time core team Dioxus has grown from a side project to a small team of fulltime engineers. Thanks to the generous support of FutureWei, Satellite.im, the GitHub Accelerator program, we're able to work on Dioxus full-time. Our long term goal is for Dioxus to become self-sustaining by providing paid high-quality enterprise tools. If your company is interested in adopting Dioxus and would like to work with us, please reach out! ## Supported Platforms Web Tier 1 Support Render directly to the DOM using WebAssembly Pre-render with SSR and rehydrate on the client Simple ""hello world"" at about 50kb, comparable to React Built-in dev server and hot reloading for quick iteration Fullstack Tier 1 Support Suspense, hydration, and server-side rendering Quickly drop in backend functionality with server functions Extractors, middleware, and routing integrations Compatible with desktop and mobile! Desktop Tier 1 Support Render using Webview or - experimentally - with WGPU or Freya (skia) Zero-config setup. Simply `cargo run` or `dx serve` to build your app Full support for native system access without IPC Supports macOS, Linux, and Windows. Portable <3mb binaries Liveview Tier 1 Support Render apps - or just a single component - entirely on the server Integrations with popular Rust frameworks like Axum and Warp Extremely low-latency and ability to support 10,000+ simultaneous apps Mobile Tier 2 Support Render using Webview or - experimentally - with WGPU or Skia Support for iOS and Android Currently quite experimental, with lots of improvements coming throughout 2024 Terminal Tier 2 Support Render apps directly into your terminal, similar to ink.js Powered by the familiar flexbox and CSS model of the browser Built-in widgets like text input, buttons, and focus system ## Running the examples The examples in the top level of this repository can be run with `cargo run --example `. However, we encourage you to download the dioxus-cli and run the examples with `dx serve` since many examples also support web. When running for web, you either need to modify the Cargo.toml to disable the default desktop feature, or use ## Dioxus vs other frameworks We love all frameworks and enjoy watching innovation in the Rust ecosystem. In fact, many of our projects are shared with other frameworks. For example, our flex-box library [Taffy]( is used by [Bevy]( [Zed]( [Lapce]( [Iced]( and many more. Dioxus places an emphasis on a few key points that make it different from other frameworks: - **React-like**: we rely on concepts like components, props, and hooks to build UIs, with our state management being closer to Svelte than to SolidJS. - **HTML and CSS**: we lean completely into HTML and CSS, quirks and all. - **Renderer-agnostic**: you can swap out the renderer for any platform you want thanks to [our fast VirtualDOM]( - **Collaborative**: whenever possible, we spin out crates like [Taffy]( [magnanis]( [include_mdbook]( and [blitz]( so the ecosystem can grow together. ### Dioxus vs Tauri Tauri is a framework for building desktop (and soon, mobile) apps where your frontend is written in a web-based framework like React, Vue, Svelte, etc. Whenever you need to do native work, you can write Rust functions and call them from your frontend. - **Natively Rust**: Tauri's architecture limits your UI to either JavaScript or WebAssembly. With Dioxus, your Rust code is running natively on the user's machine, letting you do things like spawning threads, accessing the filesystem, without any IPC bridge. This drastically simplifies your app's architecture and makes it easier to build. You can build a Tauri app with Dioxus-Web as a frontend if you'd like. - **Different scopes**: Tauri needs to support JavaScript and its complex build tooling, limiting the scope of what you can do with it. Since Dioxus is exclusively focused on Rust, we're able to provide extra utilities like Server Functions, advanced bundling, and a native renderer. - **Shared DNA**: While Tauri and Dioxus are separate projects, they do share libraries like Tao and Wry: windowing and webview libraries maintained by the Tauri team. ### Dioxus vs Leptos Leptos is a library for building fullstack web-apps, similar to SolidJS and SolidStart. The two libraries share similar goals on the web, but have several key differences: - **Reactivity model**: Leptos uses signals for its underlying reactivity, while Dioxus opts for a VirtualDom and re-renders. While in theory signals are more efficient, in practice, Dioxus' VirtualDom performs little-to-no actual diffing (thanks to our [block-dom inspired templates]( and is [actually faster than Leptos]( - **Control flow**: Because Leptos uses signals for reactivity, you are constrained to Leptos' primitives for things like `for` loops and `if` statements. If you get this wrong, your app will lose reactivity, leading to hard to debug UI issues. With Dioxus, you can use iterators, regular Rust `for` loops and `if` statements, and your app will still be reactive. In practice, a Dioxus component to insert counters into a list might look like this: ```rust fn Counters() -> Element { let mut counters = use_signal(|| vec![0; 10]); rsx! { button { onclick: move |_| counters.push(counters.len()), ""Add Counter"" } ul { for idx in 0..counters.len() { li { button { onclick: move |_| counters.write()[idx] += 1, ""{counters.index(idx)}"" } button { onclick: move |_| { counters.remove(idx); }, ""Remove"" } } } } } } ``` [While in Leptos you would use the `` component.]( ```rust fn Counters() -> impl IntoView { let counters = RwSignal::new(vec![0; 10]); view! { ""Add Counter"" {Memo::new(move |_| counters.with(|n| n[idx]))} ""Remove"" } } ``` - **`Copy` state**: Dioxus 0.1 to 0.4 relied on lifetimes to relax the rules of Rust's borrow checker. This worked well for event handlers, but struggled around async. In Dioxus 0.5, we've switched to a [`Copy` state model]( borrowed from Leptos. - **Different scopes**: Dioxus provides renderers for web, desktop, mobile, LiveView, and more. We also maintain community libraries and a cross-platform SDK. The scope of this work is huge, meaning we've historically released at a slower cadence than Leptos. Leptos focuses on the fullstack web, with features that Dioxus doesn't have like ``-based streaming HTML, islands, `` components, and other web-specific features. Generally, web apps you build with Leptos will have a smaller footprint. - **Different DSLs**: While both frameworks target the web, Dioxus uses its own custom Rust-like DSL for building UIs while Leptos uses a more HTML-like syntax. We chose this to retain compatibility with IDE features like codefolding and syntax highlighting. Generally, Dioxus leans into more ""magic"" with its DSL. For example, dioxus will automatically format strings for you while Leptos can split up strings into static and dynamic segments. ```rust // dioxus rsx! { div { class: ""my-class"", enabled: true, ""Hello, {name}"" } } // leptos view! { ""Hello "" {name} } ``` ### Dioxus vs Yew Yew is a framework for building single-page web apps and initially served as an inspiration for Dioxus. Unfortunately, the architecture of Yew didn't support the various features we wanted, and thus Dioxus was born. - **Single-page apps**: Yew is designed exclusively for single-page web apps and is instrinsically tied to the web platform. Dioxus is fullstack and crossplatform, making it suitable for building web, desktop, mobile, and server apps. - **Developer Tooling**: Dioxus provides a number of utilities like autoformatting, hotreloading, and a bundler. - **Ongoing support**: Dioxus is very actively maintained with new features and bug fixes being added on a daily basis. ### Dioxus vs egui egui is a cross-platform GUI library for Rust powering tools like [Rerun.io]( - **Immediate vs Retained**: egui is designed to be re-rendered on every frame. This is suitable for games and other interactive applications, but it does not retain style and layout state between frames. Dioxus is a retained UI framework, meaning that the UI is built once and then modified between frames. This enables Dioxus to use native web technologies like HTML and CSS with better battery life and performance. - **Customizable**: egui brings its own styling and layout solution while Dioxus expects you to use the built-in HTML and CSS. This enables dioxus apps to use any CSS library like Tailwind or Material UI. - **State management**: egui's state management is based on a single global state object. Dioxus encourages encapsulation of state by using components and props, making components more reusable. ### Dioxus vs Iced Iced is a cross-platform GUI library inspired by Elm. Iced renders natively with WGPU and supports the web using DOM nodes. - **Elm state management**: Iced uses Elm's state management model, which is based on message passing and reducers. This is simply a different state management model than Dioxus and can be rather verbose at times. - **Native Feel**: Since Dioxus uses a webview as its renderer, it automatically gets native text input, paste handling, and other native features like accessibility. Iced's renderer currently doesn't implement these features, making it feel less native. - **WGPU**: Dioxus' WGPU renderer is currently quite immature and not yet reader for production use. Iced's WGPU renderer is much more mature and is being used in production. This enables certain types of apps that need GPU access to be built with Iced that can't currently be built with Dioxus. ### Dioxus vs Electron Dioxus and Electron are two entirely different projects with similar goals. Electron makes it possible for developers to build cross-platform desktop apps using web technologies like HTML, CSS, and JavaScript. - **Lightweight**: Dioxus uses the system's native WebView - or optionally, a WGPU renderer - to render the UI. This makes a typical Dioxus app about 15mb on macOS in comparison to Electron's 100mb. Electron also ships an embedded chromium instance which cannot share system resources with the host OS in the same way as Dioxus. - **Maturity**: Electron is a mature project with a large community and a lot of tooling. Dioxus is still quite young in comparison to Electron. Expect to run into features like deeplinking that require extra work to implement. ## Contributing - Check out the website [section on contributing]( - Report issues on our [issue tracker]( - [Join]( the discord and ask questions! ## License This project is licensed under the [MIT license]. [mit license]: Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in Dioxus by you, shall be licensed as MIT, without any additional terms or conditions.","716, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, enhancement, cli, bug, core, desktop, html, tweak, fullstack, good first issue, documentation, signals, breaking, web, mobile, router, performance, liveview, hot-reload, autoformatting, rsx, hooks, ci, ecosystem, windows, tui, vscode extension, needs reproduction, example, ssr, security"
zellij,zellij-org/zellij,18464,"['Rust', 'Shell']","['workspace', 'terminal', 'multiplexer']","Zellij [Installation] [Screencasts & Tutorials] [Configuration] [Layouts] [FAQ] # What is this? [Zellij]( is a workspace aimed at developers, ops-oriented people and anyone who loves the terminal. Similar programs are sometimes called ""Terminal Multiplexers"". Zellij is designed around the philosophy that one must not sacrifice simplicity for power, taking pride in its great experience out of the box as well as the advanced features it places at its users' fingertips. Zellij is geared toward beginner and power users alike - allowing deep customizability, personal automation through [layouts]( true multiplayer collaboration, unique UX features such as floating and stacked panes, and a [plugin system]( allowing one to create plugins in any language that compiles to WebAssembly. You can get started by [installing]( Zellij and checking out the [Screencasts & Tutorials]( For more details about our future plans, read about upcoming features in our [roadmap](#roadmap). ## How do I install it? The easiest way to install Zellij is through a [package for your OS](./docs/THIRD_PARTY_INSTALL.md). If one is not available for your OS, you could download a prebuilt binary from the [latest release]( and place it in your `$PATH`. If you'd like, we could [automatically choose one for you](#try-zellij-without-installing). You can also install (compile) with `cargo`: ``` cargo install --locked zellij ``` #### Try Zellij without installing bash/zsh: ```bash bash <(curl -L zellij.dev/launch) ``` fish/xonsh: ```bash bash -c 'bash <(curl -L zellij.dev/launch)' ``` ## How do I start a development environment? * Clone the project * In the project folder, for debug builds run: `cargo xtask run` * To run all tests: `cargo xtask test` For more build commands, see [CONTRIBUTING.md](CONTRIBUTING.md). ## Configuration For configuring Zellij, please see the [Configuration Documentation]( ## What is the current status of the project? Zellij should be ready for everyday use, but it's still classified as a beta. This means that there might be a rare crash or wrong behaviour here and there, but that once found it should be fixed rather quickly. If this happens to you, we would be very happy if you could open an issue and tell us how to reproduce it as best you can. ## Roadmap Presented here is the project roadmap, divided into three main sections. These are issues that are either being actively worked on or are planned for the near future. ***If you'll click on the image, you'll be led to an SVG version of it on the website where you can directly click on every issue*** []( ## License MIT ## Sponsored by","578, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, bug, enhancement, help wanted, action, plugin system, config, plugin, discussion, good first issue, compatibility, layout, ease of use, theme, mouse, hacktoberfest, duplicate, darwin, input, dependencies, defaults, Needs Reproduction, stability, rust, packaging, documentation, windows, build, bsd, wontfix, rust-toolchain: Update"
qdrant,qdrant/qdrant,18316,"['Rust', 'Python', 'Shell']","['neural-network', 'matching', 'search-engine', 'knn-algorithm', 'hnsw']","Vector Search Engine for the next generation of AI applications **Qdrant** (read: _quadrant_) is a vector similarity search engine and vector database. It provides a production-ready service with a convenient API to store, search, and manage pointsvectors with an additional payload Qdrant is tailored to extended filtering support. It makes it useful for all sorts of neural-network or semantic-based matching, faceted search, and other applications. Qdrant is written in Rust , which makes it fast and reliable even under high load. See [benchmarks]( With Qdrant, embeddings or neural network encoders can be turned into full-fledged applications for matching, searching, recommending, and much more! Qdrant is also available as a fully managed **[Qdrant Cloud]( including a **free tier**. Quick Start Client Libraries Demo Projects Integrations Contact ## Getting Started ### Python ``` pip install qdrant-client ``` The python client offers a convenient way to start with Qdrant locally: ```python from qdrant_client import QdrantClient qdrant = QdrantClient("":memory:"") # Create in-memory Qdrant instance, for testing, CI/CD # OR client = QdrantClient(path=""path/to/db"") # Persists changes to disk, fast prototyping ``` ### Client-Server To experience the full power of Qdrant locally, run the container with this command: ```bash docker run -p 6333:6333 qdrant/qdrant ``` Now you can connect to this with any client, including Python: ```python qdrant = QdrantClient("" # Connect to existing Qdrant instance ``` Before deploying Qdrant to production, be sure to read our [installation]( and [security]( guides. ### Clients Qdrant offers the following client libraries to help you integrate it into your application stack with ease: - Official: - [Go client]( - [Rust client]( - [JavaScript/TypeScript client]( - [Python client]( - [.NET/C# client]( - [Java client]( - Community: - [Elixir]( - [PHP]( - [Ruby]( - [Java]( ### Where do I go from here? - [Quick Start Guide]( - End to End [Colab Notebook]( demo with SentenceBERT and Qdrant - Detailed [Documentation]( are great starting points - [Step-by-Step Tutorial]( to create your first neural network project with Qdrant ## Demo Projects ### Discover Semantic Text Search Unlock the power of semantic embeddings with Qdrant, transcending keyword-based search to find meaningful connections in short texts. Deploy a neural search in minutes using a pre-trained neural network, and experience the future of text search. [Try it online!]( ### Explore Similar Image Search - Food Discovery There's more to discovery than text search, especially when it comes to food. People often choose meals based on appearance rather than descriptions and ingredients. Let Qdrant help your users find their next delicious meal using visual search, even if they don't know the dish's name. [Check it out!]( ### Master Extreme Classification - E-commerce Product Categorization Enter the cutting-edge realm of extreme classification, an emerging machine learning field tackling multi-class and multi-label problems with millions of labels. Harness the potential of similarity learning models, and see how a pre-trained transformer model and Qdrant can revolutionize e-commerce product categorization. [Play with it online!]( More solutions Semantic Text Search Similar Image Search Recommendations Chat Bots Matching Engines Anomaly Detection ## API ### REST Online OpenAPI 3.0 documentation is available [here]( OpenAPI makes it easy to generate a client for virtually any framework or programming language. You can also download raw OpenAPI [definitions]( ### gRPC For faster production-tier searches, Qdrant also provides a gRPC interface. You can find gRPC documentation [here]( ## Features ### Filtering and Payload Qdrant can attach any JSON payloads to vectors, allowing for both the storage and filtering of data based on the values in these payloads. Payload supports a wide range of data types and query conditions, including keyword matching, full-text filtering, numerical ranges, geo-locations, and more. Filtering conditions can be combined in various ways, including `should`, `must`, and `must_not` clauses, ensuring that you can implement any desired business logic on top of similarity matching. ### Hybrid Search with Sparse Vectors To address the limitations of vector embeddings when searching for specific keywords, Qdrant introduces support for sparse vectors in addition to the regular dense ones. Sparse vectors can be viewed as an generalisation of BM25 or TF-IDF ranking. They enable you to harness the capabilities of transformer-based neural networks to weigh individual tokens effectively. ### Vector Quantization and On-Disk Storage Qdrant provides multiple options to make vector search cheaper and more resource-efficient. Built-in vector quantization reduces RAM usage by up to 97% and dynamically manages the trade-off between search speed and precision. ### Distributed Deployment Qdrant offers comprehensive horizontal scaling support through two key mechanisms: 1. Size expansion via sharding and throughput enhancement via replication 2. Zero-downtime rolling updates and seamless dynamic scaling of the collections ### Highlighted Features * **Query Planning and Payload Indexes** - leverages stored payload information to optimize query execution strategy. * **SIMD Hardware Acceleration** - utilizes modern CPU x86-x64 and Neon architectures to deliver better performance. * **Async I/O** - uses `io_uring` to maximize disk throughput utilization even on a network-attached storage. * **Write-Ahead Logging** - ensures data persistence with update confirmation, even during power outages. # Integrations Examples and/or documentation of Qdrant integrations: - [Cohere]( ([blogpost on building a QA app with Cohere and Qdrant]( - Use Cohere embeddings with Qdrant - [DocArray]( - Use Qdrant as a document store in DocArray - [Haystack]( - Use Qdrant as a document store with Haystack ([blogpost]( - [LangChain]( ([blogpost]( - Use Qdrant as a memory backend for LangChain. - [LlamaIndex]( - Use Qdrant as a Vector Store with LlamaIndex. - [OpenAI - ChatGPT retrieval plugin]( - Use Qdrant as a memory backend for ChatGPT - [Microsoft Semantic Kernel]( - Use Qdrant as persistent memory with Semantic Kernel ## Contacts - Have questions? Join our [Discord channel]( or mention [@qdrant_engine on Twitter]( - Want to stay in touch with latest releases? Subscribe to our [Newsletters]( - Looking for a managed cloud? Check [pricing]( need something personalised? We're at [info@qdrant.tech](mailto:info@qdrant.tech) ## Contributors Thanks to the people who contributed to Qdrant: Andrey Vasnetsov Andre Zayarni Joan Fontanals trean Konstantin Daniil Naumetc Viacheslav Poturaev Alexander Galibey HaiCheViet Marcin Puc Anton V. Arnaud Gourlay Egor Ivkov Ivan Pleshkov Daniil Anton Kaliaev Andre Julius Prokudin Alexander Tim Eggert Gabriel Velo Boqin Qin( ) Russ Cam erare-humanum Roman Titov Hozan George Kornl Csernai Luis Cosso Tim Vise Timon Vonk Yiping Deng Alex Huang Ibrahim M. Akrab stencillogic Moaz bin Mokhtar ## License Qdrant is licensed under the Apache License, Version 2.0. View a copy of the [License file](","1.2k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, bug, enhancement, 💎 Bounty, good first issue, can't reproduce, chore, help wanted, 💰 Rewarded, 🙋 Bounty claim, wontfix, to be released, hacktoberfest, dependencies, rust, question, python, javascript, invalid, github_actions, duplicate, documentation, docker"
relay,facebook/relay,18213,"['Rust', 'JavaScript', 'HTML']",[],"# [Relay]( []( []( Relay is a JavaScript framework for building data-driven React applications. * **Declarative:** Never again communicate with your data store using an imperative API. Simply declare your data requirements using GraphQL and let Relay figure out how and when to fetch your data. * **Colocation:** Queries live next to the views that rely on them, so you can easily reason about your app. Relay aggregates queries into efficient network requests to fetch only what you need. * **Mutations:** Relay lets you mutate data on the client and server using GraphQL mutations, and offers automatic data consistency, optimistic updates, and error handling. [See how to use Relay in your own project]( ## Example The [relay-examples]( repository contains an implementation of [TodoMVC]( To try it out: ``` git clone cd relay-examples/todo yarn yarn build yarn start ``` Then, just point your browser at ` ## Contribute We actively welcome pull requests, learn how to [contribute](./.github/CONTRIBUTING.md). ## Users We have a [community-maintained list]( of people and projects using Relay in production. ## License Relay is [MIT licensed](./LICENSE). ## Thanks We'd like to thank [the contributors]( that helped make Relay in open source possible. The open source project [`relay-hooks`]( allowed the community to experiment with Relay and React Hooks, and was a source of valuable feedback for us. The idea for the `useSubscription` hook originated in [an issue]( on that repo. Thank you @morrys for driving this project and for playing such an important role in our open source community. Thank you for helping make this possible!","1.8k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, wontfix, CLA Signed, bug, dependencies, rust, docs, javascript, enhancement, help wanted, fb-exported, good first bug, project, discussion, question, pinned, legacy-core-api, chore, windows, typescript, new-core-api, mutations, invalid, inprogress, fixready, fh:direct-merge-enabled, duplicate, do-not-reap, announcement, Reverted, Merged"
atuin,atuinsh/atuin,18123,"['Rust', 'TypeScript', 'Shell']","['shell', 'rust', 'zsh', 'history', 'fish']","magical shell history [English] | [] Atuin replaces your existing shell history with a SQLite database, and records additional context for your commands. Additionally, it provides optional and _fully encrypted_ synchronisation of your history between machines, via an Atuin server. exit code, duration, time and command shown As well as the search UI, it can do things like this: ``` # search for all successful `make` commands, recorded after 3pm yesterday atuin search --exit 0 --after ""yesterday 3pm"" make ``` You may use either the server I host, or host your own! Or just don't use sync at all. As all history sync is encrypted, I couldn't access your data even if I wanted to. And I **really** don't want to. ## Features - rebind `ctrl-r` and `up` (configurable) to a full screen history search UI - store shell history in a sqlite database - back up and sync **encrypted** shell history - the same history across terminals, across sessions, and across machines - log exit code, cwd, hostname, session, command duration, etc - calculate statistics such as ""most used command"" - old history file is not replaced - quick-jump to previous items with Alt-\ - switch filter modes via ctrl-r; search history just from the current session, directory, or globally - enter to execute a command, tab to edit ## Documentation - [Quickstart](#quickstart) - [Install](#install) - [Import]( - [Configuration]( - [Searching history]( - [Cloud history sync]( - [History stats]( - [Self host Atuin server]( - [Key binding]( - [Shell completions]( ## Supported Shells - zsh - bash - fish - nushell - xonsh ## Community ### Forum Atuin has a community forum, please ask here for help and support: ### Discord Atuin also has a community Discord, available [here]( # Quickstart ## With the default sync server This will sign you up for the default sync server, hosted by me. Everything is end-to-end encrypted, so your secrets are safe! Read more below for offline-only usage, or for hosting your own server. ``` # bash/zsh/etc bash <(curl --proto '= --tlsv1.2 -sSf # fish bash (curl --proto '= --tlsv1.2 -sSf | psub) atuin register -u -e atuin import auto atuin sync ``` Then restart your shell! > [!NOTE] > > **For Bash users**: The above sets up `bash-preexec` for necessary hooks, but > `bash-preexec` has limitations. For details, please see the [Bash](#bash) > section below. ## Offline only (no sync) ``` bash <(curl atuin import auto ``` By default, Atuin will check for updates. You can [disable update checks by modifying]( `config.toml`. Then restart your shell! ## Install Packaging status ### Script (recommended) The install script will help you through the setup, ensuring your shell is properly configured. It will also use one of the below methods, preferring the system package manager where possible (pacman, homebrew, etc etc). ``` # do not run this as root, root will be asked for if required bash <(curl ``` And then follow [the shell setup](#shell-plugin) ### With cargo It's best to use [rustup]( to get setup with a Rust toolchain, then you can run: ``` cargo install atuin ``` And then follow [the shell setup](#shell-plugin) #### Daemon Build Dependencies [Protoc]( is required to build the daemon, which is enabled by default. This is because we use protobufs for the message serialization ### Homebrew ``` brew install atuin ``` And then follow [the shell setup](#shell-plugin) ### MacPorts Atuin is also available in [MacPorts]( ``` sudo port install atuin ``` And then follow [the shell setup](#shell-plugin) ### Cave Atuin is available in the Exherbo Linux [rust repository]( ``` cave resolve -x repository/rust cave resolve -x atuin ``` ### Nix This repository is a flake, and can be installed using `nix profile`: ``` nix profile install ""github:atuinsh/atuin"" ``` Atuin is also available in [nixpkgs]( ``` nix-env -f '' -iA atuin ``` And then follow [the shell setup](#shell-plugin) ### Pacman Atuin is available in the Arch Linux [[extra] repository]( ``` pacman -S atuin ``` And then follow [the shell setup](#shell-plugin) ### Xbps Atuin is available in the Void Linux [repository]( ``` sudo xbps-install atuin ``` And then follow [the shell setup](#shell-plugin) ### Termux Atuin is available in the Termux package repository: ``` pkg install atuin ``` And then follow [the shell setup](#shell-plugin) ### From source ``` git clone cd atuin/crates/atuin cargo install --path . ``` And then follow [the shell setup](#shell-plugin) ## Shell plugin Once the binary is installed, the shell plugin requires installing. If you use the install script, this should all be done for you! After installing, remember to restart your shell. ### zsh ``` echo 'eval ""$(atuin init zsh)""' >> ~/.zshrc ``` #### Zinit ```sh zinit load atuinsh/atuin ``` #### Antigen ```sh antigen bundle atuinsh/atuin@main ``` ### bash Atuin works in `bash >= 3.1` when combined with either ble.sh or bash-preexec. We recommend to use Atuin with the recent versions of `bash >= 5`. #### [ble.sh]( Atuin works best in bash when using [ble.sh]( >= 0.4. With ble.sh (>= 0.4) installed, just add atuin to your .bashrc ```bash echo 'eval ""$(atuin init bash)""' >> ~/.bashrc ``` > [!IMPORTANT] > > Please make sure that the above line comes after sourcing ble.sh, so Atuin detects ble.sh. #### [bash-preexec]( [Bash-preexec]( can also be used, but you may experience minor problems of missing commands, ignored `HISTCONTROL`, wrong recorded duration and exit status of some commands. To use bash-preexec, download and initialize it ```bash curl -o ~/.bash-preexec.sh echo '[[ -f ~/.bash-preexec.sh ]] && source ~/.bash-preexec.sh' >> ~/.bashrc ``` Then set up Atuin ```bash echo 'eval ""$(atuin init bash)""' >> ~/.bashrc ``` > [!NOTE] > > bash-preexec cannot properly invoke the `preexec` hook for subshell commands > `(...)`, function definitions `func() { ...; }`, empty for-in-statements `for > i in; do ...; done`, etc., so those commands may not be recorded in the > Atuin's history. > > bash-preexec currently has an issue where it will stop honoring > `HISTCONTROL=ignorespace`. While Atuin will ignore commands prefixed with > whitespace, they may still end up in your bash history. Please check your > configuration! All other shells do not have this issue. > > Also, there can be problems in the recorded duration and the exit status of > some commands. > [!IMPORTANT] > > To use Atuin in `bash < 4` with bash-preexec, the option `enter_accept` needs > to be turned on (which is so by default). ### fish Add ``` atuin init fish | source ``` to your `is-interactive` block in your `~/.config/fish/config.fish` file ### Nushell Run in *Nushell*: ``` mkdir ~/.local/share/atuin/ atuin init nu | save -f ~/.local/share/atuin/init.nu ``` Add to `config.nu`: ``` source ~/.local/share/atuin/init.nu ``` ### Xonsh Add ``` execx($(atuin init xonsh)) ``` to the end of your `~/.xonshrc` # Security If you find any security issues, we'd appreciate it if you could alert ellie@atuin.sh # Contributors Made with [contrib.rocks]( [English]: ./README.md []: ./docs/zh-CN/README.md","500, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, bug, enhancement, help wanted, rust, dependencies, good first issue, shell-zsh, shell-bash, shell, self-host, wontfix, shell-fish, question, javascript, invalid, info needed, duplicate, documentation, docker"
wasmer,wasmerio/wasmer,18008,"['Rust', 'C++', 'HTML']","['webassembly', 'wasm', 'wasi', 'emscripten', 'rust']","Wasmer is a _blazing fast_ and _secure_ [**WebAssembly**]( runtime that enables incredibly _lightweight containers_ to run anywhere: from _Desktop_ to the _Cloud_, _Edge_ and your browser. - **Secure** by default. No file, network, or environment access, unless explicitly enabled. - **Pluggable**. supports [**WASIX**]( [WASI]( and [Emscripten]( out of the box. - **Incredibly Fast**. Run WebAssembly at near-native speeds. - **Embeddable** [anywhere via Wasmer SDKs]( ### Install Wasmer ```sh curl -sSfL | sh ``` Other installation options (Powershell, Brew, Cargo, ...) _Wasmer can be installed from various package managers. Choose the one that fits best for your environment:_ * Powershell (Windows) ```powershell iwr -useb | iex ``` - Homebrew (macOS, Linux) ```sh brew install wasmer ``` - Scoop (Windows) ```sh scoop install wasmer ``` - Chocolatey (Windows) ```sh choco install wasmer ``` - Cargo binstall ```sh cargo binstall wasmer-cli ``` - Cargo _Note: All the available features are described in the [`wasmer-cli` crate docs]( ```sh cargo install wasmer-cli ``` > Looking for more installation options? See [the `wasmer-install` > repository]( to learn > more! > Note: You can also try Wasmer online in [wasmer.sh]( > ### Quickstart You can start by running [Cowsay]( ```bash $ wasmer run cowsay ""hello world"" _____________ < hello world > ------------- \ ^__^ \ (oo)\_______ (__)\ )\/\ ||----w | || || ``` > There are many more available packages, such as [`wasmer/python`]( or [`quickjs`]( [Create your own package]( or explore packages from the community: #### Here is what you can do next: - [Run a package]( - [Publish a package]( - [Deploy your website]( - [Read more about Wasmer]( ## Wasmer SDK You can use the Wasmer runtime **embedded in different languages** with the Wasmer SDK: | | Language | Package | Documentation | | ---------------- | ------------------------------------ | ------------------------------------- | ---------------------- | | ![Rust logo] | [**Rust**][Rust integration] | [`wasmer` Rust crate] | [Learn][rust docs] | | ![C logo] | [**C**][C integration] | [`wasm.h` header] | [Learn][c docs] | | ![C++ logo] | [**C++**][C integration] | [`wasm.hh` header] | [Learn][c docs] | | ![C# logo] | [**C#**][C# integration] | [`WasmerSharp` NuGet package] | [Learn][c# docs] | | ![D logo] | [**D**][D integration] | [`wasmer` Dub package] | [Learn][d docs] | | ![Python logo] | [**Python**][Python integration] | [`wasmer` PyPI package] | [Learn][python docs] | | ![JS logo] | [**Javascript**][JS integration] | [`@wasmerio` NPM packages] | [Learn][js docs] | | ![Go logo] | [**Go**][Go integration] | [`wasmer` Go package] | [Learn][go docs] | | ![PHP logo] | [**PHP**][PHP integration] | [`wasm` PECL package] | [Learn][php docs] | | ![Ruby logo] | [**Ruby**][Ruby integration] | [`wasmer` Ruby Gem] | [Learn][ruby docs] | | ![Java logo] | [**Java**][Java integration] | [`wasmer/wasmer-jni` Bintray package] | [Learn][java docs] | | ![R logo] | [**R**][R integration] | _no published package_ | [Learn][r docs] | | ![Postgres logo] | [**Postgres**][Postgres integration] | _no published package_ | [Learn][postgres docs] | | ![Swift logo] | [**Swift**][Swift integration] | _no published package_ | | | ![Zig logo] | [**Zig**][Zig integration] | _no published package_ | | | ![Dart logo] | [**Dart**][Dart integration] | [`wasm` pub package] | | | ![Crystal logo] | [**Crystal**][Crystal integration] | _no published package_ | [Learn][crystal docs] | | ![Lisp logo] | [**Lisp**][Lisp integration] | _no published package_ | | | ![Julia logo] | [**Julia**][Julia integration] | _no published package_ | | | ![VLang logo] | [**V**][vlang integration] | _no published package_ | | | ![Ocaml logo] | [**OCaml**][OCaml integration] | [`wasmer` OCaml package] | | [Missing a language?]( [rust logo]: [rust integration]: [`wasmer` rust crate]: [rust docs]: [c logo]: [c integration]: [`wasm.h` header]: [c docs]: [c++ logo]: [`wasm.hh` header]: [c# logo]: [c# integration]: [`wasmersharp` nuget package]: [c# docs]: [d logo]: [d integration]: [`wasmer` Dub package]: [d docs]: [python logo]: [python integration]: [`wasmer` pypi package]: [python docs]: [go logo]: [go integration]: [`wasmer` go package]: [go docs]: [php logo]: [php integration]: [`wasm` pecl package]: [php docs]: [js logo]: [js integration]: [`@wasmerio` npm packages]: [js docs]: [ruby logo]: [ruby integration]: [`wasmer` ruby gem]: [ruby docs]: [java logo]: [java integration]: [`wasmer/wasmer-jni` bintray package]: [java docs]: [elixir logo]: [elixir integration]: [elixir docs]: [`wasmex` hex package]: [r logo]: [r integration]: [r docs]: [postgres logo]: [postgres integration]: [postgres docs]: [swift logo]: [swift integration]: [zig logo]: [zig integration]: [dart logo]: [dart integration]: [`wasm` pub package]: [lisp logo]: [lisp integration]: [crystal logo]: [crystal integration]: [crystal docs]: [julia logo]: [julia integration]: [vlang logo]: [vlang integration]: [OCaml logo]: [OCaml integration]: [`wasmer` OCaml package]: ## Contribute We appreciate your help! We recommend reading the following guide on how to contribute into a complex project successfully: Check our docs on how to [build Wasmer from source]( or [test your changes]( ## Community Wasmer has an amazing community of developers and contributors. Welcome, please join us! - [Wasmer Community Discord]( - [Wasmer on Twitter]( -------- > _README also in: > [ -Chinese]( > [ Deutsch-German]( > [ Espaol-Spanish]( > [ Franais-French]( > [ -Japanese]( > [ -Korean](","755, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, priority-medium, 🎉 enhancement, bug, priority-low, 🏚 stale, priority-high, ❓ question, 🕵️ needs investigation, 📦 lib-wasi, lib-wasix, 📦 lib-vfs, 📦 lib-cli, 🧪 tests, 📦 lib-vm, 📦 lib-api, edge-cli, 📦 lib-c-api, ❔ needs more context, build-system, 📦 lib-compiler, ⚙️ feature request, 📦 lib-engine, 📦 lib-compiler-singlepass, 📦 lib-compiler-llvm, ci, project-holochain, ℹ️ help wanted, 📚 documentation, performance, 📦 lib-compiler-cranelift"
czkawka,qarmin/czkawka,17929,"['Rust', 'Fluent', 'Shell']","['duplicates', 'gtk-rs', 'rust', 'cleaner', 'similar-images']","**Czkawka** (_tchkavka_ (IPA: [kafka]), ""hiccup"" in Polish) is a simple, fast and free app to remove unnecessary files from your computer. **Krokiet** ((IPA: [krct]), ""croquet"" in Polish) same as above, but uses Slint frontend. ## Features - Written in memory-safe Rust - Amazingly fast - due to using more or less advanced algorithms and multithreading - Free, Open Source without ads - Multiplatform - works on Linux, Windows, macOS, FreeBSD and many more - Cache support - second and further scans should be much faster than the first one - CLI frontend - for easy automation - GUI frontend - uses GTK 4 or Slint frameworks - No spying - Czkawka does not have access to the Internet, nor does it collect any user information or statistics - Multilingual - support multiple languages like Polish, English or Italian - Multiple tools to use: - Duplicates - Finds duplicates based on file name, size or hash - Empty Folders - Finds empty folders with the help of an advanced algorithm - Big Files - Finds the provided number of the biggest files in given location - Empty Files - Looks for empty files across the drive - Temporary Files - Finds temporary files - Similar Images - Finds images which are not exactly the same (different resolution, watermarks) - Similar Videos - Looks for visually similar videos - Same Music - Searches for similar music by tags or by reading content and comparing it - Invalid Symbolic Links - Shows symbolic links which point to non-existent files/directories - Broken Files - Finds files that are invalid or corrupted - Bad Extensions - Lists files whose content not match with their extension Changelog and new releases can be found in [Github releases]( or in [CHANGELOG.md](CHANGELOG.md). More about latest version, you can find [in Medium article]( ## Usage, installation, compilation, requirements, license Each tool uses different technologies, so you can find instructions for each of them in the appropriate file: - [Czkawka GUI (GTK frontend)](czkawka_gui/README.md) - [Czkawka CLI](czkawka_cli/README.md) - [Czkawka Core](czkawka_core/README.md) - [Krokiet GUI (Slint frontend)](krokiet/README.md) ## Comparison to other tools Bleachbit is a master at finding and removing temporary files, while Czkawka only finds the most basic ones. So these two apps shouldn't be compared directly or be considered as an alternative to one another. In this comparison remember, that even if app have same features they may work different(e.g. one app may have more options to choose than other). | | Czkawka | Krokiet | FSlint | DupeGuru | Bleachbit | |:------------------------:|:-----------:|:-----------:|:------:|:-----------------:|:-----------:| | Language | Rust | Rust | Python | Python/Obj-C | Python | | Framework base language | C | Rust | C | C/C++/Obj-C/Swift | C | | Framework | GTK 4 | Slint | PyGTK2 | Qt 5 (PyQt)/Cocoa | PyGTK3 | | OS | Lin,Mac,Win | Lin,Mac,Win | Lin | Lin,Mac,Win | Lin,Mac,Win | | Duplicate finder | | | | | | | Empty files | | | | | | | Empty folders | | | | | | | Temporary files | | | | | | | Big files | | | | | | | Similar images | | | | | | | Similar videos | | | | | | | Music duplicates(tags) | | | | | | | Invalid symlinks | | | | | | | Broken files | | | | | | | Names conflict | | | | | | | Invalid names/extensions | | | | | | | Installed packages | | | | | | | Bad ID | | | | | | | Non stripped binaries | | | | | | | Redundant whitespace | | | | | | | Overwriting files | | | | | | | Multiple languages | | | | | | | Cache support | | | | | | | In active development | Yes | Yes | No | Yes | Yes | ## Other apps There are many similar applications to Czkawka on the Internet, which do some things better and some things worse: ### GUI - [DupeGuru]( - Many options to customize; great photo compare tool - [FSlint]( - A little outdated, but still have some tools not available in Czkawka - [AntiDupl.NET]( - Shows a lot of metadata of compared images - [Video Duplicate Finder]( - Finds similar videos(surprising, isn't it), supports video thumbnails ### CLI Due to limited time, the biggest emphasis is on the GUI version so if you are looking for really good and feature-packed console apps, then take a look at these: - [Fclones]( - One of the fastest tools to find duplicates; it is written also in Rust - [Rmlint]( - Nice console interface and also is feature packed - [RdFind]( - Fast, but written in C++ \\\_()\_/ ## Contributions Contributions to this repository are welcome. You can help by creating: - Bug reports - memory leaks, unexpected behavior, crashes - Feature proposals - proposal to change/add/delete some features - Pull Requests - implementing a new feature yourself or fixing bugs. If the change is bigger, then it's a good idea to open a new issue to discuss changes, but issues with label `PR welcome` are already checked and accepted. - Documentation - There is an [instruction](instructions/Instruction.md) which you can improve. - Translations - Instruction how to translate files is available [here](instructions/Translations.md) - External contributions - App use big number of external libraries like [lofty]( [image-rs]( or [symphonia]( so improving this libraries will automatically improve Czkawka You can also help by doing other things: - Creating text articles - [LinuxUprising]( or [Ubunlog]( - Adding Czkawka to repositories - [Alpine Linux]( or [NixOS]( or [OpenMandriva]( - Creating videos - [First Video]( or [Spanish Tutorial]( - Recommending it to others ## Thanks Big thanks to Pdraig Brady, creator of fantastic FSlint, because without his work I wouldn't create this tool. Thanks also to all the people who create patches for this program, make it available on other systems, create videos, articles about it etc. Also, I really appreciate work of people that create crates on which Czkawka is based and for that I try to report bugs to make it even better. ## Donations If you are using the app, I would appreciate a donation for its further development, which can be done [here](","592, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, enhancement, bug, PR welcome, good first issue, external, help wanted, tracer, Question, high priority, documentation, discussion"
RustPython,RustPython/RustPython,17796,"['Rust', 'Python', 'JavaScript']","['rust', 'python3', 'python-language', 'jit', 'interpreter']","# [RustPython]( A Python-3 (CPython >= 3.12.0) Interpreter written in Rust :snake: :scream: :metal:. []( []( []( []( [][discord] []( []( []( []( []( ## Usage **Check out our [online demo]( running on WebAssembly.** RustPython requires Rust latest stable version (e.g 1.67.1 at February 7th 2023). If you don't currently have Rust installed on your system you can do so by following the instructions at [rustup.rs]( To check the version of Rust you're currently running, use `rustc --version`. If you wish to update, `rustup update stable` will update your Rust installation to the most recent stable release. To build RustPython locally, first, clone the source code: ```bash git clone ``` Then you can change into the RustPython directory and run the demo (Note: `--release` is needed to prevent stack overflow on Windows): ```bash $ cd RustPython $ cargo run --release demo_closures.py Hello, RustPython! ``` Or use the interactive shell: ```bash $ cargo run --release Welcome to rustpython >>>>> 2+2 4 ``` NOTE: For windows users, please set `RUSTPYTHONPATH` environment variable as `Lib` path in project directory. (e.g. When RustPython directory is `C:\RustPython`, set `RUSTPYTHONPATH` as `C:\RustPython\Lib`) You can also install and run RustPython with the following: ```bash $ cargo install --git $ rustpython Welcome to the magnificent Rust Python interpreter >>>>> ``` If you'd like to make requests, you can enable the `ssl` feature, which also lets you install the `pip` package manager. Note that on Windows, you may need to install OpenSSL, or you can enable the `ssl-vendor` feature instead, which compiles OpenSSL for you but requires a C compiler, perl, and `make`. OpenSSL version 3 is expected and tested in CI. Older versions may not work. Once you've installed rustpython with SSL support, you can install pip by running: ```bash cargo install --git --features ssl rustpython --install-pip ``` You can also install RustPython through the `conda` package manager, though this isn't officially supported and may be out of date: ```bash conda install rustpython -c conda-forge rustpython ``` ### WASI You can compile RustPython to a standalone WebAssembly WASI module so it can run anywhere. Build ```bash cargo build --target wasm32-wasi --no-default-features --features freeze-stdlib,stdlib --release ``` Run by wasmer ```bash wasmer run --dir `pwd` -- target/wasm32-wasi/release/rustpython.wasm `pwd`/extra_tests/snippets/stdlib_random.py ``` Run by wapm ```bash $ wapm install rustpython $ wapm run rustpython >>>>> 2+2 4 ``` #### Building the WASI file You can build the WebAssembly WASI file with: ```bash cargo build --release --target wasm32-wasi --features=""freeze-stdlib"" ``` > Note: we use the `freeze-stdlib` to include the standard library inside the binary. You also have to run once `rustup target add wasm32-wasi`. ### JIT (Just in time) compiler RustPython has a **very** experimental JIT compiler that compile python functions into native code. #### Building By default the JIT compiler isn't enabled, it's enabled with the `jit` cargo feature. ```bash cargo run --features jit ``` This requires autoconf, automake, libtool, and clang to be installed. #### Using To compile a function, call `__jit__()` on it. ```python def foo(): a = 5 return 10 + a foo.__jit__() # this will compile foo to native code and subsequent calls will execute that native code assert foo() == 15 ``` ## Embedding RustPython into your Rust Applications Interested in exposing Python scripting in an application written in Rust, perhaps to allow quickly tweaking logic where Rust's compile times would be inhibitive? Then `examples/hello_embed.rs` and `examples/mini_repl.rs` may be of some assistance. ## Disclaimer RustPython is in development, and while the interpreter certainly can be used in interesting use cases like running Python in WASM and embedding into a Rust project, do note that RustPython is not totally production-ready. Contribution is more than welcome! See our contribution section for more information on this. ## Conference videos Checkout those talks on conferences: - [FOSDEM 2019]( - [EuroPython 2018]( ## Use cases Although RustPython is a fairly young project, a few people have used it to make cool projects: - [GreptimeDB]( an open-source, cloud-native, distributed time-series database. Using RustPython for embedded scripting. - [pyckitup]( a game engine written in rust. - [Robot Rumble]( an arena-based AI competition platform - [Ruff]( an extremely fast Python linter, written in Rust ## Goals - Full Python-3 environment entirely in Rust (not CPython bindings) - A clean implementation without compatibility hacks ## Documentation Currently along with other areas of the project, documentation is still in an early phase. You can read the [online documentation]( for the latest release, or the [user guide]( You can also generate documentation locally by running: ```shell cargo doc # Including documentation for all dependencies cargo doc --no-deps --all # Excluding all dependencies ``` Documentation HTML files can then be found in the `target/doc` directory or you can append `--open` to the previous commands to have the documentation open automatically on your default browser. For a high level overview of the components, see the [architecture](architecture/architecture.md) document. ## Contributing Contributions are more than welcome, and in many cases we are happy to guide contributors through PRs or on Discord. Please refer to the [development guide](DEVELOPMENT.md) as well for tips on developments. With that in mind, please note this project is maintained by volunteers, some of the best ways to get started are below: Most tasks are listed in the [issue tracker]( Check issues labeled with [good first issue]( if you wish to start coding. To enhance CPython compatibility, try to increase unittest coverage by checking this article: [How to contribute to RustPython by CPython unittest]( Another approach is to checkout the source code: builtin functions and object methods are often the simplest and easiest way to contribute. You can also simply run `./whats_left.py` to assist in finding any unimplemented method. ## Compiling to WebAssembly [See this doc](wasm/README.md) ## Community [][discord] Chat with us on [Discord][discord]. ## Code of conduct Our code of conduct [can be found here](code-of-conduct.md). ## Credit The initial work was based on [windelbouwman/rspython]( and [shinglyu/RustPython]( [discord]: ## Links These are some useful links to related projects: - - - ## License This project is licensed under the MIT license. Please see the [LICENSE](LICENSE) file for more details. The [project logo](logo.png) is licensed under the CC-BY-4.0 license. Please see the [LICENSE-logo](LICENSE-logo) file for more details.","1.2k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, RFC, C-bug, C-compat, A-stdlib, O-wasm, A-design, A-vm, z-ca-2022, good first issue, C-enhancement, O-windows, A-compiler, C-discussion, E-help-wanted, skip:ci, z-ca-2023, z-ca-2021, O-macos, A-packaging, A-docs, z-ls-2023, wontfix, spam, skip:ci-windows, skip:ci-macos, rust, python, invalid, hacktoberfest-accepted, duplicate"
tabby,TabbyML/tabby,17761,"['Rust', 'Python', 'HTML']","['ai', 'codegen', 'coding-assistant', 'coding-language', 'developer-experience']","# Tabby [ Docs]( [ Slack]( [ Live Demo]( []( []( []( []( Tabby is a self-hosted AI coding assistant, offering an open-source and on-premises alternative to GitHub Copilot. It boasts several key features: * Self-contained, with no need for a DBMS or cloud service. * OpenAPI interface, easy to integrate with existing infrastructure (e.g Cloud IDE). * Supports consumer-grade GPUs. ## What's New * **04/22/2024** [v0.10.0]( released, featuring the latest **Reports** tab with team-wise analytics for Tabby usage. * **04/19/2024** Tabby now incorporates [locally relevant snippets]( from local LSP, and recently modified code) for code completion! * **04/17/2024** CodeGemma and CodeQwen model series have now been added to the [official registry]( Archived * **03/20/2024** [v0.9]( released, highlighting a full feature admin UI. * **12/23/2023** Seamlessly [deploy Tabby on any cloud]( with [SkyServe]( from SkyPilot. * **12/15/2023** [v0.7.0]( released with team management and secured access! * **10/15/2023** RAG-based code completion is enabled by detail in [v0.3.0]( Check out the [blogpost]( explaining how Tabby utilizes repo-level context to get even smarter! * **11/27/2023** [v0.6.0]( released! * **11/09/2023** [v0.5.5]( released! With a redesign of UI + performance improvement. * **10/24/2023** Major updates for Tabby IDE plugins across [VSCode/Vim/IntelliJ]( * **10/04/2023** Check out the [model directory]( for the latest models supported by Tabby. * **09/18/2023** Apple's M1/M2 Metal inference support has landed in [v0.1.1]( * **08/31/2023** Tabby's first stable release [v0.0.1]( . * **08/28/2023** Experimental support for the [CodeLlama 7B]( * **08/24/2023** Tabby is now on [JetBrains Marketplace]( ## Getting Started You can find our documentation [here]( - [Installation]( - [IDE/Editor Extensions]( - [Configuration]( ### Run Tabby in 1 Minute The easiest way to start a Tabby server is by using the following Docker command: ```bash docker run -it \ --gpus all -p 8080:8080 -v $HOME/.tabby:/data \ tabbyml/tabby \ serve --model TabbyML/StarCoder-1B --device cuda ``` For additional options (e.g inference type, parallelism), please refer to the [documentation page]( ## Contributing Full guide at [CONTRIBUTING.md]( ### Get the Code ```bash git clone --recurse-submodules cd tabby ``` If you have already cloned the repository, you could run the `git submodule update --recursive --init` command to fetch all submodules. ### Build 1. Set up the Rust environment by following this [tutorial]( 2. Install the required dependencies: ```bash # For MacOS brew install protobuf # For Ubuntu / Debian apt-get install protobuf-compiler libopenblas-dev ``` 3. Install useful tools: ```bash # For Ubuntu sudo apt install make sqlite3 graphviz ``` 4. Now, you can build Tabby by running the command `cargo build`. ### Start Hacking! ... and don't forget to submit a [Pull Request]( ## Community - [Twitter / X]( - engage with TabbyML for all things possible - [LinkedIn]( - follow for the latest from the community - [Newsletter]( - subscribe to unlock Tabby insights and secrets ### Activity ### Star History [](","729, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, enhancement, bug-unconfirmed, documentation, good first issue, question, bug, help wanted, performance, linear, hotlist, wontfix, sweep, network-issue, javascript, invalid, hacktoberfest-accepted, fixed-in-next-release, duplicate, dependencies, cherry-pick, Urgent, Technical Debt, 💰 Rewarded, Migrated, Medium priority, Low priority, High priority, 💎 Bounty, 8 points, 3 points"
butterknife,JakeWharton/butterknife,25567,"['Java', 'HTML', 'Kotlin']",[],"Butter Knife ============ **Attention**: This tool is now deprecated. Please switch to [view binding]( Existing versions will continue to work, obviously, but only critical bug fixes for integration with AGP will be considered. Feature development and general bug fixes have stopped. Field and method binding for Android views which uses annotation processing to generate boilerplate code for you. * Eliminate `findViewById` calls by using `@BindView` on fields. * Group multiple views in a list or array. Operate on all of them at once with actions, setters, or properties. * Eliminate anonymous inner-classes for listeners by annotating methods with `@OnClick` and others. * Eliminate resource lookups by using resource annotations on fields. ```java class ExampleActivity extends Activity { @BindView(R.id.user) EditText username; @BindView(R.id.pass) EditText password; @BindString(R.string.login_error) String loginErrorMessage; @OnClick(R.id.submit) void submit() { // TODO call server... } @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.simple_activity); ButterKnife.bind(this); // TODO Use fields... } } ``` For documentation and additional information see [the website][3]. __Remember: A butter knife is like a [dagger][1], only infinitely less sharp.__ Download -------- ```groovy android { ... // Butterknife requires Java 8. compileOptions { sourceCompatibility JavaVersion.VERSION_1_8 targetCompatibility JavaVersion.VERSION_1_8 } } dependencies { implementation 'com.jakewharton:butterknife:10.2.3' annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3' } ``` If you are using Kotlin, replace `annotationProcessor` with `kapt`. Snapshots of the development version are available in [Sonatype's `snapshots` repository][snap]. Library projects -------------------- To use Butter Knife in a library, add the plugin to your `buildscript`: ```groovy buildscript { repositories { mavenCentral() google() } dependencies { classpath 'com.jakewharton:butterknife-gradle-plugin:10.2.3' } } ``` and then apply it in your module: ```groovy apply plugin: 'com.android.library' apply plugin: 'com.jakewharton.butterknife' ``` Now make sure you use `R2` instead of `R` inside all Butter Knife annotations. ```java class ExampleActivity extends Activity { @BindView(R2.id.user) EditText username; @BindView(R2.id.pass) EditText password; ... } ``` License ------- Copyright 2013 Jake Wharton Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. [1]: [2]: [3]: [snap]:","4.6k, Code, Issues, Pull requests, Actions, Security, Insights, Needs Info, enhancement, Help Wanted, wontfix, question, invalid, duplicate, bug"
toBeTopJavaer,hollischuang/toBeTopJavaer,25204,['Java'],"['java', 'programmer', 'jvm', 'spring', 'mysql']","## To Be Top Javaer - Java | | | | | ---- | ---------- | -------------- | | v4.0 | 2022-05-20 | | | v3.0 | 2020-03-31 | v2.020%GitHub Page| | v2.0 | 2019-02-19 | | | v1.1 | 2018-03-12 | | | v1.0 | 2015-08-01 | | Java50060>>> ... ~ ### *""""Java* ### GitHub Pages []( Gitee Pages []( () ### Hollis51CTOCSDNJavaJava ### [GPL] ### [GitHub]( (hollischuang@gmail)","5.5k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, bug"
Signal-Android,signalapp/Signal-Android,25020,"['Java', 'Kotlin', 'Handlebars']",[],"# Signal Android Signal is a simple, powerful, and secure messenger. Signal uses your phone's data connection (WiFi/3G/4G/5G) to communicate securely. Millions of people use Signal every day for free and instantaneous communication anywhere in the world. Send and receive high-fidelity messages, participate in HD voice/video calls, and explore a growing set of new features that help you stay connected. Signals advanced privacy-preserving technology is always enabled, so you can focus on sharing the moments that matter with the people who matter to you. Currently available on the Play Store and [signal.org]( ## Contributing Bug reports We use GitHub for bug tracking. Please search the existing issues for your bug and create a new one if the issue is not yet tracked! ## Joining the Beta Want to live life on the bleeding edge and help out with testing? You can subscribe to Signal Android Beta releases here: If you're interested in a life of peace and tranquility, stick with the standard releases. ## Contributing Code If you're new to the Signal codebase, we recommend going through our issues and picking out a simple bug to fix (check the ""easy"" label in our issues) in order to get yourself familiar. Also please have a look at the [CONTRIBUTING.md]( that might answer some of your questions. For larger changes and feature ideas, we ask that you propose it on the [unofficial Community Forum]( for a high-level discussion with the wider community before implementation. ## Contributing Ideas Have something you want to say about Signal projects or want to be part of the conversation? Get involved in the [community forum]( Help ==== ## Support For troubleshooting and questions, please visit our support center! ## Documentation Looking for documentation? Check out the wiki! # Legal things ## Cryptography Notice This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country's laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See for more information. The U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms. The form and manner of this distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code. ## License Copyright 2013-2024 Signal Messenger, LLC Licensed under the GNU AGPLv3: Google Play and the Google Play logo are trademarks of Google LLC.","6k, Code, Issues, Pull requests, Actions, Wiki, Security, Insights, acknowledged, wontfix, calling, notifications, backup, a11y, camera, video, sqlcipher, device-specific, ux, registration, permission, performance, pending information, no-play-services, i18n, help wanted, feature, emoji, do not merge, desktop, dark theme, crash, contacts"
incubator-seata,apache/incubator-seata,24990,"['Java', 'ANTLR', 'TypeScript']","['tcc', 'saga', 'xa', 'at', 'consistency']","# Seata: Simple Extensible Autonomous Transaction Architecture []( []( []( []( ## What is Seata? A **distributed transaction solution** with high performance and ease of use for **microservices** architecture. ### Distributed Transaction Problem in Microservices Let's imagine a traditional monolithic application. Its business is built up with 3 modules. They use a single local data source. Naturally, data consistency will be guaranteed by the local transaction. Things have changed in a microservices architecture. The 3 modules mentioned above are designed to be 3 services on top of 3 different data sources ([Pattern: Database per service]( Data consistency within every single service is naturally guaranteed by the local transaction. **But how about the whole business logic scope?** ### How Seata do? Seata is just a solution to the problem mentioned above. Firstly, how to define a **Distributed Transaction**? We say, a **Distributed Transaction** is a **Global Transaction** which is made up with a batch of **Branch Transaction**, and normally **Branch Transaction** is just **Local Transaction**. There are three roles in Seata Framework: - **Transaction Coordinator(TC):** Maintain status of global and branch transactions, drive the global commit or rollback. - **Transaction Manager(TM):** Define the scope of global transaction: begin a global transaction, commit or rollback a global transaction. - **Resource Manager(RM):** Manage resources that branch transactions working on, talk to TC for registering branch transactions and reporting status of branch transactions, and drive the branch transaction commit or rollback. A typical lifecycle of Seata managed distributed transaction: 1. TM asks TC to begin a new global transaction. TC generates an XID representing the global transaction. 2. XID is propagated through microservices' invoke chain. 3. RM registers local transaction as a branch of the corresponding global transaction of XID to TC. 4. TM asks TC for committing or rollbacking the corresponding global transaction of XID. 5. TC drives all branch transactions under the corresponding global transaction of XID to finish branch committing or rollbacking. For more details about principle and design, please go to [Seata wiki page]( ### History ##### Alibaba - **TXC**: Taobao Transaction Constructor. Alibaba middleware team started this project since 2014 to meet the distributed transaction problems caused by application architecture change from monolithic to microservices. - **GTS**: Global Transaction Service. TXC as an Aliyun middleware product with new name GTS was published since 2016. - **Fescar**: we started the open source project Fescar based on TXC/GTS since 2019 to work closely with the community in the future. ##### Ant Financial - **XTS**: Extended Transaction Service. Ant Financial middleware team developed the distributed transaction middleware since 2007, which is widely used in Ant Financial and solves the problems of data consistency across databases and services. - **DTX**: Distributed Transaction Extended. Since 2013, XTS has been published on the Ant Financial Cloud, with the name of DTX . ##### Seata Community - **Seata** :Simple Extensible Autonomous Transaction Architecture. Ant Financial joins Fescar, which make it to be a more neutral and open community for distributed transaction, and Fescar be renamed to Seata. ## Maven dependency Depending on the scenario, choose one of the two dependencies: `io.seata:seata-all` or `io.seata:seata-spring-boot-starter`. ```xml 2.0.0 io.seata seata-all ${seata.version} io.seata seata-spring-boot-starter ${seata.version} ``` ## Quick Start [Quick Start]( ## Documentation You can view the full documentation from Seata Official Website: [Seata Website page]( ## Reporting bugs Please follow the [template](./.github/ISSUE_TEMPLATE/BUG_REPORT.md)for reporting any issues. ## Security Please do not use our public issue tracker but refer to our [security policy](./SECURITY.md) ## Contributing Contributors are welcomed to join the Seata project. Please check [CONTRIBUTING](./CONTRIBUTING.md) and[CONTRIBUTING-CN](./CONTRIBUTING_CN.md)about how to contribute to this project. ## Contact * Mailing list: * dev@seata.apache.org , for dev/user discussion. [subscribe](mailto:dev-subscribe@seata.apache.org), [unsubscribe](mailto:dev-unsubscribe@seata.apache.org), [archive]( * Online chat: ## Seata ecosystem * [Seata Website]( - Seata official website * [Seata GoLang]( - Seata GoLang client and server * [Seata Samples]( - Samples for Seata * [Seata GoLang Simples]( - Samples for Seata GoLang * [Seata K8s]( - Seata integration with k8s * [Seata CLI]( - CLI tool for Seata ## Contributors This project exists thanks to all the people who contribute. [[Contributors]( ## License Seata is under the Apache 2.0 license. See the[LICENSE](file for details. ## Who is using These are only part of the companies using Seata, for reference only. If you are using Seata, please [add your company here]( to tell us your scenario to make Seata better.","8.7k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, task: help-wanted, type: bug, good first issue, type: feature, status: waiting-for-feedback, Summer2021, module/rm-datasource, type: question, type: discussion, mode: AT, type: optimize, theme: ASoC2020, first-time contributor, Security, mode: TCC, module/tcc, module/server, Do Not Merge, type: enhancement, module/sqlparser, module/core, mode: XA, DB: Oracle, ASOC2022, type: solution, theme: wiki-document, theme: netty, theme: DB support, license, RPC: SpringCloud"
proxyee-down,proxyee-down-org/proxyee-down,24962,"['Java', 'Vue', 'JavaScript']",[],## proxyee-down**issue** `JAVA``GO``````````` [gopeed]( # [Proxyee Down]( []( []( []( []( []( > Proxyee Down HTTP `netty` HTTP ## []( ## 1 **11352304**2 **20236964**3 **20233754**4 **737991056** ## `java` + `spring` + `boot` + `netty` `vue.js` + `iview` ### oracle jdk 1.8+ openjfx(openjdkjavafx) ### ``` git clone cd proxyee-down/front #build html npm install npm run build cd ../main mvn clean package -Pprd ``` ### ``` java -jar proxyee-down-main.jar ```,"4.5k, Code, Pull requests, Actions, Projects, Wiki, Security, Insights, bug, enhancement, question, java, dependencies, invalid, good issue, Normal, Low, High, 4.0 Todo Task, 3.0 Todo Task"
ruoyi-vue-pro,YunaiV/ruoyi-vue-pro,24862,"['Java', 'PLpgSQL', 'TSQL']","['springboot', 'vue', 'mysql', 'redis', 'mybatis-plus']",**!** **** **** top3 Star ## * Vue3 + element-plus * Vue3 + vben(ant-design-vue) * Vue2 + element-ui * * ## | | JDK 8 + Spring Boot 2.7 | JDK 17/21 + Spring Boot 3.2 | |---------------------------------------------------------------------|---------------------------------------------------------------------------|---------------------------------------------------------------------------------------| | [ruoyi-vue-pro]( | [`master`]( | [`master-jdk17`]( | | [yudao-boot-mini]( | [`master`]( | [`master-jdk17`]( | * CRMERP * CRMERP []( 5-10 ## **** 100% > _Issues_ > > Star * Java `master` JDK 8 + Spring Boot 2.7`master-jdk17` JDK 17/21 + Spring Boot 3.2 * Vue3 `element-plus``vben(ant-design-vue)` Vue2 `element-ui` * `uni-app` APPH5 * Spring Boot MySQL + MyBatis PlusRedis + Redisson * MySQLOraclePostgreSQLSQL ServerMariaDB DMTiDB * EventRedisRabbitMQKafkaRocketMQ * Spring Security & Token & Redis SSO * Redis * SaaS * Flowable / * JavaVue SQL * Spring WebSocket Token WebSocket * * MinIO * ## []( ### | | Star | | |-----------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------| | [ruoyi-vue-pro]( | []( []( | Spring Boot | | [yudao-cloud]( | []( []( | Spring Cloud | | [Spring-Boot-Labs]( | []( []( | Spring Boot & Cloud | ### | | Star | | |----------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------| | [yudao-ui-admin-vue3]( | []( []( | Vue3 + element-plus | | [yudao-ui-admin-vben]( | []( []( | Vue3 + vben(ant-design-vue) | | [yudao-mall-uniapp]( | []( []( | uni-app | | [yudao-ui-admin-vue2]( | []( []( | Vue2 + element-ui | | [yudao-ui-admin-uniapp]( | []( []( | Vue2 + element-ui | | [yudao-ui-go-view]( | []( []( | Vue3 + naive-ui | ## **** Apache 2.0 [MIT License]( 100% Copyright []( Java 113770 Java 42462 ## **Aix9975** SCRM OA ERP CMS HIS IM ## * * * ERP CRM > RuoYi-Vue ******** > > * > * **** ### | | | | |-----|-------|---------------------------------| | | | | | | | | | | | | | | | | | | | | | | | | | | | SaaS | | | | | | | | | | | | | | | | | | | | | | | | Swagger | | | | | | | | | | | | | | | | | | | | SSO OAuth2 | | | | IP | ### | | | | |-----|-------|----------------------------------------| | | | 7 | | | | Element UI | | | | | | | | | | | | | | | | | | | OA | | ### | | | | |-----|------|---------------------------| | | | | | | | | | | | | | | | | | | | | ### | | | | |-----|-----------|----------------------------------------------| | | | JavaVueSQL CRUD | | | | Swagger RESTful API | | | | Screw WordHTMLMD | | | | HTML JSONVue | | | | SpringBoot | | | | ) | | | | S3MinIOFTP | | | WebSocket | WebSocket | | | API | RESTful API API | | | MySQL | SQL | | | Redis | Redis Redis Key | | | | Redis Stream Pub/Sub | | | Java | Spring Boot Admin Java | | | | SkyWalking | | | | SkyWalking | | | | Redis | | | | | | | | JUnit + Mockito | ### | | | | |-----|-------|--------------------| | | | | | | | | ### | | | | |-----|--------|-------------------------------| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | ### ### | | | | |-----|------|----------------------------------| | | | C | | | | | | | | | | | | | | | | | ### ERP ### CRM ## ### | | | |-----------------------|--------------------| | `yudao-dependencies` | Maven | | `yudao-framework` | Java | | `yudao-server` | + APP | | `yudao-module-system` | Module | | `yudao-module-member` | Module | | `yudao-module-infra` | Module | | `yudao-module-bpm` | Module | | `yudao-module-pay` | Module | | `yudao-module-mall` | Module | | `yudao-module-erp` | ERP Module | | `yudao-module-crm` | CRM Module | | `yudao-module-mp` | Module | | `yudao-module-report` | Module | ### | | | | | |---------------------------------------------------------------------------------------------|------------------|----------------|----------------------------------------------------------------| | [Spring Boot]( | | 2.7.18 | []( | | [MySQL]( | | 5.7 / 8.0+ | | | [Druid]( | JDBC | 1.2.19 | []( | | [MyBatis Plus]( | MyBatis | 3.5.3.2 | []( | | [Dynamic Datasource]( | | 3.6.1 | []( | | [Redis]( | key-value | 5.0 / 6.0 /7.0 | | | [Redisson]( | Redis | 3.18.0 | []( | | [Spring MVC]( | MVC | 5.3.24 | []( | | [Spring Security]( | Spring | 5.7.11 | []( | | [Hibernate Validator]( | | 6.2.5 | []( | | [Flowable]( | | 6.8.0 | []( | | [Quartz]( | | 2.3.2 | []( | | [Springdoc]( | Swagger | 1.6.15 | []( | | [SkyWalking]( | | 8.12.0 | []( | | [Spring Boot Admin]( | Spring Boot | 2.7.10 | []( | | [Jackson]( | JSON | 2.13.3 | | | [MapStruct]( | Java Bean | 1.5.5.Final | []( | | [Lombok]( | Java | 1.18.30 | []( | | [JUnit]( | Java | 5.8.2 | - | | [Mockito]( | Java Mock | 4.8.0 | - | ## ### | | biu | biu | biu | |----------|-----------------------------|---------------------------|--------------------------| | & | | | | | & | | | | | & | | | - | | & | | | - | | & | | | - | | | | | - | | | | | | | & | | | | | & | | | - | ### | | biu | biu | biu | |---------|---------------------------------|---------------------------------|---------------------------------| | | | | | | & | | | - | | | | | | | & | | | | | OA | | | | ### | | biu | biu | biu | |---------------|-------------------------------|-----------------------------|---------------------------| | | | | - | | | | | - | | & | | | | | | | | - | | API | | | - | | MySQL & Redis | | | - | | | | | | ### | | biu | biu | biu | |---------|---------------------------|---------------------------------|---------------------------------| | & | | | | | & | | | --- | ### | | biu | biu | biu | |-------|---------------------------------|---------------------------------|---------------------------------------| | | | | | | | | | | ### | biu | biu | biu | |----------------------------------|----------------------------------|----------------------------------| | | | | | | | | | | | |,"5.2k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, enhancement, bug, wontfix, vue3, vue2, server, question, invalid, help wanted, good first issue, duplicate, documentation"
SmartRefreshLayout,scwang90/SmartRefreshLayout,24724,"['Java', 'Batchfile']","['refreshlayout', 'overscroll', 'pull-to-refresh', 'pulltorefresh', 'android']","# Android-SmartRefreshLayout []( []( []( []( []( ## [English](README_EN.md) | SmartRefreshLayoutHeaderFooter SmartRefreshLayoutView ViewGroup FrameLayoutLinearLayout [SwipeRefreshLayout]( [Ultra-Pull-To-Refresh]( Header Footer ## IOS IOS[]( ## github []( ## : - - - Layout (LinearLayout,FrameLayout...) - ViewAbsListViewRecyclerViewWebView....View - Header Footer. - ListView CoordinatorLayout . - . - . - App. - - - Header Footer - AndroidX - []( - [IOS]( ## - []( - []( - []( - []( - []( - []( - []( - [Header]( ## Demo [ APK-Demo]( #### ||| |:---:|:---:| ||| ||| |:---:|:---:| ||| #### Style |Delivery|DropBox| |:---:|:---:| ||| |[Refresh-your-delivery]( githubHeader |BezierRadar|BezierCircle| |:---:|:---:| ||| |[Pull To Refresh]( Down To Refresh]( |FlyRefresh|Classics| |:---:|:---:| ||| |[FlyRefresh]( |Phoenix|Taurus| |:---:|:---:| ||| |[Yalantis/Phoenix]( |BattleCity|HitBlock| |:---:|:---:| ||| |[FunGame/BattleCity]( |WaveSwipe|Material| |:---:|:---:| ||| |[WaveSwipeRefreshLayout]( |StoreHouse|WaterDrop| |:---:|:---:| ||| |[CRefreshLayout]( HeaderHeader V2.x 8 - refresh-layout-kernel - refresh-header-classics - refresh-header-radar - refresh-header-falsify - refresh-header-material - refresh-header-two-level - refresh-footer-ball - refresh-footer-classics ## #### 1. build.gradle ```gradle implementation 'androidx.appcompat:appcompat:1.0.0' // 1.0.0 implementation 'io.github.scwang90:refresh-layout-kernel:2.1.0' // implementation 'io.github.scwang90:refresh-header-classics:2.1.0' // implementation 'io.github.scwang90:refresh-header-radar:2.1.0' // implementation 'io.github.scwang90:refresh-header-falsify:2.1.0' // implementation 'io.github.scwang90:refresh-header-material:2.1.0' // implementation 'io.github.scwang90:refresh-header-two-level:2.1.0' // implementation 'io.github.scwang90:refresh-footer-ball:2.1.0' // implementation 'io.github.scwang90:refresh-footer-classics:2.1.0' // ``` AndroidX gradle.properties ~ ``` android.useAndroidX=true android.enableJetifier=true ``` #### 2.XML SmartRefreshLayout ```xml ``` #### 3. Activity Fragment ```java RefreshLayout refreshLayout = (RefreshLayout)findViewById(R.id.refreshLayout); refreshLayout.setRefreshHeader(new ClassicsHeader(this)); refreshLayout.setRefreshFooter(new ClassicsFooter(this)); refreshLayout.setOnRefreshListener(new OnRefreshListener() { @Override public void onRefresh(RefreshLayout refreshlayout) { refreshlayout.finishRefresh(2000/*,false*/);//false } }); refreshLayout.setOnLoadMoreListener(new OnLoadMoreListener() { @Override public void onLoadMore(RefreshLayout refreshlayout) { refreshlayout.finishLoadMore(2000/*,false*/);//false } }); ``` ## Header Footer #### 1. ```java public class App extends Application { //static static { //Header SmartRefreshLayout.setDefaultRefreshHeaderCreator(new DefaultRefreshHeaderCreator() { @Override public RefreshHeader createRefreshHeader(Context context, RefreshLayout layout) { layout.setPrimaryColorsId(R.color.colorPrimary, android.R.color.white);// return new ClassicsHeader(context);//.setTimeFormat(new DynamicTimeFormat("" %s""));//Header Header } }); //Footer SmartRefreshLayout.setDefaultRefreshFooterCreator(new DefaultRefreshFooterCreator() { @Override public RefreshFooter createRefreshFooter(Context context, RefreshLayout layout) { //Footer BallPulseFooter return new ClassicsFooter(context).setDrawableSize(20); } }); } } ``` HeaderFooter #### 2. XML ```xml ``` XMLHeaderFooterAndroid Studio ~ #### 3. Java ```java final RefreshLayout refreshLayout = (RefreshLayout) findViewById(R.id.refreshLayout); // Header refreshLayout.setRefreshHeader(new BezierRadarHeader(this).setEnableHorizontalDrag(true)); // Footer refreshLayout.setRefreshFooter(new BallPulseFooter(this).setSpinnerStyle(SpinnerStyle.Scale)); ``` #### 4. - []( - []( - [Header]( ## SmartRefreshLayout ## SmartRefreshLayout SmartRefreshLayout ""Star"" ^_^ ~ > ~ githubgithub []( #### [github/afKT/DevUtils]( [github/Loror]( [github/faith-hb/WidgetCase]( [github/Bamboy120315/Freedom]( [github/Tencent/APIJSON]( [github/dengyuhan]( [github/zrp2017]( [github/fly803/BaseProject]( [github/razerdp]( [github/SuperChenC/s-mvp]( [github/KingJA/LoadSir]( [github/jianshijiuyou]( [github/zxy198717]( [github/addappcn]( [github/RainliFu]( [github/sugarya]( [github/stormzhang]( ## ### QQ - 602537182 #### Bug bug bugbug QQ ### QQ - 914275312 477963933 538979188 #### Bug #### ~ ## [MultiWaveHeader]( [SmartRefreshHorizontal]( []( ## [SwipeRefreshLayout]( [Ultra-Pull-To-Refresh]( [TwinklingRefreshLayout]( [BeautifulRefreshLayout]( License ------- Copyright 2017 scwang90 Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","4.9k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, bug, invalid, help wanted, enhancement, good first issue, wontfix, question, duplicate"
EventBus,greenrobot/EventBus,24599,"['Java', 'CSS']",[],"EventBus ======== [EventBus]( is a publish/subscribe event bus for Android and Java. []( []( EventBus... * simplifies the communication between components * decouples event senders and receivers * performs well with Activities, Fragments, and background threads * avoids complex and error-prone dependencies and life cycle issues * makes your code simpler * is fast * is tiny (~60k jar) * is proven in practice by apps with 1,000,000,000+ installs * has advanced features like delivery threads, subscriber priorities, etc. EventBus in 3 steps ------------------- 1. Define events: ```java public static class MessageEvent { /* Additional fields if needed */ } ``` 2. Prepare subscribers: Declare and annotate your subscribing method, optionally specify a [thread mode]( ```java @Subscribe(threadMode = ThreadMode.MAIN) public void onMessageEvent(MessageEvent event) { // Do something } ``` Register and unregister your subscriber. For example on Android, activities and fragments should usually register according to their life cycle: ```java @Override public void onStart() { super.onStart(); EventBus.getDefault().register(this); } @Override public void onStop() { super.onStop(); EventBus.getDefault().unregister(this); } ``` 3. Post events: ```java EventBus.getDefault().post(new MessageEvent()); ``` Read the full [getting started guide]( There are also some [examples]( **Note:** we highly recommend the [EventBus annotation processor with its subscriber index]( This will avoid some reflection related problems seen in the wild. Add EventBus to your project ---------------------------- Available on Maven Central. Android projects: ```groovy implementation(""org.greenrobot:eventbus:3.3.1"") ``` Java projects: ```groovy implementation(""org.greenrobot:eventbus-java:3.3.1"") ``` ```xml org.greenrobot eventbus-java 3.3.1 ``` R8, ProGuard ------------ If your project uses R8 or ProGuard this library ships [with embedded rules](/eventbus-android/consumer-rules.pro). Homepage, Documentation, Links ------------------------------ For more details please check the [EventBus website]( Here are some direct links you may find useful: [Features]( [Documentation]( [Changelog]( [FAQ]( License ------- Copyright (C) 2012-2021 Markus Junginger, greenrobot ( EventBus binaries and source code can be used according to the [Apache License, Version 2.0](LICENSE). Other projects by greenrobot ============================ [__ObjectBox__]( ([GitHub]( is a new superfast object-oriented database. [__Essentials__]( is a set of utility classes and hash functions for Android & Java projects.","4.7k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, enhancement, more info required, not sure about this, need to investigate, confirmed, bug, wontfix, question, duplicate"
Hystrix,Netflix/Hystrix,23914,"['Java', 'Clojure', 'CSS']",[],"# Hystrix: Latency and Fault Tolerance for Distributed Systems []() [![][travis img]][travis] [![][maven img]][maven] [![][license img]][license] # Hystrix Status Hystrix is no longer in active development, and is currently in maintenance mode. Hystrix (at version 1.5.18) is stable enough to meet the needs of Netflix for our existing applications. Meanwhile, our focus has shifted towards more adaptive implementations that react to an applications real time performance rather than pre-configured settings (for example, through [adaptive concurrency limits]( For the cases where something like Hystrix makes sense, we intend to continue using Hystrix for existing applications, and to leverage open and active projects like [resilience4j]( for new internal projects. We are beginning to recommend others do the same. Netflix Hystrix is now officially in maintenance mode, with the following expectations to the greater community: Netflix will no longer actively review issues, merge pull-requests, and release new versions of Hystrix. We have made a final release of Hystrix (1.5.18) per [issue 1891]( so that the latest version in Maven Central is aligned with the last known stable version used internally at Netflix (1.5.11). If members of the community are interested in taking ownership of Hystrix and moving it back into active mode, please reach out to hystrixoss@googlegroups.com. Hystrix has served Netflix and the community well over the years, and the transition to maintenance mode is in no way an indication that the concepts and ideas from Hystrix are no longer valuable. On the contrary, Hystrix has inspired many great ideas and projects. We thank everyone at Netflix, and in the greater community, for all the contributions made to Hystrix over the years. ## Introduction Hystrix is a latency and fault tolerance library designed to isolate points of access to remote systems, services and 3rd party libraries, stop cascading failure and enable resilience in complex distributed systems where failure is inevitable. ## Full Documentation See the [Wiki]( for full documentation, examples, operational details and other information. See the [Javadoc]( for the API. ## Communication - Google Group: [HystrixOSS]( - Twitter: [@HystrixOSS]( - [GitHub Issues]( ## What does it do? #### 1) Latency and Fault Tolerance Stop cascading failures. Fallbacks and graceful degradation. Fail fast and rapid recovery. Thread and semaphore isolation with circuit breakers. #### 2) Realtime Operations Realtime monitoring and configuration changes. Watch service and property changes take effect immediately as they spread across a fleet. Be alerted, make decisions, affect change and see results in seconds. #### 3) Concurrency Parallel execution. Concurrency aware request caching. Automated batching through request collapsing. ## Hello World! Code to be isolated is wrapped inside the run() method of a HystrixCommand similar to the following: ```java public class CommandHelloWorld extends HystrixCommand { private final String name; public CommandHelloWorld(String name) { super(HystrixCommandGroupKey.Factory.asKey(""ExampleGroup"")); this.name = name; } @Override protected String run() { return ""Hello "" + name + ""!""; } } ``` This command could be used like this: ```java String s = new CommandHelloWorld(""Bob"").execute(); Future s = new CommandHelloWorld(""Bob"").queue(); Observable s = new CommandHelloWorld(""Bob"").observe(); ``` More examples and information can be found in the [How To Use]( section. Example source code can be found in the [hystrix-examples]( module. ## Binaries Binaries and dependency information for Maven, Ivy, Gradle and others can be found at [ Change history and version numbers => [CHANGELOG.md]( Example for Maven: ```xml com.netflix.hystrix hystrix-core x.y.z ``` and for Ivy: ```xml ``` If you need to download the jars instead of using a build system, create a Maven pom file like this with the desired version: ```xml 4.0.0 com.netflix.hystrix.download hystrix-download 1.0-SNAPSHOT Simple POM to download hystrix-core and dependencies com.netflix.hystrix hystrix-core x.y.z ``` Then execute: ``` mvn -f download-hystrix-pom.xml dependency:copy-dependencies ``` It will download hystrix-core-*.jar and its dependencies into ./target/dependency/. You need Java 6 or later. ## Build To build: ``` $ git clone git@github.com:Netflix/Hystrix.git $ cd Hystrix/ $ ./gradlew build ``` Further details on building can be found on the [Getting Started]( page of the wiki. ## Run Demo To run a [demo app]( do the following: ``` $ git clone git@github.com:Netflix/Hystrix.git $ cd Hystrix/ ./gradlew runDemo ``` You will see output similar to the following: ``` Request => GetUserAccountCommand[SUCCESS][8ms], GetPaymentInformationCommand[SUCCESS][20ms], GetUserAccountCommand[SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][101ms], CreditCardCommand[SUCCESS][1075ms] Request => GetUserAccountCommand[FAILURE, FALLBACK_SUCCESS][2ms], GetPaymentInformationCommand[SUCCESS][22ms], GetUserAccountCommand[FAILURE, FALLBACK_SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][130ms], CreditCardCommand[SUCCESS][1050ms] Request => GetUserAccountCommand[FAILURE, FALLBACK_SUCCESS][4ms], GetPaymentInformationCommand[SUCCESS][19ms], GetUserAccountCommand[FAILURE, FALLBACK_SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][145ms], CreditCardCommand[SUCCESS][1301ms] Request => GetUserAccountCommand[SUCCESS][4ms], GetPaymentInformationCommand[SUCCESS][11ms], GetUserAccountCommand[SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][93ms], CreditCardCommand[SUCCESS][1409ms] ##################################################################################### # CreditCardCommand: Requests: 17 Errors: 0 (0%) Mean: 1171 75th: 1391 90th: 1470 99th: 1486 # GetOrderCommand: Requests: 21 Errors: 0 (0%) Mean: 100 75th: 144 90th: 207 99th: 230 # GetUserAccountCommand: Requests: 21 Errors: 4 (19%) Mean: 8 75th: 11 90th: 46 99th: 51 # GetPaymentInformationCommand: Requests: 21 Errors: 0 (0%) Mean: 18 75th: 21 90th: 24 99th: 25 ##################################################################################### Request => GetUserAccountCommand[SUCCESS][10ms], GetPaymentInformationCommand[SUCCESS][16ms], GetUserAccountCommand[SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][51ms], CreditCardCommand[SUCCESS][922ms] Request => GetUserAccountCommand[SUCCESS][12ms], GetPaymentInformationCommand[SUCCESS][12ms], GetUserAccountCommand[SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][68ms], CreditCardCommand[SUCCESS][1257ms] Request => GetUserAccountCommand[SUCCESS][10ms], GetPaymentInformationCommand[SUCCESS][11ms], GetUserAccountCommand[SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][78ms], CreditCardCommand[SUCCESS][1295ms] Request => GetUserAccountCommand[FAILURE, FALLBACK_SUCCESS][6ms], GetPaymentInformationCommand[SUCCESS][11ms], GetUserAccountCommand[FAILURE, FALLBACK_SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][153ms], CreditCardCommand[SUCCESS][1321ms] ``` This demo simulates 4 different [HystrixCommand]( implementations with failures, latency, timeouts and duplicate calls in a multi-threaded environment. It logs the results of [HystrixRequestLog]( and metrics from [HystrixCommandMetrics]( ## Dashboard The hystrix-dashboard component of this project has been deprecated and moved to [Netflix-Skunkworks/hystrix-dashboard]( Please see the README there for more details including important security considerations. ## Bugs and Feedback For bugs, questions and discussions please use the [GitHub Issues]( ## LICENSE Copyright 2013 Netflix, Inc. Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. [travis]: [travis img]: [maven]: [maven img]: [release]: [release img]: [license]:LICENSE-2.0.txt [license img]:","4.7k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, hystrix-core, question, enhancement, metrics, discussion, dashboard, javanica, bug, PR-welcome, documentation, performance, wontfix, invalid, duplicate, clojure"
Telegram,DrKLO/Telegram,23899,"['Java', 'C++', 'C']",['telegram'],"## Telegram messenger for Android [Telegram]( is a messaging app with a focus on speed and security. Its superfast, simple and free. This repo contains the official source code for [Telegram App for Android]( ## Creating your Telegram Application We welcome all developers to use our API and source code to create applications on our platform. There are several things we require from **all developers** for the moment. 1. [**Obtain your own api_id**]( for your application. 2. Please **do not** use the name Telegram for your app or make sure your users understand that it is unofficial. 3. Kindly **do not** use our standard logo (white paper plane in a blue circle) as your app's logo. 3. Please study our [**security guidelines**]( and take good care of your users' data and privacy. 4. Please remember to publish **your** code too in order to comply with the licences. ### API, Protocol documentation Telegram API manuals: MTproto protocol manuals: ### Compilation Guide **Note**: In order to support [reproducible builds]( this repo contains dummy release.keystore, google-services.json and filled variables inside BuildVars.java. Before publishing your own APKs please make sure to replace all these files with your own. You will require Android Studio 3.4, Android NDK rev. 20 and Android SDK 8.1 1. Download the Telegram source code from ( git clone ) 2. Copy your release.keystore into TMessagesProj/config 3. Fill out RELEASE_KEY_PASSWORD, RELEASE_KEY_ALIAS, RELEASE_STORE_PASSWORD in gradle.properties to access your release.keystore 4. Go to create two android apps with application IDs org.telegram.messenger and org.telegram.messenger.beta, turn on firebase messaging and download google-services.json, which should be copied to the same folder as TMessagesProj. 5. Open the project in the Studio (note that it should be opened, NOT imported). 6. Fill out values in TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java theres a link for each of the variables showing where and which data to obtain. 7. You are ready to compile Telegram. ### Localization We moved all translations to Please use it.","7.8k, Code, Pull requests, Actions, Projects, Security, Insights, enhancement, wontfix, question, invalid, duplicate, bug"
meteor,meteor/meteor,44077,"['JavaScript', 'TypeScript', 'Shell']","['javascript', 'meteor', 'mongodb', 'build-system', 'npm']","[]( []( []( []( Meteor is an **ultra-simple** environment for building **modern** web applications. - [Official Website]( - [Installation]( - [Documentation]( ### **Create your applications using modern JavaScript** Benefit from the latest technology updates to rapidly prototype and develop your applications. ### **Integrate technologies you already use** Use popular frameworks and tools right out-of-the-box. Focus on building features instead of configuring disparate components yourself. ### **Build apps for any device** Use the same code whether youre developing for web, iOS, Android, or desktop for a seamless update experience for your users. # Getting Started How about trying a tutorial to get started with your favorite technology? | [ React]( | | - | | [ Blaze]( | | [ Vue]( | | [ Svelte]( | Next, read the [documentation]( and get some [examples]( # Quick Start On your platform, use this line: ```shell > npm install -g meteor ``` To create a project: ```shell > meteor create my-app ``` Run it: ```shell cd my-app meteor ``` # Developer Resources **Building an application with Meteor?** * Deploy on [Meteor Cloud]( * Discuss on [Forums]( * Join the Meteor community Slack by clicking this [invite link]( * Announcement list. Subscribe in the [footer]( Interested in helping or contributing to Meteor? These resources will help: * [Core development guide](DEVELOPMENT.md) * [Contribution guidelines](CONTRIBUTING.md) * [Feature requests]( * [Issue tracker]( To uninstall Meteor: - If installed via npm, run: ```shell meteor-installer uninstall ``` - If installed via curl, run: ```shell rm -rf ~/.meteor sudo rm /usr/local/bin/meteor ``` To find more information about installation, [read here](","5.2k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, confirmed, Type:Bug, Project:Tool, Project:Isobuild, Project:Mongo Driver, Project:Mobile, good first issue, Project:NPM, in-discussion, Meteor 3, Project:Docs, Project:Accounts:Password, Severity:has-workaround, Project:DDP, Impact:few, needs-investigation, missing-docs, hacktoberfest, Project:JS Environment, needs-reproduction, Project:Windows, Project:JS Environment:Typescript, Project:HMR, Impact:some, Project:Minimongo, Project:Isobuild:Minifiers, Project:Webapp, Project:Installer, Project:Apple, Project:Accounts:OAuth"
uBlock,gorhill/uBlock,43748,"['JavaScript', 'CSS', 'HTML']","['ublock-origin', 'blocker', 'firefox', 'chromium', 'ublock']","[![Badge Commits]][Commit Rate] [![Badge Issues]][Issues] [![Badge Localization]][Crowdin] [![Badge License]][License] [![Badge NPM]][NPM] [![Badge Mozilla]][Mozilla] [![Badge Chrome]][Chrome] [![Badge Edge]][Edge] *** uBlock Origin (uBO) BEWARE! uBO is (and has always been) COMPLETELY UNRELATED to the website ublock.org. *** *** uBlock Origin (uBO) is a CPU and memory-efficient [wide-spectrum content blocker][Blocking] for Chromium and Firefox. It blocks ads, trackers, coin miners, popups, annoying anti-blockers, malware sites, etc., by default using [EasyList][EasyList], [EasyPrivacy][EasyPrivacy], [Peter Lowe's Blocklist][Peter Lowe's Blocklist], [Online Malicious URL Blocklist][Malicious Blocklist], and uBO [filter lists][uBO Filters]. There are many other lists available to block even more. Hosts files are also supported. uBO uses the EasyList filter syntax and [extends][Extended Syntax] the syntax to work with custom rules and filters. You may easily unselect any preselected filter lists if you think uBO blocks too much. For reference, Adblock Plus installs with only EasyList, ABP filters, and Acceptable Ads enabled by default. It is important to note that using a blocker is **NOT** [theft]. Do not fall for this creepy idea. The _ultimate_ logical consequence of `blocking = theft` is the criminalization of the inalienable right to privacy. Ads, ""unintrusive"" or not, are just the visible portion of the privacy-invading means entering your browser when you visit most sites. **uBO's primary goal is to help users neutralize these privacy-invading methods** in a way that welcomes those users who do not wish to use more technical means. *** * [Documentation](#documentation) * [Installation](#installation) * [Firefox](#firefox) * [Thunderbird](#thunderbird) * [Chromium](#chromium) * [All Programs](#all-programs) * [Enterprise Deployment](#enterprise-deployment) * [Release History](#release-history) * [Translations](#translations) * [About](#about) ## Documentation Basic Mode Advanced Mode The simple popup user interface for an install-it-and-forget-it type of installation that is configured optimally by default. The advanced popup user interface includes a point-and-click firewall that is configurable on a per-site basis. Visit the [Wiki][Wiki] for documentation. For support, questions, or help, visit [/r/uBlockOrigin][Reddit]. ## Installation [Required Permissions][Permissions] #### Firefox [Firefox Add-ons][Mozilla] [Development Builds][Beta] uBO [works best][Works Best] on Firefox and is available for desktop and Android versions. #### Thunderbird [Thunderbird Add-ons][Thunderbird] In Thunderbird, uBlock Origin does not affect emails, just feeds. #### Chromium [Chrome Web Store][Chrome] [Microsoft Edge Add-ons][Edge] (Published by: [Nicole Rolls][Nicole Rolls]) [Opera Add-ons][Opera] [Development Builds][Chrome Dev] uBO should be compatible with any Chromium-based browser. #### All Programs Do **NOT** use uBO with any other content blocker. uBO [performs][Performance] as well as or better than most popular blockers. Other blockers can prevent uBO's privacy or anti-blocker-defusing features from working correctly. [Manual Installation][Manual Installation] #### Enterprise Deployment [Deploying uBO][Deployment] ## Release History [Releases Page][Releases] ## Translations Help translate uBO via [Crowdin][Crowdin]. ## About [Manifesto][Manifesto] [Privacy Policy][Privacy Policy] [GPLv3 License][License] Free. Open-source. For users by users. No donations sought. If you ever want to contribute something, think about the people working hard to maintain the filter lists you are using, which are available to use by all for free. [Peter Lowe's Blocklist]: [Malicious Blocklist]: [Performance]: [EasyPrivacy]: [Thunderbird]: [Chrome Dev]: [EasyList]: [Mozilla]: [Crowdin]: [Chrome]: [Reddit]: [Theft]: [Opera]: [Edge]: [NPM]: [Manifesto]: MANIFESTO.md [License]: LICENSE.txt [Nicole Rolls]: [Manual Installation]: [Extended Syntax]: [Privacy Policy]: [uBO Filters]: [Permissions]: [Commit Rate]: [Works Best]: [Deployment]: [Blocking]: [Releases]: [Issues]: [Beta]: [Wiki]: [Badge Localization]: [Badge Commits]: [Badge Mozilla]: [Badge License]: [Badge Chrome]: [Badge Edge]: [Badge Issues]: [Badge NPM]:","2.9k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, unable to reproduce, wontfix, web site issue, support issue, something to fix, regression, obsolete, not a bug, need feedback, invalid, help wanted, fixing, filter issue, external, enhancement, duplicate, declined, bug, browser bug, available, accepted, Firefox, Chromium"
Motrix,agalwood/Motrix,43668,"['JavaScript', 'Vue', 'SCSS']","['motrix', 'aria2', 'download-manager', 'macos', 'windows']","# Motrix ## A full-featured download manager []( English | [](./README-CN.md) Motrix is a full-featured download manager that supports downloading HTTP, FTP, BitTorrent, Magnet, etc. Motrix has a clean and easy to use interface. I hope you will like it . [Official Website]( | [Manual]( ## Installation Download from [GitHub Releases]( and install it. ### Windows It is recommended to install Motrix using the installation package (Motrix-Setup-x.y.z.exe) to ensure a complete experience, such as associating torrent files, capturing magnet links, etc. If you use package management tools to manage applications on Windows, such as [Chocolatey]( [scoop]( You can use them to install Motrix. #### Chocolatey Thanks to [@Yato]( for continuing to maintain the [Motrix Chocolatey]( package. To install motrix, run the following command from the `command line` or from `PowerShell`: ```bash # Install choco install motrix # Upgrade choco upgrade motrix ``` #### scoop If you prefer the portable version, you can use [scoop]( (need Windows 7+) to install Motrix. ```bash scoop bucket add extras scoop install motrix ``` ### macOS The macOS users can install Motrix using `brew`, thanks to [PR]( of [@Mitscherlich]( ```bash brew update && brew install motrix ``` #### Auto Update Since Motrix v1.8.0 and later versions changed the App BundleID ( `net.agalwood.Motrix` => `app.motrix.native` ), the automatic update of Motrix v1.6.11 will fail. [Motrix Install Assistant]( will help you install the latest Motrix application. ### Linux You can download the `AppImage` (for all Linux distributions) or `snap` to install Motrix, see [GitHub/release]( for more Linux installation package formats. Motrix may need to run with `sudo` for the first time in Linux because there is no permission to create the download session file (`/var/cache/aria2.session`). If you want to build from source code, please read the **Build** section. #### AppImage The latest version of Motrix AppImage requires you to manually perform desktop integration. Please check the documentation of [AppImageLauncher]( . > Desktop Integration > Since electron-builder 21 desktop integration is not a part of produced AppImage file. > [AppImageLauncher]( is the recommended way to integrate AppImages. Deepin 20 Beta users failed to install Motrix, please follow the steps below: Open the `Terminal`, paste and run the following command to install Motrix again. ```bash sudo apt --fix-broken install ``` #### Snap Motrix has been listed on [Snapcraft]( , Ubuntu users recommend downloading from the Snap Store. Tips for v1.5.10 The tray may not display the indicator normally, which makes it inconvenient to exit the application. Please unchecked Preferences--Basic Settings--Hide App Menu (Windows & Linux Only), click Save & Apply. Then click ""Exit"" in the File menu to exit the application. Please update to v1.5.12 and above, you can use the keyboard shortcut Ctrl + q to quickly exit the application. #### AUR For Arch Linux users, Motrix is available in [aur]( thanks to the maintainer [@weearc]( Run the following command to install: ```bash yay -S motrix ``` #### Flatpak Thanks to the [PR]( of [@proletarius101]( Motrix has been listed [Flathub]( Linux users who like the Flatpak can try it. ```bash # Install flatpak install flathub net.agalwood.Motrix # Run flatpak run net.agalwood.Motrix ``` ## Features - Simple and clear user interface - Supports BitTorrent & Magnet - BitTorrent selective download - Update tracker list every day automatically - UPnP & NAT-PMP Port Mapping - Up to 10 concurrent download tasks - Supports 64 threads in a single task - Supports speed limit - Mock User-Agent - Download completed Notification - Ready for Touch Bar (Mac only) - Resident system tray for quick operation - Tray speed meter displays real-time speed (Mac only) - Dark mode - Delete related files when removing tasks (optional) - I18n, [View supported languages](#-internationalization). - More features in development ## User Interface ## Development ### Clone Code ```bash git clone git@github.com:agalwood/Motrix.git ``` ### Install Dependencies ```bash cd Motrix yarn ``` > Error: Electron failed to install correctly, please delete node_modules/electron and try installing again `Electron` failed to install correctly, please refer to ### Dev Mode ```bash yarn run dev ``` ### Build Release ```bash yarn run build ``` #### Build for Apple Silicon ```bash yarn run build:applesilicon ``` After building, the application will be found in the project's `release` directory. ## Technology Stack - [Electron]( - [Vue]( + [VueX]( + [Element]( - [Aria2]( ## TODO Development Roadmap see: [Trello]( ## Contribute []( If you are interested in participating in joint development, PR and Forks are welcome! ## Internationalization Translations into versions for other languages are welcome ! Please read the [translation guide](./CONTRIBUTING.md#-translation-guide) before starting translations. | Key | Name | Status | |-------|:--------------------|:-------------| | ar | Arabic | [@hadialqattan]( [@AhmedElTabarani]( | | bg | | [@null-none]( | | ca | Catal | [@marcizhu]( | | de | Deutsch | [@Schloemicher]( | | el | | [@Likecinema]( | | en-US | English | | | es | Espaol | [@Chofito]( | fa | | [@Nima-Ra]( | | fr | Franais | [@gpatarin]( | | hu | Hungarian | [@zalnaRs]( | | id | Indonesia | [@aarestu]( | | it | Italiano | [@blackcat-917]( | | ja | | [@hbkrkzk]( | | ko | | [@KOZ39]( | | nb | Norsk Bokml | [@rubjo]( | | nl | Nederlands | [@nickbouwhuis]( | | pl | Polski | [@KanarekLife]( | | pt-BR | Portuguese (Brazil) | [@andrenoberto]( | | ro | Romn | [@alyn3d]( | | ru | | [@bladeaweb]( | | th | | [@nxanywhere]( | | tr | Trke | [@abdullah]( | | uk | | [@bladeaweb]( | | vi | Ting Vit | [@duythanhvn]( | | zh-CN | | | | zh-TW | | [@Yukaii]( [@5idereal]( | ## License [MIT]( Copyright (c) 2018-present Dr_rOot","4.4k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, enhancement ✨, dependencies, wontfix ❌, request feature, question 🤔️, need more info 📩, invalid, help wanted, good first issue, duplicate, documentation 📓, discussion 💬, bug 🐞, bug/crash 💥"
parcel,parcel-bundler/parcel,43176,"['JavaScript', 'Rust', 'HTML']","['module-bundler', 'build-tool', 'javascript', 'css', 'html']","[](#backers) [](#sponsors) []( []( []( []( []( Parcel is a zero configuration build tool for the web. It combines a great out-of-the-box development experience with a scalable architecture that can take your project from just getting started to massive production application. ## Features - **Zero config** Parcel supports many languages and file types out of the box, from web technologies like HTML, CSS, and JavaScript, to assets like images, fonts, videos, and more. It has a built-in dev server with hot reloading, beautiful error diagnostics, and much more. No configuration needed! - **Lightning fast** Parcel's JavaScript compiler is written in Rust for native performance. Your code is built in parallel using worker threads, utilizing all of the cores on your machine. Everything is cached, so you never build the same code twice. It's like using watch mode, but even when you restart Parcel! - **Automatic production optimization** Parcel optimizes your whole app for production automatically. This includes tree-shaking and minifying your JavaScript, CSS, and HTML, resizing and optimizing images, content hashing, automatic code splitting, and much more. - **Ship for any target** Parcel automatically transforms your code for your target environments. From modern and legacy browser support, to zero config JSX and TypeScript compilation, Parcel makes it easy to build for any target or many! - **Scalable** Parcel requires zero configuration to get started. But as your application grows and your build requirements become more complex, it's possible to extend Parcel in just about every way. A simple configuration format and powerful plugin system that's designed from the ground up for performance means Parcel can support projects of any size. ## Getting Started See the following guides in our documentation on how to get started with Parcel. * [Building a webapp with Parcel]( * [Building a library with Parcel]( * [Migrating from Parcel v1]( ## Documentation Read the docs at ## Community - Ask questions on [GitHub Discussions]( - Join the community on [Discord]( - Stay up to date on new features and announcements on [Twitter]( ## Contributors This project exists thanks to all the people who contribute. [[Contribute]](CONTRIBUTING.md). ## Backers Thank you to all our backers! [[Become a backer]( ## Sponsors Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](","2.3k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, 🐛 Bug, ✨ Parcel 2, 🙋‍♀️ Feature, ✔️ Confirmed Bug, 🌳 Scope Hoisting, 🙏 Help Wanted, TypeScript, 💬 RFC, HMR, 🔌 Plugins, Good First Issue, CSS Preprocessing, Stale Ignore, Watcher, Vue, 💰 Cache, 🐡 JS Codegen, Resolver, Diagnostics, Stale, CSS, 🕐 Waiting, Windows, Web Extensions, Source Maps, HTML Preprocessing, Bundler, swc, Autoinstall, Node Bundling"
zx,google/zx,42033,"['JavaScript', 'TypeScript']","['javascript', 'nodejs', 'shell', 'bash', 'cli']","zx ```js #!/usr/bin/env zx await $`cat package.json | grep name` let branch = await $`git branch --show-current` await $`dep deploy --branch=${branch}` await Promise.all([ $`sleep 1; echo 1`, $`sleep 2; echo 2`, $`sleep 3; echo 3`, ]) let name = 'foo bar' await $`mkdir /tmp/${name}` ``` Bash is great, but when it comes to writing more complex scripts, many people prefer a more convenient programming language. JavaScript is a perfect choice, but the Node.js standard library requires additional hassle before using. The `zx` package provides useful wrappers around `child_process`, escapes arguments and gives sensible defaults. ## Install ```bash npm install zx ``` ## Documentation Read documentation on [google.github.io/zx]( ## License [Apache-2.0](LICENSE) Disclaimer: _This is not an officially supported Google product._","1.1k, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, feature, research, investigate, bug, wontfix, duplicate, dependencies"
yarn,yarnpkg/yarn,41350,"['JavaScript', 'Shell', 'PowerShell']","['yarn', 'npm', 'package-manager', 'javascript']","> ## Important note > > This repository holds the sources for Yarn 1.x (latest version at the time of this writing being 1.22). New releases (at this time the 3.2.3, although we're currently working on our next major) are tracked on the [yarnpkg/berry]( repository, this one here being mostly kept for historical purposes and the occasional hotfix we publish to make the migration from 1.x to later releases easier. > > If you hit bugs or issues with Yarn 1.x, we strongly suggest you [migrate]( to the latest release - at this point they have been maintained longer than 1.x, and many classes of problems have already been addressed there. By using the [`nodeLinker` setting]( you'll also have the choice of how you want to install your packages: node_modules like npm, symlinks like pnpm, or manifest files via [Yarn PnP]( --- Fast, reliable, and secure dependency management. --- **Fast:** Yarn caches every package it has downloaded, so it never needs to download the same package again. It also does almost everything concurrently to maximize resource utilization. This means even faster installs. **Reliable:** Using a detailed but concise lockfile format and a deterministic algorithm for install operations, Yarn is able to guarantee that any installation that works on one system will work exactly the same on another system. **Secure:** Yarn uses checksums to verify the integrity of every installed package before its code is executed. ## Features * **Offline Mode.** If you've installed a package before,thenyou can install it again withoutaninternet connection. * **Deterministic.** The same dependencies will be installed in the same exact way on any machine, regardless ofinstallationorder. * **Network Performance.** Yarn efficiently queuesrequests andavoids request waterfalls in order to maximize network utilization. * **Network Resilience.** A single request that fails will not cause the entire installation to fail. Requests are automatically retried upon failure. * **Flat Mode.** Yarn resolves mismatched versions of dependencies to a single version to avoid creating duplicates. * **More emojis.** ## Our supports ### [Gold sponsors]( All your environment variables, in one place. Stop struggling with scattered API keys, hacking together home-brewed tools, and avoiding access controls. Keep your team and servers in sync with Doppler. Your app, enterprise-ready. Start selling to enterprise customers with just a few lines of code. Add Single Sign-On (and more) in minutes instead of months with WorkOS. ## Installing Yarn Read the [Installation Guide]( on our website for detailed instructions on how to install Yarn. ## Using Yarn Read the [Usage Guide]( on our website for detailed instructions on how to use Yarn. ## Contributing to Yarn The 1.x codebase is fairly old and will only accept security fixes. For new features or bugfixes, please see our new [repository]( and its [contribution guide]( ## Prior art Yarn wouldn't exist if it wasn't for excellent prior art. Yarn has been inspired by the following projects: - [Bundler]( - [Cargo]( - [npm]( ## Credits Thanks to [Sam Holmes]( for donating the npm package name!","2.7k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, triaged, cat-feature, help wanted, cat-bug, good first issue, needs-discussion, cat-compatibility, high-priority, needs-confirmation, os-windows, cat-chore, bug, needs-repro-script, cat-documentation, fixed-in-modern, bug-high-priority, bug-distrib, question, next-major, wont-fix, will-close, test, stale, os-linux, failure, dependencies, cat-performance, cat-build, unreproducible, spam"
30-Days-Of-JavaScript,Asabeneh/30-Days-Of-JavaScript,41214,"['JavaScript', 'HTML']","['30daysofjavascript', 'javascript-for-everyone', 'css', 'html', 'javascript']","# 30 Days Of JavaScript | # Day | Topics | | ----- | :-------------------------------------------------------------------------------------------------------------------------------------------------: | | 01 | [Introduction](./readMe.md) | | 02 | [Data Types](./02_Day_Data_types/02_day_data_types.md) | | 03 | [Booleans, Operators, Date](./03_Day_Booleans_operators_date/03_booleans_operators_date.md) | | 04 | [Conditionals](./04_Day_Conditionals/04_day_conditionals.md) | | 05 | [Arrays](./05_Day_Arrays/05_day_arrays.md) | | 06 | [Loops](./06_Day_Loops/06_day_loops.md) | | 07 | [Functions](./07_Day_Functions/07_day_functions.md) | | 08 | [Objects](./08_Day_Objects/08_day_objects.md) | | 09 | [Higher Order Functions](./09_Day_Higher_order_functions/09_day_higher_order_functions.md) | | 10 | [Sets and Maps](./10_Day_Sets_and_Maps/10_day_Sets_and_Maps.md) | | 11 | [Destructuring and Spreading](./11_Day_Destructuring_and_spreading/11_day_destructuring_and_spreading.md) | | 12 | [Regular Expressions](./12_Day_Regular_expressions/12_day_regular_expressions.md) | | 13 | [Console Object Methods](./13_Day_Console_object_methods/13_day_console_object_methods.md) | | 14 | [Error Handling](./14_Day_Error_handling/14_day_error_handling.md) | | 15 | [Classes](./15_Day_Classes/15_day_classes.md) | | 16 | [JSON](./16_Day_JSON/16_day_json.md) | | 17 | [Web Storages](./17_Day_Web_storages/17_day_web_storages.md) | | 18 | [Promises](./18_Day_Promises/18_day_promises.md) | | 19 | [Closure](./19_Day_Closures/19_day_closures.md) | | 20 | [Writing Clean Code](./20_Day_Writing_clean_codes/20_day_writing_clean_codes.md) | | 21 | [DOM](./21_Day_DOM/21_day_dom.md) | | 22 | [Manipulating DOM Object](./22_Day_Manipulating_DOM_object/22_day_manipulating_DOM_object.md) | | 23 | [Event Listeners](./23_Day_Event_listeners/23_day_event_listeners.md) | | 24 | [Mini Project: Solar System](./24_Day_Project_solar_system/24_day_project_solar_system.md) | | 25 | [Mini Project: World Countries Data Visualization 1](./25_Day_World_countries_data_visualization_1/25_day_world_countries_data_visualization_1.md) | | 26 | [Mini Project: World Countries Data Visualization 2](./26_Day_World_countries_data_visualization_2/26_day_world_countries_data_visualization_2.md) | | 27 | [Mini Project: Portfolio](./27_Day_Mini_project_portfolio/27_day_mini_project_portfolio.md) | | 28 | [Mini Project: Leaderboard](./28_Day_Mini_project_leaderboard/28_day_mini_project_leaderboard.md) | | 29 | [Mini Project: Animating characters](./29_Day_Mini_project_animating_characters/29_day_mini_project_animating_characters.md) | | 30 | [Final Projects](./30_Day_Mini_project_final/30_day_mini_project_final.md) | HAPPY CODING Support the author to create more educational materials 30 Days Of JavaScript: Introduction Author: Asabeneh Yetayeh January, 2020 [English](./readMe.md) [Spanish](./Spanish/readme.md) [Italian](./Italian/readMe.md) [Russian](./RU/README.md) [Turkish](./Turkish/readMe.md) [Azerbaijan](./Azerbaijani/readMe.md) [Korean](./Korea/README.md) [Vietnamese](./Vietnamese/README.md) [Polish](./Polish/readMe.md) [Portuguese](./Portuguese/readMe.md) [Day 2 >>](./02_Day_Data_types/02_day_data_types.md) - [30 Days Of JavaScript](#30-days-of-javascript) - [ Day 1](#-day-1) - [Introduction](#introduction) - [Requirements](#requirements) - [Setup](#setup) - [Install Node.js](#install-nodejs) - [Browser](#browser) - [Installing Google Chrome](#installing-google-chrome) - [Opening Google Chrome Console](#opening-google-chrome-console) - [Writing Code on Browser Console](#writing-code-on-browser-console) - [Console.log](#consolelog) - [Console.log with Multiple Arguments](#consolelog-with-multiple-arguments) - [Comments](#comments) - [Syntax](#syntax) - [Arithmetics](#arithmetics) - [Code Editor](#code-editor) - [Installing Visual Studio Code](#installing-visual-studio-code) - [How to Use Visual Studio Code](#how-to-use-visual-studio-code) - [Adding JavaScript to a Web Page](#adding-javascript-to-a-web-page) - [Inline Script](#inline-script) - [Internal Script](#internal-script) - [External Script](#external-script) - [Multiple External Scripts](#multiple-external-scripts) - [Introduction to Data types](#introduction-to-data-types) - [Numbers](#numbers) - [Strings](#strings) - [Booleans](#booleans) - [Undefined](#undefined) - [Null](#null) - [Checking Data Types](#checking-data-types) - [Comments Again](#comments-again) - [Variables](#variables) - [ Day 1: Exercises](#-day-1-exercises) # Day 1 ## Introduction **Congratulations** on deciding to participate in 30 days of JavaScript programming challenge. In this challenge, you will learn everything you need to be a JavaScript programmer, and in general, the whole concept of programming. In the end of the challenge, you will get a 30DaysOfJavaScript programming challenge completion certificate. In case you need help or if you would like to help others you may join the dedicated [telegram group]( **A 30DaysOfJavaScript** challenge is a guide for both beginners and advanced JavaScript developers. Welcome to JavaScript. JavaScript is the language of the web. I enjoy using and teaching JavaScript and I hope you will do so too. In this step by step JavaScript challenge, you will learn JavaScript, the most popular programming language in the history of mankind. JavaScript is used **_to add interactivity to websites, to develop mobile apps, desktop applications, games_** and nowadays JavaScript can be used for **server-side programming**, **_machine learning_** and **_AI_**. **_JavaScript (JS)_** has increased in popularity in recent years and has been the leading programming language for last ten years and is the most used programming language on GitHub. This challenge is easy to read, written in conversational English, engaging, motivating and at the same time, it is very demanding. You need to allocate much time to finish this challenge. If you are a visual learner, you may get the video lesson on Washera YouTube channel. Subscribe the channel, comment and ask questions on YouTube vides and be proactive, the author will eventually notice you. The author likes to hear your opinion about the challenge, share the author by expressing your thoughts about the 30DaysOfJavaScript challenge. You can leave your testimonial on this [link]( ## Requirements No prior knowledge of programming is required to follow this challenge. You need only: 1. Motivation 2. A computer 3. Internet 4. A browser 5. A code editor ## Setup I believe you have the motivation and a strong desire to be a developer, a computer and Internet. If you have those, then you have everything to get started. ### Install Node.js You may not need Node.js right now but you may need it for later. Install [node.js]( After downloading double click and install We can check if node is installed on our local machine by opening our device terminal or command prompt. ```sh asabeneh $ node -v v12.14.0 ``` When making this tutorial I was using Node version 12.14.0, but now the recommended version of Node.js for download is v14.17.6, by the time you use this material you may have a higher Node.js version. ### Browser There are many browsers out there. However, I strongly recommend Google Chrome. #### Installing Google Chrome Install [Google Chrome]( if you do not have one yet. We can write small JavaScript code on the browser console, but we do not use the browser console to develop applications. #### Opening Google Chrome Console You can open Google Chrome console either by clicking three dots at the top right corner of the browser, selecting _More tools -> Developer tools_ or using a keyboard shortcut. I prefer using shortcuts. To open the Chrome console using a keyboard shortcut. ```sh Mac Command+Option+J Windows/Linux: Ctl+Shift+J ``` After you open the Google Chrome console, try to explore the marked buttons. We will spend most of the time on the Console. The Console is the place where your JavaScript code goes. The Google Console V8 engine changes your JavaScript code to machine code. Let us write a JavaScript code on the Google Chrome console: #### Writing Code on Browser Console We can write any JavaScript code on the Google console or any browser console. However, for this challenge, we only focus on Google Chrome console. Open the console using: ```sh Mac Command+Option+I Windows: Ctl+Shift+I ``` ##### Console.log To write our first JavaScript code, we used a built-in function **console.log()**. We passed an argument as input data, and the function displays the output. We passed `'Hello, World'` as input data or argument in the console.log() function. ```js console.log('Hello, World!') ``` ##### Console.log with Multiple Arguments The **`console.log()`** function can take multiple parameters separated by commas. The syntax looks like as follows:**`console.log(param1, param2, param3)`** ```js console.log('Hello', 'World', '!') console.log('HAPPY', 'NEW', 'YEAR', 2020) console.log('Welcome', 'to', 30, 'Days', 'Of', 'JavaScript') ``` As you can see from the snippet code above, _`console.log()`_ can take multiple arguments. Congratulations! You wrote your first JavaScript code using _`console.log()`_. ##### Comments We can add comments to our code. Comments are very important to make code more readable and to leave remarks in our code. JavaScript does not execute the comment part of our code. In JavaScript, any text line starting with // in JavaScript is a comment, and anything enclosed like this `//` is also a comment. **Example: Single Line Comment** ```js // This is the first comment // This is the second comment // I am a single line comment ``` **Example: Multiline Comment** ```js /* This is a multiline comment Multiline comments can take multiple lines JavaScript is the language of the web */ ``` ##### Syntax Programming languages are similar to human languages. English or many other language uses words, phrases, sentences, compound sentences and other more to convey a meaningful message. The English meaning of syntax is _the arrangement of words and phrases to create well-formed sentences in a language_. The technical definition of syntax is the structure of statements in a computer language. Programming languages have syntax. JavaScript is a programming language and like other programming languages it has its own syntax. If we do not write a syntax that JavaScript understands, it will raise different types of errors. We will explore different kinds of JavaScript errors later. For now, let us see syntax errors. I made a deliberate mistake. As a result, the console raises syntax errors. Actually, the syntax is very informative. It informs what type of mistake was made. By reading the error feedback guideline, we can correct the syntax and fix the problem. The process of identifying and removing errors from a program is called debugging. Let us fix the errors: ```js console.log('Hello, World!') console.log('Hello, World!') ``` So far, we saw how to display text using the _`console.log()`_. If we are printing text or string using _`console.log()`_, the text has to be inside the single quotes, double quotes, or a backtick. **Example:** ```js console.log('Hello, World!') console.log(""Hello, World!"") console.log(`Hello, World!`) ``` #### Arithmetics Now, let us practice more writing JavaScript codes using _`console.log()`_ on Google Chrome console for number data types. In addition to the text, we can also do mathematical calculations using JavaScript. Let us do the following simple calculations. It is possible to write JavaScript code on Google Chrome console can directly without the **_`console.log()`_** function. However, it is included in this introduction because most of this challenge would be taking place in a text editor where the usage of the function would be mandatory. You can play around directly with instructions on the console. ```js console.log(2 + 3) // Addition console.log(3 - 2) // Subtraction console.log(2 * 3) // Multiplication console.log(3 / 2) // Division console.log(3 % 2) // Modulus - finding remainder console.log(3 ** 2) // Exponentiation 3 ** 2 == 3 * 3 ``` ### Code Editor We can write our codes on the browser console, but it won't be for bigger projects. In a real working environment, developers use different code editors to write their codes. In this 30 days of JavaScript challenge, we will be using Visual Studio Code. #### Installing Visual Studio Code Visual Studio Code is a very popular open-source text editor. I would recommend to [download Visual Studio Code]( but if you are in favor of other editors, feel free to follow with what you have. If you installed Visual Studio Code, let us start using it. #### How to Use Visual Studio Code Open the Visual Studio Code by double-clicking its icon. When you open it, you will get this kind of interface. Try to interact with the labeled icons. ## Adding JavaScript to a Web Page JavaScript can be added to a web page in three different ways: - **_Inline script_** - **_Internal script_** - **_External script_** - **_Multiple External scripts_** The following sections show different ways of adding JavaScript code to your web page. ### Inline Script Create a project folder on your desktop or in any location, name it 30DaysOfJS and create an **_`index.html`_** file in the project folder. Then paste the following code and open it in a browser, for example [Chrome]( ```html 30DaysOfScript:Inline Script Click Me ``` Now, you just wrote your first inline script. We can create a pop up alert message using the _`alert()`_ built-in function. ### Internal Script The internal script can be written in the _`head`_ or the _`body`_, but it is preferred to put it on the body of the HTML document. First, let us write on the head part of the page. ```html 30DaysOfScript:Internal Script ``` This is how we write an internal script most of the time. Writing the JavaScript code in the body section is the most preferred option. Open the browser console to see the output from the `console.log()`. ```html 30DaysOfScript:Internal Script Click Me ``` Open the browser console to see the output from the `console.log()`. ### External Script Similar to the internal script, the external script link can be on the header or body, but it is preferred to put it in the body. First, we should create an external JavaScript file with .js extension. All files ending with .js extension are JavaScript files. Create a file named introduction.js inside your project directory and write the following code and link this .js file at the bottom of the body. ```js console.log('Welcome to 30DaysOfJavaScript') ``` External scripts in the _head_: ```html 30DaysOfJavaScript:External script ``` External scripts in the _body_: ```html 30DaysOfJavaScript:External script ``` Open the browser console to see the output of the `console.log()`. ### Multiple External Scripts We can also link multiple external JavaScript files to a web page. Create a `helloworld.js` file inside the 30DaysOfJS folder and write the following code. ```js console.log('Hello, World!') ``` ```html Multiple External Scripts ``` _Your main.js file should be below all other scripts_. It is very important to remember this. ## Introduction to Data types In JavaScript and also other programming languages, there are different types of data types. The following are JavaScript primitive data types: _String, Number, Boolean, undefined, Null_, and _Symbol_. ### Numbers - Integers: Integer (negative, zero and positive) numbers Example: ... -3, -2, -1, 0, 1, 2, 3 ... - Float-point numbers: Decimal number Example ... -3.5, -2.25, -1.0, 0.0, 1.1, 2.2, 3.5 ... ### Strings A collection of one or more characters between two single quotes, double quotes, or backticks. **Example:** ```js 'a' 'Asabeneh' ""Asabeneh"" 'Finland' 'JavaScript is a beautiful programming language' 'I love teaching' 'I hope you are enjoying the first day' `We can also create a string using a backtick` 'A string could be just as small as one character or as big as many pages' 'Any data type under a single quote, double quote or backtick is a string' ``` ### Booleans A boolean value is either True or False. Any comparisons returns a boolean value, which is either true or false. A boolean data type is either a true or false value. **Example:** ```js true // if the light is on, the value is true false // if the light is off, the value is false ``` ### Undefined In JavaScript, if we don't assign a value to a variable, the value is undefined. In addition to that, if a function is not returning anything, it returns undefined. ```js let firstName console.log(firstName) // undefined, because it is not assigned to a value yet ``` ### Null Null in JavaScript means an empty value. ```js let emptyValue = null ``` ## Checking Data Types To check the data type of a certain variable, we use the **typeof** operator. See the following example. ```js console.log(typeof 'Asabeneh') // string console.log(typeof 5) // number console.log(typeof true) // boolean console.log(typeof null) // object type console.log(typeof undefined) // undefined ``` ## Comments Again Remember that commenting in JavaScript is similar to other programming languages. Comments are important in making your code more readable. There are two ways of commenting: - _Single line commenting_ - _Multiline commenting_ ```js // commenting the code itself with a single comment // let firstName = 'Asabeneh'; single line comment // let lastName = 'Yetayeh'; single line comment ``` Multiline commenting: ```js /* let location = 'Helsinki'; let age = 100; let isMarried = true; This is a Multiple line comment */ ``` ## Variables Variables are _containers_ of data. Variables are used to _store_ data in a memory location. When a variable is declared, a memory location is reserved. When a variable is assigned to a value (data), the memory space will be filled with that data. To declare a variable, we use _var_, _let_, or _const_ keywords. For a variable that changes at a different time, we use _let_. If the data does not change at all, we use _const_. For example, PI, country name, gravity do not change, and we can use _const_. We will not use var in this challenge and I don't recommend you to use it. It is error prone way of declaring variable it has lots of leak. We will talk more about var, let, and const in detail in other sections (scope). For now, the above explanation is enough. A valid JavaScript variable name must follow the following rules: - A JavaScript variable name should not begin with a number. - A JavaScript variable name does not allow special characters except dollar sign and underscore. - A JavaScript variable name follows a camelCase convention. - A JavaScript variable name should not have space between words. The following are examples of valid JavaScript variables. ```js firstName lastName country city capitalCity age isMarried first_name last_name is_married capital_city num1 num_1 _num_1 $num1 year2020 year_2020 ``` The first and second variables on the list follows the camelCase convention of declaring in JavaScript. In this material, we will use camelCase variables(camelWithOneHump). We use CamelCase(CamelWithTwoHump) to declare classes, we will discuss about classes and objects in other section. Example of invalid variables: ```js first-name 1_num num_#_1 ``` Let us declare variables with different data types. To declare a variable, we need to use _let_ or _const_ keyword before the variable name. Following the variable name, we write an equal sign (assignment operator), and a value(assigned data). ```js // Syntax let nameOfVariable = value ``` The nameOfVriable is the name that stores different data of value. See below for detail examples. **Examples of declared variables** ```js // Declaring different variables of different data types let firstName = 'Asabeneh' // first name of a person let lastName = 'Yetayeh' // last name of a person let country = 'Finland' // country let city = 'Helsinki' // capital city let age = 100 // age in years let isMarried = true console.log(firstName, lastName, country, city, age, isMarried) ``` ```sh Asabeneh Yetayeh Finland Helsinki 100 true ``` ```js // Declaring variables with number values let age = 100 // age in years const gravity = 9.81 // earth gravity in m/s2 const boilingPoint = 100 // water boiling point, temperature in C const PI = 3.14 // geometrical constant console.log(gravity, boilingPoint, PI) ``` ```sh 9.81 100 3.14 ``` ```js // Variables can also be declaring in one line separated by comma, however I recommend to use a seperate line to make code more readble let name = 'Asabeneh', job = 'teacher', live = 'Finland' console.log(name, job, live) ``` ```sh Asabeneh teacher Finland ``` When you run _index.html_ file in the 01-Day folder you should get this: You are amazing! You have just completed day 1 challenge and you are on your way to greatness. Now do some exercises for your brain and muscle. # Day 1: Exercises 1. Write a single line comment which says, _comments can make code readable_ 2. Write another single comment which says, _Welcome to 30DaysOfJavaScript_ 3. Write a multiline comment which says, _comments can make code readable, easy to reuse_ _and informative_ 4. Create a variable.js file and declare variables and assign string, boolean, undefined and null data types 5. Create datatypes.js file and use the JavaScript **_typeof_** operator to check different data types. Check the data type of each variable 6. Declare four variables without assigning values 7. Declare four variables with assigned values 8. Declare variables to store your first name, last name, marital status, country and age in multiple lines 9. Declare variables to store your first name, last name, marital status, country and age in a single line 10. Declare two variables _myAge_ and _yourAge_ and assign them initial values and log to the browser console. ```sh I am 25 years old. You are 30 years old. ``` CONGRATULATIONS ! [Day 2 >>](./02_Day_Data_types/02_day_data_types.md)","9.6k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
pm2,Unitech/pm2,40830,"['JavaScript', 'Shell', 'Smarty']","['pm2', 'nodejs', 'node', 'process-manager', 'monitoring']","P(rocess) M(anager) 2 Runtime Edition PM2 is a production process manager for Node.js applications with a built-in load balancer. It allows you to keep applications alive forever, to reload them without downtime and to facilitate common system admin tasks. Starting an application in production mode is as easy as: ```bash $ pm2 start app.js ``` PM2 is constantly assailed by [more than 1800 tests]( Official website: [ Works on Linux (stable) & macOS (stable) & Windows (stable). All Node.js versions are supported starting Node.js 12.X. ### Installing PM2 With NPM: ```bash $ npm install pm2 -g ``` You can install Node.js easily with [NVM]( or [FNM]( ### Start an application You can start any application (Node.js, Python, Ruby, binaries in $PATH...) like that: ```bash $ pm2 start app.js ``` Your app is now daemonized, monitored and kept alive forever. ### Managing Applications Once applications are started you can manage them easily: To list all running applications: ```bash $ pm2 list ``` Managing apps is straightforward: ```bash $ pm2 stop $ pm2 restart $ pm2 delete ``` To have more details on a specific application: ```bash $ pm2 describe ``` To monitor logs, custom metrics, application information: ```bash $ pm2 monit ``` [More about Process Management]( ### Cluster Mode: Node.js Load Balancing & Zero Downtime Reload The Cluster mode is a special mode when starting a Node.js application, it starts multiple processes and load-balance HTTP/TCP/UDP queries between them. This increase overall performance (by a factor of x10 on 16 cores machines) and reliability (faster socket re-balancing in case of unhandled errors). Starting a Node.js application in cluster mode that will leverage all CPUs available: ```bash $ pm2 start api.js -i ``` `` can be `'max'`, `-1` (all cpu minus 1) or a specified number of instances to start. **Zero Downtime Reload** Hot Reload allows to update an application without any downtime: ```bash $ pm2 reload all ``` [More informations about how PM2 make clustering easy]( ### Container Support With the drop-in replacement command for `node`, called `pm2-runtime`, run your Node.js application in a hardened production environment. Using it is seamless: ``` RUN npm install pm2 -g CMD [ ""pm2-runtime"", ""npm"", ""--"", ""start"" ] ``` [Read More about the dedicated integration]( ### Host monitoring speedbar PM2 allows to monitor your host/server vitals with a monitoring speedbar. To enable host monitoring: ```bash $ pm2 set pm2:sysmonit true $ pm2 update ``` ### Terminal Based Monitoring Monitor all processes launched straight from the command line: ```bash $ pm2 monit ``` ### Log Management To consult logs just type the command: ```bash $ pm2 logs ``` Standard, Raw, JSON and formated output are available. Examples: ```bash $ pm2 logs APP-NAME # Display APP-NAME logs $ pm2 logs --json # JSON output $ pm2 logs --format # Formated output $ pm2 flush # Flush all logs $ pm2 reloadLogs # Reload all logs ``` To enable log rotation install the following module ```bash $ pm2 install pm2-logrotate ``` [More about log management]( ### Startup Scripts Generation PM2 can generate and configure a Startup Script to keep PM2 and your processes alive at every server restart. Init Systems Supported: **systemd**, **upstart**, **launchd**, **rc.d** ```bash # Generate Startup Script $ pm2 startup # Freeze your process list across server restart $ pm2 save # Remove Startup Script $ pm2 unstartup ``` [More about Startup Scripts Generation]( ### Updating PM2 ```bash # Install latest PM2 version $ npm install pm2@latest -g # Save process list, exit old PM2 & restore all processes $ pm2 update ``` *PM2 updates are seamless* ## PM2+ Monitoring If you manage your apps with PM2, PM2+ makes it easy to monitor and manage apps across servers. Feel free to try it: [Discover the monitoring dashboard for PM2]( Thanks in advance and we hope that you like PM2! ## CHANGELOG [CHANGELOG]( ## Contributors [Contributors]( ## License PM2 is made available under the terms of the GNU Affero General Public License 3.0 (AGPL 3.0). For other licenses [contact us](mailto:contact@keymetrics.io).","2.6k, Code, Issues, Pull requests, Actions, Security, Insights, S: Open for PR, T: Enhancement, T: Bug, T: Feature, Inspecting, S: Icebox, stale, SYS: Daemon, T: Question, SYS: CLI, P3: Medium, SYS : Log, P4: Low, SYS: Windows, SYS: Startup, S: Need More Data, SYS: API, SYS: Watch, PM2 v3, python, T: Edge case, SYS: Vizion, SYS: Docker, SYS: Deploy, SYS: Cluster, S: Pending Release, Feature Request, @pm2/io, SYS: pidusage, SYS: Modules"
opensource.guide,github/opensource.guide,13655,"['HTML', 'JavaScript', 'SCSS']","['open-source', 'oss', 'best-practices', 'tutorial', 'documentation']","# Open Source Guides []( Open Source Guides ( are a collection of resources for individuals, communities, and companies who want to learn how to run and contribute to an open-source project. ## Background Open Source Guides were created and are curated by GitHub, along with input from outside community reviewers, but they are not exclusive to GitHub products. One reason we started this project is that we felt that there weren't enough resources for people creating open-source projects. Our goal was to aggregate community best practices, *not* what GitHub (or any other individual or entity) thinks is best. Therefore, we used examples and quotations from others to illustrate our points. ## Contributing This site is powered by [Jekyll]( Check out our [contributing guidelines](/CONTRIBUTING.md) for ways to offer feedback and contribute. ## Licenses Content is released under [CC-BY-4.0]( See [notices](notices.md) for complete details, including attribution guidelines, contribution terms, and software and third-party licenses and permissions. ## Acknowledgments The initial release of these guides were authored by **[@nayafia][1], [@bkeepers][2], [@stephbwills][3],** and **[@mlinksva][4]**. Thanks to **[@aitchabee][5], [@benbalter][6], [@brettcannon][7], [@caabernathy][8], [@coralineada][9], [@dmleong][10], [@ericholscher][11], [@gr2m][12], [@janl][13], [@jessfraz][14], [@joshsimmons][15], [@kfogel][16], [@kytrinyx][17], [@lee-dohm][18], [@mikeal][19], [@mikemcquaid][20], [@nathansobo][21], [@nruff][22], [@nsqe][23], [@orta][24], [@parkr][25], [@shazow][26], [@steveklabnik][27],** and **[@wooorm][28]** for lending their valuable input and expertise leading up to the initial release, and to **[@sophshep][29]** and **[@jeejkang][30]** for designing and illustrating the guides. ## Disclaimer While we've got advice about running an open source project, we're not lawyers. Be sure to read our [disclaimer](notices.md#legal-disclaimer) before diving in. [1]: [2]: [3]: [4]: [5]: [6]: [7]: [8]: [9]: [10]: [11]: [12]: [13]: [14]: [15]: [16]: [17]: [18]: [19]: [20]: [21]: [22]: [23]: [24]: [25]: [26]: [27]: [28]: [29]: [30]:","14.2k, Code, Pull requests, Actions, Security, Insights, github_actions, dependencies, work in progress, wontfix, translation, stale, site, security, ruby, question, ospo-dependency-license-alert, new-guide, javascript, invalid, help wanted, duplicate, design, content, bug"
design-blocks,froala/design-blocks,13501,"['HTML', 'CSS', 'JavaScript']","['website-design', 'design-templates', 'designer', 'html5', 'bootstrap4']","# [Froala Design Blocks]( []( []( []( []( []( []( []( Over 170 responsive design blocks ready to be used in your web or mobile apps. All blocks are based on the Bootstrap Library, and they are the building blocks for beautiful websites. **Discuss it on [Product Hunt]( ** Design Blocks Builder WYSIWYG HTML Editor Pages Blog Download ## Table of contents - [Quick start](#quick-start) - [Implementations](#implementations) - [What's included?](#whats-included) - [Dependencies](#dependencies) - [Categories](#categories) - [Browser support](#browser-support) - [Community](#community) - [Bugs and feature requests](#bugs-and-feature-requests) - [Contributing guidelines](#contributing-guidelines) - [Contributors](#contributors) - [Copyright and license](#copyright-and-license) ## Quick start 1. **Download Froala Design Blocks.** There are several ways to start using the Froala Design Blocks depending on how you prefer: - [Use the builder]( - [Download the latest release]( and then read the [What's included](#whats-included) section below. - Clone the repo and run it. ```bash git clone cd design-blocks npm install npm run start ``` 2. **Design Blocks Skeleton.** You can use the following code layout as a starting point. ```html Froala Design Blocks - Skeleton ``` 3. **Add design blocks.** Once you have the Froala Design Blocks basic HTML structure in place, start browsing the design blocks that you want to use and copy/paste the HTML for them. ## Implementations []( []( []( []( []( []( ## What's included Within the download archive you'll find the following directories and files, logically grouping common assets and providing both compiled and minified variations. You'll see something like this: ``` design-blocks/ dist/ css/ froala_blocks.css froala_blocks.min.css imgs/ call_to_action.html contacts.html contents.html features.html footers.html forms.html headers.html index.html pricings.html teams.html testimonials.html assets/ screenshots/ src/ ``` We provide compiled CSS (`froala_blocks.css`), as well as compiled and minified CSS (`froala_blocks.min.css`). Also, in the downloaded archive you will find useful images and PSD files that you can use to create new backgrounds. In the `screenshots` folder, there are the screenshots of all design blocks. ## Dependencies - **Bootstrap**. Froala Design Blocks is built on Bootstrap 4 library and fully supports it. It uses the Javascript files only for the header design blocks, so if you don't need them, we recommend not to include the Bootstrap JS files in order to reduce your bundle size. - **Font Awesome**. We're using the amazing Font Awesome library for the social network icons. - **Google Fonts**. By default, the Design Blocks toolkit is built using the Roboto font, however that can easily be changed to other fonts. ## Categories - Call to action - - Contacts - - Contents - - Features - - Footers - - Forms - - Headers - - Pricings - - Teams - - Testimonials - ## Browser Support At the moment, we aim to support all major web browsers. Any issue in the browsers listed below should be reported as a bug: - Internet Explorer 10+ - Microsoft Edge 14+ - Safari 6+ - Firefox (Current - 1) and Current versions - Chrome (Current - 1) and Current versions - Opera (Current - 1) and Current versions - Safari iOS 7.0+ - Android 6.0+ (Current - 1) and Current means that we support the current stable version of the browser and the version that precedes it. ## Bugs and feature requests Have a bug or a feature request? Please first read the issue guidelines and search for existing and closed issues. If your problem or idea is not addressed yet, [please open a new issue]( ## Community Get updates on Froala Design Blocks' development and chat with the project maintainers and community members: - Follow [@froala on Twitter]( - Read and subscribe to [The Official Froala Blog]( - Check the [Official Website]( - Join us [on Facebook]( - [Google+]( - [Pinterest]( ## Contributing guidelines All contributions are more than welcomed. Contributions may close an issue, fix a bug (reported or not reported), add new design blocks, improve the existing code, add new feature, and so on. In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation. [Read the full Code of Conduct]( The `dev` branch is the default and base branch for the project. It is used for development and all Pull Requests should go there. Please make sure not to commit the `dist` folder in the `dev` branch. #### Development The project needs to be compiled, therefore the files in the `src` folder are those we'll be developing on. Don't make changes in the `dist` or `demo` folders as they will be overwritten when `src` is compiled. 1. Get code ```bash git clone git@github.com:froala/design-blocks.git cd design-blocks ``` 2. Install dependencies and run project ```bash npm install npm run start ``` With the gulp server running, the project is available at the following address [localhost:8001]( The `src` files are automatically compiled when changes have been made. #### Versioning Through the development of new versions, we're going use the Semantic Versioning: Example: 1.0.0. - Major release: increment the first digit and reset middle and last digits to zero. Introduces major changes that might break backward compatibility. E.g. 2.0.0 - Minor release: increment the middle digit and reset last digit to zero. It would fix bugs and also add new features without breaking backward compatibility. E.g. 1.1.0 - Patch release: increment the third digit. It would fix bugs and keep backward compatibility. E.g. 1.0.1 ## Contributors Special thanks to everyone who contributed to getting the Froala Design Blocks to the current state. - [Creative Tim]( - design blocks PSDs, help with typography and SVGs for shapes - [Reaction]( - design blocks Sketches: - [m5o]( -help with update to Bootstrap 4 - [Pexels]( - photos - [Undraw]( - illustrations - [FeatherIcons]( - icons ## Copyright and License Code and documentation copyright 2018 [Froala Labs]( Code released under the [Froala Open Web Design License]( Graphics license: - shapes: free to use by [Creative Tim]( - photos: free under the creative license from [Pexels]( - illustrations: free under the creative license from [Undraw]( - icons: free under MIT license [FeatherIcons](","1.3k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, help wanted, enhancement, feature request, integration, good first issue, discuss, dependencies, wontfix, question, invalid, duplicate, deploy, bug"
ai-edu,microsoft/ai-edu,13244,"['HTML', 'Jupyter Notebook', 'Python']",[],"Microsoft AI Education Community, AI-EduMicrosoft Research AsiaMSRA ************ ## **** - 2021816 **A6- ** **[A6-](.//A6-)** - 2021625 ****AI-Edu V1.3.0 []( - 2021621 **** [LightGBM](.//B16-LightGBM) - [](./docs/News.md) ## **** 1.Python 2. 3. 4. 5. 6. ... ... 2019_MSC_ 2019_MSC_ 2020_SP_NNI ... ## **** **AI-Edu**Issues [Issues Channel]( issue**BUGPull Request IssueIssue [](./docs/Contributing.md) ## **** - Github Issue - ## **** ## **** [LICENSE](./LICENSE.md)","2.9k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, dependencies, .NET, challenge, Release Plan, python, wontfix, question, mpp, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
responsive-html-email-template,leemunroe/responsive-html-email-template,13047,['HTML'],"['email-template', 'email', 'responsive', 'html-emails', 'html']","# Free Responsive HTML Email Template Sometimes all you want is a really simple responsive HTML email template with a clear call-to-action button. Here it is. [See live preview]( ## Inline your CSS before sending Email is notorious for inconsistent CSS support. Therefore you should always inline your CSS and send a test to yourself before sending. ### Sending emails directly from your codebase or using a developer service? For an API service (like Mailgun, SendGrid, Postmark) **you need to inline the CSS before sending**. See `email-inlined.html` for an example. You can use this [Email CSS Inliner]( and then [send a test email to yourself]( to verify it works as expected. * Copy all of email.html * Paste the HTML as the source into the inliner * Copy the HTML output and use this as the email template you send ### Sending emails using a marketing service like Mailchimp? Use the template `email.html` as is. They'll put the CSS inline for you when you put together your campaign. ## Images in email When inserting images remember to include the following attributes or risk them breaking in different clients: * `src` * `alt` * `width` * `height` * `border` Example: `` [More information here]( ## Tried and tested on all major email clients Tested on mobile, desktop and web. ## More HTML email resources * [10 Premium HTML Email Templates for Developers]( * [Free Figma Email Template Design System]( * [An Introduction To Building And Sending HTML Email]( * [Grunt Email Design Workflow]( * [Everything Web Developers Need To Know About Transactional Email]( * [Manage and Send Email Templates To Yourself]( * [Accessible Email Evaluation Tool]( This free template is part of a pack of responsive email templates for developers and startups available on [HTML Email]( [](","4.4k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, wontfix, question, invalid, enhancement, duplicate, bug"
html-css,gustavoguanabara/html-css,12916,"['HTML', 'CSS']","['curso', 'gratis', 'cursoemvideo', 'gustavoguanabara', 'html5']","# Curso de HTML5 e CSS3 Material pblico para o ensino bsico de HTML5 e CSS3 para alunos iniciantes. Acesse o material em PDF, analise o cdigo disponibilizado para cada exerccio e veja-os funcionando em execuo direta via repositrio GitHub. * [Acesse os PDFs das aulas clicando aqui]( * [Cdigo disponvel para os exerccios]( * [Execute os exerccios aqui]( * [Resolva os desafios de HTML aqui]( ## Direitos de uso Voc tem todo o direito de usar esse material para seu prprio aprendizado. Professores tambm podem ter acesso a todo o contedo e us-los com seus alunos. Porm todos o que usarem esse material - seja para qual for a finalidade - devero manter a referncia ao material original, criado e disponibilizado pelo Prof. Gustavo Guanabara. Este contedo no poder ser utilizado em nenhuma hiptese para ser replicada - integral ou parcialmente - por autores/ editoras/ instituies de ensino para criar livros ou apostilas, com finalidades de obter ganho financeiro com ele.","3.1k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, documentation, bug"
smiley-sans,atelier-anchor/smiley-sans,12717,"['HTML', 'Shell']","['cjk', 'font', 'typeface']",[]( []( [GB/T 2312-1980]( []( ## - [Releases]( 4 - `.otf` `.ttf` - `.woff2` - [GitHub Actions]( Artifacts - - [Windows]( - [macOS]( - [Homebrew]( Homebrew ```bash brew tap homebrew/cask-fonts # brew install font-smiley-sans ``` - Linux - Arch Linux [AUR]( ```bash yay -S ttf-smiley-sans # yay -S ttf-smiley-sans-bin # yay -S ttf-smiley-sans-git # ``` - [Adobe]( - [Office]( - [Procreate]( - [docs](docs/) ## | | | |:-:|:-:| | | [GB/T 2312-1980]( 6763 []( 8105 8335 | | | 415 100 | | | 80 | | | 71 | | | 174 | | | 4 `````` `` | | | 200 | ## OpenType | | | |:-:|:-:| | `ordn` | `1``2` | | `frac` | `````` | | `sups` | `````` | | `pnum` | | | `tnum` | | | `case` | | | `fwid` | | | `vert``vrt2` | | | `locl` | `` `` `j` `` | | `ss01` | `J``K``Q``a``f``l``r``&``` | | `ss02` | `f` | | `calt` | `1+2``9:41``fi``tj` | | `ccmp` | `` | ## - - - - ## - [oooooohmygosh]( - []( - []( - []( ## [SIL Open Font License v1.1](LICENSE) --- Copyright 20222024 [atelierAnchor]( All rights reserved.,"366, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, enhancement, glyph request, category: han, feature, category: symbol, category: kana, build, category: punct, bug, wontfix, question, meta, invalid, help wanted, good first issue, duplicate, documentation, category: latin"
Spoon-Knife,octocat/Spoon-Knife,12292,"['HTML', 'CSS']",[],"### Well hello there! This repository is meant to provide an example for *forking* a repository on GitHub. Creating a *fork* is producing a personal copy of someone else's project. Forks act as a sort of bridge between the original repository and your personal copy. You can submit *Pull Requests* to help make other people's projects better by offering your changes up to the original project. Forking is at the core of social coding at GitHub. After forking this repository, you can make some changes to the project, and submit [a Pull Request]( as practice. For some more information on how to fork a repository, [check out our guide, ""Forking Projects""""]( Thanks! :sparkling_heart:","143k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights"
minimal-mistakes,mmistakes/minimal-mistakes,11939,"['HTML', 'SCSS', 'JavaScript']","['jekyll', 'jekyll-theme', 'theme', 'github-pages', 'ruby-gem']","# [Minimal Mistakes Jekyll theme]( []( []( Minimal Mistakes is a flexible two-column Jekyll theme, perfect for building personal sites, blogs, and portfolios. As the name implies, styling is purposely minimalistic to be enhanced and customized by you :smile:. :sparkles: See what's new in the [CHANGELOG](CHANGELOG.md). **Note:** The theme uses the [jekyll-include-cache]( plugin which will need to be installed in your `Gemfile` and must be retained in the `plugins` array of `_config.yml`. Otherwise you'll encounter `Unknown tag 'include_cached'` errors at build. [![Minimal Mistakes live preview][2]][1] [1]: [2]: screenshot.png (live preview) ## Notable features - Bundled as a ""theme gem"" for easier installation/upgrading. - Compatible with GitHub Pages. - Support for Jekyll's built-in Sass/SCSS preprocessor. - Nine different skins (color variations). - Several responsive layout options (single, archive index, search, splash, and paginated home page). - Optimized for search engines with support for [Twitter Cards]( and [Open Graph]( data. - Optional [header images]( [custom sidebars]( [table of contents]( [galleries]( related posts, [breadcrumb links]( [navigation lists]( and more. - Commenting support (powered by [Disqus]( [Facebook]( Google+, [Discourse]( static-based via [Staticman]( [utterances]( and [giscus]( - [Google Analytics]( support. - UI localized text in English (default), Arabic (), Brazilian Portuguese (Portugus brasileiro), Catalan, Chinese, Danish, Dutch, Finnish, French (Franais), German (Deutsch), Greek, Hebrew, Hindi (), Hungarian, Indonesian, Irish (Gaeilge), Italian (Italiano), Japanese, Kiswahili, Korean, Malayalam, Myanmar (Burmese), Nepali (Nepalese), Norwegian (Norsk), Persian (), Polish, Punjabi (), Romanian, Russian, Slovak, Spanish (Espaol), Swedish, Thai, Turkish (Trke), Ukrainian () and Vietnamese. ## Skins (color variations) This theme comes in nine different skins (in addition to the default one). | `air` | `contrast` | `dark` | | --- | --- | --- | | []( | []( | []( | | `dirt` | `mint` | `sunrise` | | --- | --- | --- | | []( | []( | []( | | `aqua` | `neon` | `plum` | | --- | --- | --- | | []( | []( | []( | ## Demo pages | Name | Description | | ------------------------------------------- | ----------------------------------------------------- | | [Post with Header Image][header-image-post] | A post with a large header image. | | [HTML Tags and Formatting Post][html-tags-post] | A variety of common markup showing how the theme styles them. | | [Syntax Highlighting Post][syntax-post] | Post displaying highlighted code. | | [Post with a Gallery][gallery-post] | A post showing several images wrapped in `` elements. | | [Sample Collection Page][sample-collection] | Single page from a collection. | | [Categories Archive][categories-archive] | Posts grouped by category. | | [Tags Archive][tags-archive] | Posts grouped by tag. | Additional sample posts are available under [posts archive][year-archive] on the demo site. Source files for these (and the entire demo site) can be found in [`/docs`](docs). [header-image-post]: [gallery-post]: [html-tags-post]: [syntax-post]: [sample-collection]: [categories-archive]: [tags-archive]: [year-archive]: ## Installation There are three ways to install: as a [gem-based theme]( as a [remote theme]( (GitHub Pages compatible), or forking/directly copying all of the theme files into your project. ### Gem-based method With Gem-based themes, directories such as the `assets`, `_layouts`, `_includes`, and `_sass` are stored in the themes gem, hidden from your immediate view. Yet all of the necessary directories will be read and processed during Jekylls build process. This allows for easier installation and updating as you don't have to manage any of the theme files. To install: 1. Add the following to your `Gemfile`: ```ruby gem ""minimal-mistakes-jekyll"" ``` 2. Fetch and update bundled gems by running the following [Bundler]( command: ```bash bundle ``` 3. Set the `theme` in your project's Jekyll `_config.yml` file: ```yaml theme: minimal-mistakes-jekyll ``` To update the theme run `bundle update`. ### Remote theme method Remote themes are similar to Gem-based themes, but do not require `Gemfile` changes or whitelisting making them ideal for sites hosted with GitHub Pages. To install: 1. Create/replace the contents of your `Gemfile` with the following: ```ruby source "" gem ""github-pages"", group: :jekyll_plugins gem ""jekyll-include-cache"", group: :jekyll_plugins ``` 2. Add `jekyll-include-cache` to the `plugins` array of your `_config.yml`. 3. Fetch and update bundled gems by running the following [Bundler]( command: ```bash bundle ``` 4. Add `remote_theme: ""mmistakes/minimal-mistakes@4.26.1""` to your `_config.yml` file. Remove any other `theme:` or `remote_theme:` entry. **Looking for an example?** Use the [Minimal Mistakes remote theme starter]( for the quickest method of getting a GitHub Pages hosted site up and running. Generate a new repository from the starter, replace sample content with your own, and configure as needed. ## Usage For detailed instructions on how to configure, customize, add/migrate content, and more read the [theme's documentation]( ## Contributing Found a typo in the documentation or interested in [fixing a bug]( Then by all means [submit an issue]( or [pull request]( If this is your first pull request, it may be helpful to read up on the [GitHub Flow]( first. For help with using the theme or general Jekyll support questions, please use the [Jekyll Talk forums]( ### Pull Requests When submitting a pull request: 1. Clone the repo. 2. Create a branch off of `master` and give it a meaningful name (e.g. `my-awesome-new-feature`). 3. Open a pull request on GitHub and describe the feature or fix. Theme documentation and demo pages can be found in the [`/docs`](docs) if submitting improvements, typo corrections, etc. ## Development To set up your environment to develop this theme, run `bundle install`. To test the theme, run `bundle exec rake preview` and open your browser at ` This starts a Jekyll server using content in the `test/` directory. As modifications are made to the theme and test site, it will regenerate and you should see the changes in the browser after a refresh. ## Credits ### Creator **Michael Rose** - - - ### Icons + Demo Images: - [The Noun Project]( - Garrett Knoll, Arthur Shlain, and [tracy tam]( - [Font Awesome]( - [Unsplash]( ### Other: - [Jekyll]( - [jQuery]( - [Susy]( - [Breakpoint]( - [Magnific Popup]( - [FitVids.JS]( - [GreedyNav.js]( - [Smooth Scroll]( - [Gumshoe]( - [jQuery throttle / debounce]( - [Lunr]( - [Clipboard.js]( ## License The MIT License (MIT) Copyright (c) 2013-2024 Michael Rose and contributors Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Minimal Mistakes incorporates icons from [The Noun Project]( creators Garrett Knoll, Arthur Shlain, and tracy tam. Icons are distributed under Creative Commons Attribution 3.0 United States (CC BY 3.0 US). Minimal Mistakes incorporates [Font Awesome]( Copyright (c) 2017 Dave Gandy. Font Awesome is distributed under the terms of the [SIL OFL 1.1]( and [MIT License]( Minimal Mistakes incorporates photographs from [Unsplash]( Minimal Mistakes incorporates [Susy]( Copyright (c) 2017, Miriam Eric Suzanne. Susy is distributed under the terms of the [BSD 3-clause ""New"" or ""Revised"" License]( Minimal Mistakes incorporates [Breakpoint]( Breakpoint is distributed under the terms of the [MIT/GPL Licenses]( Minimal Mistakes incorporates [FitVids.js]( Copyright (c) 2013 Dave Rubert and Chris Coyier. FitVids is distributed under the terms of the [WTFPL License]( Minimal Mistakes incorporates [Magnific Popup]( Copyright (c) 2014-2016 Dmitry Semenov, Magnific Popup is distributed under the terms of the MIT License. Minimal Mistakes incorporates [Smooth Scroll]( Copyright (c) 2019 Chris Ferdinandi. Smooth Scroll is distributed under the terms of the [MIT License]( Minimal Mistakes incorporates [Gumshoejs]( Copyright (c) 2019 Chris Ferdinandi. Gumshoejs is distributed under the terms of the [MIT License]( Minimal Mistakes incorporates [jQuery throttle / debounce]( Copyright (c) 2010 ""Cowboy"" Ben Alman. jQuery throttle / debounce is distributed under the terms of the [MIT License]( Minimal Mistakes incorporates [GreedyNav.js]( Copyright (c) 2015 Luke Jackson. GreedyNav.js is distributed under the terms of the [MIT License]( Minimal Mistakes incorporates [Jekyll Group-By-Array]( Copyright (c) 2015 Max White . Jekyll Group-By-Array is distributed under the terms of the [MIT License]( Minimal Mistakes incorporates [@allejo's Pure Liquid Jekyll Table of Contents]( Copyright (c) 2017 Vladimir Jimenez. Pure Liquid Jekyll Table of Contents is distributed under the terms of the [MIT License]( Minimal Mistakes incorporates [Lunr]( Copyright (c) 2018 Oliver Nightingale. Lunr is distributed under the terms of the [MIT License]( Minimal Mistakes incorporates [clipboard.js]( Copyright (c) 2021 Zeno Rocha. Clipboard.js is distributed under the terms of the [MIT License](","24.8k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, Type: Help Needed, Type: Enhancement, Status: Stale, javascript, hacktoberfest-accepted, dependencies, Type: Upstream, Type: Support, Type: Security, Type: Invalid, Type: Idea, Type: Duplicate, Type: Comment, Type: Bug, Type: Bug Fix, Status: Won't Fix, Status: Under Consideration, Status: Review Needed, Status: On Hold, Status: In Progress, Status: Feedback Needed, Status: Accepted"
memos,usememos/memos,27876,"['Go', 'TypeScript', 'PowerShell']","['react', 'go', 'sqlite', 'markdown', 'self-hosted']","A privacy-first, lightweight note-taking service. Easily capture and share your great thoughts. Home Page Blogs Docs Live Demo ## Key points - **Open source and free to use**. Embrace a future where creativity knows no boundaries with our open-source solution. All features are free to use and will never be charged in any form or content. - **Self-hosting with Docker in just seconds**. Enjoy the flexibility, scalability, and ease of setup that Docker provides, allowing you to have full control over your data and privacy. - **Pure text with added Markdown support.** Say goodbye to the overwhelming mental burden of rich formatting and embrace a minimalist approach. - **Customize and share your notes effortlessly**. With our intuitive sharing features, you can easily collaborate and distribute your notes with others. - **RESTful API for third-party services.** Embrace the power of integration and unleash new possibilities with our RESTful API support. ## Deploy with Docker in seconds ```bash docker run -d --name memos -p 5230:5230 -v ~/.memos/:/var/opt/memos neosmemo/memos:stable ``` > [!NOTE] > This command is only applicable for Unix/Linux systems. For Windows, please refer to the detailed [documentation]( > > The `~/.memos/` directory will be used as the data directory on your local machine, while `/var/opt/memos` is the directory of the volume in Docker and should not be modified. Learn more about [other installation methods]( ## Contribution Contributions are what make the open-source community such an amazing place to learn, inspire, and create. We greatly appreciate any contributions you make. Thank you for being a part of our community! ## Internationalization Memos supports multiple languages. You can help us translate Memos into your language. We use Weblate to manage translations. ## Star history []( ## Other projects - [**Slash**]( An open source, self-hosted bookmarks and link sharing platform. Save and share your links very easily. - [**Gomark**]( A markdown parser written in Go for Memos. And its [WebAssembly version]( is also available.","2k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, enhancement, bug, Stale, need more context, PR welcome, javascript, go, github_actions, dependencies"
go-zero,zeromicro/go-zero,27835,"['Go', 'Smarty', 'ANTLR']","['golang', 'microservice', 'rpc-framework', 'web-framework', 'gozero']","# go-zero go-zero is a web and rpc framework with lots of builtin engineering practices. Its born to ensure the stability of the busy services with resilience design and has been serving sites with tens of millions of users for years. []( []( []( []( []( []( []( []( ## What is go-zero? English | [](readme-cn.md) go-zero (listed in CNCF Landscape: [ is a web and rpc framework with lots of builtin engineering practices. Its born to ensure the stability of the busy services with resilience design and has been serving sites with tens of millions of users for years. go-zero contains simple API description syntax and code generation tool called `goctl`. You can generate Go, iOS, Android, Kotlin, Dart, TypeScript, JavaScript from .api files with `goctl`. #### Advantages of go-zero: * Improves the stability of the services with tens of millions of daily active users * Builtin chained timeout control, concurrency control, rate limit, adaptive circuit breaker, adaptive load shedding, even no configuration needed * Builtin middlewares also can be integrated into your frameworks * Simple API syntax, one command to generate a couple of different languages * Auto validate the request parameters from clients * Plenty of builtin microservice management and concurrent toolkits ## Backgrounds of go-zero At the beginning of 2018, we decided to re-design our system, from monolithic architecture with Java+MongoDB to microservice architecture. After research and comparison, we chose to: In early 2018, we embarked on a transformative journey to redesign our system, transitioning from a monolithic architecture built with Java and MongoDB to a microservices architecture. After careful research and comparison, we made a deliberate choice to: * Go Beyond with Golang * Great performance * Simple syntax * Proven engineering efficiency * Extreme deployment experience * Less server resource consumption * Self-Design Our Microservice Architecture * Microservice architecture facilitates the creation of scalable, flexible, and maintainable software systems with independent, reusable components. * Easy to locate the problems within microservices. * Easy to extend the features by adding or modifying specific microservices without impacting the entire system. ## Design considerations on go-zero By designing the microservice architecture, we expected to ensure stability, as well as productivity. And from just the beginning, we have the following design principles: * Keep it simple * High availability * Stable on high concurrency * Easy to extend * Resilience design, failure-oriented programming * Try best to be friendly to the business logic development, encapsulate the complexity * One thing, one way After almost half a year, we finished the transfer from a monolithic system to microservice system and deployed on August 2018. The new system guaranteed business growth and system stability. ## The implementation and features of go-zero go-zero is a web and rpc framework that integrates lots of engineering practices. The features are mainly listed below: * Powerful tool included, less code to write * Simple interfaces * Fully compatible with net/http * Middlewares are supported, easy to extend * High performance * Failure-oriented programming, resilience design * Builtin service discovery, load balancing * Builtin concurrency control, adaptive circuit breaker, adaptive load shedding, auto-trigger, auto recover * Auto validation of API request parameters * Chained timeout control * Auto management of data caching * Call tracing, metrics, and monitoring * High concurrency protected As below, go-zero protects the system with a couple of layers and mechanisms: ## The simplified architecture that we use with go-zero ## Installation Run the following command under your project: ```shell go get -u github.com/zeromicro/go-zero ``` ## Quick Start 1. Full examples can be checked out from below: [Rapid development of microservice systems]( [Rapid development of microservice systems - multiple RPCs]( 2. Install goctl `goctl`can be read as `go control`. `goctl` means not to be controlled by code, instead, we control it. The inside `go` is not `golang`. At the very beginning, I was expecting it to help us improve productivity, and make our lives easier. ```shell # for Go go install github.com/zeromicro/go-zero/tools/goctl@latest # For Mac brew install goctl # docker for amd64 architecture docker pull kevinwan/goctl # run goctl like docker run --rm -it -v `pwd`:/app kevinwan/goctl --help # docker for arm64(Mac) architecture docker pull kevinwan/goctl:latest-arm64 # run goctl like docker run --rm -it -v `pwd`:/app kevinwan/goctl:latest-arm64 --help ``` make sure goctl is executable. 3. Create the API file, like greet.api, you can install the plugin of goctl in vs code, api syntax is supported. ```go type ( Request { Name string `path:""name,options=[you,me]""` // parameters are auto validated } Response { Message string `json:""message""` } ) service greet-api { @handler GreetHandler get /greet/from/:name(Request) returns (Response) } ``` the .api files also can be generated by goctl, like below: ```shell goctl api -o greet.api ``` 4. Generate the go server-side code ```shell goctl api go -api greet.api -dir greet ``` the generated files look like: ```Plain Text greet etc greet-api.yaml // configuration file greet.go // main file internal config config.go // configuration definition handler greethandler.go // get/put/post/delete routes are defined here routes.go // routes list logic greetlogic.go // request logic can be written here svc servicecontext.go // service context, mysql/redis can be passed in here types types.go // request/response defined here greet.api // api description file ``` the generated code can be run directly: ```shell cd greet go mod init go mod tidy go run greet.go -f etc/greet-api.yaml ``` by default, its listening on port 8888, while it can be changed in the configuration file. you can check it by curl: ```shell curl -i ``` the response looks like below: ```http HTTP/1.1 200 OK Date: Sun, 30 Aug 2020 15:32:35 GMT Content-Length: 0 ``` 5. Write the business logic code * the dependencies can be passed into the logic within servicecontext.go, like mysql, redis, etc. * add the logic code in a logic package according to .api file 6. Generate code like Java, TypeScript, Dart, JavaScript, etc. just from the api file ```shell goctl api java -api greet.api -dir greet goctl api dart -api greet.api -dir greet ... ``` ## Benchmark [Checkout the test code]( ## Documents * [Documents]( * [Rapid development of microservice systems]( * [Rapid development of microservice systems - multiple RPCs]( * [Examples]( ## Chat group Join the chat via ## Cloud Native Landscape go-zero enlisted in the [CNCF Cloud Native Landscape]( ## Give a Star! If you like or are using this project to learn or start your solution, please give it a star. Thanks! ## Buy me a coffee","3.8k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, stale, area/goctl, do-not-merge/hold, area/orm, kind/need-more-discussion, by design, area/logs, answered, kind/need-more-investigation, feature, area/gateway, area/restful, kind/bug, area/api, help wanted, area/plugin, area/documentation, wontfix, question, kind/support, kind/not-reproducible, kind/need-more-info, good first issue, fixed, do-not-merge/deprecated, area/metrics, area/error-handling, suggestion, proposal, lgtm"
milvus,milvus-io/milvus,27433,"['Go', 'Python', 'C++']","['anns', 'nearest-neighbor-search', 'faiss', 'vector-search', 'image-search']","## What is Milvus? Milvus is an open-source vector database built to power embedding similarity search and AI applications. Milvus makes unstructured data search more accessible, and provides a consistent user experience regardless of the deployment environment. Milvus 2.0 is a cloud-native vector database with storage and computation separated by design. All components in this refactored version of Milvus are stateless to enhance elasticity and flexibility. For more architecture details, see [Milvus Architecture Overview]( Milvus was released under the [open-source Apache License 2.0]( in October 2019. It is currently a graduate project under [LF AI & Data Foundation]( ## Key features Millisecond search on trillion vector datasets Average latency measured in milliseconds on trillion vector datasets. Simplified unstructured data management Rich APIs designed for data science workflows.Consistent user experience across laptop, local cluster, and cloud.Embed real-time search and analytics into virtually any application. Reliable, always on vector database Milvus built-in replication and failover/failback features ensure data and applications can maintain business continuity in the event of a disruption. Highly scalable and elastic Component-level scalability makes it possible to scale up and down on demand. Milvus can autoscale at a component level according to the load type, making resource scheduling much more efficient. Hybrid search In addition to vectors, Milvus supports data types such as Boolean, integers, floating-point numbers, and more. A collection in Milvus can hold multiple fields for accommodating different data features or properties. Milvus pairs scalar filtering with powerful vector similarity search to offer a modern, flexible platform for analyzing unstructured data. Check for examples and boolean expression rules. Unified Lambda structure Milvus combines stream and batch processing for data storage to balance timeliness and efficiency. Its unified interface makes vector similarity search a breeze. Community supported, industry recognized With over 1,000 enterprise users, 9,000+ stars on GitHub, and an active open-source community, youre not alone when you use Milvus. As a graduate project under the LF AI & Data Foundation, Milvus has institutional support. ## Quick start ### Start with Zilliz Cloud Zilliz Cloud is a fully managed service on cloud and the simplest way to deploy LF AI Milvus, See [Zilliz Cloud]( and start your [free trial]( ### Install Milvus - [Standalone Quick Start Guide]( - [Cluster Quick Start Guide]( - [Advanced Deployment]( ### Build Milvus from source code Check the requirements first. Linux systems (Ubuntu 20.04 or later recommended): ```bash go: >= 1.21 cmake: >= 3.26.4 gcc: 7.5 ``` MacOS systems with x86_64 (Big Sur 11.5 or later recommended): ```bash go: >= 1.21 cmake: >= 3.26.4 llvm: >= 15 ``` MacOS systems with Apple Silicon (Monterey 12.0.1 or later recommended): ```bash go: >= 1.21 (Arch=ARM64) cmake: >= 3.26.4 llvm: >= 15 ``` Clone Milvus repo and build. ```bash # Clone github repository. $ git clone # Install third-party dependencies. $ cd milvus/ $ ./scripts/install_deps.sh # Compile Milvus. $ make ``` For the full story, see [developer's documentation]( > **IMPORTANT** The master branch is for the development of Milvus v2.0. On March 9th, 2021, we released Milvus v1.0, the first stable version of Milvus with long-term support. To use Milvus v1.0, switch to [branch 1.0]( ## Milvus 2.0 vs. 1.x: Cloud-native, distributed architecture, highly scalable, and more See [Milvus 2.0 vs. 1.x]( for more information. ## Real world demos Image search Chatbots Chemical structure search #### Image Search Images made searchable. Instantaneously return the most similar images from a massive database. #### Chatbots Interactive digital customer service that saves users time and businesses money. #### Chemical Structure Search Blazing fast similarity search, substructure search, or superstructure search for a specified molecule. ## Bootcamps Milvus [bootcamp]( is designed to expose users to both the simplicity and depth of the vector database. Discover how to run benchmark tests as well as build similarity search applications spanning chatbots, recommendation systems, reverse image search, molecular search, and much more. ## Contributing Contributions to Milvus are welcome from everyone. See [Guidelines for Contributing]( for details on submitting patches and the contribution workflow. See our [community repository]( to learn about our governance and access more community resources. ### All contributors ## Documentation For guidance on installation, development, deployment, and administration, check out [Milvus Docs]( For technical milestones and enhancement proposals, check out [milvus confluence]( ### SDK The implemented SDK and its API documentation are listed below: - [PyMilvus SDK]( - [Java SDK]( - [Go SDK]( - [Cpp SDK]( development) - [Node SDK]( - [Rust SDK]( development) - [CSharp SDK]( development) ### Attu Attu provides an intuitive and efficient GUI for Milvus. - [Quick start]( ## Community Join the Milvus community on [Discord]( to share your suggestions, advice, and questions with our engineering team. You can also check out our [FAQ page]( to discover solutions or answers to your issues or questions. Subscribe to Milvus mailing lists: - [Technical Steering Committee]( - [Technical Discussions]( - [Announcement]( Follow Milvus on social media: - [Medium]( - [X]( - [Youtube]( ## Reference Reference to cite when you use Milvus in a research paper: ``` @inproceedings{2021milvus, title={Milvus: A Purpose-Built Vector Data Management System}, author={Wang, Jianguo and Yi, Xiaomeng and Guo, Rentong and Jin, Hai and Xu, Peng and Li, Shengjun and Wang, Xiangyu and Guo, Xiangzhou and Li, Chengming and Xu, Xiaohai and others}, booktitle={Proceedings of the 2021 International Conference on Management of Data}, pages={2614--2627}, year={2021} } @article{2022manu, title={Manu: a cloud native vector database management system}, author={Guo, Rentong and Luan, Xiaofan and Xiang, Long and Yan, Xiao and Yi, Xiaomeng and Luo, Jigao and Cheng, Qianya and Xu, Weizhi and Luo, Jiarui and Liu, Frank and others}, journal={Proceedings of the VLDB Endowment}, volume={15}, number={12}, pages={3548--3561}, year={2022}, publisher={VLDB Endowment} } ``` ## Acknowledgments Milvus adopts dependencies from the following: - Thanks to [FAISS]( for the excellent search library. - Thanks to [etcd]( for providing great open-source key-value store tools. - Thanks to [Pulsar]( for its wonderful distributed pub-sub messaging system. - Thanks to [Tantivy]( for its full-text search engine library written in Rust. - Thanks to [RocksDB]( for the powerful storage engines. Milvus is adopted by following opensource project: - [Towhee]( a flexible, application-oriented framework for computing embedding vectors over unstructured data. - [Haystack]( an open source NLP framework that leverages Transformer models - [Langchain]( Building applications with LLMs through composability - [LLamaIndex]( a data framework for your LLM applications - [GPTCache]( a library for creating semantic cache to store responses from LLM queries.","2.6k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, kind/bug, kind/feature, triage/accepted, kind/enhancement, dco-passed, test/benchmark, stale, triage/needs-information, ci-passed, 2.4-features, good first issue, size/XXL, priority/critical-urgent, size/XS, sig/testing, area/test, size/L, severity/critical, needs-triage, size/M, approved, help wanted, area/compilation, do-not-merge/missing-related-issue, test/integration, hacktoberfest, size/XL, do-not-merge/invalid-pr-format, do-not-merge/hold, area/dependency"
k3s,k3s-io/k3s,26676,"['Go', 'Shell', 'HCL']","['kubernetes', 'k8s']","K3s - Lightweight Kubernetes =============================================== Lightweight Kubernetes. Production ready, easy to install, half the memory, all in a binary less than 100 MB. Great for: * Edge * IoT * CI * Development * ARM * Embedding k8s * Situations where a PhD in k8s clusterology is infeasible What is this? --- K3s is a [fully conformant]( production-ready Kubernetes distribution with the following changes: 1. It is packaged as a single binary. 1. It adds support for sqlite3 as the default storage backend. Etcd3, MySQL, and Postgres are also supported. 1. It wraps Kubernetes and other components in a single, simple launcher. 1. It is secure by default with reasonable defaults for lightweight environments. 1. It has minimal to no OS dependencies (just a sane kernel and cgroup mounts needed). 1. It eliminates the need to expose a port on Kubernetes worker nodes for the kubelet API by exposing this API to the Kubernetes control plane nodes over a websocket tunnel. K3s bundles the following technologies together into a single cohesive distribution: * [Containerd]( & [runc]( * [Flannel]( for CNI * [CoreDNS]( * [Metrics Server]( * [Traefik]( for ingress * [Klipper-lb]( as an embedded service load balancer provider * [Kube-router]( netpol controller for network policy * [Helm-controller]( to allow for CRD-driven deployment of helm manifests * [Kine]( as a datastore shim that allows etcd to be replaced with other databases * [Local-path-provisioner]( for provisioning volumes using local storage * [Host utilities]( such as iptables/nftables, ebtables, ethtool, & socat These technologies can be disabled or swapped out for technologies of your choice. Additionally, K3s simplifies Kubernetes operations by maintaining functionality for: * Managing the TLS certificates of Kubernetes components * Managing the connection between worker and server nodes * Auto-deploying Kubernetes resources from local manifests in realtime as they are changed. * Managing an embedded etcd cluster Current Status -------------- []( []( []( []( What's with the name? -------------------- We wanted an installation of Kubernetes that was half the size in terms of memory footprint. Kubernetes is a 10 letter word stylized as k8s. So something half as big as Kubernetes would be a 5 letter word stylized as K3s. There is neither a long-form of K3s nor official pronunciation. Is this a fork? --------------- No, it's a distribution. A fork implies continued divergence from the original. This is not K3s's goal or practice. K3s explicitly intends not to change any core Kubernetes functionality. We seek to remain as close to upstream Kubernetes as possible. However, we maintain a small set of patches (well under 1000 lines) important to K3s's use case and deployment model. We maintain patches for other components as well. When possible, we contribute these changes back to the upstream projects, for example, with [SELinux support in containerd]( This is a common practice amongst software distributions. K3s is a distribution because it packages additional components and services necessary for a fully functional cluster that go beyond vanilla Kubernetes. These are opinionated choices on technologies for components like ingress, storage class, network policy, service load balancer, and even container runtime. These choices and technologies are touched on in more detail in the [What is this?](#what-is-this) section. How is this lightweight or smaller than upstream Kubernetes? --- There are two major ways that K3s is lighter weight than upstream Kubernetes: 1. The memory footprint to run it is smaller 2. The binary, which contains all the non-containerized components needed to run a cluster, is smaller The memory footprint is reduced primarily by running many components inside of a single process. This eliminates significant overhead that would otherwise be duplicated for each component. The binary is smaller by removing third-party storage drivers and cloud providers, explained in more detail below. What have you removed from upstream Kubernetes? --- This is a common point of confusion because it has changed over time. Early versions of K3s had much more removed than the current version. K3s currently removes two things: 1. In-tree storage drivers 1. In-tree cloud provider Both of these have out-of-tree alternatives in the form of [CSI]( and [CCM]( which work in K3s and which upstream is moving towards. We remove these to achieve a smaller binary size. They can be removed while remaining conformant because neither affects core Kubernetes functionality. They are also dependent on third-party cloud or data center technologies/services, which may not be available in many K3s' use cases. What's next? --- Check out our [roadmap](ROADMAP.md) to see what we have planned moving forward. Release cadence --- K3s maintains pace with upstream Kubernetes releases. Our goal is to release patch releases within one week, and new minors within 30 days. Our release versioning reflects the version of upstream Kubernetes that is being released. For example, the K3s release [v1.27.4+k3s1]( maps to the `v1.27.4` Kubernetes release. We add a postfix in the form of `+k3s` to allow us to make additional releases using the same version of upstream Kubernetes while remaining [semver]( compliant. For example, if we discovered a high severity bug in `v1.27.4+k3s1` and needed to release an immediate fix for it, we would release `v1.27.4+k3s2`. Documentation ------------- Please see [the official docs site]( for complete documentation. Quick-Start - Install Script -------------- The `install.sh` script provides a convenient way to download K3s and add a service to systemd or openrc. To install k3s as a service, run: ```bash curl -sfL | sh - ``` A kubeconfig file is written to `/etc/rancher/k3s/k3s.yaml` and the service is automatically started or restarted. The install script will install K3s and additional utilities, such as `kubectl`, `crictl`, `k3s-killall.sh`, and `k3s-uninstall.sh`, for example: ```bash sudo kubectl get nodes ``` `K3S_TOKEN` is created at `/var/lib/rancher/k3s/server/node-token` on your server. To install on worker nodes, pass `K3S_URL` along with `K3S_TOKEN` environment variables, for example: ```bash curl -sfL | K3S_URL= K3S_TOKEN=XXX sh - ``` Manual Download --------------- 1. Download `k3s` from latest [release]( x86_64, armhf, arm64 and s390x are supported. 1. Run the server. ```bash sudo k3s server & # Kubeconfig is written to /etc/rancher/k3s/k3s.yaml sudo k3s kubectl get nodes # On a different node run the below. NODE_TOKEN comes from # /var/lib/rancher/k3s/server/node-token on your server sudo k3s agent --server --token ${NODE_TOKEN} ``` Contributing ------------ Please check out our [contributing guide](CONTRIBUTING.md) if you're interested in contributing to K3s. Security -------- Security issues in K3s can be reported by sending an email to [security@k3s.io](mailto:security@k3s.io). Please do not file issues about security issues.","2.2k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, kind/enhancement, status/2023 confirmed, priority/low, kind/bug, area/windows, kind/upstream-issue, priority/medium, priority/high, kind/test, kind/task, kind/documentation, dependencies, kind/internal, kind/epic, kind/dependabot, kind/backport, area/ci, priority/urgent, kind/good-first-issue, kind/feature, area/local-storage, area/kdm, priority/important-soon, priority/important-longterm, os/other, kind/os-validation, kind/automation, area/selinux, area/rootless, area/packaged-components"
croc,schollz/croc,26545,"['Go', 'Shell', 'Makefile']","['file-sharing', 'tcp', 'golang', 'peer-to-peer', 'data-transfer']","This project is supported by Github sponsors. `croc` is a tool that allows any two computers to simply and securely transfer files and folders. AFAIK, *croc* is the only CLI file-transfer tool that does **all** of the following: - allows **any two computers** to transfer data (using a relay) - provides **end-to-end encryption** (using PAKE) - enables easy **cross-platform** transfers (Windows, Linux, Mac) - allows **multiple file** transfers - allows **resuming transfers** that are interrupted - local server or port-forwarding **not needed** - **ipv6-first** with ipv4 fallback - can **use proxy**, like tor For more information about `croc`, see [my blog post]( or read a [recent interview I did]( ## Install Download [the latest release for your system]( or install a release from the command-line: ``` curl | bash ``` On macOS you can install the latest release with [Homebrew]( ``` brew install croc ``` On macOS you can also install the latest release with [MacPorts]( ``` sudo port selfupdate sudo port install croc ``` On Windows you can install the latest release with [Scoop]( [Chocolatey]( or [Winget]( ``` scoop install croc ``` ``` choco install croc ``` ``` winget install schollz.croc ``` On Unix you can install the latest release with [Nix]( ``` nix-env -i croc ``` On Alpine Linux you have to install dependencies first: ``` apk add bash coreutils wget -qO- | bash ``` On Arch Linux you can install the latest release with `pacman`: ``` pacman -S croc ``` On Fedora you can install with `dnf`: ``` dnf install croc ``` On Gentoo you can install with `portage`: ``` emerge net-misc/croc ``` On Termux you can install with `pkg`: ``` pkg install croc ``` On FreeBSD you can install with `pkg`: ``` pkg install croc ``` Or, you can [install Go]( and build from source (requires Go 1.17+): ``` go install github.com/schollz/croc/v10@latest ``` On Android there is a 3rd party F-Droid app [available to download]( ## Usage To send a file, simply do: ``` $ croc send [file(s)-or-folder] Sending 'file-or-folder' (X MB) Code is: code-phrase ``` Then to receive the file (or folder) on another computer, you can just do ``` croc code-phrase ``` The code phrase is used to establish password-authenticated key agreement ([PAKE]( which generates a secret key for the sender and recipient to use for end-to-end encryption. There are a number of configurable options (see `--help`). A set of options (like custom relay, ports, and code phrase) can be set using `--remember`. ### Custom code phrase You can send with your own code phrase (must be more than 6 characters). ``` croc send --code [code-phrase] [file(s)-or-folder] ``` ### Allow overwriting without prompt By default, croc will prompt whether to overwrite a file. You can automatically overwrite files by using the `--overwrite` flag (recipient only). For example, receive a file to automatically overwrite: ``` croc --yes --overwrite ``` ### Use pipes - stdin and stdout You can pipe to `croc`: ``` cat [filename] | croc send ``` In this case `croc` will automatically use the stdin data and send and assign a filename like ""croc-stdin-123456789"". To receive to `stdout` at you can always just use the `--yes` will automatically approve the transfer and pipe it out to `stdout`. ``` croc --yes [code-phrase] > out ``` All of the other text printed to the console is going to `stderr` so it will not interfere with the message going to `stdout`. ### Send text Sometimes you want to send URLs or short text. In addition to piping, you can easily send text with `croc`: ``` croc send --text ""hello world"" ``` This will automatically tell the receiver to use `stdout` when they receive the text so it will be displayed. ### Use a proxy You can use a proxy as your connection to the relay by adding a proxy address with `--socks5`. For example, you can send via a tor relay: ``` croc --socks5 ""127.0.0.1:9050"" send SOMEFILE ``` ### Change encryption curve You can choose from several different elliptic curves to use for encryption by using the `--curve` flag. Only the recipient can choose the curve. For example, receive a file using the P-521 curve: ``` croc --curve p521 ``` Available curves are P-256, P-348, P-521 and SIEC. P-256 is the default curve. ### Change hash algorithm You can choose from several different hash algorithms. The default is the `xxhash` algorithm which is fast and thorough. If you want to optimize for speed you can use the `imohash` algorithm which is even faster, but since it samples files (versus reading the whole file) it can mistakenly determine that a file is the same on the two computers transferring - though this is only a problem if you are syncing files versus sending a new file to a computer. ``` croc send --hash imohash SOMEFILE ``` ### Self-host relay The relay is needed to staple the parallel incoming and outgoing connections. By default, `croc` uses a public relay but you can also run your own relay: ``` croc relay ``` By default it uses TCP ports 9009-9013. Make sure to open those up. You can customize the ports (e.g. `croc relay --ports 1111,1112`), but you must have a minimum of **2** ports for the relay. The first port is for communication and the subsequent ports are used for the multiplexed data transfer. You can send files using your relay by entering `--relay` to change the relay that you are using if you want to custom host your own. ``` croc --relay ""myrelay.example.com:9009"" send [filename] ``` Note, when sending, you only need to include the first port (the communication port). The subsequent ports for data transfer will be transmitted back to the user from the relay. #### Self-host relay (docker) If it's easier you can also run a relay with Docker: ``` docker run -d -p 9009-9013:9009-9013 -e CROC_PASS='YOURPASSWORD' schollz/croc ``` Be sure to include the password for the relay otherwise any requests will be rejected. ``` croc --pass YOURPASSWORD --relay ""myreal.example.com:9009"" send [filename] ``` Note: when including `--pass YOURPASSWORD` you can instead pass a file with the password, e.g. `--pass FILEWITHPASSWORD`. ## License MIT ## Acknowledgements `croc` has gone through many iterations, and I am awed by all the great contributions! If you feel like contributing, in any way, by all means you can send an Issue, a PR, or ask a question. Thanks [@warner]( for the [idea]( [@tscholl2]( for the [encryption gists]( [@skorokithakis]( for [code on proxying two connections]( Finally thanks for making pull requests [@maximbaz]( [@meyermarcel]( [@Girbons]( [@techtide]( [@heymatthew]( [@Lunsford94]( [@lummie]( [@jesuiscamille]( [@threefjord]( [@marcossegovia]( [@csleong98]( [@afotescu]( [@callmefever]( [@El-JojA]( [@anatolyyyyyy]( [@goggle]( [@smileboywtu]( [@nicolashardy]( [@fbartels]( [@rkuprov]( [@hreese]( [@xenrox]( and [Ipar](","1.1k, Code, Issues, Pull requests, Actions, Security, Insights, will-accept-pr, bug, enhancement, wontfix, security, question, not an issue, no-issue-activity, need more information, invalid, in-progress, help wanted, hacktoberfest, good first issue, go, github_actions, duplicate, dependencies"
kit,go-kit/kit,26194,"['Go', 'Shell']","['go', 'microservices', 'golang', 'metallica']","# Go kit []( []( []( []( **Go kit** is a **programming toolkit** for building microservices (or elegant monoliths) in Go. We solve common problems in distributed systems and application architecture so you can focus on delivering business value. - Website: [gokit.io]( - Mailing list: [go-kit]( - Slack: [gophers.slack.com]( **#go-kit** ([invite]( ## Sponsors Encore the platform for building Go-based cloud backends. Click [here]( or Sponsor, above, for more information on sponsorship. ## Motivation Go has emerged as the language of the server, but it remains underrepresented in so-called ""modern enterprise"" companies like Facebook, Twitter, Netflix, and SoundCloud. Many of these organizations have turned to JVM-based stacks for their business logic, owing in large part to libraries and ecosystems that directly support their microservice architectures. To reach its next level of success, Go needs more than simple primitives and idioms. It needs a comprehensive toolkit, for coherent distributed programming in the large. Go kit is a set of packages and best practices, which provide a comprehensive, robust, and trustable way of building microservices for organizations of any size. For more details, see [the website]( [the motivating blog post]( and [the video of the talk]( See also the [Go kit talk at GopherCon 2015]( ## Goals - Operate in a heterogeneous SOA expect to interact with mostly non-Go-kit services - RPC as the primary messaging pattern - Pluggable serialization and transport not just JSON over HTTP - Operate within existing infrastructures no mandates for specific tools or technologies ## Non-goals - Supporting messaging patterns other than RPC (for now) e.g. MPI, pub/sub, CQRS, etc. - Re-implementing functionality that can be provided by adapting existing software - Having opinions on operational concerns: deployment, configuration, process supervision, orchestration, etc. ## Contributing Please see [CONTRIBUTING.md](/CONTRIBUTING.md). Thank you, [contributors]( ## Dependency management Go kit is [modules]( aware, and we encourage users to use the standard modules tooling. But Go kit is at major version 0, so it should be compatible with non-modules environments. ## Code generators There are several third-party tools that can generate Go kit code based on different starting assumptions. - [RecoLabs/microgen]( - [GrantZheng/kit]( - [kujtimiihoxha/kit]( (unmaintained) - [nytimes/marvin]( - [sagikazarmark/mga]( - [sagikazarmark/protoc-gen-go-kit]( - [metaverse/truss]( - [goadesign/goakit]( ## Related projects Projects with a have had particular influence on Go kit's design (or vice-versa). ### Service frameworks - [gizmo]( a microservice toolkit from The New York Times - [go-micro]( a distributed systems development framework - [gotalk]( async peer communication protocol & library - [Kite]( a micro-service framework - [gocircuit]( dynamic cloud orchestration ### Individual components - [afex/hystrix-go]( client-side latency and fault tolerance library - [armon/go-metrics]( library for exporting performance and runtime metrics to external metrics systems - [codahale/lunk]( structured logging in the style of Google's Dapper or Twitter's Zipkin - [eapache/go-resiliency]( resiliency patterns - [sasbury/logging]( a tagged style of logging - [grpc/grpc-go]( HTTP/2 based RPC - [inconshreveable/log15]( simple, powerful logging for Go - [mailgun/vulcand]( programmatic load balancer backed by etcd - [mattheath/phosphor]( distributed system tracing - [pivotal-golang/lager]( an opinionated logging library - [rubyist/circuitbreaker]( circuit breaker library - [sirupsen/logrus]( structured, pluggable logging for Go - [sourcegraph/appdash]( application tracing system based on Google's Dapper - [spacemonkeygo/monitor]( data collection, monitoring, instrumentation, and Zipkin client library - [streadway/handy]( net/http handler filters - [vitess/rpcplus]( package rpc + context.Context - [gdamore/mangos]( nanomsg implementation in pure Go ### Web frameworks - [Gorilla]( - [Gin]( - [Negroni]( - [Goji]( - [Martini]( - [Beego]( - [Revel]( (considered [harmful]( - [GoBuffalo]( ## Additional reading - [Architecting for the Cloud]( Netflix - [Dapper, a Large-Scale Distributed Systems Tracing Infrastructure]( Google - [Your Server as a Function]( (PDF) Twitter","2.4k, Code, Issues, Pull requests, Discussions, Actions, Security, Insights, enhancement, help wanted, bug, newbie friendly, question"
helm,helm/helm,26132,"['Go', 'Shell', 'Makefile']","['cncf', 'chart', 'kubernetes', 'helm', 'charts']","# Helm []( []( []( []( Helm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources. Use Helm to: - Find and use [popular software packaged as Helm Charts]( to run in Kubernetes - Share your own applications as Helm Charts - Create reproducible builds of your Kubernetes applications - Intelligently manage your Kubernetes manifest files - Manage releases of Helm packages ## Helm in a Handbasket Helm is a tool that streamlines installing and managing Kubernetes applications. Think of it like apt/yum/homebrew for Kubernetes. - Helm renders your templates and communicates with the Kubernetes API - Helm runs on your laptop, CI/CD, or wherever you want it to run. - Charts are Helm packages that contain at least two things: - A description of the package (`Chart.yaml`) - One or more templates, which contain Kubernetes manifest files - Charts can be stored on disk, or fetched from remote chart repositories (like Debian or RedHat packages) ## Install Binary downloads of the Helm client can be found on [the Releases page]( Unpack the `helm` binary and add it to your PATH and you are good to go! If you want to use a package manager: - [Homebrew]( users can use `brew install helm`. - [Chocolatey]( users can use `choco install kubernetes-helm`. - [Scoop]( users can use `scoop install helm`. - [Snapcraft]( users can use `snap install helm --classic` To rapidly get Helm up and running, start with the [Quick Start Guide]( See the [installation guide]( for more options, including installing pre-releases. ## Docs Get started with the [Quick Start guide]( or plunge into the [complete documentation]( ## Roadmap The [Helm roadmap uses GitHub milestones]( to track the progress of the project. ## Community, discussion, contribution, and support You can reach the Helm community and developers via the following channels: - [Kubernetes Slack]( - [#helm-users]( - [#helm-dev]( - [#charts]( - Mailing List: - [Helm Mailing List]( - Developer Call: Thursdays at 9:30-10:00 Pacific ([meeting details]( ### Contribution If you're interested in contributing, please refer to the [Contributing Guide](CONTRIBUTING.md) **before submitting a pull request**. ### Code of conduct Participation in the Helm community is governed by the [Code of Conduct](code-of-conduct.md).","7k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, size/M, feature, question/support, size/L, bug, size/S, in progress, help wanted, Stale, keep open, v4.x, size/XS, size/XL, proposal, good first issue, oci, needs-rebase, awaiting review, dependencies, Has One Approval, size/XXL, go, unconfirmed, refactor, plugin, github_actions, docs, v3.x, ¯\_(ツ)_/¯, wont fix"
viper,spf13/viper,26027,"['Go', 'Makefile', 'Nix']",[],"> ## Viper v2 feedback > Viper is heading towards v2 and we would love to hear what _**you**_ would like to see in it. Share your thoughts here: > > **Thank you!** []( []( []( []( []( []( **Go configuration with fangs!** Many Go projects are built using Viper including: * [Hugo]( * [EMC RexRay]( * [Imgurs Incus]( * [Nanobox]( * [Docker Notary]( * [BloomApi]( * [doctl]( * [Clairctl]( * [Mercure]( * [Meshery]( * [Bearer]( * [Coder]( * [Vitess]( ## Install ```shell go get github.com/spf13/viper ``` **Note:** Viper uses [Go Modules]( to manage dependencies. ## What is Viper? Viper is a complete configuration solution for Go applications including [12-Factor apps]( It is designed to work within an application, and can handle all types of configuration needs and formats. It supports: * setting defaults * reading from JSON, TOML, YAML, HCL, envfile and Java properties config files * live watching and re-reading of config files (optional) * reading from environment variables * reading from remote config systems (etcd or Consul), and watching changes * reading from command line flags * reading from buffer * setting explicit values Viper can be thought of as a registry for all of your applications configuration needs. ## Why Viper? When building a modern application, you dont want to worry about configuration file formats; you want to focus on building awesome software. Viper is here to help with that. Viper does the following for you: 1. Find, load, and unmarshal a configuration file in JSON, TOML, YAML, HCL, INI, envfile or Java properties formats. 2. Provide a mechanism to set default values for your different configuration options. 3. Provide a mechanism to set override values for options specified through command line flags. 4. Provide an alias system to easily rename parameters without breaking existing code. 5. Make it easy to tell the difference between when a user has provided a command line or config file which is the same as the default. Viper uses the following precedence order. Each item takes precedence over the item below it: * explicit call to `Set` * flag * env * config * key/value store * default **Important:** Viper configuration keys are case insensitive. There are ongoing discussions about making that optional. ## Putting Values into Viper ### Establishing Defaults A good configuration system will support default values. A default value is not required for a key, but its useful in the event that a key hasn't been set via config file, environment variable, remote configuration or flag. Examples: ```go viper.SetDefault(""ContentDir"", ""content"") viper.SetDefault(""LayoutDir"", ""layouts"") viper.SetDefault(""Taxonomies"", map[string]string{""tag"": ""tags"", ""category"": ""categories""}) ``` ### Reading Config Files Viper requires minimal configuration so it knows where to look for config files. Viper supports JSON, TOML, YAML, HCL, INI, envfile and Java Properties files. Viper can search multiple paths, but currently a single Viper instance only supports a single configuration file. Viper does not default to any configuration search paths leaving defaults decision to an application. Here is an example of how to use Viper to search for and read a configuration file. None of the specific paths are required, but at least one path should be provided where a configuration file is expected. ```go viper.SetConfigName(""config"") // name of config file (without extension) viper.SetConfigType(""yaml"") // REQUIRED if the config file does not have the extension in the name viper.AddConfigPath(""/etc/appname/"") // path to look for the config file in viper.AddConfigPath(""$HOME/.appname"") // call multiple times to add many search paths viper.AddConfigPath(""."") // optionally look for config in the working directory err := viper.ReadInConfig() // Find and read the config file if err != nil { // Handle errors reading the config file panic(fmt.Errorf(""fatal error config file: %w"", err)) } ``` You can handle the specific case where no config file is found like this: ```go if err := viper.ReadInConfig(); err != nil { if _, ok := err.(viper.ConfigFileNotFoundError); ok { // Config file not found; ignore error if desired } else { // Config file was found but another error was produced } } // Config file found and successfully parsed ``` *NOTE [since 1.6]:* You can also have a file without an extension and specify the format programmatically. For those configuration files that lie in the home of the user without any extension like `.bashrc` ### Writing Config Files Reading from config files is useful, but at times you want to store all modifications made at run time. For that, a bunch of commands are available, each with its own purpose: * WriteConfig - writes the current viper configuration to the predefined path, if exists. Errors if no predefined path. Will overwrite the current config file, if it exists. * SafeWriteConfig - writes the current viper configuration to the predefined path. Errors if no predefined path. Will not overwrite the current config file, if it exists. * WriteConfigAs - writes the current viper configuration to the given filepath. Will overwrite the given file, if it exists. * SafeWriteConfigAs - writes the current viper configuration to the given filepath. Will not overwrite the given file, if it exists. As a rule of the thumb, everything marked with safe won't overwrite any file, but just create if not existent, whilst the default behavior is to create or truncate. A small examples section: ```go viper.WriteConfig() // writes current config to predefined path set by 'viper.AddConfigPath()' and 'viper.SetConfigName' viper.SafeWriteConfig() viper.WriteConfigAs(""/path/to/my/.config"") viper.SafeWriteConfigAs(""/path/to/my/.config"") // will error since it has already been written viper.SafeWriteConfigAs(""/path/to/my/.other_config"") ``` ### Watching and re-reading config files Viper supports the ability to have your application live read a config file while running. Gone are the days of needing to restart a server to have a config take effect, viper powered applications can read an update to a config file while running and not miss a beat. Simply tell the viper instance to watchConfig. Optionally you can provide a function for Viper to run each time a change occurs. **Make sure you add all of the configPaths prior to calling `WatchConfig()`** ```go viper.OnConfigChange(func(e fsnotify.Event) { fmt.Println(""Config file changed:"", e.Name) }) viper.WatchConfig() ``` ### Reading Config from io.Reader Viper predefines many configuration sources such as files, environment variables, flags, and remote K/V store, but you are not bound to them. You can also implement your own required configuration source and feed it to viper. ```go viper.SetConfigType(""yaml"") // or viper.SetConfigType(""YAML"") // any approach to require this configuration into your program. var yamlExample = []byte(` Hacker: true name: steve hobbies: - skateboarding - snowboarding - go clothing: jacket: leather trousers: denim age: 35 eyes : brown beard: true `) viper.ReadConfig(bytes.NewBuffer(yamlExample)) viper.Get(""name"") // this would be ""steve"" ``` ### Setting Overrides These could be from a command line flag, or from your own application logic. ```go viper.Set(""Verbose"", true) viper.Set(""LogFile"", LogFile) viper.Set(""host.port"", 5899) // set subset ``` ### Registering and Using Aliases Aliases permit a single value to be referenced by multiple keys ```go viper.RegisterAlias(""loud"", ""Verbose"") viper.Set(""verbose"", true) // same result as next line viper.Set(""loud"", true) // same result as prior line viper.GetBool(""loud"") // true viper.GetBool(""verbose"") // true ``` ### Working with Environment Variables Viper has full support for environment variables. This enables 12 factor applications out of the box. There are five methods that exist to aid working with ENV: * `AutomaticEnv()` * `BindEnv(string...) : error` * `SetEnvPrefix(string)` * `SetEnvKeyReplacer(string...) *strings.Replacer` * `AllowEmptyEnv(bool)` _When working with ENV variables, its important to recognize that Viper treats ENV variables as case sensitive._ Viper provides a mechanism to try to ensure that ENV variables are unique. By using `SetEnvPrefix`, you can tell Viper to use a prefix while reading from the environment variables. Both `BindEnv` and `AutomaticEnv` will use this prefix. `BindEnv` takes one or more parameters. The first parameter is the key name, the rest are the name of the environment variables to bind to this key. If more than one are provided, they will take precedence in the specified order. The name of the environment variable is case sensitive. If the ENV variable name is not provided, then Viper will automatically assume that the ENV variable matches the following format: prefix + ""_"" + the key name in ALL CAPS. When you explicitly provide the ENV variable name (the second parameter), it **does not** automatically add the prefix. For example if the second parameter is ""id"", Viper will look for the ENV variable ""ID"". One important thing to recognize when working with ENV variables is that the value will be read each time it is accessed. Viper does not fix the value when the `BindEnv` is called. `AutomaticEnv` is a powerful helper especially when combined with `SetEnvPrefix`. When called, Viper will check for an environment variable any time a `viper.Get` request is made. It will apply the following rules. It will check for an environment variable with a name matching the key uppercased and prefixed with the `EnvPrefix` if set. `SetEnvKeyReplacer` allows you to use a `strings.Replacer` object to rewrite Env keys to an extent. This is useful if you want to use `-` or something in your `Get()` calls, but want your environmental variables to use `_` delimiters. An example of using it can be found in `viper_test.go`. Alternatively, you can use `EnvKeyReplacer` with `NewWithOptions` factory function. Unlike `SetEnvKeyReplacer`, it accepts a `StringReplacer` interface allowing you to write custom string replacing logic. By default empty environment variables are considered unset and will fall back to the next configuration source. To treat empty environment variables as set, use the `AllowEmptyEnv` method. #### Env example ```go SetEnvPrefix(""spf"") // will be uppercased automatically BindEnv(""id"") os.Setenv(""SPF_ID"", ""13"") // typically done outside of the app id := Get(""id"") // 13 ``` ### Working with Flags Viper has the ability to bind to flags. Specifically, Viper supports `Pflags` as used in the [Cobra]( library. Like `BindEnv`, the value is not set when the binding method is called, but when it is accessed. This means you can bind as early as you want, even in an `init()` function. For individual flags, the `BindPFlag()` method provides this functionality. Example: ```go serverCmd.Flags().Int(""port"", 1138, ""Port to run Application server on"") viper.BindPFlag(""port"", serverCmd.Flags().Lookup(""port"")) ``` You can also bind an existing set of pflags (pflag.FlagSet): Example: ```go pflag.Int(""flagname"", 1234, ""help message for flagname"") pflag.Parse() viper.BindPFlags(pflag.CommandLine) i := viper.GetInt(""flagname"") // retrieve values from viper instead of pflag ``` The use of [pflag]( in Viper does not preclude the use of other packages that use the [flag]( package from the standard library. The pflag package can handle the flags defined for the flag package by importing these flags. This is accomplished by a calling a convenience function provided by the pflag package called AddGoFlagSet(). Example: ```go package main import ( ""flag"" ""github.com/spf13/pflag"" ) func main() { // using standard library ""flag"" package flag.Int(""flagname"", 1234, ""help message for flagname"") pflag.CommandLine.AddGoFlagSet(flag.CommandLine) pflag.Parse() viper.BindPFlags(pflag.CommandLine) i := viper.GetInt(""flagname"") // retrieve value from viper // ... } ``` #### Flag interfaces Viper provides two Go interfaces to bind other flag systems if you dont use `Pflags`. `FlagValue` represents a single flag. This is a very simple example on how to implement this interface: ```go type myFlag struct {} func (f myFlag) HasChanged() bool { return false } func (f myFlag) Name() string { return ""my-flag-name"" } func (f myFlag) ValueString() string { return ""my-flag-value"" } func (f myFlag) ValueType() string { return ""string"" } ``` Once your flag implements this interface, you can simply tell Viper to bind it: ```go viper.BindFlagValue(""my-flag-name"", myFlag{}) ``` `FlagValueSet` represents a group of flags. This is a very simple example on how to implement this interface: ```go type myFlagSet struct { flags []myFlag } func (f myFlagSet) VisitAll(fn func(FlagValue)) { for _, flag := range flags { fn(flag) } } ``` Once your flag set implements this interface, you can simply tell Viper to bind it: ```go fSet := myFlagSet{ flags: []myFlag{myFlag{}, myFlag{}}, } viper.BindFlagValues(""my-flags"", fSet) ``` ### Remote Key/Value Store Support To enable remote support in Viper, do a blank import of the `viper/remote` package: `import _ ""github.com/spf13/viper/remote""` Viper will read a config string (as JSON, TOML, YAML, HCL or envfile) retrieved from a path in a Key/Value store such as etcd or Consul. These values take precedence over default values, but are overridden by configuration values retrieved from disk, flags, or environment variables. Viper supports multiple hosts. To use, pass a list of endpoints separated by `;`. For example ` Viper uses [crypt]( to retrieve configuration from the K/V store, which means that you can store your configuration values encrypted and have them automatically decrypted if you have the correct gpg keyring. Encryption is optional. You can use remote configuration in conjunction with local configuration, or independently of it. `crypt` has a command-line helper that you can use to put configurations in your K/V store. `crypt` defaults to etcd on ```bash $ go get github.com/bketelsen/crypt/bin/crypt $ crypt set -plaintext /config/hugo.json /Users/hugo/settings/config.json ``` Confirm that your value was set: ```bash $ crypt get -plaintext /config/hugo.json ``` See the `crypt` documentation for examples of how to set encrypted values, or how to use Consul. ### Remote Key/Value Store Example - Unencrypted #### etcd ```go viper.AddRemoteProvider(""etcd"", "" viper.SetConfigType(""json"") // because there is no file extension in a stream of bytes, supported extensions are ""json"", ""toml"", ""yaml"", ""yml"", ""properties"", ""props"", ""prop"", ""env"", ""dotenv"" err := viper.ReadRemoteConfig() ``` #### etcd3 ```go viper.AddRemoteProvider(""etcd3"", "" viper.SetConfigType(""json"") // because there is no file extension in a stream of bytes, supported extensions are ""json"", ""toml"", ""yaml"", ""yml"", ""properties"", ""props"", ""prop"", ""env"", ""dotenv"" err := viper.ReadRemoteConfig() ``` #### Consul You need to set a key to Consul key/value storage with JSON value containing your desired config. For example, create a Consul key/value store key `MY_CONSUL_KEY` with value: ```json { ""port"": 8080, ""hostname"": ""myhostname.com"" } ``` ```go viper.AddRemoteProvider(""consul"", ""localhost:8500"", ""MY_CONSUL_KEY"") viper.SetConfigType(""json"") // Need to explicitly set this to json err := viper.ReadRemoteConfig() fmt.Println(viper.Get(""port"")) // 8080 fmt.Println(viper.Get(""hostname"")) // myhostname.com ``` #### Firestore ```go viper.AddRemoteProvider(""firestore"", ""google-cloud-project-id"", ""collection/document"") viper.SetConfigType(""json"") // Config's format: ""json"", ""toml"", ""yaml"", ""yml"" err := viper.ReadRemoteConfig() ``` Of course, you're allowed to use `SecureRemoteProvider` also #### NATS ```go viper.AddRemoteProvider(""nats"", ""nats://127.0.0.1:4222"", ""myapp.config"") viper.SetConfigType(""json"") err := viper.ReadRemoteConfig() ``` ### Remote Key/Value Store Example - Encrypted ```go viper.AddSecureRemoteProvider(""etcd"","" viper.SetConfigType(""json"") // because there is no file extension in a stream of bytes, supported extensions are ""json"", ""toml"", ""yaml"", ""yml"", ""properties"", ""props"", ""prop"", ""env"", ""dotenv"" err := viper.ReadRemoteConfig() ``` ### Watching Changes in etcd - Unencrypted ```go // alternatively, you can create a new viper instance. var runtime_viper = viper.New() runtime_viper.AddRemoteProvider(""etcd"", "" ""/config/hugo.yml"") runtime_viper.SetConfigType(""yaml"") // because there is no file extension in a stream of bytes, supported extensions are ""json"", ""toml"", ""yaml"", ""yml"", ""properties"", ""props"", ""prop"", ""env"", ""dotenv"" // read from remote config the first time. err := runtime_viper.ReadRemoteConfig() // unmarshal config runtime_viper.Unmarshal(&runtime_conf) // open a goroutine to watch remote changes forever go func(){ for { time.Sleep(time.Second * 5) // delay after each request // currently, only tested with etcd support err := runtime_viper.WatchRemoteConfig() if err != nil { log.Errorf(""unable to read remote config: %v"", err) continue } // unmarshal new config into our runtime config struct. you can also use channel // to implement a signal to notify the system of the changes runtime_viper.Unmarshal(&runtime_conf) } }() ``` ## Getting Values From Viper In Viper, there are a few ways to get a value depending on the values type. The following functions and methods exist: * `Get(key string) : any` * `GetBool(key string) : bool` * `GetFloat64(key string) : float64` * `GetInt(key string) : int` * `GetIntSlice(key string) : []int` * `GetString(key string) : string` * `GetStringMap(key string) : map[string]any` * `GetStringMapString(key string) : map[string]string` * `GetStringSlice(key string) : []string` * `GetTime(key string) : time.Time` * `GetDuration(key string) : time.Duration` * `IsSet(key string) : bool` * `AllSettings() : map[string]any` One important thing to recognize is that each Get function will return a zero value if its not found. To check if a given key exists, the `IsSet()` method has been provided. The zero value will also be returned if the value is set, but fails to parse as the requested type. Example: ```go viper.GetString(""logfile"") // case-insensitive Setting & Getting if viper.GetBool(""verbose"") { fmt.Println(""verbose enabled"") } ``` ### Accessing nested keys The accessor methods also accept formatted paths to deeply nested keys. For example, if the following JSON file is loaded: ```json { ""host"": { ""address"": ""localhost"", ""port"": 5799 }, ""datastore"": { ""metric"": { ""host"": ""127.0.0.1"", ""port"": 3099 }, ""warehouse"": { ""host"": ""198.0.0.1"", ""port"": 2112 } } } ``` Viper can access a nested field by passing a `.` delimited path of keys: ```go GetString(""datastore.metric.host"") // (returns ""127.0.0.1"") ``` This obeys the precedence rules established above; the search for the path will cascade through the remaining configuration registries until found. For example, given this configuration file, both `datastore.metric.host` and `datastore.metric.port` are already defined (and may be overridden). If in addition `datastore.metric.protocol` was defined in the defaults, Viper would also find it. However, if `datastore.metric` was overridden (by a flag, an environment variable, the `Set()` method, ) with an immediate value, then all sub-keys of `datastore.metric` become undefined, they are shadowed by the higher-priority configuration level. Viper can access array indices by using numbers in the path. For example: ```jsonc { ""host"": { ""address"": ""localhost"", ""ports"": [ 5799, 6029 ] }, ""datastore"": { ""metric"": { ""host"": ""127.0.0.1"", ""port"": 3099 }, ""warehouse"": { ""host"": ""198.0.0.1"", ""port"": 2112 } } } GetInt(""host.ports.1"") // returns 6029 ``` Lastly, if there exists a key that matches the delimited key path, its value will be returned instead. E.g. ```jsonc { ""datastore.metric.host"": ""0.0.0.0"", ""host"": { ""address"": ""localhost"", ""port"": 5799 }, ""datastore"": { ""metric"": { ""host"": ""127.0.0.1"", ""port"": 3099 }, ""warehouse"": { ""host"": ""198.0.0.1"", ""port"": 2112 } } } GetString(""datastore.metric.host"") // returns ""0.0.0.0"" ``` ### Extracting a sub-tree When developing reusable modules, it's often useful to extract a subset of the configuration and pass it to a module. This way the module can be instantiated more than once, with different configurations. For example, an application might use multiple different cache stores for different purposes: ```yaml cache: cache1: max-items: 100 item-size: 64 cache2: max-items: 200 item-size: 80 ``` We could pass the cache name to a module (eg. `NewCache(""cache1"")`), but it would require weird concatenation for accessing config keys and would be less separated from the global config. So instead of doing that let's pass a Viper instance to the constructor that represents a subset of the configuration: ```go cache1Config := viper.Sub(""cache.cache1"") if cache1Config == nil { // Sub returns nil if the key cannot be found panic(""cache configuration not found"") } cache1 := NewCache(cache1Config) ``` **Note:** Always check the return value of `Sub`. It returns `nil` if a key cannot be found. Internally, the `NewCache` function can address `max-items` and `item-size` keys directly: ```go func NewCache(v *Viper) *Cache { return &Cache{ MaxItems: v.GetInt(""max-items""), ItemSize: v.GetInt(""item-size""), } } ``` The resulting code is easy to test, since it's decoupled from the main config structure, and easier to reuse (for the same reason). ### Unmarshaling You also have the option of Unmarshaling all or a specific value to a struct, map, etc. There are two methods to do this: * `Unmarshal(rawVal any) : error` * `UnmarshalKey(key string, rawVal any) : error` Example: ```go type config struct { Port int Name string PathMap string `mapstructure:""path_map""` } var C config err := viper.Unmarshal(&C) if err != nil { t.Fatalf(""unable to decode into struct, %v"", err) } ``` If you want to unmarshal configuration where the keys themselves contain dot (the default key delimiter), you have to change the delimiter: ```go v := viper.NewWithOptions(viper.KeyDelimiter(""::"")) v.SetDefault(""chart::values"", map[string]any{ ""ingress"": map[string]any{ ""annotations"": map[string]any{ ""traefik.frontend.rule.type"": ""PathPrefix"", ""traefik.ingress.kubernetes.io/ssl-redirect"": ""true"", }, }, }) type config struct { Chart struct{ Values map[string]any } } var C config v.Unmarshal(&C) ``` Viper also supports unmarshaling into embedded structs: ```go /* Example config: module: enabled: true token: 89h3f98hbwf987h3f98wenf89ehf */ type config struct { Module struct { Enabled bool moduleConfig `mapstructure:"",squash""` } } // moduleConfig could be in a module specific package type moduleConfig struct { Token string } var C config err := viper.Unmarshal(&C) if err != nil { t.Fatalf(""unable to decode into struct, %v"", err) } ``` Viper uses [github.com/mitchellh/mapstructure]( under the hood for unmarshaling values which uses `mapstructure` tags by default. ### Decoding custom formats A frequently requested feature for Viper is adding more value formats and decoders. For example, parsing character (dot, comma, semicolon, etc) separated strings into slices. This is already available in Viper using mapstructure decode hooks. Read more about the details in [this blog post]( ### Marshalling to string You may need to marshal all the settings held in viper into a string rather than write them to a file. You can use your favorite format's marshaller with the config returned by `AllSettings()`. ```go import ( yaml ""gopkg.in/yaml.v2"" // ... ) func yamlStringSettings() string { c := viper.AllSettings() bs, err := yaml.Marshal(c) if err != nil { log.Fatalf(""unable to marshal config to YAML: %v"", err) } return string(bs) } ``` ## Viper or Vipers? Viper comes ready to use out of the box. There is no configuration or initialization needed to begin using Viper. Since most applications will want to use a single central repository for their configuration, the viper package provides this. It is similar to a singleton. In all of the examples above, they demonstrate using viper in its singleton style approach. ### Working with multiple vipers You can also create many different vipers for use in your application. Each will have its own unique set of configurations and values. Each can read from a different config file, key value store, etc. All of the functions that viper package supports are mirrored as methods on a viper. Example: ```go x := viper.New() y := viper.New() x.SetDefault(""ContentDir"", ""content"") y.SetDefault(""ContentDir"", ""foobar"") //... ``` When working with multiple vipers, it is up to the user to keep track of the different vipers. ## Q & A ### Why is it called Viper? A: Viper is designed to be a [companion]( to [Cobra]( While both can operate completely independently, together they make a powerful pair to handle much of your application foundation needs. ### Why is it called Cobra? Is there a better name for a [commander]( ### Does Viper support case sensitive keys? **tl;dr:** No. Viper merges configuration from various sources, many of which are either case insensitive or uses different casing than the rest of the sources (eg. env vars). In order to provide the best experience when using multiple sources, the decision has been made to make all keys case insensitive. There has been several attempts to implement case sensitivity, but unfortunately it's not that trivial. We might take a stab at implementing it in [Viper v2]( but despite the initial noise, it does not seem to be requested that much. You can vote for case sensitivity by filling out this feedback form: ### Is it safe to concurrently read and write to a viper? No, you will need to synchronize access to the viper yourself (for example by using the `sync` package). Concurrent reads and writes can cause a panic. ## Troubleshooting See [TROUBLESHOOTING.md](TROUBLESHOOTING.md). ## Development **For an optimal developer experience, it is recommended to install [Nix]( and [direnv]( _Alternatively, install [Go]( on your computer then run `make deps` to install the rest of the dependencies._ Run the test suite: ```shell make test ``` Run linters: ```shell make lint # pass -j option to run them in parallel ``` Some linter violations can automatically be fixed: ```shell make fmt ``` ## License The project is licensed under the [MIT License](LICENSE).","2k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, kind/enhancement, kind/bug, area/dependencies, kind/support, kind/question, release-note/new-feature, resolution/wontfix, resolution/invalid, resolution/duplicate, release-note/misc, release-note/ignore, release-note/enhancement, release-note/deprecation, release-note/dependency-update, release-note/bug-fix, release-note/breaking-change, help wanted, good first issue, area/documentation"
lux,iawia002/lux,25640,"['Go', 'JavaScript']","['downloader', 'go', 'crawler', 'scraper', 'video']","Lux Let there be Lux! Lux is a fast and simple video downloader built with Go. - [Installation](#installation) - [Prerequisites](#prerequisites) - [Install via `go install`](#install-via-go-install) - [Homebrew (macOS only)](#homebrew-macos-only) - [Arch Linux](#arch-linux) - [Void Linux](#void-linux) - [Scoop on Windows](#scoop-on-windows) - [Chocolatey on Windows](#chocolatey-on-windows) - [Cask on Windows/macOS/Linux](#cask-on-windowsmacoslinux) - [Getting Started](#getting-started) - [Download a video](#download-a-video) - [Download anything else](#download-anything-else) - [Download playlist](#download-playlist) - [Multiple inputs](#multiple-inputs) - [Resume a download](#resume-a-download) - [Auto retry](#auto-retry) - [Cookies](#cookies) - [Proxy](#proxy) - [Multi-Thread](#multi-thread) - [Short link](#short-link) - [bilibili](#bilibili) - [Use specified Referrer](#use-specified-referrer) - [Specify the output path and name](#specify-the-output-path-and-name) - [Debug Mode](#debug-mode) - [Reuse extracted data](#reuse-extracted-data) - [Options](#options) - [Download:](#download) - [Network:](#network) - [Playlist:](#playlist) - [Filesystem:](#filesystem) - [Subtitle:](#subtitle) - [Youku:](#youku) - [aria2:](#aria2) - [Supported Sites](#supported-sites) - [Known issues](#known-issues) - [](#) - [Contributing](#contributing) - [Authors](#authors) - [Similar projects](#similar-projects) - [License](#license) ## Installation ### Prerequisites The following dependencies are required and must be installed separately. - **[FFmpeg]( > **Note**: FFmpeg does not affect the download, only affects the final file merge. ### Install via `go install` To install Lux, use `go install`, or download the binary file from [Releases]( page. ```bash $ go install github.com/iawia002/lux@latest ``` ### Homebrew (macOS only) For macOS users, you can install `lux` via: ```bash $ brew install lux ``` ### Arch Linux For Arch Users [AUR]( package is available. ### Void Linux For Void linux users, you can install `lux` via: ``` $ xbps-install -S lux ``` ### [Scoop]( on Windows ```sh $ scoop install lux ``` ### [Chocolatey]( on Windows ``` $ choco install lux ``` ### [Cask]( on Windows/macOS/Linux ```sh $ cask install github.com/iawia002/lux ``` ## Getting Started Usage: ``` lux [OPTIONS] URL [URL...] ``` ### Download a video ```console $ lux "" Site: YouTube youtube.com Title: Rick Astley - Never Gonna Give You Up (Video) Type: video Stream: [248] ------------------- Quality: 1080p video/webm; codecs=""vp9"" Size: 63.93 MiB (67038963 Bytes) # download with: lux -f 248 ... 41.88 MiB / 63.93 MiB [=================>-------------] 65.51% 4.22 MiB/s 00m05s ``` The `-i` option displays all available quality of video without downloading. ```console $ lux -i "" Site: YouTube youtube.com Title: Rick Astley - Never Gonna Give You Up (Video) Type: video Streams: # All available quality [248] ------------------- Quality: 1080p video/webm; codecs=""vp9"" Size: 49.29 MiB (51687554 Bytes) # download with: lux -f 248 ... [137] ------------------- Quality: 1080p video/mp4; codecs=""avc1.640028"" Size: 43.45 MiB (45564306 Bytes) # download with: lux -f 137 ... [398] ------------------- Quality: 720p video/mp4; codecs=""av01.0.05M.08"" Size: 37.12 MiB (38926432 Bytes) # download with: lux -f 398 ... [136] ------------------- Quality: 720p video/mp4; codecs=""avc1.4d401f"" Size: 31.34 MiB (32867324 Bytes) # download with: lux -f 136 ... [247] ------------------- Quality: 720p video/webm; codecs=""vp9"" Size: 31.03 MiB (32536181 Bytes) # download with: lux -f 247 ... ``` Use `lux -f stream ""URL""` to download a specific stream listed in the output of `-i` option. ### Download anything else If Lux is provided the URL of a specific resource, then it will be downloaded directly: ```console $ lux "" lux doesn't support this URL right now, but it will try to download it directly Site: Universal Title: 1f5a87801a0711e898b12b640777720f Type: image/jpeg Stream: [default] ------------------- Size: 1.00 MiB (1051042 Bytes) # download with: lux -f default ""URL"" 1.00 MiB / 1.00 MiB [===================================] 100.00% 1.21 MiB/s 0s ``` ### Download playlist The `-p` option downloads an entire playlist instead of a single video. ```console $ lux -i -p "" Site: bilibili.com Title: Doctor X Type: video Streams: # All available quality [default] ------------------- Quality: 1080P Size: 845.66 MiB (886738354 Bytes) # download with: lux -f default ""URL"" Site: bilibili.com Title: Doctor X Type: video Streams: # All available quality [default] ------------------- Quality: 1080P Size: 930.71 MiB (975919195 Bytes) # download with: lux -f default ""URL"" ...... ``` You can use the `-start`, `-end` or `-items` option to specify the download range of the list: ``` -start Playlist video to start at (default 1) -end Playlist video to end at -items Playlist video items to download. Separated by commas like: 1,5,6,8-10 ``` For bilibili playlists only: ``` -eto File name of each bilibili episode doesn't include the playlist title ``` ### Multiple inputs You can also download multiple URLs at once: ```console $ lux -i "" "" Site: bilibili.com Title: 13MAD,14 Type: video Streams: # All available quality [default] ------------------- Quality: 1080P Size: 51.88 MiB (54403767 Bytes) # download with: lux -f default ""URL"" Site: bilibili.com Title: MAD-bgm Type: video Streams: # All available quality [default] ------------------- Quality: 1080P Size: 77.63 MiB (81404093 Bytes) # download with: lux -f default ""URL"" ``` These URLs will be downloaded one by one. You can also use the `-F` option to read URLs from file: ```console $ lux -F ~/Desktop/u.txt Site: weibo.com Title: Google via@ Type: video Stream: [default] ------------------- Size: 19.19 MiB (20118196 Bytes) # download with: lux -f default ""URL"" 19.19 MiB / 19.19 MiB [=================================] 100.00% 9.69 MiB/s 1s ...... ``` You can use the `-start`, `-end` or `-items` option to specify the download range of the list: ``` -start File line to start at (default 1) -end File line to end at -items File lines to download. Separated by commas like: 1,5,6,8-10 ``` ### Resume a download Ctrl+C interrupts a download. A temporary `.download` file is kept in the output directory. If `lux` is ran with the same arguments, then the download progress will resume from the last session. ### Auto retry lux will auto retry when the download failed, you can specify the retry times by `-retry` option (default is 100). ### Cookies Cookies can be provided to `lux` with the `-c` option if they are required for accessing the video. Cookies can be the following format or [Netscape Cookie]( format: ```console name=value; name2=value2; ... ``` Cookies can be a string or a text file, supply cookies in one of the two following ways. As a string: ```console $ lux -c ""name=value; name2=value2"" "" ``` As a text file: ```console $ lux -c cookies.txt "" ``` ### Proxy You can set the HTTP/SOCKS5 proxy using environment variables: ```console $ HTTP_PROXY="" lux -i "" ``` ```console $ HTTP_PROXY=""socks5://127.0.0.1:1080/"" lux -i "" ``` ### Multi-Thread Use `--multi-thread` or `-m` multiple threads to download single video. Use `--thread` or `-n` option to set the number of download threads(default is 10). > Note: If the video has multi fragment, the number of actual download threads will increase. > > For example: > * If `-n` is set to 10, and the video has 2 fragments, then 20 threads will actually be used. > * If the video has 20 fragments, only 10 fragments are downloaded in the same time, the actual threads count is 100. > **Special Tips:** Use too many threads in **mgtv** download will cause HTTP 403 error, we recommend setting the number of threads to **1**. ### Short link #### bilibili You can just use `av` or `ep` number to download bilibili's video: ```console $ lux -i ep198381 av21877586 Site: bilibili.com Title: 79 Type: video Streams: # All available quality [default] ------------------- Quality: 1080P Size: 485.23 MiB (508798478 Bytes) # download with: lux -f default ""URL"" Site: bilibili.com Title: 13MAD,14 Type: video Streams: # All available quality [default] ------------------- Quality: 1080P Size: 51.88 MiB (54403767 Bytes) # download with: lux -f default ""URL"" ``` ### Use specified Referrer A Referrer can be used for the request with the `-r` option: ```console $ lux -r "" "" ``` ### Specify the output path and name The `-o` option sets the path, and `-O` option sets the name of the downloaded file: ```console $ lux -o ../ -O ""hello"" "" ``` ### Debug Mode The `-d` option outputs network request messages: ```console $ lux -i -d "" URL: Method: GET Headers: ""Referer"": {"" ""Accept"": {""text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8""}, ""Accept-Charset"": {""UTF-8,*;q=0.5""}, ""Accept-Encoding"": {""gzip,deflate,sdch""}, ""Accept-Language"": {""en-US,en;q=0.8""}, ""User-Agent"": {""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.146 Safari/537.36""}, } Status Code: 200 URL: Method: GET Headers: ""Accept-Charset"": {""UTF-8,*;q=0.5""}, ""Accept-Encoding"": {""gzip,deflate,sdch""}, ""Accept-Language"": {""en-US,en;q=0.8""}, ""User-Agent"": {""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.146 Safari/537.36""}, ""Referer"": {"" ""Accept"": {""text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8""}, } Status Code: 200 Site: bilibili.com Title: R8 Type: video Streams: # All available quality [default] ------------------- Quality: 1080P Size: 64.38 MiB (67504795 Bytes) # download with: lux -f default ""URL"" ``` ### Reuse extracted data The `-j` option will print the extracted data in JSON format. ```console $ lux -j "" { ""site"": "" bilibili.com"", ""title"": ""2018day by day"", ""type"": ""video"", ""streams"": { ""15"": { ""urls"": [ { ""url"": ""..."", ""size"": 18355205, ""ext"": ""flv"" } ], ""quality"": "" 360P"", ""size"": 18355205 }, ""32"": { ""urls"": [ { ""url"": ""..."", ""size"": 40058632, ""ext"": ""flv"" } ], ""quality"": "" 480P"", ""size"": 40058632 }, ""64"": { ""urls"": [ { ""url"": ""..."", ""size"": 82691087, ""ext"": ""flv"" } ], ""quality"": "" 720P"", ""size"": 82691087 }, ""80"": { ""urls"": [ { ""url"": ""..."", ""size"": 121735559, ""ext"": ""flv"" } ], ""quality"": "" 1080P"", ""size"": 121735559 } } } ``` ### Options ``` -i Information only -F string URLs file path -d Debug mode -j Print extracted data -s Minimum outputs -v Show version ``` #### Download: ``` -f string Select specific stream to download -p Download playlist -n int The number of download thread (only works for multiple-parts video) (default 10) -c string Cookie -r string Use specified Referrer -cs int HTTP chunk size for downloading (in MB) (default 1) ``` #### Network: ``` -retry int How many times to retry when the download failed (default 10) ``` #### Playlist: ``` -start int Playlist video to start at (default 1) -end int Playlist video to end at -items string Playlist video items to download. Separated by commas like: 1,5,6,8-10 ``` #### Filesystem: ``` -o string Specify the output path -O string Specify the output file name ``` #### Subtitle: ``` -C Download captions ``` #### Youku: ``` -ccode string Youku ccode (default ""0502"") -ckey string Youku ckey (default ""7B19C0AB12633B22E7FE81271162026020570708D6CC189E4924503C49D243A0DE6CD84A766832C2C99898FC5ED31F3709BB3CDD82C96492E721BDD381735026"") -password string Youku password ``` #### aria2: > Note: If you use aria2 to download, you need to merge the multi-part videos yourself. ``` -aria2 Use Aria2 RPC to download -aria2addr string Aria2 Address (default ""localhost:6800"") -aria2method string Aria2 Method (default "" -aria2token string Aria2 RPC Token ``` ## Supported Sites | Site | URL | Videos | Images | Audio | Playlist | VIP adaptation | Build Status | | ---------------- | ------------------------------------------------------------------------- | -------- | -------- | ------- | ---------- | ---------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | | | | | | | | []( | | | | | | | | | []( | | | | | | | | | []( | | pixivision | | | | | | | []( | | | | | | | | | []( | | YouTube | | | | | | | []( | | | , , | | | | | | []( | | | | | | | | | []( | | | | | | | | | []( | | TV | | | | | | | []( | | | | | | | | | []( | | Tumblr | | | | | | | []( | | Vimeo | | | | | | | []( | | Facebook | | | | | | | []( | | | | | | | | | []( | | | | | | | | | []( | | | | | | | | | []( | | Instagram | | | | | | | []( | | Twitter | | | | | | | []( | | | | | | | | | []( | | | | | | | | | []( | | | | | | | | | []( | | | | | | | | | []( | | Pornhub | | | | | | | []( | | XVIDEOS | | | | | | | []( | | | | | | | | | []( | | TikTok | | | | | | | []( | | Pinterest | | | | | | | []( | | | | | | | | | []( | | AcFun | | | | | | | []( | | Eporner | | | | | | | []( | | StreamTape | | | | | | | []( | | | | | | | | | []( | | | | | | | | | []( | | | | | | | | | []( | | | | | | | | | []( | | Reddit | | | | | | | []( | | VKontakte | | | | | | | []( | | | | | | | | | []( | | Rumble | | | | | | | []( | | | | | | | | | []( | | Zing MP3 | | | | | | | []( | ## Known issues ### `ccode` lux `ccode` `lux -ccode ...` lux Pull request `ccode` Cookie `ccode` ### / / Cookie CookieCookie Cookie ``` $ lux -c ""msToken=yoEh0-qLUq4obZ8Sfxsem_CxCo9R3NM6ViTrWaRcM1...; ttwid=1%7C..."" "" ``` ## Contributing Lux is an open source project and built on the top of open-source projects. Check out the [Contributing Guide](./CONTRIBUTING.md) to get started. Thanks for [JetBrains]( for the wonderful IDE. ## Authors Code with by [iawia002]( and lovely [contributors]( ## Similar projects - [youtube]( - [youtube-dl]( - [you-get]( - [ytdl]( ## License MIT Copyright (c) 2018-present, iawia002","2.9k, Code, Issues, Pull requests, Actions, Security, Insights, bug, enhancement, feature-request, bilibili, help wanted, iqiyi, youku, qq, weibo, later, youtube, wontfix, utils, question, network, miaopai, mgtv, invalid, good first issue, duplicate, douyin, discuss, dependencies, FFmpeg"
k9s,derailed/k9s,25227,"['Go', 'Makefile', 'Shell']","['k9s', 'kubernetes', 'kubernetes-cli', 'kubernetes-clusters', 'k8s']","## K9s - Kubernetes CLI To Manage Your Clusters In Style! K9s provides a terminal UI to interact with your Kubernetes clusters. The aim of this project is to make it easier to navigate, observe and manage your applications in the wild. K9s continually watches Kubernetes for changes and offers subsequent commands to interact with your observed resources. --- ## Note... K9s is not pimped out by a big corporation with deep pockets. It is a complex OSS project that demands a lot of my time to maintain and support. K9s will always remain OSS and therefore free! That said, if you feel k9s makes your day to day Kubernetes journey a tad brighter, saves you time and makes you more productive, please consider [sponsoring us!]( Your donations will go a long way in keeping our servers lights on and beers in our fridge! **Thank you!** --- []( []( []( []( []( []( []( []( --- ## Screenshots 1. Pods 2. Logs 3. Deployments --- ## Demo Videos/Recordings * [K9s v0.30.0 Sneak peek]( * [Vulnerability Scans]( * [K9s v0.29.0]( * [K9s v0.21.3]( * [K9s v0.19.X]( * [K9s v0.18.0]( * [K9s v0.17.0]( * [K9s Pulses]( * [K9s v0.15.1]( * [K9s v0.13.0]( * [K9s v0.9.0]( * [K9s v0.7.0 Features]( * [K9s v0 Demo]( --- ## Documentation Please refer to our [K9s documentation]( site for installation, usage, customization and tips. ## Slack Channel Wanna discuss K9s features with your fellow `K9sers` or simply show your support for this tool? * Channel: [K9ersSlack]( * Invite: [K9slackers Invite]( ## Installation K9s is available on Linux, macOS and Windows platforms. Binaries for Linux, Windows and Mac are available as tarballs in the [release page]( * Via [Homebrew]( for macOS or Linux ```shell brew install derailed/k9s/k9s ``` * Via [MacPorts]( ```shell sudo port install k9s ``` * Via [snap]( for Linux ```shell snap install k9s --devmode ``` * On Arch Linux ```shell pacman -S k9s ``` * On OpenSUSE Linux distribution ```shell zypper install k9s ``` * On FreeBSD ```shell pkg install k9s ``` * Via [Winget]( for Windows ```shell winget install k9s ``` * Via [Scoop]( for Windows ```shell scoop install k9s ``` * Via [Chocolatey]( for Windows ```shell choco install k9s ``` * Via a GO install ```shell # NOTE: The dev version will be in effect! go install github.com/derailed/k9s@latest ``` * Via [Webi]( for Linux and macOS ```shell curl -sS | bash ``` * Via [pkgx]( for Linux and macOS ```shell pkgx k9s ``` * Via [Webi]( for Windows ```shell curl.exe -A MS | powershell ``` * As a [Docker Desktop Extension]( (for the Docker Desktop built in Kubernetes Server) ```shell docker extension install spurin/k9s-dd-extension:latest ``` --- ## Building From Source K9s is currently using GO v1.21.X or above. In order to build K9s from source you must: 1. Clone the repo 2. Build and run the executable ```shell make build && ./execs/k9s ``` --- ## Running with Docker ### Running the official Docker image You can run k9s as a Docker container by mounting your `KUBECONFIG`: ```shell docker run --rm -it -v $KUBECONFIG:/root/.kube/config quay.io/derailed/k9s ``` For default path it would be: ```shell docker run --rm -it -v ~/.kube/config:/root/.kube/config quay.io/derailed/k9s ``` ### Building your own Docker image You can build your own Docker image of k9s from the [Dockerfile](Dockerfile) with the following: ```shell docker build -t k9s-docker:v0.0.1 . ``` You can get the latest stable `kubectl` version and pass it to the `docker build` command with the `--build-arg` option. You can use the `--build-arg` option to pass any valid `kubectl` version (like `v1.18.0` or `v1.19.1`). ```shell KUBECTL_VERSION=$(make kubectl-stable-version 2>/dev/null) docker build --build-arg KUBECTL_VERSION=${KUBECTL_VERSION} -t k9s-docker:0.1 . ``` Run your container: ```shell docker run --rm -it -v ~/.kube/config:/root/.kube/config k9s-docker:0.1 ``` --- ## PreFlight Checks * K9s uses 256 colors terminal mode. On `Nix system make sure TERM is set accordingly. ```shell export TERM=xterm-256color ``` * In order to issue resource edit commands make sure your EDITOR and KUBE_EDITOR env vars are set. ```shell # Kubectl edit command will use this env var. export KUBE_EDITOR=my_fav_editor ``` * K9s prefers recent kubernetes versions ie 1.28+ --- ## K8S Compatibility Matrix | k9s | k8s client | | ------------------ | ---------- | | >= v0.27.0 | 1.26.1 | | v0.26.7 - v0.26.6 | 1.25.3 | | v0.26.5 - v0.26.4 | 1.25.1 | | v0.26.3 - v0.26.1 | 1.24.3 | | v0.26.0 - v0.25.19 | 1.24.2 | | v0.25.18 - v0.25.3 | 1.22.3 | | v0.25.2 - v0.25.0 | 1.22.0 | | <= v0.24 | 1.21.3 | --- ## The Command Line ```shell # List current version k9s version # To get info about K9s runtime (logs, configs, etc..) k9s info # List all available CLI options k9s help # To run K9s in a given namespace k9s -n mycoolns # Start K9s in an existing KubeConfig context k9s --context coolCtx # Start K9s in readonly mode - with all cluster modification commands disabled k9s --readonly ``` ## Logs And Debug Logs Given the nature of the ui k9s does produce logs to a specific location. To view the logs and turn on debug mode, use the following commands: ```shell # Find out where the logs are stored k9s info ``` ```text ____ __.________ | |/ _/ __ \______ | < \____ / ___/ | | \ / /\___ \ |____|__ \ /____//____ > \/ \/ Version: vX.Y.Z Config: /Users/fernand/.config/k9s/config.yaml Logs: /Users/fernand/.local/state/k9s/k9s.log Dumps dir: /Users/fernand/.local/state/k9s/screen-dumps Benchmarks dir: /Users/fernand/.local/state/k9s/benchmarks Skins dir: /Users/fernand/.local/share/k9s/skins Contexts dir: /Users/fernand/.local/share/k9s/clusters Custom views file: /Users/fernand/.local/share/k9s/views.yaml Plugins file: /Users/fernand/.local/share/k9s/plugins.yaml Hotkeys file: /Users/fernand/.local/share/k9s/hotkeys.yaml Alias file: /Users/fernand/.local/share/k9s/aliases.yaml ``` ### View K9s logs ```shell tail -f /Users/fernand/.local/data/k9s/k9s.log ``` ### Start K9s in debug mode ```shell k9s -l debug ``` ### Customize logs destination You can override the default log file destination either with the `--logFile` argument: ```shell k9s --logFile /tmp/k9s.log less /tmp/k9s.log ``` Or through the `K9S_LOGS_DIR` environment variable: ```shell K9S_LOGS_DIR=/var/log k9s less /var/log/k9s.log ``` ## Key Bindings K9s uses aliases to navigate most K8s resources. | Action | Command | Comment | |---------------------------------------------------------------------------------|-------------------------------|------------------------------------------------------------------------| | Show active keyboard mnemonics and help | `?` | | | Show all available resource alias | `ctrl-a` | | | To bail out of K9s | `:q`, `ctrl-c` | | | View a Kubernetes resource using singular/plural or short-name | `:`pod | accepts singular, plural, short-name or alias ie pod or pods | | View a Kubernetes resource in a given namespace | `:`pod ns-x | | | View filtered pods (New v0.30.0!) | `:`pod /fred | View all pods filtered by fred | | View labeled pods (New v0.30.0!) | `:`pod app=fred,env=dev | View all pods with labels matching app=fred and env=dev | | View pods in a given context (New v0.30.0!) | `:`pod @ctx1 | View all pods in context ctx1. Switches out your current k9s context! | | Filter out a resource view given a filter | `/`filter | Regex2 supported ie `fred|blee` to filter resources named fred or blee | | Inverse regex filter | `/`! filter | Keep everything that *doesn't* match. | | Filter resource view by labels | `/`-l label-selector | | | Fuzzy find a resource given a filter | `/`-f filter | | | Bails out of view/command/filter mode | `` | | | Key mapping to describe, view, edit, view logs,... | `d`,`v`, `e`, `l`,... | | | To view and switch to another Kubernetes context (Pod view) | `:`ctx | | | To view and switch directly to another Kubernetes context (Last used view) | `:`ctx context-name | | | To view and switch to another Kubernetes namespace | `:`ns | | | To view all saved resources | `:`screendump or sd | | | To delete a resource (TAB and ENTER to confirm) | `ctrl-d` | | | To kill a resource (no confirmation dialog, equivalent to kubectl delete --now) | `ctrl-k` | | | Launch pulses view | `:`pulses or pu | | | Launch XRay view | `:`xray RESOURCE [NAMESPACE] | RESOURCE can be one of po, svc, dp, rs, sts, ds, NAMESPACE is optional | | Launch Popeye view | `:`popeye or pop | See [popeye](#popeye) | --- ## K9s Configuration K9s keeps its configurations as YAML files inside of a `k9s` directory and the location depends on your operating system. K9s leverages [XDG]( to load its various configurations files. For information on the default locations for your OS please see [this link]( If you are still confused a quick `k9s info` will reveal where k9s is loading its configurations from. Alternatively, you can set `K9S_CONFIG_DIR` to tell K9s the directory location to pull its configurations from. | Unix | macOS | Windows | |-----------------|------------------------------------|-----------------------| | `~/.config/k9s` | `~/Library/Application Support/k9s` | `%LOCALAPPDATA%\k9s` | > NOTE: This is still in flux and will change while in pre-release stage! ```yaml # $XDG_CONFIG_HOME/k9s/config.yaml k9s: # Enable periodic refresh of resource browser windows. Default false liveViewAutoRefresh: false # The path to screen dump. Default: '%temp_dir%/k9s-screens-%username%' (k9s info) screenDumpDir: /tmp/dumps # Represents ui poll intervals. Default 2secs refreshRate: 2 # Number of retries once the connection to the api-server is lost. Default 15. maxConnRetry: 5 # Indicates whether modification commands like delete/kill/edit are disabled. Default is false readOnly: false # Toggles whether k9s should exit when CTRL-C is pressed. When set to true, you will need to exist k9s via the :quit command. Default is false. noExitOnCtrlC: false #UI settings ui: # Enable mouse support. Default false enableMouse: false # Set to true to hide K9s header. Default false headless: false # Set to true to hide the K9S logo Default false logoless: false # Set to true to hide K9s crumbs. Default false crumbsless: false noIcons: false # Toggles reactive UI. This option provide for watching on disk artifacts changes and update the UI live Defaults to false. reactive: false # By default all contexts wil use the dracula skin unless explicitly overridden in the context config file. skin: dracula # => assumes the file skins/dracula.yaml is present in the $XDG_DATA_HOME/k9s/skins directory # Allows to set certain views default fullscreen mode. (yaml, helm history, describe, value_extender, details, logs) Default false defaultsToFullScreen: false # Toggles icons display as not all terminal support these chars. noIcons: false # Toggles whether k9s should check for the latest revision from the Github repository releases. Default is false. skipLatestRevCheck: false # When altering kubeconfig or using multiple kube configs, k9s will clean up clusters configurations that are no longer in use. Setting this flag to true will keep k9s from cleaning up inactive cluster configs. Defaults to false. keepMissingClusters: false # Logs configuration logger: # Defines the number of lines to return. Default 100 tail: 200 # Defines the total number of log lines to allow in the view. Default 1000 buffer: 500 # Represents how far to go back in the log timeline in seconds. Setting to -1 will tail logs. Default is -1. sinceSeconds: 300 # => tail the last 5 mins. # Toggles log line wrap. Default false textWrap: false # Toggles log line timestamp info. Default false showTime: false # Provide shell pod customization when nodeShell feature gate is enabled! shellPod: # The shell pod image to use. image: killerAdmin # The namespace to launch to shell pod into. namespace: default # The resource limit to set on the shell pod. limits: cpu: 100m memory: 100Mi # Enable TTY tty: true ``` --- ## Popeye Configuration K9s has integration with [Popeye]( which is a Kubernetes cluster sanitizer. Popeye itself uses a configuration called `spinach.yml`, but when integrating with K9s the cluster-specific file should be name `$XDG_CONFIG_HOME/share/k9s/clusters/clusterX/contextY/spinach.yml`. This allows you to have a different spinach config per cluster. --- ## Node Shell By enabling the nodeShell feature gate on a given cluster, K9s allows you to shell into your cluster nodes. Once enabled, you will have a new `s` for `shell` menu option while in node view. K9s will launch a pod on the selected node using a special k9s_shell pod. Furthermore, you can refine your shell pod by using a custom docker image preloaded with the shell tools you love. By default k9s uses a BusyBox image, but you can configure it as follows: ```yaml # $XDG_CONFIG_HOME/k9s/config.yaml k9s: # You can also further tune the shell pod specification shellPod: image: cool_kid_admin:42 namespace: blee limits: cpu: 100m memory: 100Mi ``` Then in your cluster configuration file... ```yaml # $XDG_DATA_HOME/k9s/clusters/cluster-1/context-1 k9s: cluster: cluster-1 readOnly: false namespace: active: default lockFavorites: false favorites: - kube-system - default view: active: po featureGates: nodeShell: true # => Enable this feature gate to make nodeShell available on this cluster portForwardAddress: localhost ``` --- ## Command Aliases In K9s, you can define your very own command aliases (shortnames) to access your resources. In your `$HOME/.config/k9s` define a file called `aliases.yaml`. A K9s alias defines pairs of alias:gvr. A gvr (Group/Version/Resource) represents a fully qualified Kubernetes resource identifier. Here is an example of an alias file: ```yaml # $XDG_DATA_HOME/k9s/aliases.yaml aliases: pp: v1/pods crb: rbac.authorization.k8s.io/v1/clusterrolebindings # As of v0.30.0 you can also refer to another command alias... fred: pod fred app=blee # => view pods in namespace fred with labels matching app=blee ``` Using this aliases file, you can now type `:pp` or `:crb` or `:fred` to activate their respective commands. --- ## HotKey Support Entering the command mode and typing a resource name or alias, could be cumbersome for navigating thru often used resources. We're introducing hotkeys that allow users to define their own key combination to activate their favorite resource views. Additionally, you can define context specific hotkeys by add a context level configuration file in `$XDG_DATA_HOME/k9s/clusters/clusterX/contextY/hotkeys.yaml` In order to surface hotkeys globally please follow these steps: 1. Create a file named `$XDG_CONFIG_HOME/k9s/hotkeys.yaml` 2. Add the following to your `hotkeys.yaml`. You can use resource name/short name to specify a command ie same as typing it while in command mode. ```yaml # $XDG_CONFIG_HOME/k9s/hotkeys.yaml hotKeys: # Hitting Shift-0 navigates to your pod view shift-0: shortCut: Shift-0 description: Viewing pods command: pods # Hitting Shift-1 navigates to your deployments shift-1: shortCut: Shift-1 description: View deployments command: dp # Hitting Shift-2 navigates to your xray deployments shift-2: shortCut: Shift-2 description: Xray Deployments command: xray deploy # Hitting Shift-S view the resources in the namespace of your current selection shift-s: shortCut: Shift-S override: true # => will override the default shortcut related action if set to true (default to false) description: Namespaced resources command: ""$RESOURCE_NAME $NAMESPACE"" keepHistory: true # whether you can return to the previous view ``` Not feeling so hot? Your custom hotkeys will be listed in the help view `?`. Also your hotkeys file will be automatically reloaded so you can readily use your hotkeys as you define them. You can choose any keyboard shortcuts that make sense to you, provided they are not part of the standard K9s shortcuts list. Similarly, referencing environment variables in hotkeys is also supported. The available environment variables can refer to the description in the [Plugins](#plugins) section. > NOTE: This feature/configuration might change in future releases! --- ## FastForwards As of v0.25.0, you can leverage the `FastForwards` feature to tell K9s how to default port-forwards. In situations where you are dealing with multiple containers or containers exposing multiple ports, it can be cumbersome to specify the desired port-forward from the dialog as in most cases, you already know which container/port tuple you desire. For these use cases, you can now annotate your manifests with the following annotations: @ `k9scli.io/auto-port-forwards` activates one or more port-forwards directly bypassing the port-forward dialog all together. @ `k9scli.io/port-forwards` pre-selects one or more port-forwards when launching the port-forward dialog. The annotation value takes on the shape `container-name::[local-port:]container-port` > NOTE: for either cases above you can specify the container port by name or number in your annotation! ### Example ```yaml # Pod fred apiVersion: v1 kind: Pod metadata: name: fred annotations: k9scli.io/auto-port-forwards: zorg::5556 # => will default to container zorg port 5556 and local port 5566. No port-forward dialog will be shown. # Or... k9scli.io/port-forwards: bozo::9090:p1 # => launches the port-forward dialog selecting default port-forward on container bozo port named p1(8081) # mapping to local port 9090. ... spec: containers: - name: zorg ports: - name: p1 containerPort: 5556 ... - name: bozo ports: - name: p1 containerPort: 8081 - name: p2 containerPort: 5555 ... ``` The annotation value must specify a container to forward to as well as a local port and container port. The container port may be specified as either a port number or port name. If the local port is omitted then the local port will default to the container port number. Here are a few examples: 1. bozo::http - creates a pf on container `bozo` with port name If http specifies port number 8080 then the local port will be 8080 as well. 2. bozo::9090:http - creates a pf on container `bozo` mapping local port 9090-> 3. bozo::9090:8080 - creates a pf on container `bozo` mapping local port 9090->8080 --- ## Resource Custom Columns [SneakCast v0.17.0 on The Beach! - Yup! sound is sucking but what a setting!]( You can change which columns shows up for a given resource via custom views. To surface this feature, you will need to create a new configuration file, namely `$XDG_CONFIG_HOME/k9s/views.yaml`. This file leverages GVR (Group/Version/Resource) to configure the associated table view columns. If no GVR is found for a view the default rendering will take over (ie what we have now). Going wide will add all the remaining columns that are available on the given resource after your custom columns. To boot, you can edit your views config file and tune your resources views live! > NOTE: This is experimental and will most likely change as we iron this out! Here is a sample views configuration that customize a pods and services views. ```yaml # $XDG_CONFIG_HOME/k9s/views.yaml views: v1/pods: columns: - AGE - NAMESPACE - NAME - IP - NODE - STATUS - READY v1/services: columns: - AGE - NAMESPACE - NAME - TYPE - CLUSTER-IP ``` --- ## Plugins K9s allows you to extend your command line and tooling by defining your very own cluster commands via plugins. K9s will look at `$XDG_CONFIG_HOME/k9s/plugins.yaml` to locate all available plugins. A plugin is defined as follows: * Shortcut option represents the key combination a user would type to activate the plugin * Override option make that the default action related to the shortcut will be overrided by the plugin * Confirm option (when enabled) lets you see the command that is going to be executed and gives you an option to confirm or prevent execution * Description will be printed next to the shortcut in the k9s menu * Scopes defines a collection of resources names/short-names for the views associated with the plugin. You can specify `all` to provide this shortcut for all views. * Command represents ad-hoc commands the plugin runs upon activation * Background specifies whether or not the command runs in the background * Args specifies the various arguments that should apply to the command above * OverwriteOutput options allows plugin developers to provide custom messages on plugin execution K9s does provide additional environment variables for you to customize your plugins arguments. Currently, the available environment variables are as follows: * `$RESOURCE_GROUP` -- the selected resource group * `$RESOURCE_VERSION` -- the selected resource api version * `$RESOURCE_NAME` -- the selected resource name * `$NAMESPACE` -- the selected resource namespace * `$NAME` -- the selected resource name * `$CONTAINER` -- the current container if applicable * `$FILTER` -- the current filter if any * `$KUBECONFIG` -- the KubeConfig location. * `$CLUSTER` the active cluster name * `$CONTEXT` the active context name * `$USER` the active user * `$GROUPS` the active groups * `$POD` while in a container view * `$COL-` use a given column name for a viewed resource. Must be prefixed by `COL-`! Curly braces can be used to embed an environment variable inside another string, or if the column name contains special characters. (e.g. `${NAME}-example` or `${COL-%CPU/L}`) ### Plugin Example This defines a plugin for viewing logs on a selected pod using `ctrl-l` as shortcut. ```yaml # $XDG_DATA_HOME/k9s/plugins.yaml plugins: # Defines a plugin to provide a `ctrl-l` shortcut to tail the logs while in pod view. fred: shortCut: Ctrl-L override: false confirm: false description: Pod logs scopes: - pods command: kubectl background: false args: - logs - -f - $NAME - -n - $NAMESPACE - --context - $CONTEXT ``` > NOTE: This is an experimental feature! Options and layout may change in future K9s releases as this feature solidifies. --- ## Benchmark Your Applications K9s integrates [Hey]( from the brilliant and super talented [Jaana Dogan]( `Hey` is a CLI tool to benchmark HTTP endpoints similar to AB bench. This preliminary feature currently supports benchmarking port-forwards and services (Read the paint on this is way fresh!). To setup a port-forward, you will need to navigate to the PodView, select a pod and a container that exposes a given port. Using `SHIFT-F` a dialog comes up to allow you to specify a local port to forward. Once acknowledged, you can navigate to the PortForward view (alias `pf`) listing out your active port-forwards. Selecting a port-forward and using `CTRL-B` will run a benchmark on that HTTP endpoint. To view the results of your benchmark runs, go to the Benchmarks view (alias `be`). You should now be able to select a benchmark and view the run stats details by pressing ``. NOTE: Port-forwards only last for the duration of the K9s session and will be terminated upon exit. Initially, the benchmarks will run with the following defaults: * Concurrency Level: 1 * Number of Requests: 200 * HTTP Verb: GET * Path: / The PortForward view is backed by a new K9s config file namely: `$XDG_DATA_HOME/k9s/clusters/clusterX/contextY/benchmarks.yaml`. Each cluster you connect to will have its own bench config file, containing the name of the K8s context for the cluster. Changes to this file should automatically update the PortForward view to indicate how you want to run your benchmarks. Benchmarks result reports are stored in `$XDG_STATE_HOME/k9s/clusters/clusterX/contextY` Here is a sample benchmarks.yaml configuration. Please keep in mind this file will likely change in subsequent releases! ```yaml # This file resides in $XDG_DATA_HOME/k9s/clusters/clusterX/contextY/benchmarks.yaml benchmarks: # Indicates the default concurrency and number of requests setting if a container or service rule does not match. defaults: # One concurrent connection concurrency: 1 # Number of requests that will be sent to an endpoint requests: 500 containers: # Containers section allows you to configure your http container's endpoints and benchmarking settings. # NOTE: the container ID syntax uses namespace/pod-name:container-name default/nginx:nginx: # Benchmark a container named nginx using POST HTTP verb using URL and headers. concurrency: 1 requests: 10000 path: /bozo method: POST body: {""fred"":""blee""} header: Accept: - text/html Content-Type: - application/json services: # Similarly you can Benchmark an HTTP service exposed either via NodePort, LoadBalancer types. # Service ID is ns/svc-name default/nginx: # Set the concurrency level concurrency: 5 # Number of requests to be sent requests: 500 method: GET # This setting will depend on whether service is NodePort or LoadBalancer. NodePort may require vendor port tunneling setting. # Set this to a node if NodePort or LB if applicable. IP or dns name. host: A.B.C.D path: /bumblebeetuna auth: user: jean-baptiste-emmanuel password: Zorg! ``` --- ## K9s RBAC FU On RBAC enabled clusters, you would need to give your users/groups capabilities so that they can use K9s to explore their Kubernetes cluster. K9s needs minimally read privileges at both the cluster and namespace level to display resources and metrics. These rules below are just suggestions. You will need to customize them based on your environment policies. If you need to edit/delete resources extra Fu will be necessary. > NOTE! Cluster/Namespace access may change in the future as K9s evolves. > NOTE! We expect K9s to keep running even in atrophied clusters/namespaces. Please file issues if this is not the case! ### Cluster RBAC scope ```yaml --- # K9s Reader ClusterRole kind: ClusterRole apiVersion: rbac.authorization.k8s.io/v1 metadata: name: k9s rules: # Grants RO access to cluster resources node and namespace - apiGroups: [""""] resources: [""nodes"", ""namespaces""] verbs: [""get"", ""list"", ""watch""] # Grants RO access to RBAC resources - apiGroups: [""rbac.authorization.k8s.io""] resources: [""clusterroles"", ""roles"", ""clusterrolebindings"", ""rolebindings""] verbs: [""get"", ""list"", ""watch""] # Grants RO access to CRD resources - apiGroups: [""apiextensions.k8s.io""] resources: [""customresourcedefinitions""] verbs: [""get"", ""list"", ""watch""] # Grants RO access to metric server (if present) - apiGroups: [""metrics.k8s.io""] resources: [""nodes"", ""pods""] verbs: [""get"", ""list"", ""watch""] --- # Sample K9s user ClusterRoleBinding apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: name: k9s subjects: - kind: User name: fernand apiGroup: rbac.authorization.k8s.io roleRef: kind: ClusterRole name: k9s apiGroup: rbac.authorization.k8s.io ``` ### Namespace RBAC scope If your users are constrained to certain namespaces, K9s will need to following role to enable read access to namespaced resources. ```yaml --- # K9s Reader Role (default namespace) kind: Role apiVersion: rbac.authorization.k8s.io/v1 metadata: name: k9s namespace: default rules: # Grants RO access to most namespaced resources - apiGroups: ["""", ""apps"", ""autoscaling"", ""batch"", ""extensions""] resources: [""*""] verbs: [""get"", ""list"", ""watch""] # Grants RO access to metric server - apiGroups: [""metrics.k8s.io""] resources: [""pods"", ""nodes""] verbs: - get - list - watch --- # Sample K9s user RoleBinding apiVersion: rbac.authorization.k8s.io/v1 kind: RoleBinding metadata: name: k9s namespace: default subjects: - kind: User name: fernand apiGroup: rbac.authorization.k8s.io roleRef: kind: Role name: k9s apiGroup: rbac.authorization.k8s.io ``` --- ## Skins Example: Dracula Skin ;) You can style K9s based on your own sense of look and style. Skins are YAML files, that enable a user to change the K9s presentation layer. See this repo `skins` directory for examples. You can skin k9s by default by specifying a UI.skin attribute. You can also change K9s skins based on the context you are connecting too. In this case, you can specify a skin field on your cluster config aka `skin: dracula` (just the name of the skin file without the extension!) and copy this repo `skins/dracula.yaml` to `$XDG_CONFIG_HOME/k9s/skins/` directory. In the case where your cluster spans several contexts, you can add a skin context configuration to your context configuration. This is a collection of {context_name, skin} tuples (please see example below!) Colors can be defined by name or using a hex representation. Of recent, we've added a color named `default` to indicate a transparent background color to preserve your terminal background color settings if so desired. > NOTE: This is very much an experimental feature at this time, more will be added/modified if this feature has legs so thread accordingly! > NOTE: Please see [K9s Skins]( for a list of available colors. To skin a specific context and provided the file `in_the_navy.yaml` is present in your skins directory. ```yaml # $XDG_DATA_HOME/k9s/clusters/clusterX/contextY/config.yaml k9s: cluster: clusterX skin: in_the_navy readOnly: false namespace: active: default lockFavorites: false favorites: - kube-system - default view: active: po featureGates: nodeShell: false portForwardAddress: localhost ``` You can also specify a default skin for all contexts in the root k9s config file as so: ```yaml # $XDG_CONFIG_HOME/k9s/config.yaml k9s: liveViewAutoRefresh: false screenDumpDir: /tmp/dumps refreshRate: 2 maxConnRetry: 5 readOnly: false noExitOnCtrlC: false ui: enableMouse: false headless: false logoless: false crumbsless: false noIcons: false # Toggles reactive UI. This option provide for watching on disk artifacts changes and update the UI live Defaults to false. reactive: false # By default all contexts wil use the dracula skin unless explicitly overridden in the context config file. skin: dracula # => assumes the file skins/dracula.yaml is present in the $XDG_DATA_HOME/k9s/skins directory defaultsToFullScreen: false skipLatestRevCheck: false disablePodCounting: false shellPod: image: busybox namespace: default limits: cpu: 100m memory: 100Mi imageScans: enable: false exclusions: namespaces: [] labels: {} logger: tail: 100 buffer: 5000 sinceSeconds: -1 textWrap: false showTime: false thresholds: cpu: critical: 90 warn: 70 memory: critical: 90 warn: 70 ``` ```yaml # $XDG_DATA_HOME/k9s/skins/in_the_navy.yaml # Skin InTheNavy! k9s: # General K9s styles body: fgColor: dodgerblue bgColor: '#ffffff' logoColor: '#0000ff' # ClusterInfoView styles. info: fgColor: lightskyblue sectionColor: steelblue # Help panel styles help: fgColor: white bgColor: black keyColor: cyan numKeyColor: blue sectionColor: gray frame: # Borders styles. border: fgColor: dodgerblue focusColor: aliceblue # MenuView attributes and styles. menu: fgColor: darkblue keyColor: cornflowerblue # Used for favorite namespaces numKeyColor: cadetblue # CrumbView attributes for history navigation. crumbs: fgColor: white bgColor: steelblue activeColor: skyblue # Resource status and update styles status: newColor: '#00ff00' modifyColor: powderblue addColor: lightskyblue errorColor: indianred highlightcolor: royalblue killColor: slategray completedColor: gray # Border title styles. title: fgColor: aqua bgColor: white highlightColor: skyblue counterColor: slateblue filterColor: slategray views: # TableView attributes. table: fgColor: blue bgColor: darkblue cursorColor: aqua # Header row styles. header: fgColor: white bgColor: darkblue sorterColor: orange # YAML info styles. yaml: keyColor: steelblue colonColor: blue valueColor: royalblue # Logs styles. logs: fgColor: lightskyblue bgColor: black indicator: fgColor: dodgerblue bgColor: black toggleOnColor: limegreen toggleOffColor: gray ``` --- ## Contributors Without the contributions from these fine folks, this project would be a total dud! --- ## Known Issues This is still work in progress! If something is broken or there's a feature that you want, please file an issue and if so inclined submit a PR! K9s will most likely blow up if... 1. You're running older versions of Kubernetes. K9s works best on later Kubernetes versions. 2. You don't have enough RBAC fu to manage your cluster. --- ## ATTA Girls/Boys! K9s sits on top of many open source projects and libraries. Our *sincere* appreciations to all the OSS contributors that work nights and weekends to make this project a reality! --- ## Meet The Core Team! * [Fernand Galiana]( * fernand@imhotep.io * [@kitesurfer]( * [Aleksei Romanenko]( We always enjoy hearing from folks who benefit from our work! ## Contributions Guideline * File an issue first prior to submitting a PR! * Ensure all exported items are properly commented * If applicable, submit a test suite against your PR --- 2023 Imhotep Software LLC. All materials licensed under [Apache v2.0](","1.6k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, enhancement, question, bug, needs-tlc, needs-review, good first issue, noodle, dependencies, go, InProgress, AsDesigned, performance, snap, norepro, Documentation, wontsupport, plugin, in-progress, github_actions, distribution, Exploration, wontfix, research, release, pilot-error, invalid, help wanted, duplicate, docker, change-requested"
HandBrake,HandBrake/HandBrake,15814,"['C', 'C#', 'Objective-C']","['video-transcoding', 'multi-platform', 'gplv2']","# HandBrake []( []( []( HandBrake is an open-source video transcoder available for Linux, Mac, and Windows, licensed under the [GNU General Public License (GPL) Version 2](LICENSE). HandBrake takes videos you already have and makes new ones that work on your mobile phone, tablet, TV media player, game console, computer, or web browsernearly anything that supports modern video formats. HandBrake works with most common video files and formats, including ones created by consumer and professional video cameras, mobile devices such as phones and tablets, game and computer screen recordings, and DVD and Blu-ray discs. HandBrake leverages tools such as FFmpeg, x264, and x265 to create new MP4 or MKV video files from these *Sources*. For information on downloading, building/installing, and using HandBrake, see the official [HandBrake Documentation]( ## Community Support Visit the [HandBrake Community Forums]( For information on HandBrake's community support channels, please see [Community Support]( Our [community rules]( and [code of conduct]( apply to both our site and GitHub. ## Contributing We welcome most contributions. While it is our goal to allow everyone to contribute, contributions not meeting the project's goals or standards may be rejected. Please read our [guide to contributing]( This will provide you with all the information you need to start contributing to the project. ## Translations We are now accepting translations via [Transifex]( Please read our [Translations Guide]( and follow the instructions if you are interested in joining the translation effort. ## Additional Information [Authors](AUTHORS.markdown) [License](LICENSE) [News](NEWS.markdown) ## Special Thanks and to many others who have contributed! [Thanks](THANKS.markdown)","1.3k, Code, Issues, Pull requests, Discussions, Actions, Wiki, Security, Insights, Enhancement, Bug, Patch / Help Welcome, LinuxUI, Upstream Issue, MacUI, Awaiting Feedback, Upstream Enhancement, Not Reproducible, WinUI, dependencies, Wontfix, System or Player Issue (Not HB), Source Issue (Not HB), Rejected, Invalid or Not Supported, Duplicate, Broken Third-Party Build"
unleashed-firmware,DarkFlippers/unleashed-firmware,15421,"['C', 'Python', 'C++']","['jailbreak', 'keeloq', 'rolling-codes', 'alternative-firmware', 'flipper']","### Welcome to the Flipper Zero Unleashed Firmware repo! #### **This firmware is a fork from original (OFW) firmware** [flipperdevices/flipperzero-firmware]( ### Most stable custom firmware focused on new features and improvements of original firmware components, keeping compatibility with original firmware API and Apps ##### This software is for experimental purposes only and is not meant for any illegal activity/purposes. We do not condone illegal activity and strongly encourage keeping transmissions to legal/valid uses allowed by law. Also, this software is made without any support from Flipper Devices and is in no way related to the official team. ## FAQ (frequently asked questions) [Follow this link to find answers to most asked questions]( ## Dev builds (unstable) (built automatically from dev branch) - - ## Releases in Telegram - # What's changed - **Sub-GHz** *lib & hal* - Regional TX restrictions removed - Extra Sub-GHz frequencies added - Frequency range can be extended in settings file (Warning: It can damage Flipper's hardware) - Many rolling code [protocols]( now have the ability to save & send captured signals - FAAC SLH (Spa) & BFT Mitto (keeloq secure with seed) manual creation - External CC1101 module support [(by quen0n)]( - **Sub-GHz** *Main App* - Save last used settings [(by derskythe)]( - New frequency analyzer [(by ClusterM)]( - Press OK in frequency analyzer to use detected frequency in Read modes [(by derskythe)]( - Long press OK button in Sub-GHz Frequency analyzer to switch to Read menu [(by derskythe)]( - New option to use timestamps + protocol name when you saving file, instead of random name or timestamp only - Enable in `Radio Settings -> Protocol Names = ON` - Read mode UI improvements (shows time when signal was received) (by @wosk) - External CC1101 module support (Hardware SPI used) - External CC1101 module amplifier control (or LED control) support (enabled by default) - **Hold right in received signal list to delete selected signal** - **Custom buttons for Keeloq / Alutech AT4N / Nice Flor S / Somfy Telis / Security+ 2.0 / CAME Atomo** - now you can use arrow buttons to send signal with different button code - `Add manually` menu extended with new protocols - FAAC SLH, BFT Mitto / Somfy Telis / Nice Flor S / CAME Atomo, etc.. manual creation with programming new remote into receiver (use button 0xF for BFT Mitto, 0x8 (Prog) on Somfy Telis, (right arrow button for other protocols)) - Debug mode counter increase settings (+1 -> +5, +10, default: +1) - Debug PIN output settings for protocol development - **Sub-GHz apps** *by unleashed team* - Sub-GHz Bruteforce - static code brute-force plugin | - Time delay (between signals) setting (hold Up in main screen(says Up to Save)) + configure repeats in protocols list by pressing right button on selected protocol - Load your own file and select bytes you want to bruteforce or use preconfigured options in protocols list - Sub-GHz Remote - remote control for 5 sub-ghz files | bind one file for each button - use the built-in constructor or make config file by following this [instruction]( - **Infrared** - Recompiled IR TV Universal Remote for ALL buttons - Universal remotes for Projectors, Fans, A/Cs and Audio(soundbars, etc.) -> Also always updated and verified by our team - Infrared -> `RCA` Protocol - Infrared -> External IR modules support (with autodetect by OFW) - **NFC/RFID/iButton** * LFRFID and iButton Fuzzer plugins * Extra Mifare Classic keys in system dict * EMV Protocol + Public data parser (by @Leptopt1los and @wosk) * NFC `Add manually` -> Mifare Classic with custom UID * NFC parsers: Umarsh, Zolotaya Korona, Kazan, Metromoney, Moscow Social Card, Troika (reworked) and [many others]( (by @Leptopt1los and @assasinfil) - **Quality of life & other features** - Customizable Flipper name **Update! Now can be changed in Settings->Desktop** (by @xMasterX and @Willy-JL) - Text Input UI element -> Cursor feature (by @Willy-JL) - Byte Input Mini editor -> **Press UP** multiple times until the nibble editor appears (by @gid9798) - Clock on Desktop -> `Settings -> Desktop -> Show Clock` (by @gid9798) - Battery percentage display with different styles `Settings -> Desktop -> Battery View` - More games in Dummy Mode -> click or hold any of arrow buttons - Lock device with pin(or regular lock if pin not set) by holding UP button on main screen [(by an4tur0r)]( - **BadKB** plugin [(by Willy-JL, ClaraCrazy, XFW contributors)]( - (See in Applications->Tools) - (aka BadUSB via Bluetooth) - BadUSB -> Keyboard layouts [(by rien > dummy-decoy)]( - Custom community plugins and games added + all known working apps can be downloaded in extra pack in every release - Other small fixes and changes throughout - See other changes in readme below Also check the [changelog in releases]( for latest updates! ### Current modified and new Sub-GHz protocols list: Thanks to Official team (to their SubGHz Developer, Skorp) for implementing support (decoder + encoder / or decode only) for these protocols in OFW. Keeloq [Not ALL systems supported for decode or emulation!] - [Supported manufacturers list]( Encoders or emulation support made by @xMasterX: - Nero Radio 57bit (+ 56bit support) - CAME 12bit/24bit encoder fixes (Fixes are now merged in OFW) - Keeloq: Dea Mio, Genius Bravo, GSN, HCS101, AN-Motors, JCM Tech, MHouse, Nice Smilo, DTM Neo, FAAC RC,XT, Mutancode, Normstahl, Beninca + Allmatic, Stilmatic, CAME Space, Aprimatic (model TR and similar), Centurion Nova (thanks Carlos !) Encoders or emulation made by @Eng1n33r(first implementation in Q2 2022) and @xMasterX (current version): - CAME Atomo -> Update! check out new [instructions]( - Nice Flor S -> How to create new remote - [instructions]( - FAAC SLH (Spa) -> Update!!! Check out new [instructions]( - Keeloq: BFT Mitto -> Update! Check out new [instructions]( - Star Line - Security+ v1 & v2 (encoders was made in OFW) Encoders made by @assasinfil and @xMasterX: - Somfy Telis -> How to create new remote - [instructions]( - Somfy Keytis - KingGates Stylo 4k - Alutech AT-4N -> How to create new remote - [instructions]( - Nice ON2E (Nice One) -> How to create new remote - [instructions]( ## Please support development of the project The majority of this project is developed and maintained by me, @xMasterX. Our team is small and the guys are working on this project as much as they can solely based on the enthusiasm they have for this project and the community. - @Leptopt1los - NFC, RFID, Plugins, and many other things - @gid9798 - SubGHz, Plugins, many other things - currently offline :( - @assasinfil - SubGHz protocols, NFC parsers - @Svaarich - UI design and animations - @amec0e - Infrared assets - Community moderators in Telegram, Discord, and Reddit - And of course our GitHub community. Your PRs are a very important part of this firmware and open-source development. The amount of work done on this project is huge and we need your support, no matter how large or small. Even if you just say, ""Thank you Unleashed firmware developers!"" somewhere. Doing so will help us continue our work and will help drive us to make the firmware better every time. Also, regarding our releases, every build has and always will be free and open-source. There will be no paywall releases or closed-source apps within the firmware. As long as I am working on this project it will never happen. You can support us by using links or addresses below: |Service|Remark|Link/Wallet| |-|-|-| |**Patreon**|| |**Boosty**|patreon alternative| |cloudtips|only RU payments accepted| |YooMoney|only RU payments accepted| |USDT|(TRC20)|`TSXcitMSnWXUFqiUfEXrTVpVewXy2cYhrs`| |ETH|(BSC/ERC20-Tokens)|`darkflippers.eth` (or `0xFebF1bBc8229418FF2408C07AF6Afa49152fEc6a`)| |BTC||`bc1q0np836jk9jwr4dd7p6qv66d04vamtqkxrecck9`| |SOL|(Solana/Tokens)|`DSgwouAEgu8iP5yr7EHHDqMNYWZxAqXWsTEeqCAXGLj8`| |DOGE||`D6R6gYgBn5LwTNmPyvAQR6bZ9EtGgFCpvv`| |LTC||`ltc1q3ex4ejkl0xpx3znwrmth4lyuadr5qgv8tmq8z9`| |BCH||`qquxfyzntuqufy2dx0hrfr4sndp0tucvky4sw8qyu3`| |XMR|(Monero)| `41xUz92suUu1u5Mu4qkrcs52gtfpu9rnZRdBpCJ244KRHf6xXSvVFevdf2cnjS7RAeYr5hn9MsEfxKoFDRSctFjG5fv1Mhn`| |TON||`UQCOqcnYkvzOZUV_9bPE_8oTbOrOF03MnF-VcJyjisTZmsxa`| ## Community apps included ### [ Download Extra plugins for Unleashed]( ### [List of Extra pack]( | [List of Base *(Default)* pack]( See full list and sources here: [xMasterX/all-the-plugins]( ### Official Flipper Zero Apps Catalog [web version]( or mobile app # Instructions ## First look at official docs [docs.flipper.net]( ## [How to install](/documentation/HowToInstall.md) - [versions info](/CHANGELOG.md#recommended-update-option---web-updater): `n`,` `,`e`... ## Firmware & Development ### - **Developer Documentation** - [developer.flipper.net]( ### - **[How to build](/documentation/HowToBuild.md#how-to-build-by-yourself) | [Project-structure](#project-structure)** ### - **CLion IDE** - How to setup workspace for flipper firmware development [by Savely Krasovsky]( ### - **""Hello world!""** - plugin tutorial [English by DroomOne ]( | [Russian by Pavel Yakovlev]( ### - [How to write your own app]( Docs by atmanos **outdated API** ## Firmware & main Apps feature ### - System: [How to change Flipper name]( ### - BadUSB: [How to add new keyboard layouts]( ### - Infrared: [How to make captures to add them into Universal IR remotes]( ## **Sub-GHz** ### - [How to use Flipper as new remote (Nice FlorS, BFT Mitto, Somfy Telis, Aprimatic, AN-Motors, etc..)]( ### - External Radio: [How to connect CC1101 module]( ### - Transmission is blocked? [How to extend Sub-GHz frequency range]( ### - [How to add extra Sub-GHz frequencies]( ### - [~~Configure Sub-GHz Remote App~~]( Not recommended, please use embedded configurator ## **Plugins** ### - TOTP (Authenticator): [config description]( ### - Barcode Generator: [How to use]( ### - Multi Converter: [How to use]( ### - WAV Player: [sample files & how to convert]( ### - Sub-GHz playlist: [generator script]( ## **Plugins that works with external hardware** [GPIO] ### - Unitemp - Temperature sensors reader: [How to use & supported sensors]( ### - [NMEA] GPS: [How to use]( ### - i2c Tools [How to use]( ### - [NRF24] plugins: [How to use]( ### - [WiFi] Scanner: [How to use]( | [Web Flasher]( ### - [ESP8266] Deauther: [How to use]( | [Web Flasher]( ### - [ESP32] WiFi Marauder: [How to use]( docs by UberGuidoZ | [Marauder repo]( ### - [ESP32-CAM] Camera Suite: [How to use]( ### - How to Upload `.bin` to ESP32/ESP8266: [Windows]( | [FAP ""ESP flasher""]( ### - [GPIO] SentrySafe plugin: [How to use]( # Where I can find IR, Sub-GHz, ... files, DBs, and other stuff? ## [UberGuidoZ Playground - Large collection of files - Github]( ## [Awesome Flipper Zero - Github]( # Links * Official Docs: [docs.flipper.net]( * Official Forum: [forum.flipperzero.one]( * Update! Developer Documentation [developer.flipper.net]( # Project structure - `applications` - Applications and services used in firmware - `assets` - Assets used by applications and services - `furi` - Furi Core: OS-level primitives and helpers - `debug` - Debug tool: GDB-plugins, SVD-file and etc - `documentation` - Documentation generation system configs and input files - `firmware` - Firmware source code - `lib` - Our and 3rd party libraries, drivers and etc... - `site_scons` - Build helpers - `scripts` - Supplementary scripts and python libraries home Also, pay attention to the `ReadMe.md` files inside those directories.","1.3k, Code, Issues, Pull requests, Actions, Security, Insights, feature request, bug, question, wrong repo, wontfix, invalid, duplicate, documentation, help wanted"
cosmopolitan,jart/cosmopolitan,15411,"['C', 'POV-Ray SDL', 'Assembly']","['polyglot', 'containers', 'linux', 'openbsd', 'netbsd']","[]( # Cosmopolitan [Cosmopolitan Libc]( makes C a build-once run-anywhere language, like Java, except it doesn't need an interpreter or virtual machine. Instead, it reconfigures stock GCC and Clang to output a POSIX-approved polyglot format that runs natively on Linux + Mac + Windows + FreeBSD + OpenBSD + NetBSD + BIOS with the best possible performance and the tiniest footprint imaginable. ## Background For an introduction to this project, please read the [actually portable executable]( blog post and [cosmopolitan libc]( website. We also have [API documentation]( ## Getting Started You can start by obtaining a release of our `cosmocc` compiler from . ```sh mkdir -p cosmocc cd cosmocc wget unzip cosmocc.zip ``` Here's an example program we can write: ```c // hello.c #include int main() { printf(""hello world\n""); } ``` It can be compiled as follows: ```sh cosmocc -o hello hello.c ./hello ``` The Cosmopolitan Libc runtime links some heavyweight troubleshooting features by default, which are very useful for developers and admins. Here's how you can log system calls: ```sh ./hello --strace ``` Here's how you can get a much more verbose log of function calls: ```sh ./hello --ftrace ``` You can use the Cosmopolitan's toolchain to build conventional open source projects which use autotools. This strategy normally works: ```sh export CC=x86_64-unknown-cosmo-cc export CXX=x86_64-unknown-cosmo-c++ ./configure --prefix=/opt/cosmos/x86_64 make -j make install ``` ## Cosmopolitan Source Builds Cosmopolitan can be compiled from source on any of our supported platforms. The Makefile will download cosmocc automatically. It's recommended that you install a systemwide APE Loader. This command requires `sudo` access to copy the `ape` command to a system folder and register with binfmt_misc on Linux, for even more performance. ```sh ape/apeinstall.sh ``` You can now build the mono repo with any modern version of GNU Make. To make life easier, we've included one in the cosmocc toolchain, which is guaranteed to be compatible and furthermore includes our extensions for doing build system sandboxing. ```sh build/bootstrap/make -j8 o//examples/hello ``` Since the Cosmopolitan repository is very large, you might only want to build one particular thing. Here's an example of a target that can be compiled relatively quickly, which is a simple POSIX test that only depends on core LIBC packages. ```sh rm -rf o//libc o//test build/bootstrap/make o//test/posix/signal_test o//test/posix/signal_test ``` Sometimes it's desirable to build a subset of targets, without having to list out each individual one. For example if you wanted to build and run all the unit tests in the `TEST_POSIX` package, you could say: ```sh build/bootstrap/make o//test/posix ``` Cosmopolitan provides a variety of build modes. For example, if you want really tiny binaries (as small as 12kb in size) then you'd say: ```sh build/bootstrap/make m=tiny ``` You can furthermore cut out the bloat of other operating systems, and have Cosmopolitan become much more similar to Musl Libc. ```sh build/bootstrap/make m=tinylinux ``` For further details, see [//build/config.mk](build/config.mk). ## Debugging To print a log of system calls to stderr: ```sh cosmocc -o hello hello.c ./hello --strace ``` To print a log of function calls to stderr: ```sh cosmocc -o hello hello.c ./hello --ftrace ``` Both strace and ftrace use the unbreakable kprintf() facility, which is able to be sent to a file by setting an environment variable. ```sh export KPRINTF_LOG=log ./hello --strace ``` ## GDB Here's the recommended `~/.gdbinit` config: ```gdb set host-charset UTF-8 set target-charset UTF-8 set target-wide-charset UTF-8 set osabi none set complaints 0 set confirm off set history save on set history filename ~/.gdb_history define asm layout asm layout reg end define src layout src layout reg end src ``` You normally run the `.dbg` file under gdb. If you need to debug the `` file itself, then you can load the debug symbols independently as ```sh gdb foo -ex 'add-symbol-file foo.dbg 0x401000' ``` ## Platform Notes ### Shells If you use zsh and have trouble running APE programs try `sh -c ./prog` or simply upgrade to zsh 5.9+ (since we patched it two years ago). The same is the case for Python `subprocess`, old versions of fish, etc. ### Linux Some Linux systems are configured to launch MZ executables under WINE. Other distros configure their stock installs so that APE programs will print ""run-detectors: unable to find an interpreter"". For example: ```sh jart@ubuntu:~$ wget jart@ubuntu:~$ chmod +x dash jart@ubuntu:~$ ./dash run-detectors: unable to find an interpreter for ./dash ``` You can fix that by registering APE with `binfmt_misc`: ```sh sudo wget -O /usr/bin/ape -m).elf sudo chmod +x /usr/bin/ape sudo sh -c ""echo ':APE:M::MZqFpD::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register"" sudo sh -c ""echo ':APE-jart:M::jartsr::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register"" ``` You should be good now. APE will not only work, it'll launch executables 400s faster now too. However if things still didn't work out, it's also possible to disable `binfmt_misc` as follows: ```sh sudo sh -c 'echo -1 > /proc/sys/fs/binfmt_misc/cli' # remove Ubuntu's MZ interpreter sudo sh -c 'echo -1 > /proc/sys/fs/binfmt_misc/status' # remove ALL binfmt_misc entries ``` ### WSL It's normally unsafe to use APE in a WSL environment, because it tries to run MZ executables as WIN32 binaries within the WSL environment. In order to make it safe to use Cosmopolitan software on WSL, run this: ```sh sudo sh -c ""echo -1 > /proc/sys/fs/binfmt_misc/WSLInterop"" ``` ## Discord Chatroom The Cosmopolitan development team collaborates on the Redbean Discord server. You're welcome to join us! ## Support Vector | Platform | Min Version | Circa | | :--- | ---: | ---: | | AMD | K8 Venus | 2005 | | Intel | Core | 2006 | | Linux | 2.6.18 | 2007 | | Windows | 8 [1] | 2012 | | Darwin (macOS) | 23.1.0+ | 2023 | | OpenBSD | 7 | 2021 | | FreeBSD | 13 | 2020 | | NetBSD | 9.2 | 2021 | [1] See our [vista branch]( for a community supported version of Cosmopolitan that works on Windows Vista and Windows 7. ## Special Thanks Funding for this project is crowdsourced using [GitHub Sponsors]( and [Patreon]( Your support is what makes this project possible. Thank you! We'd also like to give special thanks to the following groups and individuals: - [Joe Drumgoole]( - [Rob Figueiredo]( - [Wasmer]( For publicly sponsoring our work at the highest tier.","513, Code, Issues, Pull requests, Discussions, Actions, Wiki, Security, Insights, contributions welcome, accepted, jovian scope, needs community feedback, wontfix, support, duplicate, awaiting response"
lvgl,lvgl/lvgl,15254,"['C', 'C++', 'Python']","['embedded', 'gui', 'c', 'microcontroller', 'mcu']","English | | Portugus do Brasil | Light and Versatile Graphics Library Website | Docs | Forum | Demos | Services ## :ledger: Overview **Mature and Well-known** LVGL is the most popular free and open source embedded graphics library to create beautiful UIs for any MCU, MPU and display type. It's supported by industry leading vendors and projects like Arm, STM32, NXP, Espressif, Nuvoton, Arduino, RT-Thread, Zephyr, NuttX, Adafruit and many more. **Feature Rich** It has all the features to create modern and beautiful GUIs: 30+ built-in widgets, a powerful style system, web inspired layout managers, and a typography system supporting many languages. To integrate LVGL into your platform, all you need is at least 32kB RAM and 128 kB Flash, a C compiler, a frame buffer, and at least an 1/10 screen sized buffer for rendering. **Services** Our team is ready to help you with graphics design, UI implementation and consulting services. Contact us if you need some support during the development of your next GUI project. ## :rocket: Features **Free and Portable** - A fully portable C (C++ compatible) library with no external dependencies. - Can be compiled to any MCU or MPU, with any (RT)OS. - Supports monochrome, ePaper, OLED or TFT displays, or even monitors. [Porting Guide]( - Distributed under the MIT license, so you can easily use it in commercial projects too. - Needs only 32kB RAM and 128 kB Flash, a frame buffer, and at least an 1/10 screen sized buffer for rendering. - OS, External memory and GPU are supported but not required. **Widgets, Styles, Layouts and more** - 30+ built-in [Widgets]( Button, Label, Slider, Chart, Keyboard, Meter, Arc, Table and many more. - Flexible [Style system]( with ~100 style properties to customize any part of the widgets in any state. - [Flexbox]( and [Grid]( layouts engines to automatically size and position the widgets in a responsive way. - Texts are rendered with UTF-8 encoding supporting CJK, Thai, Hindi, Arabic, Persian writing systems. - Word wrapping, kerning, text scrolling, sub-pixel rendering, Pinyin-IME Chinese input, Emojis in texts. - Rendering engine supporting animations, anti-aliasing, opacity, smooth scrolling, shadows, image transformation, etc - Supports Mouse, Touchpad, Keypad, Keyboard, External buttons, Encoder [Input devices]( - [Multiple display]( support. **Binding and Build Support** - [Micropython Binding]( exposes LVGL API - [PikaScript Binding]( python on MCU lighter and easier. - No custom build system is used. You can build LVGL as you build the other files of your project. - Support for Make and [CMake]( is included out of the box. - [Develop on PC]( and use the same UI code on embedded hardware. - Convert the C UI code to HTML file with our [Emscripten port]( **Docs, Tools, and Services** - Detailed [Documentation]( with [100+ simple examples]( - [Services]( such as User interface design, Implementation and Consulting to make UI development simpler and faster. ## :heart: Sponsor If LVGL saved you a lot of time and money or you just had fun using it, consider [Supporting its Development]( **How do we spend the donations?** Our goal is to provide financial compensation for people who do the most for LVGL. It means not only the maintainers but anyone who implements a great feature should get a payment from the accumulated money. We use the donations to cover our operational costs like servers and related services. **How to donate?** We use [GitHub Sponsors]( where you can easily send one time or recurring donations. You can also see all of our expenses in a transparent way. **How to get paid for your contribution?** If someone implements or fixes an issue labeled as [Sponsored]( he or she will get a payment for that work. We estimate the required time, complexity and importance of the issue and set a price accordingly. To jump in just comment on a [Sponsored]( issue saying ""Hi, I'd like to deal with it. This is how I'm planning to fix/implement it..."". A work is considered ready when it's approved and merged by a maintainer. After that you can submit and expense at [opencollective.com]( and you will receive the payment in a few days. **Organizations supporting LVGL** []( **Individuals supporting LVGL** []( ## :package: Packages LVGL is available as: - [Arduino library]( - [PlatformIO package]( - [Zephyr library]( - [ESP-IDF(ESP32) component]( - [NXP MCUXpresso component]( - [NuttX library]( - [RT-Thread RTOS]( - CMSIS-Pack - [RIOT OS package]( ## :robot: Examples See some examples of creating widgets, using layouts and applying styles. You will find C and MicroPython code, and links to try out or edit the examples in an online MicroPython editor. For more examples check out the [Examples]( folder. ### Hello world label C code ```c /*Change the active screen's background color*/ lv_obj_set_style_bg_color(lv_screen_active(), lv_color_hex(0x003a57), LV_PART_MAIN); /*Create a white label, set its text and align it to the center*/ lv_obj_t * label = lv_label_create(lv_screen_active()); lv_label_set_text(label, ""Hello world""); lv_obj_set_style_text_color(label, lv_color_hex(0xffffff), LV_PART_MAIN); lv_obj_align(label, LV_ALIGN_CENTER, 0, 0); ``` MicroPython code | Online Simulator ```python # Change the active screen's background color scr = lv.screen_active() scr.set_style_bg_color(lv.color_hex(0x003a57), lv.PART.MAIN) # Create a white label, set its text and align it to the center label = lv.label(lv.screen_active()) label.set_text(""Hello world"") label.set_style_text_color(lv.color_hex(0xffffff), lv.PART.MAIN) label.align(lv.ALIGN.CENTER, 0, 0) ``` ### Button with Click Event C code ```c lv_obj_t * button = lv_button_create(lv_screen_active()); /*Add a button to the current screen*/ lv_obj_center(button); /*Set its position*/ lv_obj_set_size(button, 100, 50); /*Set its size*/ lv_obj_add_event_cb(button, button_event_cb, LV_EVENT_CLICKED, NULL); /*Assign a callback to the button*/ lv_obj_t * label = lv_label_create(button); /*Add a label to the button*/ lv_label_set_text(label, ""Button""); /*Set the labels text*/ lv_obj_center(label); /*Align the label to the center*/ ... void button_event_cb(lv_event_t * e) { printf(""Clicked\n""); } ``` MicroPython code | Online Simulator ```python def button_event_cb(e): print(""Clicked"") # Create a Button and a Label button = lv.button(lv.screen_active()) button.center() button.set_size(100, 50) button.add_event_cb(button_event_cb, lv.EVENT.CLICKED, None) label = lv.label(button) label.set_text(""Button"") label.center() ``` ### Checkboxes with Layout C code ```c lv_obj_set_flex_flow(lv_screen_active(), LV_FLEX_FLOW_COLUMN); lv_obj_set_flex_align(lv_screen_active(), LV_FLEX_ALIGN_CENTER, LV_FLEX_ALIGN_START, LV_FLEX_ALIGN_CENTER); lv_obj_t * cb; cb = lv_checkbox_create(lv_screen_active()); lv_checkbox_set_text(cb, ""Apple""); lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL); cb = lv_checkbox_create(lv_screen_active()); lv_checkbox_set_text(cb, ""Banana""); lv_obj_add_state(cb, LV_STATE_CHECKED); lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL); cb = lv_checkbox_create(lv_screen_active()); lv_checkbox_set_text(cb, ""Lemon""); lv_obj_add_state(cb, LV_STATE_DISABLED); lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL); cb = lv_checkbox_create(lv_screen_active()); lv_obj_add_state(cb, LV_STATE_CHECKED | LV_STATE_DISABLED); lv_checkbox_set_text(cb, ""Melon\nand a new line""); lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL); ``` MicroPython code | Online Simulator ```python def event_handler(e): code = e.get_code() obj = e.get_target_obj() if code == lv.EVENT.VALUE_CHANGED: txt = obj.get_text() if obj.get_state() & lv.STATE.CHECKED: state = ""Checked"" else: state = ""Unchecked"" print(txt + "":"" + state) lv.screen_active().set_flex_flow(lv.FLEX_FLOW.COLUMN) lv.screen_active().set_flex_align(lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.CENTER) cb = lv.checkbox(lv.screen_active()) cb.set_text(""Apple"") cb.add_event_cb(event_handler, lv.EVENT.ALL, None) cb = lv.checkbox(lv.screen_active()) cb.set_text(""Banana"") cb.add_state(lv.STATE.CHECKED) cb.add_event_cb(event_handler, lv.EVENT.ALL, None) cb = lv.checkbox(lv.screen_active()) cb.set_text(""Lemon"") cb.add_state(lv.STATE.DISABLED) cb.add_event_cb(event_handler, lv.EVENT.ALL, None) cb = lv.checkbox(lv.screen_active()) cb.add_state(lv.STATE.CHECKED | lv.STATE.DISABLED) cb.set_text(""Melon"") cb.add_event_cb(event_handler, lv.EVENT.ALL, None) ``` ### Styling a Slider C code ```c lv_obj_t * slider = lv_slider_create(lv_screen_active()); lv_slider_set_value(slider, 70, LV_ANIM_OFF); lv_obj_set_size(slider, 300, 20); lv_obj_center(slider); /*Add local styles to MAIN part (background rectangle)*/ lv_obj_set_style_bg_color(slider, lv_color_hex(0x0F1215), LV_PART_MAIN); lv_obj_set_style_bg_opa(slider, 255, LV_PART_MAIN); lv_obj_set_style_border_color(slider, lv_color_hex(0x333943), LV_PART_MAIN); lv_obj_set_style_border_width(slider, 5, LV_PART_MAIN); lv_obj_set_style_pad_all(slider, 5, LV_PART_MAIN); /*Create a reusable style sheet for the INDICATOR part*/ static lv_style_t style_indicator; lv_style_init(&style_indicator); lv_style_set_bg_color(&style_indicator, lv_color_hex(0x37B9F5)); lv_style_set_bg_grad_color(&style_indicator, lv_color_hex(0x1464F0)); lv_style_set_bg_grad_dir(&style_indicator, LV_GRAD_DIR_HOR); lv_style_set_shadow_color(&style_indicator, lv_color_hex(0x37B9F5)); lv_style_set_shadow_width(&style_indicator, 15); lv_style_set_shadow_spread(&style_indicator, 5); 4 /*Add the style sheet to the slider's INDICATOR part*/ lv_obj_add_style(slider, &style_indicator, LV_PART_INDICATOR); /*Add the same style to the KNOB part too and locally overwrite some properties*/ lv_obj_add_style(slider, &style_indicator, LV_PART_KNOB); lv_obj_set_style_outline_color(slider, lv_color_hex(0x0096FF), LV_PART_KNOB); lv_obj_set_style_outline_width(slider, 3, LV_PART_KNOB); lv_obj_set_style_outline_pad(slider, -5, LV_PART_KNOB); lv_obj_set_style_shadow_spread(slider, 2, LV_PART_KNOB); ``` MicroPython code | Online Simulator ```python # Create a slider and add the style slider = lv.slider(lv.screen_active()) slider.set_value(70, lv.ANIM.OFF) slider.set_size(300, 20) slider.center() # Add local styles to MAIN part (background rectangle) slider.set_style_bg_color(lv.color_hex(0x0F1215), lv.PART.MAIN) slider.set_style_bg_opa(255, lv.PART.MAIN) slider.set_style_border_color(lv.color_hex(0x333943), lv.PART.MAIN) slider.set_style_border_width(5, lv.PART.MAIN) slider.set_style_pad_all(5, lv.PART.MAIN) # Create a reusable style sheet for the INDICATOR part style_indicator = lv.style_t() style_indicator.init() style_indicator.set_bg_color(lv.color_hex(0x37B9F5)) style_indicator.set_bg_grad_color(lv.color_hex(0x1464F0)) style_indicator.set_bg_grad_dir(lv.GRAD_DIR.HOR) style_indicator.set_shadow_color(lv.color_hex(0x37B9F5)) style_indicator.set_shadow_width(15) style_indicator.set_shadow_spread(5) # Add the style sheet to the slider's INDICATOR part slider.add_style(style_indicator, lv.PART.INDICATOR) slider.add_style(style_indicator, lv.PART.KNOB) # Add the same style to the KNOB part too and locally overwrite some properties slider.set_style_outline_color(lv.color_hex(0x0096FF), lv.PART.KNOB) slider.set_style_outline_width(3, lv.PART.KNOB) slider.set_style_outline_pad(-5, lv.PART.KNOB) slider.set_style_shadow_spread(2, lv.PART.KNOB) ``` ### English, Hebrew (mixed LTR-RTL) and Chinese texts C code ```c lv_obj_t * ltr_label = lv_label_create(lv_screen_active()); lv_label_set_text(ltr_label, ""In modern terminology, a microcontroller is similar to a system on a chip (SoC).""); lv_obj_set_style_text_font(ltr_label, &lv_font_montserrat_16, 0); lv_obj_set_width(ltr_label, 310); lv_obj_align(ltr_label, LV_ALIGN_TOP_LEFT, 5, 5); lv_obj_t * rtl_label = lv_label_create(lv_screen_active()); lv_label_set_text(rtl_label,"", (: CPU - Central Processing Unit).""); lv_obj_set_style_base_dir(rtl_label, LV_BASE_DIR_RTL, 0); lv_obj_set_style_text_font(rtl_label, &lv_font_dejavu_16_persian_hebrew, 0); lv_obj_set_width(rtl_label, 310); lv_obj_align(rtl_label, LV_ALIGN_LEFT_MID, 5, 0); lv_obj_t * cz_label = lv_label_create(lv_screen_active()); lv_label_set_text(cz_label, ""Embedded System\n""); lv_obj_set_style_text_font(cz_label, &lv_font_simsun_16_cjk, 0); lv_obj_set_width(cz_label, 310); lv_obj_align(cz_label, LV_ALIGN_BOTTOM_LEFT, 5, -5); ``` MicroPython code | Online Simulator ```python ltr_label = lv.label(lv.screen_active()) ltr_label.set_text(""In modern terminology, a microcontroller is similar to a system on a chip (SoC)."") ltr_label.set_style_text_font(lv.font_montserrat_16, 0); ltr_label.set_width(310) ltr_label.align(lv.ALIGN.TOP_LEFT, 5, 5) rtl_label = lv.label(lv.screen_active()) rtl_label.set_text("", (: CPU - Central Processing Unit)."") rtl_label.set_style_base_dir(lv.BASE_DIR.RTL, 0) rtl_label.set_style_text_font(lv.font_dejavu_16_persian_hebrew, 0) rtl_label.set_width(310) rtl_label.align(lv.ALIGN.LEFT_MID, 5, 0) font_simsun_16_cjk = lv.font_load(""S:../../assets/font/lv_font_simsun_16_cjk.fnt"") cz_label = lv.label(lv.screen_active()) cz_label.set_style_text_font(font_simsun_16_cjk, 0) cz_label.set_text(""Embedded System\n"") cz_label.set_width(310) cz_label.align(lv.ALIGN.BOTTOM_LEFT, 5, -5) ``` ## :arrow_forward: Get started This list will guide you to get started with LVGL step-by-step. **Get Familiar with LVGL** 1. Check the [Online demos]( to see LVGL in action (3 minutes) 2. Read the [Introduction]( page of the documentation (5 minutes) 3. Get familiar with the basics on the [Quick overview]( page (15 minutes) **Start to Use LVGL** 4. Set up a [Simulator]( (10 minutes) 5. Try out some [Examples]( 6. Port LVGL to a board. See the [Porting]( guide or check the ready to use [Projects]( **Become a Pro** 7. Read the [Overview]( page to get a better understanding of the library (2-3 hours) 8. Check the documentation of the [Widgets]( to see their features and usage **Get Help and Help Others** 9. If you have questions go to the [Forum]( 10. Read the [Contributing]( guide to see how you can help to improve LVGL (15 minutes) ## :handshake: Services LVGL LLC was established to provide a solid background for LVGL library and to offer several type of services to help you in UI development. With 15+ years of experience in the user interface and graphics industry we can help you the bring your UI to the next level. - **Graphics design** Our in-house graphics designers are experts in creating beautiful modern designs which fit to your product and the resources of your hardware. - **UI implementation** We can also implement your UI based on the design you or we have created. You can be sure that we will make the most out of your hardware and LVGL. If a feature or widget is missing from LVGL, don't worry, we will implement it for you. - **Consulting and Support** We can support you with consulting as well to avoid pricey and time consuming mistakes during the UI development. - **Board certification** For companies who are offering development boards, or production ready kits we do board certification which shows how board can run LVGL. Check out our [Demos]( as reference. For more information take look at the [Services page]( [Contact us]( and tell how we can help. ## :star2: Contributing LVGL is an open project and contribution is very welcome. There are many ways to contribute from simply speaking about your project, through writing examples, improving the documentation, fixing bugs or even hosting your own project under the LVGL organization. For a detailed description of contribution opportunities visit the [Contributing]( section of the documentation. More than 300 people already left their fingerprint in LVGL. Be one them! See you here! :slightly_smiling_face: ... and many other.","3k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, stale, pinned, shaping, under-development, next major, ready for development, help wanted, good first issue, sponsored, rejected, ready, next minor, duplicate, dependencies, bug, architecture"
Mailspring,Foundry376/Mailspring,15165,"['C', 'TypeScript', 'JavaScript']","['email', 'mail', 'electron', 'osx', 'windows']","# Mailspring []( []( **Mailspring is a new version of Nylas Mail maintained by one of the original authors. It's faster, leaner, and shipping today!** It replaces the JavaScript sync code in Nylas Mail with a new C++ sync engine based on [Mailcore2]( It uses roughly half the RAM and CPU of Nylas Mail and idles with almost zero ""CPU Wakes"", which translates to great battery life. It also has an entirely revamped composer and other great new features. Mailspring's UI is open source (GPLv3) and written in TypeScript with [Electron]( and [React]( - it's built on a plugin architecture and was designed to be easy to extend. Check out [CONTRIBUTING.md]( to get started! Mailspring's sync engine is spawned by the Electron application and runs locally on your computer. [It is open source (GPLv3) and written in C++ and C.]( For convenience, however, when you set up your development environment, Mailspring uses the latest version of the sync engine we've shipped for your platform so you don't need to pull sources or install its compile-time dependencies. ## Features Mailspring comes packed with powerful features like Unified Inbox, Snooze, Send Later, Mail Rules, Templates and more. Mailspring Pro, which you can unlock with a monthly subscription, adds even more features for people who send a ton of email: link tracking, read receipts, mailbox analytics, contact and company profiles. **All of these features run in the client - Mailspring does not send your email credentials to the cloud.** For a full list of features, check out [getmailspring.com]( ## Download Mailspring You can download compiled versions of Mailspring for Windows, Mac OS X, and Linux (deb, rpm and snap) from [ ## Getting Help You can find community-based help and discussion with other Mailspring users on our [Discourse community]( ## Contributing Mailspring is entirely open-source. Pull requests and contributions are welcome! There are three ways to contribute: building a plugin, building a theme, and submitting pull requests to the project itself. When you're getting started, you may want to join our [Discourse]( so you can ask questions and learn from other people doing development. [](CODE_OF_CONDUCT.md) ### Running Mailspring from Source To install all dependencies and run Mailspring from its source code, run the following commands from the root directory of the Mailspring repository: ``` export npm_config_arch=x64 # If you are on an M1 / Apple Silicon Mac npm install npm start ``` You can attach command line parameters by separating them using a double hyphen: ``` npm start -- --help ``` ### Building Mailspring To build Mailspring, you need to run the following command from the root directory of the Mailspring repository: ``` npm run-script build ``` ### Building A Plugin Plugins lie at the heart of Mailspring and give it its powerful features. Building your own plugins allows you to integrate the app with other tools, experiment with new workflows, and more. Follow the [Getting Started guide]( to write your first plugin in five minutes. - To create your own theme, check out the [Mailspring-Theme-Starter]( - To create your own plugin, check out the [Mailspring-Plugin-Starter]( A plugin ""store"" like the Chrome Web Store is coming soon, and will make it easy for other users to discover plugins you create. (Right now, users need to ""sideload"" the plugins into the app by downloading them and copying them into place.) You can share and browse Mailspring Plugins, and discuss plugin development with other developers, on our [Discourse]( ### Building a Theme The Mailspring user interface is styled using CSS, which means it's easy to modify and extend. Mailspring comes stock with a few beautiful themes, and there are many more which have been built by community developers. To start creating a theme, [clone the theme starter]( If you are updating an existing Nylas theme for Mailspring here is a [step by step tutorial]( Notice: as part of the update process you will probably need to [import mailspring base variables]( You can share and browse Mailspring Themes, and discuss theme development with other developers, on our [Discourse]( ### Localizing / Translating Mailspring (1.5.0 and above) supports localization. If you're a fluent speaker of another language, we'd love your help improving translations. Check out the [LOCALIZATION]( guide for more information. You can discuss localization and translation with other developers on our [Discourse]( ### Contributing to Mailspring Core Pull requests are always welcome - check out [CONTRIBUTING]( for more information about setting up the development environment, running tests locally, and submitting pull requests.","886, Code, Issues, Pull requests, Actions, Security, Insights, product-direction, windows, support, stale, spooky, snapcraft, service-issue, rejected, question, performance, not-yet-possible, not-us, needs-reproduction, migration-by-op, migrated, mailserver-incompatibility, macos, linux, invalid, intl, interesting, good first issue, enhancement, electron-soon, done-pending-release, contacts, composer, close-after-inactivity, calendar, building-and-themeing"
blurhash,woltapp/blurhash,15125,"['C', 'Swift', 'SCSS']",[],"# [BlurHash]( BlurHash is a compact representation of a placeholder for an image. ## Why would you want this? Does your designer cry every time you load their beautifully designed screen, and it is full of empty boxes because all the images have not loaded yet? Does your database engineer cry when you want to solve this by trying to cram little thumbnail images into your data to show as placeholders? BlurHash will solve your problems! How? Like this: You can also see nice examples and try it out yourself at [blurha.sh]( ## How does it work? In short, BlurHash takes an image, and gives you a short string (only 20-30 characters!) that represents the placeholder for this image. You do this on the backend of your service, and store the string along with the image. When you send data to your client, you send both the URL to the image, and the BlurHash string. Your client then takes the string, and decodes it into an image that it shows while the real image is loading over the network. The string is short enough that it comfortably fits into whatever data format you use. For instance, it can easily be added as a field in a JSON object. In summary: Want to know all the gory technical details? Read the [algorithm description](Algorithm.md). Implementing the algorithm is actually quite easy! Implementations are short and easily ported to your favourite language or platform. ## Implementations So far, we have created these implementations: * [C](C) - An encoder implementation in portable C code. * [Swift](Swift) - Encoder and decoder implementations, and a larger library offering advanced features. There is also an example app to play around with the algorithm. * [Kotlin](Kotlin) - A decoder implementation for Android. * [TypeScript](TypeScript) - Encoder and decoder implementations, and an example page to test. * [Python]( - Integration of the C encoder code into Python. These cover our use cases, but could probably use polishing, extending and improving. There are also these third party implementations that we know of: * [Pure Python]( - Implementation of both the encoder and decoder in pure Python. * [One version in Go]( and [another version in Go]( * [PHP]( - Encoder and decoder implementations in pure PHP. * [Java]( - Encoder implementation in Java. * [Clojure]( - Encoder and decoder implementations in Clojure. * [Nim]( - Encoder and decoder implementation in pure Nim. * [Rust and WebAssembly]( - Encoder and decoder implementations in Rust. Distributed as both native Rust and WebAssembly packages. * [Ruby]( - Encoder implementation in Ruby. * [Crystal]( - Encoder implementation in pure Crystal. * [Elm]( - Encoder and decoder in Elm. * [Dart]( - Encoder and decoder implementation in C into Dart using dart-ffi. * [Pure Dart]( - Encoder and decoder implementation in pure Dart. * [.NET]( - Encoder and decoder in C#. * [JavaScript]( - Encoder and decoder implementation in pure JavaScript. * [.NET]( - Encoder implementation in C#. * [Haskell]( - Encoder and decoder in pure Haskell. * [Scala]( - Encoder and decoder in Scala. * [Elixir]( - Encoder implementation in pure Elixir. * [ReScript]( - Encoder and decoder implementation in ReScript (BuckleScript). * [JavaScript]( - Tiny optimized decoder implementation JS. * [Xojo]( - Encoder and decoder implementation in pure Xojo. * [React Native]( - UI Component for React Native. (Decoder in Swift and Kotlin) * [Zig]( - Encoder implementation in Zig. * [Titanium SDK]( - Decoder for Titanium SDK (Android) * [BQN]( - Encoder, decoder and terminal viewer in pure BQN. * [Jetpack Compose]( - Decoder Jetpack Compose implementation * [C++]( - Encoder and decoder in C++. * [Kotlin Multiplatform]( - Encoding & decoding for Android, iOS & JVM * [OCaml]( - Encoder implementation in OCaml. Can't find the language you're looking for? Try your luck with the GitHub search. For example, here are the search results for [repos which have ""blurhash"" in their name]( Perhaps you'd like to help extend this list? Which brings us to... ## Contributing We'd love contributions! The algorithm is [very simple](Algorithm.md) - less than two hundred lines of code - and can easily be ported to your platform of choice. And having support for more platforms would be wonderful! So, Java decoder? Golang encoder? Haskell? Rust? We want them all! We will also try to tag any issues on our [issue tracker]( that we'd love help with, so if you just want to dip in, go have a look. You can file a pull request with us, or you can start your own repo and project if you want to run everything yourself, we don't mind. If you do want to contribute to this project, we have a [code of conduct](CodeOfConduct.md). ## Users Who uses BlurHash? Here are some projects we know about: * [Wolt]( - We are of course using it ourselves. BlurHashes are used in the mobile clients on iOS and Android, as well as on the web, as placeholders during image loading. * [Mastodon]( - The Mastodon decentralised social media network uses BlurHashes both as loading placeholders, as well as for hiding media marked as sensitive. * [Signal]( - Signal Private Messenger uses Blurhashes as placeholders before photo & video messages are downloaded in chat conversations. * [Jellyfin]( - Jellyfin the free software media system uses Blurhashes as placeholders for images of movies and TV shows when they are being downloaded. ## Good Questions ### How fast is encoding? Decoding? These implementations are not very optimised. Running them on very large images can be a bit slow. The performance of the encoder and decoder are about the same for the same input or output size, so decoding very large placeholders, especially on your UI thread, can also be a bit slow. However! The trick to using the algorithm efficiently is to not run it on full-sized data. The fine detail of an image is all thrown away, so you should scale your images down before running BlurHash on them. If you are creating thumbnails, run BlurHash on those instead of the full images. Similarly, when displaying the placeholders, very small images work very well when scaled up. We usually decode placeholders that are 32 or even 20 pixels wide, and then let the UI layer scale them up, which is indistinguishable from decoding them at full size. ### How do I pick the number of X and Y components? It depends a bit on taste. The more components you pick, the more information is retained in the placeholder, but the longer the BlurHash string will be. Also, it doesn't always look good with too many components. We usually go with 4 by 3, which seems to strike a nice balance. However, you should adjust the number of components depending on the aspect ratio of your images. For instance, very wide images should have more X components and fewer Y components. The Swift example project contains a test app where you can play around with the parameters and see the results. ### What is the `punch` parameter in some of these implementations? It is a parameter that adjusts the contrast on the decoded image. 1 means normal, smaller values will make the effect more subtle, and larger values will make it stronger. This is basically a design parameter, which lets you adjust the look. Technically, what it does is scale the AC components up or down. ### Is this only useful as an image loading placeholder? Well, that is what it was designed for originally, but it turns out to be useful for a few other things: * Masking images without having to use expensive blurs - [Mastodon]( uses it for this. * The data representation makes it quite easy to extract colour averages of the image for different areas. You can easily find approximations of things like the average colour of the top edge of the image, or of a corner. There is some code in the Swift BlurHashKit implementation to experiment with this. Also, the average colour of the entire image is just the DC component and can be decoded even without implementing any of the more complicated DCT stuff. * We have been meaning to try to implement tinted drop shadows for UI elements by using the BlurHash and extending the borders. Haven't actually had time to implement this yet though. ### Why base 83? First, 83 seems to be about how many low-ASCII characters you can find that are safe for use in all of JSON, HTML and shells. Secondly, 83 * 83 is very close to, and a little more than, 19 * 19 * 19, making it ideal for encoding three AC components in two characters. ### What about using the full Unicode character set to get a more efficient encoding? We haven't looked into how much overhead UTF-8 encoding would introduce versus base 83 in single-byte characters, but the encoding and decoding would probably be a lot more complicated, so in the spirit of minimalism BlurHash uses the simpler option. It might also be awkward to copy-paste, depending on OS capabilities. If you think it can be done and is worth it, though, do make your own version and show us! We'd love to see it in action. ### What about other basis representations than DCT? This is something we'd *love* to try. The DCT looks quite ugly when you increase the number of components, probably because the shape of the basis functions becomes too visible. Using a different basis with more aesthetically pleasing shape might be a big win. However, we have not managed come up with one. Some experimenting with a [Fourier-Bessel base]( targeted at images that are going to be cropped into circles has been done, but without much success. Here again we'd love to see what you can come up with! ## Authors * [Dag gren]( - Original algorithm design, Swift and C implementations * [Mykhailo Shchurov]( - Kotlin decoder implementation * [Hang Duy Khiem]( - Android demo app * [Olli Mahlamki]( - TypeScript decoder and encoder implementations * [Atte Lautanala]( - Python integration * [Lorenz Diener]( - Pure Python implementation * [Boris Momilovi]( - Pure PHP implementation * [Hendrik Schnepel]( - Java encoder implementation * [Tuomo Virolainen]( - Clojure implementation * [Fotis Papadogeorgopoulos]( - Rust and WebAssembly implementation * [Sam Protas]( - Pure Haskell implementation * [Markus Sammallahti]( - Scala implementation * [Kacper Perzankowski]( - Elixir encoder implementation * [Belvi Nosakhare]( - Kotlin extensions of Blurhash for ImageView, Glide, and Piccasso optimized for Android. * [Armedi]( - ReScript (BuckleScript) implementation. * [Ricardo Cruz]( - Xojo implementation. * [Marc Rousavy]( - React Native UI Component * [Matt Howard]( - Zig implementation * [Hannu Hartikainen]( - BQN implementation * [Wajahat Iqbal]( - Jetpack compose-based implementation optimized for using any component as a painter. * _Your name here?_","335, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, enhancement, Swift, Kotlin, question, algorithm, dependencies, documentation, TypeScript, C, website, needs reproduction, help wanted, good first issue, bug, wontfix, invalid, duplicate, JavaScript"
postgres,postgres/postgres,14935,"['C', 'PLpgSQL', 'Perl']",[],"PostgreSQL Database Management System ===================================== This directory contains the source code distribution of the PostgreSQL database management system. PostgreSQL is an advanced object-relational database management system that supports an extended subset of the SQL standard, including transactions, foreign keys, subqueries, triggers, user-defined types and functions. This distribution also contains C language bindings. Copyright and license information can be found in the file COPYRIGHT. General documentation about this version of PostgreSQL can be found at . In particular, information about building PostgreSQL from the source code can be found at . The latest version of this software, and related software, may be obtained at . For more information look at our web site located at .","4.4k, Code, Pull requests, Actions, Security, Insights"
kcp,skywind3000/kcp,14856,"['C', 'C++', 'CMake']","['kcp', 'udp', 'arq', 'quic', 'protocol']","KCP - A Fast and Reliable ARQ Protocol ====================================== [![Powered][3]][1] [![Build Status][4]][5] [](#backers) [](#sponsors) [1]: [2]: [3]: [4]: [5]: [README in English]( # KCP TCP 10%-20% 30%-40%UDP callback KCP ikcp.h, ikcp.cP2P UDPARQ # TCPKB KCP10%-20% TCP30%-40%TCPKCPKCP #### RTOvs TCPRTOx2RTOx8KCPx2x1.51.5 #### vs TCPKCP #### 1,2,3,4,5ACK: 1, 3, 4, 5ACK3KCP21ACK42222 #### ACK vs ACK TCPACKNODELAY RTTKCPACK #### UNA vs ACK+UNA ARQUNATCPACKUNAACK KCP ACKUNA #### KCPTCPBT # [vcpkg]( git clone cd vcpkg ./bootstrap-vcpkg.sh ./vcpkg integrate install ./vcpkg install kcp vcpkgkcpMicrosoftvcpkg[issuePR]( # 1. KCP ```cpp // kcpconvtcp conv // convuser ikcpcb *kcp = ikcp_create(conv, user); ``` 2. ```cpp // KCPKCP // buf/len // user kcp KCP int udp_output(const char *buf, int len, ikcpcb *kcp, void *user) { .... } // kcp->output = udp_output; ``` 3. update ```cpp // ikcp_update kcp // 10ms ikcp_check update ikcp_update(kcp, millisec); ``` 4. ```cpp // UDP ikcp_input(kcp, received_udp_packet, received_udp_size); ``` / KCP ikcp_send ikcp_recv(kcp, ptr, size) # ARQ 1. ```cpp int ikcp_nodelay(ikcpcb *kcp, int nodelay, int interval, int resend, int nc) ``` - nodelay nodelay01 - interval interval 10ms 20ms - resend 022ACK - nc 01 - ikcp_nodelay(kcp, 0, 40, 0, 0); - ikcp_nodelay(kcp, 1, 10, 2, 1); 2. ```cpp int ikcp_wndsize(ikcpcb *kcp, int sndwnd, int rcvwnd); ``` 32. TCP SND_BUF RCV_BUF SND/RCV_BUF 3. MTU mtu1400ikcp_setmtu 4. RTO TCP KCP RTO RTORTO40ms RTO100ms100ms30ms ```cpp kcp->rx_minrto = 10; ``` # KCP KCP 3500 TCP - [Wiki Home]( - [KCP ]( - [TCP]( - []( - []( - []( # - [kcptun]( kcp-go() ssh -D shadowsocks - [dog-tunnel]( GO KCP GO KCP - [v2ray]( Shadowsocks 1.17 kcpUDP - [HP-Socket]( HP-Socket - [frp]( - [asio-kcp]( KCP UDP UDPKCP - [kcp-java]( Java KCP - [kcp-netty]( kcpJavanetty - [java-kcp]( JAVAKCP,netty(fec) - [csharp-kcp]( csharpKCP,dotNetty(fec) - [kcp-cpp]( KCP WindowsMacOSLinuxC++ - [kcp-perl]( kcpPerlPerl-Like - [kcp-go]( kcp GO UDP - [kcp-csharp]( kcp csharpkcp-go - [kcp-csharp]( Kcp csharpallocgc - [kcp2k]( Line-by-line translation to C#, with optional Server/Client on top. - [kcp-rs]( KCP rust - [kcp-rust]( KCP rust - [tokio-kcp]( tokio kcp - [kcp-rust-native]( kcp bindings - [lua-kcp]( KCP Lua Lua - [node-kcp]( node-js KCP - [nysocks]( libuv[node-addon]( - [shadowsocks-android]( Shadowsocks for android kcptun kcp shadowsocks - [kcpuv]( libuvkcpuv Demo - [Lantern]( VPNGithub 50000 kcpgo - [rpcx]( RPC 1000+ kcpgo RPC - [xkcptun]( ckcptun[OpenWrt]( [LEDE]( - [et-frame]( C#(unity3d)C#kcp - [yasio]( socket, APIKCP/TCP/UDP, : [benchmark-pump]( - [gouxp]( GoKCPFEC - [skcp]( libev - [pykcp]( Python KCP # - []( KCP - [SpatialOS]( BigWorld KCP - []( KCP - [CC]( CC kcp - [BOBO]( BOBO kcp - [UU]( UU KCP/KCPTUN - []( GRTN KCP KCP - []( KCP - []( K17 Google Play KCP - []( MOBA KCP KCP # KCP/TCP 3G/4G10%wifi/3g/4g [asio-kcp]( [zhangyuan]( KCP enet, udt - ASIO-KCP **has good performace in wifi and phone network(3G, 4G)**. - The kcp is the **first choice for realtime pvp game**. - The lag is less than 1 second when network lag happen. **3 times better than enet** when lag happen. - The enet is a good choice if your game allow 2 second lag. - **UDT is a bad idea**. It always sink into badly situation of more than serval seconds lag. And the recovery is not expected. - enet has the problem of lack of doc. And it has lots of functions that you may intrest. - kcp's doc is chinese. Good thing is the function detail which is writen in code is english. And you can use asio_kcp which is a good wrap. - The kcp is a simple thing. You will write more code if you want more feature. - UDT has a perfect doc. UDT may has more bug than others as I feeling. []( []( [SpatialOS]( KCP TCP/RakNet 60 Hz 50 - [Kcp a new low latency secure network stack]( # raknet/enet KCP reed solomon FEC RC4/Salsa20 UDP For more information, please see the [Success Stories]( # (skywind3000) [twitter]( [zhihu]( VGA Michael Abrash CPU 2007 UDP BSD Lite 4.4 TCP P2P KCP 2011 Kcptun xtaci # KCP KCP364933586QQKCP Gitter blog: ## Contributors This project exists thanks to all the people who contribute.","2.5k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, wontfix, question, invalid, help wanted, enhancement, duplicate, bug"
BlackHole,ExistentialAudio/BlackHole,14247,"['C', 'Shell', 'HTML']","['audio', 'driver', 'macos', 'loopback', 'virtual-audio-cable']","# BlackHole: Audio Loopback Driver []( [](LICENSE) []( []( BlackHole is a modern macOS virtual audio loopback driver that allows applications to pass audio to other applications with zero additional latency. ### [Download Installer]( ### [Join the Discord Server]( ## Funding Sponsor: ## Table of Contents - [Features](#features) - [Installation Instructions](#installation-instructions) - [Uninstallation Instructions](#uninstallation-instructions) - [User Guides](#user-guides) - [Developer Guides](#developer-guides) - [Feature Requests](#feature-requests) - [FAQ](#faq) - [Wiki]( ## Features - Builds 2, 16, 64, 128, and 256 audio channels versions - Customizable channel count, latency, hidden devices - Customizable mirror device to allow for a hidden input or output - Supports 8kHz, 16kHz, 44.1kHz, 48kHz, 88.2kHz, 96kHz, 176.4kHz, 192kHz, 352.8kHz, 384kHz, 705.6kHz and 768kHz sample rates - Zero additional driver latency - Compatible with macOS 10.10 Yosemite and newer - Builds for Intel and Apple Silicon - No kernel extensions or modifications to system security necessary ## Installation Instructions ### Option 1: Download Installer 1. [Download the latest installer]( 2. Close all running audio applications 3. Open and install package ### Option 2: Install via Homebrew - 2ch: `brew install blackhole-2ch` - 16ch: `brew install blackhole-16ch` - 64ch: `brew install blackhole-64ch` ## Uninstallation Instructions ### Option 1: Use Uninstaller - [Download BlackHole 2ch Uninstaller]( - [Download BlackHole 16ch Uninstaller]( - [Download BlackHole 64ch Uninstaller]( ### Option 2: Manually Uninstall 1. Delete the BlackHole driver with the terminal command: `rm -R /Library/Audio/Plug-Ins/HAL/BlackHoleXch.driver` Be sure to replace `X` with either `2`, `16`, or `64`. Note that the directory is the root `/Library` not `/Users/user/Library`. 2. Restart CoreAudio with the terminal command: `sudo launchctl kickstart -kp system/com.apple.audio.coreaudiod` For more specific details [visit the Wiki]( ## User Guides ### Logic Pro X - [Logic Pro X to FaceTime]( - [Logic Pro X to Google Meet]( - [Logic Pro X to Skype]( - [Logic Pro X to Zoom]( ### GarageBand - [GarageBand to FaceTime]( - [GarageBand to Google Meet]( - [GarageBand to Skype]( - [GarageBand to Zoom]( ### Reaper - [Reaper to Zoom]( by Noah Liebman ### Record System Audio 1. [Setup Multi-Output Device]( 2. In `Audio MIDI Setup` `Audio Devices` right-click on the newly created Multi-Output and select ""Use This Device For Sound Output"" 3. Open digital audio workstation (DAW) such as GarageBand and set input device to ""BlackHole"" 4. Set track to input from channel 1-2 5. Play audio from another application and monitor or record in your DAW ### Route Audio Between Applications 1. Set output driver to ""BlackHole"" in sending application 2. Output audio to any channel 3. Open receiving application and set input device to ""BlackHole"" 4. Input audio from the corresponding output channels ## Developer Guides ### A license is required for all non-GPLv3 projects Please support our hard work and continued development. To request a license [contact Existential Audio](mailto:devinroth@existential.audio). ### Build & Install After building, to install BlackHole: 1. Copy or move the built `BlackHoleXch.driver` bundle to `/Library/Audio/Plug-Ins/HAL` 2. Restart CoreAudio using `sudo launchctl kickstart -kp system/com.apple.audio.coreaudiod` ### Customizing BlackHole The following pre-compiler constants may be used to easily customize a build of BlackHole. ``` kDriver_Name kPlugIn_BundleID kPlugIn_Icon kDevice_Name kDevice_IsHidden kDevice_HasInput kDevice_HasOutput kDevice2_Name kDevice2_IsHidden kDevice2_HasInput kDevice2_HasOutput kLatency_Frame_Size kNumber_Of_Channels kSampleRates ``` They can be specified at build time with `xcodebuild` using `GCC_PREPROCESSOR_DEFINITIONS`. Example: ```bash xcodebuild \ -project BlackHole.xcodeproj \ GCC_PREPROCESSOR_DEFINITIONS='$GCC_PREPROCESSOR_DEFINITIONS kSomeConstant=value' ``` Be sure to escape any quotation marks when using strings. ### Renaming BlackHole To customize BlackHole it is required to change the following constants. - `kDriver_Name` - `kPlugIn_BundleID` (note that this must match the target bundleID) - `kPlugIn_Icon` These can specified as pre-compiler constants using ```xcodebuild```. ```bash driverName=""BlackHole"" bundleID=""audio.existential.BlackHole"" icon=""BlackHole.icns"" xcodebuild \ -project BlackHole.xcodeproj \ -configuration Release \ PRODUCT_BUNDLE_IDENTIFIER=$bundleID \ GCC_PREPROCESSOR_DEFINITIONS='$GCC_PREPROCESSOR_DEFINITIONS kDriver_Name=\""'$driverName'\"" kPlugIn_BundleID=\""'$bundleID'\"" kPlugIn_Icon=\""'$icon'\""' ``` ### Customizing Channels, Latency, and Sample Rates `kNumber_Of_Channels` is used to set the number of channels. Be careful when specifying high channel counts. Although BlackHole is designed to be extremely efficient at higher channel counts it's possible that your computer might not be able to keep up. Sample rates play a roll as well. Don't use high sample rates with a high number of channels. Some applications don't know how to handle high channel counts. Proceed with caution. `kLatency_Frame_Size` is how much time in frames that the driver has to process incoming and outgoing audio. It can be used to delay the audio inside of BlackHole up to a maximum of 65536 frames. This may be helpful if using BlackHole with a high channel count. `kSampleRates` set the sample rate or sample rates of the audio device. If using multiple sample rates separate each with a comma (`,`). For example: `kSampleRates='44100,48000'`. ### Mirror Device By default BlackHole has a hidden mirrored audio device. The devices may be customized using the following constants. ``` // Original Device kDevice_IsHidden kDevice_HasInput kDevice_HasOutput // Mirrored Device kDevice2_IsHidden kDevice2_HasInput kDevice2_HasOutput ``` When all are set to true a 2nd BlackHole will show up that works exactly the same. The inputs and outputs are mirrored so the outputs from both devices go to the inputs of both devices. This is useful if you need a separate device for input and output. Example ``` // Original Device kDevice_IsHidden=false kDevice_HasInput=true kDevice_HasOutput=false // Mirrored Device kDevice2_IsHidden=false kDevice2_HasInput=false kDevice2_HasOutput=true ``` In this situation we have two BlackHole devices. One will have inputs only and the other will have outputs only. One way to use this in projects is to hide the mirrored device and use it behind the scenes. That way the user will see an input only device while routing audio through to the output behind them scenes. Hidden audio devices can be accessed using `kAudioHardwarePropertyTranslateUIDToDevice`. ### Continuous Integration / Continuous Deployment BlackHole can be integrated into your CI/CD. Take a look at the [create_installer.sh]( shell script to see how the installer is built, signed and notarized. ## Feature Requests If you are interested in any of the following features please leave a comment in the linked issue. To request a features not listed please create a new issue. - [Sync Clock with other Audio Devices]( in development see v0.3.0 - [Output Blackhole to other Audio Device]( - [Add Support for AU Plug-ins]( - [Inter-channel routing]( - [Record Directly to File]( - [Configuration Options Menu]( - [Support for Additional Bit Depths]( ## FAQ ### Why isn't BlackHole showing up in the Applications folder? BlackHole is a virtual audio loopback driver. It only shows up in `Audio MIDI Setup`, `Sound Preferences`, or other audio applications. ### How can I listen to the audio and use BlackHole at the same time? See [Setup a Multi-Output Device]( ### What bit depth does BlackHole use, and can I change it? BlackHole uses 32-bit float bit depth since macOS Core Audio natively uses 32-bit at the system level. This provides the broadest compatibility and greatest audio headroom. This format is lossless for up to 24-bit integer. All applications should be able to playback and record audio, and do not require adjusting bit depth at the BlackHole driver level. ### How can I change the volume of a Multi-Output device? Unfortunately macOS does not support changing the volume of a Multi-Output device but you can set the volume of individual devices in Audio MIDI Setup. ### Why is nothing playing through BlackHole? - Check `System Preferences` `Security & Privacy` `Privacy` `Microphone` to make sure your digital audio workstation (DAW) application has microphone access. - Check that the volume is all the way up on BlackHole input and output in ``Audio MIDI Setup``. - If you are using a multi-output device, due to issues with macOS the Built-in Output must be enabled and listed as the top device in the Multi-Output. [See here for details]( ### Why is audio glitching after X minutes when using a multi-output or an aggregate? - You need to enable drift correction for all devices except the Clock Source also known as Master Device or Primary Device. ### Why is the Installer failing? - Certain versions of macOS have a known issue where install packages may fail to install when the install package is located in certain folders. If you downloaded the .pkg file to your Downloads folder, try moving it to the Desktop and open the .pkg again (or vice-versa). ### What Apps Don't Work with Multi-Outputs? Unfortunately multi-outputs can be buggy and some apps won't work with them at all. Here is a list of known ones. If additional incompatible applications are found, please report them by opening an [issue]( - Apple Podcasts - Apple Messages - HDHomeRun ### AirPods with an Aggregate/Multi-Output is not working. The microphone from AirPods runs at a lower sample rate which means it should not be used as the primary/clock device in an Aggregate or Multi-Output device. The solution is to use your built-in speakers (and just mute them) or BlackHole 2ch as the primary/clock device. BlackHole 16ch will not work as the primary since the primary needs to have 2ch. Read [this discussion]( for more details. ### Can I integrate BlackHole into my app? BlackHole is licensed under GPL-3.0. You can use BlackHole as long as your app is also licensed as GPL-3.0. For all other applications please [contact Existential Audio directly](mailto:devinroth@existential.audio). ## Links and Resources ### [MultiSoundChanger]( A small tool for changing sound volume even for aggregate devices cause native sound volume controller can't change volume of aggregate devices ### [BackgroundMusic]( Background Music, a macOS audio utility: automatically pause your music, set individual apps' volumes and record system audio.","560, Code, Issues, Pull requests, Discussions, Wiki, Security, Insights, wontfix, bug, Blame Apple, setup, pending closure, help wanted, good first issue, enhancement, duplicate, documentation, audio quality, Missing Information"
reactos,reactos/reactos,14155,"['C', 'C++', 'Assembly']","['operating-system', 'c', 'kernel', 'os', 'osdev']","--- ## Quick Links [Website]( [Official chat]( [Wiki]( [Forum]( [Community Discord]( [JIRA Bug Tracker]( [ReactOS Git mirror]( [Testman]( ## What is ReactOS? ReactOS is an Open Source effort to develop a quality operating system that is compatible with applications and drivers written for the Microsoft Windows NT family of operating systems (NT4, 2000, XP, 2003, Vista, 7). The ReactOS project, although currently focused on Windows Server 2003 compatibility, is always keeping an eye toward compatibility with Windows Vista and future Windows NT releases. The code of ReactOS is licensed under [GNU GPL 2.0]( ### Product quality warning **ReactOS is currently an Alpha quality operating system.** This means that ReactOS is under heavy development and you have to be ready to encounter some problems. Different things may not work well and it can corrupt the data present on your hard disk. It is HIGHLY recommended to test ReactOS on a virtual machine or on a computer with no sensitive or critical data! ## Building [![rosbewin.badge]][rosbewin.link] [![rosbeunix.badge]][rosbeunix.link] [![coverity.badge]][coverity.link] To build the system it is strongly advised to use the _ReactOS Build Environment (RosBE)._ Up-to-date versions for Windows and for Unix/GNU-Linux are available from our download page at: [""Build Environment""]( Alternatively one can use Microsoft Visual C++ (MSVC) version 2019+. Building with MSVC is covered here: [""Visual Studio or Microsoft Visual C++""]( See [""Building ReactOS""]( article for more details. ### Binaries To build ReactOS you must run the `configure` script in the directory you want to have your build files. Choose `configure.cmd` or `configure.sh` depending on your system. Then run `ninja ` to build a module you want or just `ninja` to build all modules. ### Bootable images To build a bootable CD image run `ninja bootcd` from the build directory. This will create a CD image with a filename `bootcd.iso`. You can always download fresh binary builds of bootable images from the [""Daily builds""]( page. ## Installing By default, ReactOS currently can only be installed on a machine that has a FAT16 or FAT32 partition as the active (bootable) partition. The partition on which ReactOS is to be installed (which may or may not be the bootable partition) must also be formatted as FAT16 or FAT32. ReactOS Setup can format the partitions if needed. Starting with 0.4.10, ReactOS can be installed using the BtrFS file system. But consider this as an experimental feature and thus regressions not triggered on FAT setup may be observed. To install ReactOS from the bootable CD distribution, extract the archive contents. Then burn the CD image, boot from it, and follow the instructions. See [""Installing ReactOS""]( Wiki page or [INSTALL](INSTALL) for more details. ## Testing If you discover a bug in ReactOS search on JIRA first - it might be reported already. If not report the bug providing logs and as much information as possible. See [""File Bugs""]( for a guide. __NOTE:__ The bug tracker is _not_ for discussions. Please use our [official chat]( or our [forum]( ## Contributing [ We are always looking for developers! Check [how to contribute](CONTRIBUTING.md) if you are willing to participate. __Legal notice__: If you have seen proprietary Microsoft Windows source code (including but not limited to the leaked Windows NT 3.5, NT 4, 2000 source code and the Windows Research Kernel), your contribution won't be accepted because of potential copyright violation. Try out cloud-based ReactOS development using Gitpod and Docker: []( You can also support ReactOS by [donating]( We rely on our backers to maintain our servers and accelerate development by [hiring full-time devs]( ## More information ReactOS is a Free and Open Source operating system based on the Windows architecture, providing support for existing applications and drivers, and an alternative to the current dominant consumer operating system. It is not another wrapper built on Linux, like WINE. It does not attempt or plan to compete with WINE; in fact, the user-mode part of ReactOS is almost entirely WINE-based and our two teams have cooperated closely in the past. ReactOS is also not ""yet another OS"". It does not attempt to be a third player like any other alternative OS out there. People are not meant to uninstall Linux and use ReactOS instead; ReactOS is a replacement for Windows users who want a Windows replacement that behaves just like Windows. More information is available at: [reactos.org]( Also see the [media/doc](/media/doc/) subdirectory for some sparse notes. ## Who is responsible Active devs are listed as members of [GitHub organization]( See also the [CREDITS](CREDITS) file for others. ## Code mirrors The main development is done on [GitHub]( We have an [alternative mirror]( in case GitHub is down. There is also an obsolete [SVN archive repository]( that is kept for historical purposes. [coverity.badge]: [rosbewin.badge]: [rosbeunix.badge]: [prwelcome.badge]: [coverity.link]: [rosbewin.link]: [rosbeunix.link]:","1.7k, Code, Pull requests, Actions, Projects, Security, Insights, enhancement, bugfix, TRANSLATION, kernel&hal, shell, ROSTESTS, drivers, refactoring, review pending, Win32SS, 3rd party sync, NT6+, freeldr, needs rebase, no squash merge, help wanted, trivial fix, no-pr-activity, manual merging, SMP, needs tests, modding, hackfix, janitorial, documentation, warnings, ship-it, GCC-13, 1st stage GUI setup, spam"
DeepFaceLab,iperov/DeepFaceLab,45806,['Python'],"['faceswap', 'face-swap', 'deep-learning', 'deeplearning', 'deep-neural-networks']","# DeepFaceLab ### the leading software for creating deepfakes More than 95% of deepfake videos are created with DeepFaceLab. DeepFaceLab is used by such popular youtube channels as | [deeptomcruise]( [1facerussia]( [arnoldschwarzneggar]( |---|---|---| | [mariahcareyathome?]( [diepnep]( [mr__heisenberg]( [deepcaprio]( |---|---|---|---| | [VFXChris Ume]( [Sham00k]( |---|---| | [Collider videos]( [iFake]( [NextFace]( |---|---|---| | [Futuring Machine]( [RepresentUS]( [Corridor Crew]( |---|---|---| | [DeepFaker]( [DeepFakes in movie]( |---|---| | [DeepFakeCreator]( [Jarkan]( |---|---| # What can I do using DeepFaceLab? ## Replace the face ## De-age the face ## Replace the head ## Manipulate politicians lips (voice replacement is not included!) (also requires a skill in video editors such as *Adobe After Effects* or *Davinci Resolve*) # Deepfake native resolution progress Unfortunately, there is no ""make everything ok"" button in DeepFaceLab. You should spend time studying the workflow and growing your skills. A skill in programs such as *AfterEffects* or *Davinci Resolve* is also desirable. ## Mini tutorial ## Releases Windows (magnet link) Last release. Use torrent client to download. Windows (Mega.nz) Contains new and prev releases. Windows (yandex.ru) Contains new and prev releases. Google Colab (github) by @chervonij . You can train fakes for free using Google Colab. Linux (github) by @nagadit CentOS Linux (github) May be outdated. By @elemantalcode ## Links ### Guides and tutorials DeepFaceLab guide Main guide Faceset creation guide How to create the right faceset Google Colab guide Guide how to train the fake on Google Colab Compositing To achieve the highest quality, compose deepfake manually in video editors such as Davinci Resolve or Adobe AfterEffects Discussion and suggestions ### Supplementary material Ready to work facesets Celebrity facesets made by community Pretrained models Pretrained models made by community ### Communication groups Discord Official discord channel. English / Russian. Telegram group Official telegram group. English / Russian. For anonymous communication. Don't forget to hide your phone number mrdeepfakes the biggest NSFW English community reddit r/DeepFakesSFW/ Post your deepfakes there ! reddit r/RUdeepfakes/ ! QQ124500433 QQ dfldata.cc deepfaker.xyz ) ## Related works DeepFaceLive Real-time face swap for PC streaming or video calls neuralchen/SimSwap Swapping face using ONE single photo deepfakes/faceswap Something that was before DeepFaceLab and still remains in the past ## How I can help the project? ### Sponsor deepfake research and DeepFaceLab development. Donate via Yoomoney bitcoin:bc1qkhh7h0gwwhxgg6h6gpllfgstkd645fefrd5s6z ### Collect facesets You can collect faceset of any celebrity that can be used in DeepFaceLab and share it in the community ### Star this repo Register github account and push ""Star"" button. ## Meme zone #deepfacelab #deepfakes #faceswap #face-swap #deep-learning #deeplearning #deep-neural-networks #deepface #deep-face-swap #fakeapp #fake-app #neural-networks #neural-nets #tensorflow #cuda #nvidia","10.3k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, good first issue, enhancement, duplicate, dependencies, bug"
hackingtool,Z4nzu/hackingtool,43084,"['Python', 'Shell', 'Dockerfile']","['allinonehackingtool', 'web-attack', 'password-attack', 'hacking', 'wireless-attack']",### All in One Hacking tool For Hackers []( #### Install Kali Linux in WIndows10 Without VirtualBox [YOUTUBE]( or use Docker ## Update Available V1.2.0 - [] Installation Bug Fixed - [x] Added New Tools - [x] Reverse Engineering - [x] RAT Tools - [x] Web Crawling - [x] Payload Injector - [x] Multitor Tools update - [X] Added Tool in wifijamming - [X] Added Tool in steganography # Hackingtool Menu - [Anonymously Hiding Tools](#anonymously-hiding-tools) - [Information gathering tools](#information-gathering-tools) - [Wordlist Generator](#wordlist-generator) - [Wireless attack tools](#wireless-attack-tools) - [SQL Injection Tools](#sql-injection-tools) - [Phishing attack tools](#phishing-attack-tools) - [Web Attack tools](#web-attack-tools) - [Post exploitation tools](#post-exploitation-tools) - [Forensic tools](#forensic-tools) - [Payload creation tools](#payload-creation-tools) - [Exploit framework](#exploit-framework) - [Reverse engineering tools](#reverse-engineering-tools) - [DDOS Attack Tools](#ddos-attack-tools) - [Remote Administrator Tools (RAT)](#remote-administrator-tools--rat-) - [XSS Attack Tools](#xss-attack-tools) - [Steganograhy tools](#steganograhy-tools) - [Other tools](#other-tools) - [SocialMedia Bruteforce](#socialmedia-bruteforce) - [Android Hacking tools](#android-hacking-tools) - [IDN Homograph Attack](#idn-homograph-attack) - [Email Verify tools](#email-verify-tools) - [Hash cracking tools](#hash-cracking-tools) - [Wifi Deauthenticate](#wifi-deauthenticate) - [SocialMedia Finder](#socialmedia-finder) - [Payload Injector](#payload-injector) - [Web crawling](#web-crawling) - [Mix tools](#mix-tools) ### Anonymously Hiding Tools - [Anonmously Surf]( - [Multitor]( ### Information gathering tools - [Network Map (nmap)]( - [Dracnmap]( - Port scanning - Host to IP - [Xerosploit]( - [RED HAWK (All In One Scanning)]( - [ReconSpider(For All Scanning)]( - IsItDown (Check Website Down/Up) - [Infoga - Email OSINT]( - [ReconDog]( - [Striker]( - [SecretFinder (like API & etc)]( - [Find Info Using Shodan]( - [Port Scanner - rang3r (Python 2.7)]( - [Port Scanner - Ranger Reloaded (Python 3+)]( - [Breacher]( ### Wordlist Generator - [Cupp]( - [WordlistCreator]( - [Goblin WordGenerator]( - [Password list (1.4 Billion Clear Text Password)]( ### Wireless attack tools - [WiFi-Pumpkin]( - [pixiewps]( - [Bluetooth Honeypot GUI Framework]( - [Fluxion]( - [Wifiphisher]( - [Wifite]( - [EvilTwin]( - [Fastssh]( - Howmanypeople ### SQL Injection Tools - [Sqlmap tool]( - [NoSqlMap]( - [Damn Small SQLi Scanner]( - [Explo]( - [Blisqy - Exploit Time-based blind-SQL injection]( - [Leviathan - Wide Range Mass Audit Toolkit]( - [SQLScan]( ### Phishing attack tools - [Setoolkit]( - [SocialFish]( - [HiddenEye]( - [Evilginx2]( - [I-See_You(Get Location using phishing attack)]( - [SayCheese (Grab target's Webcam Shots)]( - [QR Code Jacking]( - [ShellPhish]( - [BlackPhish]( ### Web Attack tools - [Web2Attack]( - Skipfish - [SubDomain Finder]( - [CheckURL]( - [Blazy(Also Find ClickJacking)]( - [Sub-Domain TakeOver]( - [Dirb]( ### Post exploitation tools - [Vegile - Ghost In The Shell]( - [Chrome Keylogger]( ### Forensic tools - Autopsy - Wireshark - [Bulk extractor]( - [Disk Clone and ISO Image Acquire]( - [Toolsley]( - [Volatility3]( ### Payload creation tools - [The FatRat]( - [Brutal]( - [Stitch]( - [MSFvenom Payload Creator]( - [Venom Shellcode Generator]( - [Spycam]( - [Mob-Droid]( - [Enigma]( ### Exploit framework - [RouterSploit]( - [WebSploit]( ) - [Commix]( - [Web2Attack]( ### Reverse engineering tools - [Androguard]( ) - [Apk2Gold]( ) - [JadX]( ### DDOS Attack Tools - SlowLoris - [Asyncrone | Multifunction SYN Flood DDoS Weapon]( - [UFOnet]( - [GoldenEye]( ### Remote Administrator Tools (RAT) - [Stitch]( - [Pyshell]( ### XSS Attack Tools - [DalFox(Finder of XSS)]( - [XSS Payload Generator]( - [Extended XSS Searcher and Finder]( - [XSS-Freak]( - [XSpear]( - [XSSCon]( - [XanXSS]( - [Advanced XSS Detection Suite]( - [RVuln]( - [Cyclops]( ### Steganograhy tools - SteganoHide - StegnoCracker - [StegoCracker]( - [Whitespace]( ### Other tools #### SocialMedia Bruteforce - [Instagram Attack]( - [AllinOne SocialMedia Attack]( - [Facebook Attack]( - [Application Checker]( #### Android Hacking tools - [Keydroid]( - [MySMS]( - [Lockphish (Grab target LOCK PIN)]( - [DroidCam (Capture Image)]( - [EvilApp (Hijack Session)]( - [HatCloud(Bypass CloudFlare for IP)]( #### IDN Homograph Attack - [EvilURL]( #### Email Verify tools - [Knockmail]( #### Hash cracking tools - [Hash Buster]( #### Wifi Deauthenticate - [WifiJammer-NG]( - [KawaiiDeauther]( #### SocialMedia Finder - [Find SocialMedia By Facial Recognation System]( - [Find SocialMedia By UserName]( - [Sherlock]( - [SocialScan | Username or Email]( #### Payload Injector - [Debinject]( - [Pixload]( #### Web crawling - [Gospider]( #### Mix tools - Terminal Multiplexer ## Installation For Linux ### !! RUN HACKINGTOOL AS ROOT !! ## Steps are given below : ## Step : 1 Download hackingtool git clone ## Step : 2 Give Permission to hackingtool chmod -R 755 hackingtool ## Step : 3 Move to hackingtool directory cd hackingtool ## Step : 4 Run hackingtool sudo bash install.sh ## Step : 5 For installing tools in directory sudo hackingtool ## Use image with Docker ### Create Docker Image - Create the docker image ```bash docker buitl -t vgpastor/hackingtool . ``` ### Run as container ```bash docker-compose up -d ``` ### Interact with terminal - Get into the container ```bash docker exec -it hackingtool bash ``` **OUTPUT:** ```bash Select Best Option : [1] Kali Linux / Parrot-Os (apt) [2] Arch Linux (pacman) [0] Exit ``` Enter the options and continue. - If need open other ports you can edit the docker-compose.yml file - Volumes are mounted in the container to persist data and can share files between the host and the container #### Thanks to original Author of the tools used in hackingtool Please Don't Use for illegal Activity ### To do - [ ] Release Tool - [ ] Add Tools for CTF - [ ] Want to do automatic ## Social Media :mailbox_with_no_mail: []( []( ##### Your Favourite Tool is not in hackingtool or Suggestions Please [CLICK HERE]( #### Don't Forgot to share with Your Friends ### The new Update get will soon stay updated #### Thank you..!!,"4.7k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, enhancement, Not Related, wontfix, question, invalid, help wanted, good first issue, fixed, duplicate, documentation, bug"
pandas,pandas-dev/pandas,42217,"['Python', 'Cython', 'HTML']","['data-analysis', 'pandas', 'flexible', 'alignment', 'python']","----------------- # pandas: powerful Python data analysis toolkit | | | | --- | --- | | Testing | []( []( | | Package | []( []( []( []( | | Meta | []( []( []( []( | ## What is it? **pandas** is a Python package that provides fast, flexible, and expressive data structures designed to make working with ""relational"" or ""labeled"" data both easy and intuitive. It aims to be the fundamental high-level building block for doing practical, **real world** data analysis in Python. Additionally, it has the broader goal of becoming **the most powerful and flexible open source data analysis / manipulation tool available in any language**. It is already well on its way towards this goal. ## Table of Contents - [Main Features](#main-features) - [Where to get it](#where-to-get-it) - [Dependencies](#dependencies) - [Installation from sources](#installation-from-sources) - [License](#license) - [Documentation](#documentation) - [Background](#background) - [Getting Help](#getting-help) - [Discussion and Development](#discussion-and-development) - [Contributing to pandas](#contributing-to-pandas) ## Main Features Here are just a few of the things that pandas does well: - Easy handling of [**missing data**][missing-data] (represented as `NaN`, `NA`, or `NaT`) in floating point as well as non-floating point data - Size mutability: columns can be [**inserted and deleted**][insertion-deletion] from DataFrame and higher dimensional objects - Automatic and explicit [**data alignment**][alignment]: objects can be explicitly aligned to a set of labels, or the user can simply ignore the labels and let `Series`, `DataFrame`, etc. automatically align the data for you in computations - Powerful, flexible [**group by**][groupby] functionality to perform split-apply-combine operations on data sets, for both aggregating and transforming data - Make it [**easy to convert**][conversion] ragged, differently-indexed data in other Python and NumPy data structures into DataFrame objects - Intelligent label-based [**slicing**][slicing], [**fancy indexing**][fancy-indexing], and [**subsetting**][subsetting] of large data sets - Intuitive [**merging**][merging] and [**joining**][joining] data sets - Flexible [**reshaping**][reshape] and [**pivoting**][pivot-table] of data sets - [**Hierarchical**][mi] labeling of axes (possible to have multiple labels per tick) - Robust IO tools for loading data from [**flat files**][flat-files] (CSV and delimited), [**Excel files**][excel], [**databases**][db], and saving/loading data from the ultrafast [**HDF5 format**][hdfstore] - [**Time series**][timeseries]-specific functionality: date range generation and frequency conversion, moving window statistics, date shifting and lagging [missing-data]: [insertion-deletion]: [alignment]: [groupby]: [conversion]: [slicing]: [fancy-indexing]: [subsetting]: [merging]: [joining]: [reshape]: [pivot-table]: [mi]: [flat-files]: [excel]: [db]: [hdfstore]: [timeseries]: ## Where to get it The source code is currently hosted on GitHub at: Binary installers for the latest released version are available at the [Python Package Index (PyPI)]( and on [Conda]( ```sh # conda conda install -c conda-forge pandas ``` ```sh # or PyPI pip install pandas ``` The list of changes to pandas between each release can be found [here]( For full details, see the commit logs at ## Dependencies - [NumPy - Adds support for large, multi-dimensional arrays, matrices and high-level mathematical functions to operate on these arrays]( - [python-dateutil - Provides powerful extensions to the standard datetime module]( - [pytz - Brings the Olson tz database into Python which allows accurate and cross platform timezone calculations]( See the [full installation instructions]( for minimum supported versions of required, recommended and optional dependencies. ## Installation from sources To install pandas from source you need [Cython]( in addition to the normal dependencies above. Cython can be installed from PyPI: ```sh pip install cython ``` In the `pandas` directory (same one where you found this file after cloning the git repo), execute: ```sh pip install . ``` or for installing in [development mode]( ```sh python -m pip install -ve . --no-build-isolation --config-settings=editable-verbose=true ``` See the full instructions for [installing from source]( ## License [BSD 3](LICENSE) ## Documentation The official documentation is hosted on [PyData.org]( ## Background Work on ``pandas`` started at [AQR]( (a quantitative hedge fund) in 2008 and has been under active development since then. ## Getting Help For usage questions, the best place to go to is [StackOverflow]( Further, general questions and discussions can also take place on the [pydata mailing list]( ## Discussion and Development Most development discussions take place on GitHub in this repo, via the [GitHub issue tracker]( Further, the [pandas-dev mailing list]( can also be used for specialized discussions or design issues, and a [Slack channel]( is available for quick development related questions. There are also frequent [community meetings]( for project maintainers open to the community as well as monthly [new contributor meetings]( to help support new contributors. Additional information on the communication channels can be found on the [contributor community]( page. ## Contributing to pandas []( All contributions, bug reports, bug fixes, documentation improvements, enhancements, and ideas are welcome. A detailed overview on how to contribute can be found in the **[contributing guide]( If you are simply looking to start working with the pandas codebase, navigate to the [GitHub ""issues"" tab]( and start looking through interesting issues. There are a number of issues listed under [Docs]( and [good first issue]( where you could start out. You can also triage issues which may include reproducing bug reports, or asking for vital information such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to [subscribe to pandas on CodeTriage]( Or maybe through using pandas you have an idea of your own or are looking for something in the documentation and thinking this can be improved...you can do something about it! Feel free to ask questions on the [mailing list]( or on [Slack]( As contributors and maintainers to this project, you are expected to abide by pandas' code of conduct. More information can be found at: [Contributor Code of Conduct]( [Go to Top](#table-of-contents)","17.4k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, Bug, Enhancement, Needs Triage, Needs Discussion, Docs, Indexing, Groupby, Reshaping, Dtype Conversions, MultiIndex, Visualization, Missing-data, Timeseries, IO CSV, Apply, Error Reporting, ExtensionArray, Deprecate, Performance, API - Consistency, API Design, Arrow, Frequency, Categorical, IO SQL, Regression, Numeric Operations, Strings, IO JSON, Output-Formatting"
MetaGPT,geekan/MetaGPT,40257,"['Python', 'JavaScript', 'TypeScript']","['agent', 'gpt', 'llm', 'metagpt', 'hacktoberfest']","# MetaGPT: The Multi-Agent Framework Assign different roles to GPTs to form a collaborative entity for complex tasks. ## News Mar. 29, 2024: [v0.8.0]( released. Now you can use Data Interpreter ([arxiv]( [example]( [code]( via pypi package import. Meanwhile, we integrated RAG module and supported multiple new LLMs. Feb. 08, 2024: [v0.7.0]( released, supporting assigning different LLMs to different Roles. We also introduced [Data Interpreter]( a powerful agent capable of solving a wide range of real-world problems. Jan. 16, 2024: Our paper [MetaGPT: Meta Programming for A Multi-Agent Collaborative Framework ]( accepted for **oral presentation (top 1.2%)** at ICLR 2024, **ranking #1** in the LLM-based Agent category. Jan. 03, 2024: [v0.6.0]( released, new features include serialization, upgraded OpenAI package and supported multiple LLM, provided [minimal example for debate]( etc. Dec. 15, 2023: [v0.5.0]( released, introducing some experimental features such as incremental development, multilingual, multiple programming languages, etc. Nov. 08, 2023: MetaGPT is selected into [Open100: Top 100 Open Source achievements]( Sep. 01, 2023: MetaGPT tops GitHub Trending Monthly for the **17th time** in August 2023. Jun. 30, 2023: MetaGPT is now open source. Apr. 24, 2023: First line of MetaGPT code committed. ## Software Company as Multi-Agent System 1. MetaGPT takes a **one line requirement** as input and outputs **user stories / competitive analysis / requirements / data structures / APIs / documents, etc.** 2. Internally, MetaGPT includes **product managers / architects / project managers / engineers.** It provides the entire process of a **software company along with carefully orchestrated SOPs.** 1. `Code = SOP(Team)` is the core philosophy. We materialize SOP and apply it to teams composed of LLMs. Software Company Multi-Agent Schematic (Gradually Implementing) ## Get Started ### Installation > Ensure that Python 3.9+ is installed on your system. You can check this by using: `python --version`. > You can use conda like this: `conda create -n metagpt python=3.9 && conda activate metagpt` ```bash pip install --upgrade metagpt # or `pip install --upgrade git+ # or `git clone && cd MetaGPT && pip install --upgrade -e .` ``` For detailed installation guidance, please refer to [cli_install]( or [docker_install]( ### Configuration You can init the config of MetaGPT by running the following command, or manually create `~/.metagpt/config2.yaml` file: ```bash # Check for more details metagpt --init-config # it will create ~/.metagpt/config2.yaml, just modify it to your needs ``` You can configure `~/.metagpt/config2.yaml` according to the [example]( and [doc]( ```yaml llm: api_type: ""openai"" # or azure / ollama / groq etc. Check LLMType for more options model: ""gpt-4-turbo"" # or gpt-3.5-turbo base_url: "" # or forward url / other llm url api_key: ""YOUR_API_KEY"" ``` ### Usage After installation, you can use MetaGPT at CLI ```bash metagpt ""Create a 2048 game"" # this will create a repo in ./workspace ``` or use it as library ```python from metagpt.software_company import generate_repo, ProjectRepo repo: ProjectRepo = generate_repo(""Create a 2048 game"") # or ProjectRepo("""") print(repo) # it will print the repo structure with files ``` You can also use [Data Interpreter]( to write code: ```python import asyncio from metagpt.roles.di.data_interpreter import DataInterpreter async def main(): di = DataInterpreter() await di.run(""Run data analysis on sklearn Iris dataset, include a plot"") asyncio.run(main()) # or await main() in a jupyter notebook setting ``` ### QuickStart & Demo Video - Try it on [MetaGPT Huggingface Space]( - [Matthew Berman: How To Install MetaGPT - Build A Startup With One Prompt!!]( - [Official Demo Video]( ## Tutorial - [Online Document]( - [Usage]( - [What can MetaGPT do?]( - How to build your own agents? - [MetaGPT Usage & Development Guide | Agent 101]( - [MetaGPT Usage & Development Guide | MultiAgent 101]( - Contribution - [Develop Roadmap](docs/ROADMAP.md) - Use Cases - [Data Interpreter]( - [Debate]( - [Researcher]( - [Recepit Assistant]( - [FAQs]( ## Support ### Discord Join US Join Our [Discord Channel]( Looking forward to seeing you there! ### Contributor form [Fill out the form]( to become a contributor. We are looking forward to your participation! ### Contact Information If you have any questions or feedback about this project, please feel free to contact us. We highly appreciate your suggestions! - **Email:** alexanderwu@deepwisdom.ai - **GitHub Issues:** For more technical inquiries, you can also create a new issue in our [GitHub repository]( We will respond to all questions within 2-3 business days. ## Citation To stay updated with the latest research and development, follow [@MetaGPT_]( on Twitter. To cite [MetaGPT]( or [Data Interpreter]( in publications, please use the following BibTeX entries. ```bibtex @misc{hong2023metagpt, title={MetaGPT: Meta Programming for A Multi-Agent Collaborative Framework}, author={Sirui Hong and Mingchen Zhuge and Jonathan Chen and Xiawu Zheng and Yuheng Cheng and Ceyao Zhang and Jinlin Wang and Zili Wang and Steven Ka Shing Yau and Zijuan Lin and Liyang Zhou and Chenyu Ran and Lingfeng Xiao and Chenglin Wu and Jrgen Schmidhuber}, year={2023}, eprint={2308.00352}, archivePrefix={arXiv}, primaryClass={cs.AI} } @misc{hong2024data, title={Data Interpreter: An LLM Agent For Data Science}, author={Sirui Hong and Yizhang Lin and Bang Liu and Bangbang Liu and Binhao Wu and Danyang Li and Jiaqi Chen and Jiayi Zhang and Jinlin Wang and Li Zhang and Lingyao Zhang and Min Yang and Mingchen Zhuge and Taicheng Guo and Tuo Zhou and Wei Tao and Wenyi Wang and Xiangru Tang and Xiangtao Lu and Xiawu Zheng and Xinbing Liang and Yaying Fei and Yuheng Cheng and Zongze Xu and Chenglin Wu}, year={2024}, eprint={2402.18679}, archivePrefix={arXiv}, primaryClass={cs.AI} } ```","4.8k, Code, Issues, Pull requests, Actions, Projects, Security, Insights, enhancement, bug, documentation, todo, discussion, Review effort [1-5]: 4, question, network, features, dataset, bug_fix, Review effort [1-5]: 3, wontfix, tests, memory-leak, invalid, help wanted, hacktoberfest, good first issue, duplicate, Review effort [1-5]: 5, Review effort [1-5]: 2, Review effort [1-5]: 1"
ChatGLM-6B,THUDM/ChatGLM-6B,39612,"['Python', 'Shell']",[],"# ChatGLM-6B Blog HF Repo Twitter [GLM@ACL 22] [GitHub] [GLM-130B@ICLR 23] [GitHub] Slack WeChat chatglm.cn ChatGLM *Read this in [English](README_en.md).* [ChatGLM3-6B]( 10BFunction CallCode InterpreterAgent ## ChatGLM-6B [General Language Model (GLM)]( 62 INT4 6GB ChatGLM-6B ChatGPT 1T 62 ChatGLM-6B []( [chatglm.cn]( ChatGLM [P-Tuning v2]( [()](ptuning/README.md) INT4 7GB ChatGLM-6B ****[]( ----- ChatGLM-6B [](MODEL_LICENSE)** ChatGLM-6B iOS Windows App ** ChatGLM-6B [](README.md#)**** ## **[2023/07/25]** [CodeGeeX2]( ChatGLM2-6B * ****CodeGeeX2-6B 600B CodeGeeX [HumanEval-X]( (Python +57%, C++ +71%, Java +54%, JavaScript +83%, Go +56%, Rust +321\%)Python 35.9\% Pass@1 StarCoder-15B * **** ChatGLM2-6B CodeGeeX2-6B 8192 6GB * **AI**CodeGeeX[VS Code]( [Jetbrains]( Ask CodeGeeX AI **[2023/06/25]** [ChatGLM2-6B]( ChatGLM**2**-6B 1. **** ChatGLM ChatGLM2-6B ChatGLM2-6B [GLM]( 1.4T [](#)ChatGLM2-6B MMLU+23%CEval+33%GSM8K+571% BBH+60% 2. **** [FlashAttention]( Context Length ChatGLM-6B 2K 32K 8K ChatGLM2-6B 3. **** [Multi-Query Attention]( ChatGLM2-6B 42%INT4 6G 1K 8K [ChatGLM2-6B]( **[2023/06/14]** [WebGLM]( 2023 **[2023/05/17]** [VisualGLM-6B]( [cli_demo_vision.py](cli_demo_vision.py) [web_demo_vision.py](web_demo_vision.py) Demo VisualGLM-6B [SwissArmyTransformer]( torchvision [VisualGLM-6B]( **[2023/05/15]** v1.1 checkpoint * Describe a time when you had to make a difficult decision. - v1.0: - v1.1: * Describe the function of a computer motherboard - v1.0: - v1.1: * Develop a plan to reduce electricity usage in a home. - v1.0: - v1.1: * NFT - v1.0: - v1.1: [UPDATE.md](UPDATE.md) ## ChatGLM * [lyraChatGLM]( ChatGLM-6B 9000+ tokens/s * [ChatGLM-MNN]( MNN ChatGLM-6B C++ GPU CPU * [JittorLLMs]( ChatGLM-6B FP16 LinuxwindowsMac * [InferLLM]( C++ x86Arm 4G ChatGLM-6B * [langchain-ChatGLM]( langchain ChatGLM * []( ChatGLM-6B ChatPDF * [glm-bot]( * [Chuanhu Chat]( APIChatGLM-6B ChatGLM-6B * [ChatGLM-6B ]( * [ChatGLM-6B langchain QA Bot]( * [Measuring Massive Multitask Chinese Understanding]( [PROJECT.md](PROJECT.md) ## ### | **** | ** GPU ** | ** GPU ** | | -------------- | ------------------------- | --------------------------------- | | FP16 | 13 GB | 14 GB | | INT8 | 8 GB | 9 GB | | INT4 | 6 GB | 7 GB | ### pip `pip install -r requirements.txt` `transformers` `4.27.1` `4.23.1` cpu `gcc` `openmp` Linux Windows [TDM-GCC]( `openmp` Windows `gcc` `TDM-GCC 10.3.0` Linux `gcc 11.3.0` MacOS [Q1](FAQ.md#q1) ### ChatGLM-6B ```python >>> from transformers import AutoTokenizer, AutoModel >>> tokenizer = AutoTokenizer.from_pretrained(""THUDM/chatglm-6b"", trust_remote_code=True) >>> model = AutoModel.from_pretrained(""THUDM/chatglm-6b"", trust_remote_code=True).half().cuda() >>> model = model.eval() >>> response, history = model.chat(tokenizer, """", history=[]) >>> print(response) ! ChatGLM-6B,, >>> response, history = model.chat(tokenizer, """", history=history) >>> print(response) ,: 1. :,, 2. :,,, 3. :,,,,, 4. :,,, 5. :,,, 6. :,,,, ,, ``` `from_pretrained` `revision=""v1.1.0""` `v1.1.0` [Change Log]( ### `transformers` [Hugging Face Hub]( Hugging Face Hub [Git LFS]( ```Shell git clone ``` Hugging Face Hub checkpoint ```Shell GIT_LFS_SKIP_SMUDGE=1 git clone ``` []( `chatglm-6b` `THUDM/chatglm-6b` `chatglm-6b` **Optional** ```Shell git checkout v1.1.0 ``` ## Demo & API [Gradio]( Demo Demo ```shell git clone cd ChatGLM-6B ``` ### Demo Gradio`pip install gradio` [web_demo.py](web_demo.py) ```shell python web_demo.py ``` Web Server Demo Gradio `demo.queue().launch(share=True, inbrowser=True)` Gradio `share=False` `share=True` [@AdamBear]( Streamlit Demo[#117]( ### Demo [cli_demo.py](cli_demo.py) ```shell python cli_demo.py ``` `clear` `stop` ### API `pip install fastapi uvicorn` [api.py](api.py) ```shell python api.py ``` 8000 POST ```shell curl -X POST "" \ -H 'Content-Type: application/json' \ -d '{""prompt"": """", ""history"": []}' ``` ```shell { ""response"":"" ChatGLM-6B"", ""history"":[["""","" ChatGLM-6B""]], ""status"":200, ""time"":""2023-03-23 21:38:40"" } ``` ## ### FP16 13GB GPU ```python # 4/8 bit model = AutoModel.from_pretrained(""THUDM/chatglm-6b"", trust_remote_code=True).quantize(8).half().cuda() ``` 2 3 8-bit GPU 10GB4-bit 6GB ChatGLM-6B context-length 2048 ChatGLM-6B 4-bit [GPT-Q]( / Pull Request FP16 13GB INT4 5.2GB ```python # INT8 ""THUDM/chatglm-6b-int4""""THUDM/chatglm-6b-int8"" model = AutoModel.from_pretrained(""THUDM/chatglm-6b-int4"", trust_remote_code=True).half().cuda() ``` []( ### CPU GPU CPU 32GB ```python model = AutoModel.from_pretrained(""THUDM/chatglm-6b"", trust_remote_code=True).float() ``` ```python # INT8 ""THUDM/chatglm-6b-int4""""THUDM/chatglm-6b-int8"" model = AutoModel.from_pretrained(""THUDM/chatglm-6b-int4"",trust_remote_code=True).float() ``` `Could not find module 'nvcuda.dll'` `RuntimeError: Unknown platform: darwin` (MacOS) [](README.md#) ### Mac Apple Silicon AMD GPU Mac MPS GPU ChatGLM-6B Apple []( PyTorch-Nightly2.1.0.dev2023xxxx2.0.0 MacOS [](README.md#) mps ```python model = AutoModel.from_pretrained(""your local path"", trust_remote_code=True).half().to('mps') ``` ChatGLM-6B 13GB 16GB MacBook Pro chatglm-6b-int4 GPU kernel CUDA MacOS CPU ```python # INT8 ""THUDM/chatglm-6b-int4""""THUDM/chatglm-6b-int8"" model = AutoModel.from_pretrained(""THUDM/chatglm-6b-int4"",trust_remote_code=True).float() ``` CPU [ OpenMP](FAQ.md#q1) ### GPU GPU GPU accelerate: `pip install accelerate` ```python from utils import load_model_on_gpus model = load_model_on_gpus(""THUDM/chatglm-6b"", num_gpus=2) ``` GPU `num_gpus` GPU `device_map` ## [P-tuning v2]( [ptuning/README.md](ptuning/README.md) ## ChatGLM-6B `web_demo.py` ChatGLM-6B ## ChatGLM-6B - 6B ChatGLM-6B - ChatGLM-6B - ChatGLM-6B / - ChatGLM-6B ## [Apache-2.0](LICENSE) ChatGLM-6B [Model License](MODEL_LICENSE)ChatGLM-6B ****[]( ## ``` @article{zeng2022glm, title={Glm-130b: An open bilingual pre-trained model}, author={Zeng, Aohan and Liu, Xiao and Du, Zhengxiao and Wang, Zihan and Lai, Hanyu and Ding, Ming and Yang, Zhuoyi and Xu, Yifan and Zheng, Wendi and Xia, Xiao and others}, journal={arXiv preprint arXiv:2210.02414}, year={2022} } ``` ``` @inproceedings{du2022glm, title={GLM: General Language Model Pretraining with Autoregressive Blank Infilling}, author={Du, Zhengxiao and Qian, Yujie and Liu, Xiao and Ding, Ming and Qiu, Jiezhong and Yang, Zhilin and Tang, Jie}, booktitle={Proceedings of the 60th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers)}, pages={320--335}, year={2022} } ```","5.1k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, enhancement, question, bug, wontfix, invalid, help wanted, good first issue, duplicate, documentation"
python-patterns,faif/python-patterns,39574,"['Python', 'Makefile', 'Shell']","['python', 'idioms', 'design-patterns']","python-patterns =============== A collection of design patterns and idioms in Python. Current Patterns ---------------- __Creational Patterns__: | Pattern | Description | |:-------:| ----------- | | [abstract_factory](patterns/creational/abstract_factory.py) | use a generic function with specific factories | | [borg](patterns/creational/borg.py) | a singleton with shared-state among instances | | [builder](patterns/creational/builder.py) | instead of using multiple constructors, builder object receives parameters and returns constructed objects | | [factory](patterns/creational/factory.py) | delegate a specialized function/method to create instances | | [lazy_evaluation](patterns/creational/lazy_evaluation.py) | lazily-evaluated property pattern in Python | | [pool](patterns/creational/pool.py) | preinstantiate and maintain a group of instances of the same type | | [prototype](patterns/creational/prototype.py) | use a factory and clones of a prototype for new instances (if instantiation is expensive) | __Structural Patterns__: | Pattern | Description | |:-------:| ----------- | | [3-tier](patterns/structural/3-tier.py) | data<->business logic<->presentation separation (strict relationships) | | [adapter](patterns/structural/adapter.py) | adapt one interface to another using a white-list | | [bridge](patterns/structural/bridge.py) | a client-provider middleman to soften interface changes | | [composite](patterns/structural/composite.py) | lets clients treat individual objects and compositions uniformly | | [decorator](patterns/structural/decorator.py) | wrap functionality with other functionality in order to affect outputs | | [facade](patterns/structural/facade.py) | use one class as an API to a number of others | | [flyweight](patterns/structural/flyweight.py) | transparently reuse existing instances of objects with similar/identical state | | [front_controller](patterns/structural/front_controller.py) | single handler requests coming to the application | | [mvc](patterns/structural/mvc.py) | model<->view<->controller (non-strict relationships) | | [proxy](patterns/structural/proxy.py) | an object funnels operations to something else | __Behavioral Patterns__: | Pattern | Description | |:-------:| ----------- | | [chain_of_responsibility](patterns/behavioral/chain_of_responsibility.py) | apply a chain of successive handlers to try and process the data | | [catalog](patterns/behavioral/catalog.py) | general methods will call different specialized methods based on construction parameter | | [chaining_method](patterns/behavioral/chaining_method.py) | continue callback next object method | | [command](patterns/behavioral/command.py) | bundle a command and arguments to call later | | [iterator](patterns/behavioral/iterator.py) | traverse a container and access the container's elements | | [iterator](patterns/behavioral/iterator_alt.py) (alt. impl.)| traverse a container and access the container's elements | | [mediator](patterns/behavioral/mediator.py) | an object that knows how to connect other objects and act as a proxy | | [memento](patterns/behavioral/memento.py) | generate an opaque token that can be used to go back to a previous state | | [observer](patterns/behavioral/observer.py) | provide a callback for notification of events/changes to data | | [publish_subscribe](patterns/behavioral/publish_subscribe.py) | a source syndicates events/data to 0+ registered listeners | | [registry](patterns/behavioral/registry.py) | keep track of all subclasses of a given class | | [specification](patterns/behavioral/specification.py) | business rules can be recombined by chaining the business rules together using boolean logic | | [state](patterns/behavioral/state.py) | logic is organized into a discrete number of potential states and the next state that can be transitioned to | | [strategy](patterns/behavioral/strategy.py) | selectable operations over the same data | | [template](patterns/behavioral/template.py) | an object imposes a structure but takes pluggable components | | [visitor](patterns/behavioral/visitor.py) | invoke a callback for all items of a collection | __Design for Testability Patterns__: | Pattern | Description | |:-------:| ----------- | | [dependency_injection](patterns/dependency_injection.py) | 3 variants of dependency injection | __Fundamental Patterns__: | Pattern | Description | |:-------:| ----------- | | [delegation_pattern](patterns/fundamental/delegation_pattern.py) | an object handles a request by delegating to a second object (the delegate) | __Others__: | Pattern | Description | |:-------:| ----------- | | [blackboard](patterns/other/blackboard.py) | architectural model, assemble different sub-system knowledge to build a solution, AI approach - non gang of four pattern | | [graph_search](patterns/other/graph_search.py) | graphing algorithms - non gang of four pattern | | [hsm](patterns/other/hsm/hsm.py) | hierarchical state machine - non gang of four pattern | Videos ------ [Design Patterns in Python by Peter Ullrich]( [Sebastian Buczyski - Why you don't need design patterns in Python?]( [You Don't Need That!]( [Pluggable Libs Through Design Patterns]( Contributing ------------ When an implementation is added or modified, please review the following guidelines: ##### Docstrings Add module level description in form of a docstring with links to corresponding references or other useful information. Add ""Examples in Python ecosystem"" section if you know some. It shows how patterns could be applied to real-world problems. [facade.py](patterns/structural/facade.py) has a good example of detailed description, but sometimes the shorter one as in [template.py](patterns/behavioral/template.py) would suffice. ##### Python 2 compatibility To see Python 2 compatible versions of some patterns please check-out the [legacy]( tag. ##### Update README When everything else is done - update corresponding part of README. ##### Travis CI Please run the following before submitting a patch - `black .` This lints your code. Then either: - `tox` or `tox -e ci37` This runs unit tests. see tox.ini for further details. - If you have a bash compatible shell use `./lint.sh` This script will lint and test your code. This script mirrors the CI pipeline actions. You can also run `flake8` or `pytest` commands manually. Examples can be found in `tox.ini`. ## Contributing via issue triage []( You can triage issues and pull requests which may include reproducing bug reports or asking for vital information, such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to [subscribe to python-patterns on CodeTriage](","6.9k, Code, Issues, Pull requests, Actions, Projects, Wiki, Security, Insights, enhancement, question, wontfix, spam, invalid, duplicate, bug"
PaddleOCR,PaddlePaddle/PaddleOCR,39182,"['Python', 'C++', 'Shell']","['ocr', 'crnn', 'ocrlite', 'db', 'chineseocr']","[English](README_en.md) | | [](./doc/doc_i18n/README_.md) | [](./doc/doc_i18n/README_.md) | [](./doc/doc_i18n/README_.md) | [P ](./doc/doc_i18n/README__.md) ## PaddleOCR OCR ## Community PaddleOCR is being oversight by a [PMC]( Issues and PRs will be reviewed on a best-effort basis. For a complete overview of PaddlePaddle community, please visit [community]( ## - **OCR**PP-ChatOCRv2/530190063 - **2024.5.10 (OCR )** OCR Badcase - [ OCR]( (PP-OCRv4) - []( (SLANet) - []( (PP-ChatOCRv2-common) - []( (PP-ChatOCRv2-doc) **[]( , - **2023.8.7 PaddleOCR [release/2.7]( - [PP-OCRv4](./doc/doc_ch/PP-OCRv4_introduction.md) mobile server - PP-OCRv4-mobile PP-OCRv3 4.5% 10%80 8% - PP-OCRv4-server OCR 4.9% 2% [](./doc/doc_ch/quickstart.md) AI (PaddleX)[ OCR ]( - **2022.11 [4 ](doc/doc_ch/algorithm_overview.md)** [DRRG](doc/doc_ch/algorithm_det_drrg.md), [RFL](doc/doc_ch/algorithm_rec_rfl.md), [Text Telescope](doc/doc_ch/algorithm_sr_telescope.md)[CAN](doc/doc_ch/algorithm_rec_can.md) - **2022.10 [JS PP-OCRv3 ](./deploy/paddlejs/README_ch.md)** 4.3M 8 web demo - ** PaddleOCR PP-StructureV2 **[](#) 20G OCR PDF Word 10 OCR - **2022.8.24 PaddleOCR [release/2.6]( - [PP-StructureV2](./ppstructure/README_ch.md)[](./ppstructure/recovery/README_ch.md)** PDF Word** - [](./ppstructure/layout/README_ch.md) 95% 11 CPU 41ms - [](./ppstructure/table/README_ch.md) 3 6% - [](./ppstructure/kie/README_ch.md) 2.8% 9.1% - **2022.8 [OCR ](./applications)** SVTR **9 ** OCR > [](./doc/doc_ch/update.md) ## OCR [PP-OCR](./doc/doc_ch/ppocr_introduction.md)[PP-Structure](./ppstructure/README_ch.md)[PP-ChatOCRv2]( > ## - - PP-OCRv4 - SLANet - PP-ChatOCRv2-common - PP-ChatOCRv2-doc - [//](./doc/doc_ch/quickstart.md) - demo [ DEMO ]( EasyEdge Paddle-Lite, iOS Android ) ## - PaddleX ## OCR - [ OCR](./doc/doc_ch/ocr_book.md) ## PP-OCR | | | | | | | | ------------------------------------- | ----------------------- | --------------- | ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ | | PP-OCRv4 15.8M | ch_PP-OCRv4_xx | & | []( / []( | []( / []( | []( / []( | | PP-OCRv3 16.2M | ch_PP-OCRv3_xx | & | []( / []( | []( / []( | []( / []( | | PP-OCRv3 13.4M | en_PP-OCRv3_xx | & | []( / []( | []( / []( | []( / []( | - OCR [PP-OCR ](./doc/doc_ch/models_list.md)[PP-Structure ](./ppstructure/docs/models_list.md) ### PaddleOCR | | | | | | | ---- | ------------ | ---------------------------------- | ------------------------------------------------------------ | --------------------------------------------- | | | | | [](./applications//.md) | [](./applications/README.md#) | | | | | [](./applications/.md) | [](./applications/README.md#) | | | | | [](./applications/.md) | [](./applications/README.md#) | - OCR SVTR [](./applications) ## - [](./doc/doc_ch/environment.md) - [PP-OCR ](./doc/doc_ch/ppocr_introduction.md) - [](./doc/doc_ch/quickstart.md) - [](./doc/doc_ch/models_list.md) - [](./doc/doc_ch/training.md) - [](./doc/doc_ch/detection.md) - [](./doc/doc_ch/recognition.md) - [](./doc/doc_ch/angle_class.md) - - [](./deploy/slim/quantization/README.md) - [](./deploy/slim/prune/README.md) - [](./doc/doc_ch/knowledge_distillation.md) - [](./deploy/README_ch.md) - [ Python ](./doc/doc_ch/inference_ppocr.md) - [ C++](./deploy/cpp_infer/readme_ch.md) - [](./deploy/pdserving/README_CN.md) - [](./deploy/lite/readme.md) - [Paddle2ONNX ](./deploy/paddle2onnx/readme.md) - [](./deploy/paddlecloud/README.md) - [Benchmark](./doc/doc_ch/benchmark.md) - [PP-Structure ](./ppstructure/README_ch.md) - [](./ppstructure/docs/quickstart.md) - [](./ppstructure/docs/models_list.md) - [](./doc/doc_ch/training.md) - [](./ppstructure/layout/README_ch.md) - [](./ppstructure/table/README_ch.md) - [](./ppstructure/kie/README_ch.md) - [](./deploy/README_ch.md) - [ Python ](./ppstructure/docs/inference.md) - [ C++](./deploy/cpp_infer/readme_ch.md) - [](./deploy/hubserving/readme.md) - [](./doc/doc_ch/algorithm_overview.md) - [](./doc/doc_ch/algorithm_overview.md) - [](./doc/doc_ch/algorithm_overview.md) - [ OCR ](./doc/doc_ch/algorithm_overview.md) - [](./doc/doc_ch/algorithm_overview.md) - [](./doc/doc_ch/algorithm_overview.md) - [ PaddleOCR ](./doc/doc_ch/add_new_algorithm.md) - [](./applications) - - [ PPOCRLabel]( - [ Style-Text]( - [](./doc/doc_ch/data_annotation.md) - [](./doc/doc_ch/data_synthesis.md) - - [ OCR ](doc/doc_ch/dataset/datasets.md) - [ OCR ](doc/doc_ch/dataset/handwritten_datasets.md) - [ OCR ](doc/doc_ch/dataset/vertical_and_multilingual_datasets.md) - [](doc/doc_ch/dataset/layout_datasets.md) - [](doc/doc_ch/dataset/table_datasets.md) - [](doc/doc_ch/dataset/kie_datasets.md) - [](./doc/doc_ch/tree.md) - [](#) - [ OCR](./doc/doc_ch/ocr_book.md) - [](#) - FAQ - [](./doc/doc_ch/FAQ.md) - [PaddleOCR ](./doc/doc_ch/FAQ.md) - [](./doc/doc_ch/reference.md) - [](#) ## [more](./doc/doc_ch/visualization.md) PP-OCRv3 PP-OCRv3 PP-OCRv3 PP-Structure - + - SER - RE ## Apache 2.0 license","7.3k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, contributor, triaged, bug, needs investigation, good first issue, Code PR is needed, training, language requests, PPOCRLabel, status/close, stale, software compatibility, help wanted, community, testbot, memory leak, inference, apple silicon, needs reproduction, need more info, expneeded, documentation, detection, cuda related, PR is welcome, question, ppstructure, intel related, install, inference and deployment"
ailearning,apachecn/ailearning,38300,"['Python', 'JavaScript', 'CSS']","['fp-growth', 'apriori', 'mahchine-leaning', 'naivebayes', 'svm']","AI learning > [CC BY-NC-SA 4.0]( > > Stewart Brand * []( * [v1]( * [QuantLearning]( * [ApacheCN 713436582]( * [ApacheCN ]( * : () # * : 1 => 2 => 3 * - : > * : * : * : * NLP: * **AI**: ## 1. - > | Version | Supported | | ------- | ------------------ | | 3.6.x | :x: | | 2.7.x | :white_check_mark: | : - : python 2.7.x 3.6.x ### * : Machine Learning in Action(-) * : * : * : * : * : * : * : bilibili / Acfun / * -- []( []( * -- []( ### | | | | (GitHub) | QQ | | --- | --- | --- | --- | --- | | | [ 1 : ](/docs/ml/1.md) | | [@]( | 1306014226 | | | [ 2 : KNN ](/docs/ml/2.md) | | [@]( | 279393323 | | | [ 3 : ](/docs/ml/3.md) | | [@]( | 844300439 | | | [ 4 : ](/docs/ml/4.md) | | [@wnma3mz]( | 1003324213244970749 | | | [ 5 : Logistic](/docs/ml/5.md) | | [@]( | 529925688 | | | [ 6 : SVM ](/docs/ml/6.md) | | [@]( | 934969547 | | | [ 7 : AdaBoost](/docs/ml/7.md) | | [@]( | 529815144 | | | [ 8 : ](/docs/ml/8.md) | | [@]( | 529925688 | | | [ 9 : ](/docs/ml/9.md) | | [@]( | 529925688 | | | [ 10 : K-Means ](/docs/ml/10.md) | | [@]( | 827106588 | | | [ 11 : Apriori ](/docs/ml/11.md) | | [@]( | 1049498972 | | | [ 12 : FP-growth ](/docs/ml/12.md) | | [@]( | 842725815 | | | [ 13 : PCA ](/docs/ml/13.md) | | [@]( | 835670618 | | | [ 14 : SVD ](/docs/ml/14.md) | | [@]( | 714974242 | | | [ 15 : MapReduce](/docs/ml/15.md) | | [@wnma3mz]( | 1003324213 | | Ml | [ 16 : ](/docs/ml/16.md) | | []( | | | | [2017-04-08: ](/docs/report/2017-04-08.md) | | | 529815144 | ### > [--]( X Andrew Ng Andrew Ng 10: 7+ : Python ""+"" ""+"" TM TM : Coding GitHub 300 star200 ++ """" [MachineLearning() ]( > 1. - Andrew Ng Ng 2. - [-]( 3. - [-]( - > - * [@]() : - | | | | | - | - | - | | [()]( | [()]( [()]( > - ApacheCN ||| | - | - | | AcFun | B | | | | | | | | | | > / - | | | | - | - | | []( | []( | ## 2. > | Version | Supported | | ------- | ------------------ | | 3.6.x | :white_check_mark: | | 2.7.x | :x: | ### 1. [](/docs/dl/.md): 2. [CNN](/docs/dl/CNN.md): 3. [RNN](/docs/dl/RNN.md): 4. [LSTM](/docs/dl/LSTM.md): ### Pytorch - -- ### TensorFlow 2.0 - -- > : * [](/docs/TensorFlow2.x/.md) * [Keras ](/docs/TensorFlow2.x/Keras.md) * [ 1 ](/docs/TensorFlow2.x/_1_.md) * [ 2 ](/docs/TensorFlow2.x/_2_.md) * [ 3 ](/docs/TensorFlow2.x/_3__.md) * [ 4 ](/docs/TensorFlow2.x/_4_.md) WordNet stemminglemmatization * TensorFlow 2.0 * ## 3. > | Version | Supported | | ------- | ------------------ | | 3.6.x | :white_check_mark: | | 2.7.x | :x: | - ```python NLP: 1. : 1) : PPT 2: nlp: python 2. : 1) GitHub 2 3. 1: tensorflow/pytorch ++ 2) : MXNetMXNet( & Google: Demo ``` * ****: * **: PyTorch **: * Python : * [liuhuanyong]( * - : * * * * * * * ### 1. > * 1.) [](/docs/nlp/1..md) > * 2.) [](/nlp/2..md) > * 3.1.) [-](/docs/nlp/3.1.-.md) * 3.2.) [-](/docs/nlp/3.2.-.md) * 3.3.) [-](/docs/nlp/3.3.-.md) * 3.4.) [-](/docs/nlp/3.4.-.md) > UNIT- * 4.) [UNIT-](/docs/nlp/4.UNIT-.md) ### #### : * DAG * DAG * SBME HMM + Viterbi #### 1.Text Classification 1. [Newswire]( 2. [IMDB]( 3. []( : []( > : * (0.86): WordCount + Bayes * (0.94): LDA + knn///svm/xgboost/ * a) * b) 200 topic * (0.72): word2vec + CNN * : (: **AUC ** #### 2.Language Modeling 1. []( 2. ; : []( [10]( > * * python3 * > * : * : word2vec + Bi-GRU > * bi-gram + levenshtein #### 3.Image Captioning mage 1. [COCO]( 2. [Flickr 8K]( 3. [Flickr 30K]( : [2016]( #### 4.Machine Translation 1. [36]( 2. [1996-2011]( ; : []( > * Encoder + Decoder(Attention) * : #### 5.Question Answering 1. [SQuAD]( 2. [Deepmind]( 3. []( : [: QuoraYahoo AnswersStack Overflow]( #### 6.Speech Recognition 1. [TIMIT - ]( 2. [VoxForge]( 3. [LibriSpeech ASR]( #### 7.Document Summarization 1. []( 2. [TIPSTER]( 3. [AQUAINT]( : [DUC]( []( > * Bi-LSTM CRF * : * CRF: > * **** * word2vec + textrank * word2vec: * textrank: ## Graph * : [ * : spark graphX.pdf ## * [SimmerChan]( [-AI]( * ### 1. []( 2. [: ]( 3. []( 4. [NLP]( 5. [NLTK]( 6. [DL4J]( 7. [NLP]( 8. : ## * []( * [pbharrin/machinelearninginaction]( * [ML Mastery]( ## : * []( * []( ##","11.3k, Code, Issues, Pull requests, Discussions, Actions, Projects, Security, Insights, wontfix, question, invalid, help wanted, enhancement, e79ee71fb22b96d4b237e581351a71fe, e59c5b9ee5c8b308272bf227685dbdaa, duplicate, cc1b7ee73a7a74b956648cb82d672c1e, bug, bac84cada5fb3f90885595c5f01627d1, Gitalk, 6526086e3d54f117e599d517310780f8, 141100bbd6be8de534f02c07273483b2, 6666cd76f96956469e7be39d750cc7d9, 775a673dd47495cddab3caa7d89f0ae9, 679ec82e812919d2912f4dc95337167c, 624f40d473339970669b2dd39a2f168b, 531eb6cec5289b6b526facbb8afffc8a, 162d4b1d1067f1f6264103c55a777526, 15ffafa1fb605f895ec68fafb4757d58, 8b7cae4be66488072e76e94d37430d62, 7de09eb183e1224f3bcc26a0b7225773, 06f1c3384260e8689a55934797da25c8, 6ea30aa8eb569643a45607c148e6800a, 6dcf30355fb5aca8bd5834a73b510561, 1f7ce4d4e67139b51b23831635315611, 1d4f75341fd102d6f9b5440b5164dd44"
ColossalAI,hpcaitech/ColossalAI,38076,"['Python', 'Cuda', 'HTML']","['deep-learning', 'hpc', 'large-scale', 'data-parallelism', 'pipeline-parallelism']","# Colossal-AI []( Colossal-AI: Making large AI models cheaper, faster, and more accessible Paper | Documentation | Examples | Forum | Blog []( []( []( []( []( []( []( | [English](README.md) | [](docs/README-zh-Hans.md) | ## Latest News * [2024/05] [Large AI Models Inference Speed Doubled, Colossal-Inference Open Source Release]( * [2024/04] [Open-Sora Unveils Major Upgrade: Embracing Open Source with Single-Shot 16-Second Video Generation and 720p Resolution]( * [2024/04] [Most cost-effective solutions for inference, fine-tuning and pretraining, tailored to LLaMA3 series]( * [2024/03] [314 Billion Parameter Grok-1 Inference Accelerated by 3.8x, Efficient and Easy-to-Use PyTorch+HuggingFace version is Here]( * [2024/03] [Open-Sora: Revealing Complete Model Parameters, Training Details, and Everything for Sora-like Video Generation Models]( * [2024/03] [Open-SoraSora Replication Solution with 46% Cost Reduction, Sequence Expansion to Nearly a Million]( * [2024/01] [Inference Performance Improved by 46%, Open Source Solution Breaks the Length Limit of LLM for Multi-Round Conversations]( * [2024/01] [Construct Refined 13B Private Model With Just $5000 USD, Upgraded Colossal-AI Llama-2 Open Source]( * [2023/11] [Enhanced MoE Parallelism, Open-source MoE Model Training Can Be 9 Times More Efficient]( * [2023/09] [One Half-Day of Training Using a Few Hundred Dollars Yields Similar Results to Mainstream Large Models, Open-Source and Commercial-Free Domain-Specific LLM Solution]( * [2023/09] [70 Billion Parameter LLaMA2 Model Training Accelerated by 195%]( * [2023/07] [HPC-AI Tech Raises 22 Million USD in Series A Funding]( ## Table of Contents Why Colossal-AI Features Colossal-AI for Real World Applications Open-Sora: Revealing Complete Model Parameters, Training Details, and Everything for Sora-like Video Generation Models Colossal-LLaMA-2: One Half-Day of Training Using a Few Hundred Dollars Yields Similar Results to Mainstream Large Models, Open-Source and Commercial-Free Domain-Specific Llm Solution ColossalChat: An Open-Source Solution for Cloning ChatGPT With a Complete RLHF Pipeline AIGC: Acceleration of Stable Diffusion Biomedicine: Acceleration of AlphaFold Protein Structure Parallel Training Demo LLaMA 1/2/3 MoE GPT-3 GPT-2 BERT PaLM OPT ViT Recommendation System Models Single GPU Training Demo GPT-2 PaLM Inference Colossal-Inference: Large AI Models Inference Speed Doubled Grok-1: 314B model of PyTorch + HuggingFace Inference SwiftInfer:Breaks the Length Limit of LLM for Multi-Round Conversations with 46% Acceleration Installation PyPI Install From Source Use Docker Community Contributing Cite Us ## Why Colossal-AI Prof. James Demmel (UC Berkeley): Colossal-AI makes training AI models efficient, easy, and scalable. (back to top) ## Features Colossal-AI provides a collection of parallel components for you. We aim to support you to write your distributed deep learning models just like how you write your model on your laptop. We provide user-friendly tools to kickstart distributed training and inference in a few lines. - Parallelism strategies - Data Parallelism - Pipeline Parallelism - 1D, [2D]( [2.5D]( [3D]( Tensor Parallelism - [Sequence Parallelism]( - [Zero Redundancy Optimizer (ZeRO)]( - [Auto-Parallelism]( - Heterogeneous Memory Management - [PatrickStar]( - Friendly Usage - Parallelism based on the configuration file (back to top) ## Colossal-AI in the Real World ### Open-Sora [Open-Sora]( Complete Model Parameters, Training Details, and Everything for Sora-like Video Generation Models [[code]]( [[blog]]( [[HuggingFace model weights]]( [[Demo]]( (back to top) ### Colossal-LLaMA-2 - 7B: One half-day of training using a few hundred dollars yields similar results to mainstream large models, open-source and commercial-free domain-specific LLM solution. [[code]]( [[blog]]( [[HuggingFace model weights]]( [[Modelscope model weights]]( - 13B: Construct refined 13B private model with just $5000 USD. [[code]]( [[blog]]( [[HuggingFace model weights]]( [[Modelscope model weights]]( | Model | Backbone | Tokens Consumed | MMLU (5-shot) | CMMLU (5-shot)| AGIEval (5-shot) | GAOKAO (0-shot) | CEval (5-shot) | | :-----------------------------: | :--------: | :-------------: | :------------------: | :-----------: | :--------------: | :-------------: | :-------------: | | Baichuan-7B | - | 1.2T | 42.32 (42.30) | 44.53 (44.02) | 38.72 | 36.74 | 42.80 | | Baichuan-13B-Base | - | 1.4T | 50.51 (51.60) | 55.73 (55.30) | 47.20 | 51.41 | 53.60 | | Baichuan2-7B-Base | - | 2.6T | 46.97 (54.16) | 57.67 (57.07) | 45.76 | 52.60 | 54.00 | | Baichuan2-13B-Base | - | 2.6T | 54.84 (59.17) | 62.62 (61.97) | 52.08 | 58.25 | 58.10 | | ChatGLM-6B | - | 1.0T | 39.67 (40.63) | 41.17 (-) | 40.10 | 36.53 | 38.90 | | ChatGLM2-6B | - | 1.4T | 44.74 (45.46) | 49.40 (-) | 46.36 | 45.49 | 51.70 | | InternLM-7B | - | 1.6T | 46.70 (51.00) | 52.00 (-) | 44.77 | 61.64 | 52.80 | | Qwen-7B | - | 2.2T | 54.29 (56.70) | 56.03 (58.80) | 52.47 | 56.42 | 59.60 | | Llama-2-7B | - | 2.0T | 44.47 (45.30) | 32.97 (-) | 32.60 | 25.46 | - | | Linly-AI/Chinese-LLaMA-2-7B-hf | Llama-2-7B | 1.0T | 37.43 | 29.92 | 32.00 | 27.57 | - | | wenge-research/yayi-7b-llama2 | Llama-2-7B | - | 38.56 | 31.52 | 30.99 | 25.95 | - | | ziqingyang/chinese-llama-2-7b | Llama-2-7B | - | 33.86 | 34.69 | 34.52 | 25.18 | 34.2 | | TigerResearch/tigerbot-7b-base | Llama-2-7B | 0.3T | 43.73 | 42.04 | 37.64 | 30.61 | - | | LinkSoul/Chinese-Llama-2-7b | Llama-2-7B | - | 48.41 | 38.31 | 38.45 | 27.72 | - | | FlagAlpha/Atom-7B | Llama-2-7B | 0.1T | 49.96 | 41.10 | 39.83 | 33.00 | - | | IDEA-CCNL/Ziya-LLaMA-13B-v1.1 | Llama-13B | 0.11T | 50.25 | 40.99 | 40.04 | 30.54 | - | | **Colossal-LLaMA-2-7b-base** | Llama-2-7B | **0.0085T** | 53.06 | 49.89 | 51.48 | 58.82 | 50.2 | | **Colossal-LLaMA-2-13b-base** | Llama-2-13B | **0.025T** | 56.42 | 61.80 | 54.69 | 69.53 | 60.3 | ### ColossalChat [ColossalChat]( An open-source solution for cloning [ChatGPT]( with a complete RLHF pipeline. [[code]]( [[blog]]( [[demo]]( [[tutorial]]( - Up to 10 times faster for RLHF PPO Stage3 Training - Up to 7.73 times faster for single server training and 1.42 times faster for single-GPU inference - Up to 10.3x growth in model capacity on one GPU - A mini demo training process requires only 1.62GB of GPU memory (any consumer-grade GPU) - Increase the capacity of the fine-tuning model by up to 3.7 times on a single GPU - Keep at a sufficiently high running speed (back to top) ### AIGC Acceleration of AIGC (AI-Generated Content) models such as [Stable Diffusion v1]( and [Stable Diffusion v2]( - [Training]( Reduce Stable Diffusion memory consumption by up to 5.6x and hardware cost by up to 46x (from A100 to RTX3060). - [DreamBooth Fine-tuning]( Personalize your model using just 3-5 images of the desired subject. - [Inference]( Reduce inference GPU memory consumption by 2.5x. (back to top) ### Biomedicine Acceleration of [AlphaFold Protein Structure]( - [FastFold]( Accelerating training and inference on GPU Clusters, faster data processing, inference sequence containing more than 10000 residues. - [FastFold with Intel]( 3x inference acceleration and 39% cost reduce. - [xTrimoMultimer]( accelerating structure prediction of protein monomers and multimer by 11x. (back to top) ## Parallel Training Demo ### LLaMA3 - 70 billion parameter LLaMA3 model training accelerated by 18% [[code]]( ### LLaMA2 - 70 billion parameter LLaMA2 model training accelerated by 195% [[code]]( [[blog]]( ### LLaMA1 - 65-billion-parameter large model pretraining accelerated by 38% [[code]]( [[blog]]( ### MoE - Enhanced MoE parallelism, Open-source MoE model training can be 9 times more efficient [[code]]( [[blog]]( ### GPT-3 - Save 50% GPU resources and 10.7% acceleration ### GPT-2 - 11x lower GPU memory consumption, and superlinear scaling efficiency with Tensor Parallelism - 24x larger model size on the same hardware - over 3x acceleration ### BERT - 2x faster training, or 50% longer sequence length ### PaLM - [PaLM-colossalai]( Scalable implementation of Google's Pathways Language Model ([PaLM]( ### OPT - [Open Pretrained Transformer (OPT)]( a 175-Billion parameter AI language model released by Meta, which stimulates AI programmers to perform various downstream tasks and application deployments because of public pre-trained model weights. - 45% speedup fine-tuning OPT at low cost in lines. [[Example]]( [[Online Serving]]( Please visit our [documentation]( and [examples]( for more details. ### ViT - 14x larger batch size, and 5x faster training for Tensor Parallelism = 64 ### Recommendation System Models - [Cached Embedding]( utilize software cache to train larger embedding tables with a smaller GPU memory budget. (back to top) ## Single GPU Training Demo ### GPT-2 - 20x larger model size on the same hardware - 120x larger model size on the same hardware (RTX 3080) ### PaLM - 34x larger model size on the same hardware (back to top) ## Inference ### Colossal-Inference - Large AI models inference speed doubled, compared to the offline inference performance of vLLM in some cases. [[code]]( [[blog]]( ### Grok-1 - 314 Billion Parameter Grok-1 Inference Accelerated by 3.8x, an easy-to-use Python + PyTorch + HuggingFace version for Inference. [[code]]( [[blog]]( [[HuggingFace Grok-1 PyTorch model weights]]( [[ModelScope Grok-1 PyTorch model weights]]( ### SwiftInfer - [SwiftInfer]( Inference performance improved by 46%, open source solution breaks the length limit of LLM for multi-round conversations (back to top) ## Installation Requirements: - PyTorch >= 2.1 - Python >= 3.7 - CUDA >= 11.0 - [NVIDIA GPU Compute Capability]( >= 7.0 (V100/RTX20 and higher) - Linux OS If you encounter any problem with installation, you may want to raise an [issue]( in this repository. ### Install from PyPI You can easily install Colossal-AI with the following command. **By default, we do not build PyTorch extensions during installation.** ```bash pip install colossalai ``` **Note: only Linux is supported for now.** However, if you want to build the PyTorch extensions during installation, you can set `BUILD_EXT=1`. ```bash BUILD_EXT=1 pip install colossalai ``` **Otherwise, CUDA kernels will be built during runtime when you actually need them.** We also keep releasing the nightly version to PyPI every week. This allows you to access the unreleased features and bug fixes in the main branch. Installation can be made via ```bash pip install colossalai-nightly ``` ### Download From Source > The version of Colossal-AI will be in line with the main branch of the repository. Feel free to raise an issue if you encounter any problems. :) ```shell git clone cd ColossalAI # install colossalai pip install . ``` By default, we do not compile CUDA/C++ kernels. ColossalAI will build them during runtime. If you want to install and enable CUDA kernel fusion (compulsory installation when using fused optimizer): ```shell BUILD_EXT=1 pip install . ``` For Users with CUDA 10.2, you can still build ColossalAI from source. However, you need to manually download the cub library and copy it to the corresponding directory. ```bash # clone the repository git clone cd ColossalAI # download the cub library wget unzip 1.8.0.zip cp -r cub-1.8.0/cub/ colossalai/kernel/cuda_native/csrc/kernels/include/ # install BUILD_EXT=1 pip install . ``` (back to top) ## Use Docker ### Pull from DockerHub You can directly pull the docker image from our [DockerHub page]( The image is automatically uploaded upon release. ### Build On Your Own Run the following command to build a docker image from Dockerfile provided. > Building Colossal-AI from scratch requires GPU support, you need to use Nvidia Docker Runtime as the default when doing `docker build`. More details can be found [here]( > We recommend you install Colossal-AI from our [project page]( directly. ```bash cd ColossalAI docker build -t colossalai ./docker ``` Run the following command to start the docker container in interactive mode. ```bash docker run -ti --gpus all --rm --ipc=host colossalai bash ``` (back to top) ## Community Join the Colossal-AI community on [Forum]( [Slack]( and [WeChat()]( ""qrcode"") to share your suggestions, feedback, and questions with our engineering team. ## Contributing Referring to the successful attempts of [BLOOM]( and [Stable Diffusion]( any and all developers and partners with computing powers, datasets, models are welcome to join and build the Colossal-AI community, making efforts towards the era of big AI models! You may contact us or participate in the following ways: 1. [Leaving a Star ]( to show your like and support. Thanks! 2. Posting an [issue]( or submitting a PR on GitHub follow the guideline in [Contributing]( 3. Send your official proposal to email contact@hpcaitech.com Thanks so much to all of our amazing contributors! (back to top) ## CI/CD We leverage the power of [GitHub Actions]( to automate our development, release and deployment workflows. Please check out this [documentation](.github/workflows/README.md) on how the automated workflows are operated. ## Cite Us This project is inspired by some related projects (some by our team and some by other organizations). We would like to credit these amazing projects as listed in the [Reference List](./docs/REFERENCE.md). To cite this project, you can use the following BibTeX citation. ``` @inproceedings{10.1145/3605573.3605613, author = {Li, Shenggui and Liu, Hongxin and Bian, Zhengda and Fang, Jiarui and Huang, Haichen and Liu, Yuliang and Wang, Boxiang and You, Yang}, title = {Colossal-AI: A Unified Deep Learning System For Large-Scale Parallel Training}, year = {2023}, isbn = {9798400708435}, publisher = {Association for Computing Machinery}, address = {New York, NY, USA}, url = { doi = {10.1145/3605573.3605613}, abstract = {The success of Transformer models has pushed the deep learning model scale to billions of parameters, but the memory limitation of a single GPU has led to an urgent need for training on multi-GPU clusters. However, the best practice for choosing the optimal parallel strategy is still lacking, as it requires domain expertise in both deep learning and parallel computing. The Colossal-AI system addressed the above challenge by introducing a unified interface to scale your sequential code of model training to distributed environments. It supports parallel training methods such as data, pipeline, tensor, and sequence parallelism and is integrated with heterogeneous training and zero redundancy optimizer. Compared to the baseline system, Colossal-AI can achieve up to 2.76 times training speedup on large-scale models.}, booktitle = {Proceedings of the 52nd International Conference on Parallel Processing}, pages = {766775}, numpages = {10}, keywords = {datasets, gaze detection, text tagging, neural networks}, location = {Salt Lake City, UT, USA}, series = {ICPP '23} } ``` Colossal-AI has been accepted as official tutorial by top conferences [NeurIPS]( [SC]( [AAAI]( [PPoPP]( [CVPR]( [ISC]( [NVIDIA GTC]( ,etc. (back to top)","4.3k, Code, Issues, Pull requests, Discussions, Actions, Projects, Wiki, Security, Insights, bug, enhancement, documentation, duplicate, tensor-parallel, shardformer, release, colossal-inference, wontfix, welcome contribution, testing, suspended, stale, sequence parallel, question, pipeline-parallel, lazyinit, known issue, invalid, help wanted, good first issue, gemini, example, diffusion, compatibility, colossal-llama2, code reviewing, chatgpt, auto-parallel, DevOps"
