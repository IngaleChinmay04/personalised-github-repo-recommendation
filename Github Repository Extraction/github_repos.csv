name,full_name,stars,forks,languages,topics,readme
awesome-css-frameworks,troxler/awesome-css-frameworks,7421,422,['CSS'],"['css', 'css-framework', 'awesome', 'awesome-list', 'list']","# Awesome CSS Frameworks []( List of awesome CSS frameworks. Feel free to [contribute]( **Supported by [FrontAid CMS]( ## Contents - [Base / Reset / Normalize](#base--reset--normalize) - [Class-less](#class-less) - [Very Lightweight](#very-lightweight) - [General Purpose](#general-purpose) - [Material Design](#material-design) - [Utility-based](#utility-based) - [Specialized](#specialized) - [Toolkits](#toolkits) - [Stalled Development](#stalled-development) ## Base / Reset / Normalize - [**modern-normalize**]( - Normalize browsers' default style. [Repo]( | #CSS - [**ress**]( - Modern CSS reset. [Repo]( | #CSS - [**Natural Selection**]( - Collection of best-practice CSS selectors. | #CSS ## Class-less Frameworks that use semantic HTML and do not rely on classes. - [**MVP.css**]( - Minimalist stylesheet for HTML elements. [Docs]( [Repo]( | #CSS - [**sakura**]( - Minimal classless CSS framework/theme. [Demo]( [Repo]( | #SCSS - [**Simple.css**]( - Lightweight, classless CSS framework. [Demo]( [Docs]( [Repo]( | #CSS - [**Tacit**]( - CSS framework for dummies, without classes. [Repo]( | #SCSS ## Very Lightweight Frameworks that are smaller than ~5KB. - [**Pure**]( - Set of small, responsive CSS modules that you can use in every web project. [Demo]( [Docs]( [Repo]( | #CSS - [**Picnic CSS**]( - Lightweight and beautiful library. [Demo]( [Docs]( [Repo]( | #SCSS - [**Chota**]( - Really small CSS framework. [Demo]( [Docs]( [Repo]( | #CSS ## General Purpose - [**Bootstrap**]( - The most popular HTML, CSS, and JavaScript framework for developing responsive, mobile first projects on the web. [Demo]( [Docs]( [Repo]( | #SCSS - [**Bulma**]( - Modern CSS framework based on Flexbox. [Demo]( [Docs]( [Repo]( | #Sass - [**Foundation**]( - The most advanced responsive front-end framework in the world. [Demo]( [Docs]( [Repo]( | #SCSS - [**UIkit**]( - Lightweight and modular front-end framework for developing fast and powerful web interfaces. [Demo]( [Docs]( [Repo]( | #LESS #SCSS - [**Primer**]( - CSS framework that powers GitHub's front-end design. [Docs]( [Repo]( | #SCSS - [**Pico.css**]( - Elegant styles for all native HTML elements, dark mode automatically enabled. [Demo]( [Docs]( [Repo]( | #SCSS - [**Carbon Components**]( - Component library behind IBM's Carbon Design System. [Docs]( [Repo]( | #SCSS - [**Fomantic-UI**]( - Build beautiful websites fast, with concise HTML, intuitive javascript, and simplified debugging. [Docs]( [Repo]( | #LESS - [**Blaze UI**]( - Open source modular toolkit providing great structure for building websites quickly with a scalable and maintainable foundation. [Demo]( [Docs]( [Repo]( | #SCSS - [**Cirrus**]( - Component and utility centric SCSS framework designed for rapid prototyping. [Demo]( [Docs]( [Repo]( | #CSS - [**Vanilla Framework**]( - Simple, extensible CSS framework. Written by the Canonical Web Team. [Demo]( [Docs]( [Repo]( | #SCSS - [**PatternFly**]( - UI framework for enterprise web applications. [Demo]( [Docs]( [Repo]( | #SCSS #LESS - [**Stacks**]( - UI components used by Stack Overflow. [Docs]( [Repo]( | #LESS - [**HiQ**]( - Simple CSS foundation with responsive typography and input styling. [Docs]( [Repo]( | #PostCSS ## Material Design - [**Material Components Web**]( - Modular and customizable Material Design UI components for the web. [Demo]( [Docs]( [Repo]( | #SCSS - [**Beer CSS**]( - Build material design interfaces in record time without stress for devs. [Repo]( | #CSS - [**Materialize**]( - Responsive front-end library based on Google's Material Design. [Docs]( [Repo]( | #SCSS ## Utility-based - [**Tailwind CSS**]( - Utility-first CSS framework for rapid UI development. [Docs]( [Repo]( | #CSS - [**Open Props**]( - CSS custom properties to help accelerate adaptive and consistent design. [Demo]( [Docs]( [Repo]( | #CSS #PostCSS ## Specialized - [**NES.css**]( - NES-style CSS Framework. [Demo]( [Docs]( [Repo]( | #SCSS - [**98.css**]( - CSS library for building interfaces that look like Windows 98. [Repo]( | #CSS - [**Tufte CSS**]( - Style your webpage like Edward Tuftes handouts. [Repo]( | #CSS - [**Gutenberg**]( - Modern framework to print the web correctly. [Demo]( [Docs]( | #SCSS - [**XP.css**]( - CSS library for building interfaces that look like Windows XP. [Repo]( | #PostCSS - [**TuiCss**]( - Library to create MS-DOS interfaces. [Demo]( [Docs]( | #SCSS - [**7.css**]( - CSS library for building interfaces that look like Windows 7. [Repo]( | #PostCSS - [**Bojler**]( - Email framework for developing responsive and lightweight email templates. [Docs]( [Repo]( | #SCSS ## Toolkits Toolkits are closer to a library than to a framework. They do not provide actual styling but utilities (e.g. mixins) that you can use in your CSS preprocessor. - [**Bourbon**]( - Lightweight Sass tool set. [Docs]( [Repo]( | #SCSS ## Stalled Development Frameworks that have not seen any real development for more than about one year or officially have been deprecated. We are keeping them here for reference/inspiration and hope for a revival. Show Section - [**Semantic UI**]( - User interface is the language of the web. [Docs]( [Repo]( | #LESS - [**Materialize**]( - CSS framework based on material design. [Demo]( [Docs]( [Repo]( | #SCSS - [**Spectre.css**]( - Lightweight, responsive and modern CSS framework. [Docs]( [Repo]( | #SCSS - [**Tachyons**]( - Quickly build and design new UI without writing CSS. [Demo]( [Docs]( [Repo]( | #CSS - [**Milligram**]( - Minimalist CSS framework. [Demo]( [Docs]( [Repo]( | #Sass - [**Water.css**]( - Just-add-CSS collection of styles to make simple websites just a little nicer. [Repo]( | #CSS - [**Basscss**]( - Low-level CSS toolkit. [Repo]( - [**sanitize.css**]( - The best-practices CSS foundation. [Repo]( | #CSS - [**MUI**]( - Lightweight CSS framework that follows Google's Material Design guidelines. [Docs]( [Repo]( | #SCSS - [**modern-css-reset**]( - Tiny little reset that you can use as the basis of your CSS projects. [Repo]( | #CSS - [**minireset.css**]( - Tiny modern CSS reset. [Repo]( | #Sass - [**CSS Remedy**]( - Start your project with a remedy for the technical debt of CSS. | #CSS - [**inuitcss**]( - Extensible, scalable, Sass-based, OOCSS framework for large and long-lasting UI projects. [Repo]( | #SCSS - [**Cutestrap**]( - Sassy, opinionated CSS framework, a tiny alternative to Bootstrap. [Repo]( - [**unsemantic**]( - Fluid grid for mobile, tablet, and desktop. [Demo]( [Docs]( [Repo]( - [**Base**]( - Rock solid, responsive HTML/CSS framework. [Docs]( [Repo]( | #SCSS #LESS - [**Propeller**]( - Front-end responsive framework based on Google's Material Design standards & Bootstrap. [Docs]( [Repo]( | #SCSS - [**Concise CSS**]( - Give up the bloat. Stop tripping over your classes. Be concise. [Docs]( [Repo]( | #SCSS - [**Responsive Boilerplate**]( - Powerful, accessible, developer friendly framework for building responsive websites. [Docs]( [Repo]( | #SCSS - [**turretcss**]( - Responsive front-end framework for accessible and semantic websites. [Demo]( [Docs]( [Repo]( | #CSS - [**Centurion**]( - Web-based framework for rapid prototyping and building larger web projects. [Docs]( [Repo]( --- ## License License [CC0 1.0]( > You can copy, modify, distribute and perform the work, even for commercial purposes, all without asking permission. Images of GitHub stars are provided by [Shields]("
icheck,drgullin/icheck,7391,1629,"['CSS', 'HTML', 'JavaScript']",[],"# [iCheck plugin]( [1.0.3](#october-10-2020) #### Highly customizable checkboxes and radio buttons for jQuery and Zepto. Refer to the [iCheck website]( for examples. **Note: [iCheck v2.0]( is on the way**, it got a huge performance boost, many new options and methods. It's in a release candidate state, so you may try to use it. Feel free to submit an issue if you find something not working. Features -------- * **Identical inputs across different browsers and devices** both [desktop and mobile](#browser-support) * **Touch devices support** iOS, Android, BlackBerry, Windows Phone, Amazon Kindle * **Keyboard accessible inputs** `Tab`, `Spacebar`, `Arrow up/down` and other shortcuts * **Customization freedom** use any HTML and CSS to style inputs (try [6 Retina-ready skins]( * **jQuery and Zepto** JavaScript libraries support from single file * **Screenreader accessible inputs** [ARIA]( attributes for VoiceOver and others * **Lightweight size** 1 kb gzipped ----- * [32 options](#options) to customize checkboxes and radio buttons * [11 callbacks](#callbacks) to handle changes * [9 methods](#methods) to make changes programmatically * Saves changes to original inputs, [works carefully](#initialize) with any selectors How it works ------------ iCheck works with checkboxes and radio buttons like a constructor. **It wraps each input with a div**, which may be customized by you or using one of the [available skins]( You may also place inside that div some HTML code or text using `insert` option. For this HTML: ```html Foo Bar Bar ``` With default options you'll get nearly this: ```html Foo Bar Bar ``` **By default, iCheck doesn't provide any CSS styles for wrapper divs** (if you don't use [skins]( Options ------- These options are default: ```js { // 'checkbox' or 'radio' to style only checkboxes or radio buttons, both by default handle: '', // base class added to customized checkboxes checkboxClass: 'icheckbox', // base class added to customized radio buttons radioClass: 'iradio', // class added on checked state (input.checked = true) checkedClass: 'checked', // if not empty, used instead of 'checkedClass' option (input type specific) checkedCheckboxClass: '', checkedRadioClass: '', // if not empty, added as class name on unchecked state (input.checked = false) uncheckedClass: '', // if not empty, used instead of 'uncheckedClass' option (input type specific) uncheckedCheckboxClass: '', uncheckedRadioClass: '', // class added on disabled state (input.disabled = true) disabledClass: 'disabled', // if not empty, used instead of 'disabledClass' option (input type specific) disabledCheckboxClass: '', disabledRadioClass: '', // if not empty, added as class name on enabled state (input.disabled = false) enabledClass: '', // if not empty, used instead of 'enabledClass' option (input type specific) enabledCheckboxClass: '', enabledRadioClass: '', // class added on indeterminate state (input.indeterminate = true) indeterminateClass: 'indeterminate', // if not empty, used instead of 'indeterminateClass' option (input type specific) indeterminateCheckboxClass: '', indeterminateRadioClass: '', // if not empty, added as class name on determinate state (input.indeterminate = false) determinateClass: '', // if not empty, used instead of 'determinateClass' option (input type specific) determinateCheckboxClass: '', determinateRadioClass: '', // class added on hover state (pointer is moved onto input) hoverClass: 'hover', // class added on focus state (input has gained focus) focusClass: 'focus', // class added on active state (mouse button is pressed on input) activeClass: 'active', // adds hoverClass to customized input on label hover and labelHoverClass to label on input hover labelHover: true, // class added to label if labelHover set to true labelHoverClass: 'hover', // increase clickable area by given % (negative number to decrease) increaseArea: '', // true to set 'pointer' CSS cursor over enabled inputs and 'default' over disabled cursor: false, // set true to inherit original input's class name inheritClass: false, // if set to true, input's id is prefixed with 'iCheck-' and attached inheritID: false, // set true to activate ARIA support aria: false, // add HTML code or text inside customized input insert: '' } ``` There's no need to copy and paste all of them, you can just mention the ones you need: ```js $('input').iCheck({ labelHover: false, cursor: true }); ``` You can choose any class names and style them as you want. Initialize ---------- Just include `icheck.js` after [jQuery v1.7+]( (or [Zepto]( [polyfill, event, data]). iCheck supports any selectors, but handles only checkboxes and radio buttons: ```js // customize all inputs (will search for checkboxes and radio buttons) $('input').iCheck(); // handle inputs only inside $('.block') $('.block input').iCheck(); // handle only checkboxes inside $('.test') $('.test input').iCheck({ handle: 'checkbox' }); // handle .vote class elements (will search inside the element, if it's not an input) $('.vote').iCheck(); // you can also change options after inputs are customized $('input.some').iCheck({ // different options }); ``` Indeterminate --------- HTML5 allows specifying [indeterminate]( (""partially"" checked) state for checkboxes. iCheck supports this for both checkboxes and radio buttons. You can make an input indeterminate through HTML using additional attributes (supported by iCheck). Both do the same job, but `indeterminate=""true""` may not work in some browsers (like IE7): ```html indeterminate=""true"" determinate=""false"" ``` `indeterminate` and `determinate` [methods](#methods) can be used to toggle indeterminate state. Callbacks --------- iCheck provides plenty callbacks, which may be used to handle changes. Callback name When used ifClicked user clicked on a customized input or an assigned label ifChanged input's ""checked"", ""disabled"" or ""indeterminate"" state is changed ifChecked input's state is changed to ""checked"" ifUnchecked ""checked"" state is removed ifToggled input's ""checked"" state is changed ifDisabled input's state is changed to ""disabled"" ifEnabled ""disabled"" state is removed ifIndeterminate input's state is changed to ""indeterminate"" ifDeterminate ""indeterminate"" state is removed ifCreated input is just customized ifDestroyed customization is just removed Use `on()` method to bind them to inputs: ```js $('input').on('ifChecked', function(event){ alert(event.type + ' callback'); }); ``` `ifCreated` callback should be binded before plugin init. Methods ------- These methods can be used to make changes programmatically (any selectors can be used): ```js // change input's state to 'checked' $('input').iCheck('check'); // remove 'checked' state $('input').iCheck('uncheck'); // toggle 'checked' state $('input').iCheck('toggle'); // change input's state to 'disabled' $('input').iCheck('disable'); // remove 'disabled' state $('input').iCheck('enable'); // change input's state to 'indeterminate' $('input').iCheck('indeterminate'); // remove 'indeterminate' state $('input').iCheck('determinate'); // apply input changes, which were done outside the plugin $('input').iCheck('update'); // remove all traces of iCheck $('input').iCheck('destroy'); ``` You may also specify some function, that will be executed on each method call: ```js $('input').iCheck('check', function(){ alert('Well done, Sir'); }); ``` Feel free to fork and submit pull-request or submit an issue if you find something not working. Comparison ---------- iCheck is created to avoid routine of reinventing the wheel when working with checkboxes and radio buttons. It provides an expected identical result for the huge number of browsers, devices and their versions. Callbacks and methods can be used to easily handle and make changes at customized inputs. There are some CSS3 ways available to style checkboxes and radio buttons, like [this one]( You have to know about some of the disadvantages of similar methods: * inputs are keyboard inaccessible, since `display: none` or `visibility: hidden` used to hide them * poor browser support * multiple bugs on mobile devices * tricky, harder to maintain CSS code * JavaScript is still needed to fix specific issues While CSS3 method is quite limited solution, iCheck is made to be an everyday replacement covering most of the tasks. Browser support --------------- iCheck is verified to work in Internet Explorer 6+, Firefox 2+, Opera 9+, Google Chrome and Safari browsers. Should also work in many others. Mobile browsers (like Opera mini, Chrome mobile, Safari mobile, Android browser, Silk and others) are also supported. Tested on iOS (iPad, iPhone, iPod), Android, BlackBerry and Windows Phone devices. Changelog --------------- ## October 10, 2020 * iOS 13 support @markusbroman * Reformatted changelog @lasseeee * Fire change event when toggled @rafatmyo ### March 03, 2014 * Better HiDPI screens support @ddctd143 ### January 23, 2014 ([v2.0 release candidate]( * Three ways to set an options: global object (`window.icheck`), data attributes (`<input data-checkedClass=""checked""`) and direct JavaScript object (`$(input).icheck({ options })`) * Huge performance boost (takes less than 1s to customize 1000 inputs) * Minimized number of function calls (some slow jQuery functions are replaced with a faster vanilla alternatives without using any dependencies) * AMD module definition support (both for jQuery and Zepto) * Unblocked native events - iCheck 2.x doesn't stop your newly or past binded events from being processed * Pointer events support - full support for phones and tablets that use Windows OS (such as Lumia, HP tablets, desktops with a touch screen, etc) * WebOS and Firefox OS support * New methods: `$(input).icheck('data')` to get all the options were used for customization (also stores a current states values - `checked`, `disabled` and `indeterminate`), `$('input').icheck('styler')` to get a wrapper div (that's used for customization) * Better handling of the `indeterminate`... [TRUNCATED]"
json-api,json-api/json-api,7330,830,"['CSS', 'JavaScript', 'HTML']",[],JSON:API ======== Documentation for the [application/vnd.api+json media type]( a specification for APIs that use JSON. This repository is the source code for [ Resources --------- * IRC channel: #jsonapi on freenode.net * Twitter: @jsonapi * Discourse: [ Status ------ This standard is currently under development. To assist: 1. Get the dependencies: `$ bundle` 1. Host the site locally while editing: `$ bundle exec rake preview:browser` 1. Edit the Markdown files. 1. Commit your changes. 1. Send a Pull Request when finished. The website is automatically built by [GitHub Pages]( when changes are pushed to the `gh-pages` branch. Archive ------- older versions of the JSON:API documentations * RC3 -
spring-petclinic,spring-projects/spring-petclinic,7306,22681,"['CSS', 'Java', 'HTML']",[],"# Spring PetClinic Sample Application []( []( []( ## Understanding the Spring Petclinic application with a few diagrams [See the presentation here]( ## Run Petclinic locally Spring Petclinic is a [Spring Boot]( application built using [Maven]( or [Gradle]( You can build a jar file and run it from the command line (it should work just as well with Java 17 or newer): ```bash git clone cd spring-petclinic ./mvnw package java -jar target/*.jar ``` You can then access the Petclinic at . Or you can run it from Maven directly using the Spring Boot Maven plugin. If you do this, it will pick up changes that you make in the project immediately (changes to Java source files require a compile as well - most people use an IDE for this): ```bash ./mvnw spring-boot:run ``` > NOTE: If you prefer to use Gradle, you can build the app using `./gradlew build` and look for the jar file in `build/libs`. ## Building a Container There is no `Dockerfile` in this project. You can build a container image (if you have a docker daemon) using the Spring Boot build plugin: ```bash ./mvnw spring-boot:build-image ``` ## In case you find a bug/suggested improvement for Spring Petclinic Our issue tracker is available [here]( ## Database configuration In its default configuration, Petclinic uses an in-memory database (H2) which gets populated at startup with data. The h2 console is exposed at ` and it is possible to inspect the content of the database using the `jdbc:h2:mem:` URL. The UUID is printed at startup to the console. A similar setup is provided for MySQL and PostgreSQL if a persistent database configuration is needed. Note that whenever the database type changes, the app needs to run with a different profile: `spring.profiles.active=mysql` for MySQL or `spring.profiles.active=postgres` for PostgreSQL. You can start MySQL or PostgreSQL locally with whatever installer works for your OS or use docker: ```bash docker run -e MYSQL_USER=petclinic -e MYSQL_PASSWORD=petclinic -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=petclinic -p 3306:3306 mysql:8.4 ``` or ```bash docker run -e POSTGRES_USER=petclinic -e POSTGRES_PASSWORD=petclinic -e POSTGRES_DB=petclinic -p 5432:5432 postgres:16.3 ``` Further documentation is provided for [MySQL]( and [PostgreSQL]( Instead of vanilla `docker` you can also use the provided `docker-compose.yml` file to start the database containers. Each one has a profile just like the Spring profile: ```bash docker-compose --profile mysql up ``` or ```bash docker-compose --profile postgres up ``` ## Test Applications At development time we recommend you use the test applications set up as `main()` methods in `PetClinicIntegrationTests` (using the default H2 database and also adding Spring Boot Devtools), `MySqlTestApplication` and `PostgresIntegrationTests`. These are set up so that you can run the apps in your IDE to get fast feedback and also run the same classes as integration tests against the respective database. The MySql integration tests use Testcontainers to start the database in a Docker container, and the Postgres tests use Docker Compose to do the same thing. ## Compiling the CSS There is a `petclinic.css` in `src/main/resources/static/resources/css`. It was generated from the `petclinic.scss` source, combined with the [Bootstrap]( library. If you make changes to the `scss`, or upgrade Bootstrap, you will need to re-compile the CSS resources using the Maven profile ""css"", i.e. `./mvnw package -P css`. There is no build profile for Gradle to compile the CSS. ## Working with Petclinic in your IDE ### Prerequisites The following items should be installed in your system: - Java 17 or newer (full JDK, not a JRE) - [Git command line tool]( - Your preferred IDE - Eclipse with the m2e plugin. Note: when m2e is available, there is an m2 icon in `Help -> About` dialog. If m2e is not there, follow the install process [here]( - [Spring Tools Suite]( (STS) - [IntelliJ IDEA]( - [VS Code]( ### Steps 1. On the command line run: ```bash git clone ``` 1. Inside Eclipse or STS: Open the project via `File -> Import -> Maven -> Existing Maven project`, then select the root directory of the cloned repo. Then either build on the command line `./mvnw generate-resources` or use the Eclipse launcher (right-click on project and `Run As -> Maven install`) to generate the CSS. Run the application's main method by right-clicking on it and choosing `Run As -> Java Application`. 1. Inside IntelliJ IDEA: In the main menu, choose`File -> Open` and select thePetclinic [pom.xml](pom.xml). Click on the `Open` button. - CSS files are generated from the Maven build. You can build them on the command line `./mvnw generate-resources` or right-click on the `spring-petclinic` project then `Maven -> Generates sources and Update Folders`. - A run configuration named `PetClinicApplication` should have been created for you if you're using a recent Ultimate version. Otherwise, run the application by right-clicking on the `PetClinicApplication` main class and choosing `Run 'PetClinicApplication'`. 1. Navigate to the Petclinic Visit [ in your browser. ## Looking for something in particular? |Spring Boot Configuration | Class or Java property files | |--------------------------|---| |The Main Class | [PetClinicApplication]( | |Properties Files | [application.properties]( | |Caching | [CacheConfiguration]( | ## Interesting Spring Petclinic branches and forks The Spring Petclinic ""main"" branch in the [spring-projects]( GitHub org is the ""canonical"" implementation based on Spring Boot and Thymeleaf. There are [quite a few forks]( in the GitHub org [spring-petclinic]( If you are interested in using a different technology stack to implement the Pet Clinic, please join the community there. ## Interaction with other open-source projects One of the best parts about working on the Spring Petclinic application is that we have the opportunity to work in direct contact with many Open Source projects. We found bugs/suggested improvements on various topics such as Spring, Spring Data, Bean Validation and even Eclipse! In many cases, they've been fixed/implemented in just a few days. Here is a list of them: | Name | Issue | |------|-------| | Spring JDBC: simplify usage of NamedParameterJdbcTemplate | [SPR-10256]( and [SPR-10257]( | | Bean Validation / Hibernate Validator: simplify Maven dependencies and backward compatibility |[HV-790]( and [HV-792]( | | Spring Data: provide more flexibility when working with JPQL queries | [DATAJPA-292]( | ## Contributing The [issue tracker]( is the preferred channel for bug reports, feature requests and submitting pull requests. For pull requests, editor preferences are available in the [editor config](.editorconfig) for easy use in common text editors. Read more and download plugins at . If you have not previously done so, please fill out and submit the [Contributor License Agreement]( ## License The Spring PetClinic sample application is released under version 2.0 of the [Apache License]("
odometer,HubSpot/odometer,7284,710,"['CSS', 'CoffeeScript', 'HTML']",[],Odometer ======== Odometer is a Javascript and CSS library for smoothly transitioning numbers. ### [Overview]( ### [Docs and Demo](
DataTables,DataTables/DataTables,7284,2180,"['CSS', 'JavaScript']",[],"# Legacy repository Please note that this is a **legacy repo** for DataTables. The main source repo [is DataTables/DataTablesSrc]( Our distribution repos (for NPM, Nuget, etc packages) are the `DataTables/Dist-*` repos - e.g. [DataTables/Dist-DataTables]( Each distribution repo has a core Javascript file or styling for DataTables or an extension. Please use our [download builder]( to obtain the files you need, including for NPM, Nuget, CDN and download. # DataTables plug-in for jQuery DataTables is a table enhancing plug-in for the [jQuery](//jquery.com) Javascript library, adding sorting, paging and filtering abilities to plain HTML tables with minimal effort. The stated goal of DataTables is: > To enhance the accessibility of data in HTML tables. To meet this goal, DataTables is developed with two distinct groups of users in mind: * You the developers using DataTables. For developers DataTables provides a wide array of options for how data should be obtained, displayed and acted upon, along with an extensive API for accessing and manipulating the table. * End users. For those using the interface DataTables presents, actions to get the most from the information contained in tables, such as sorting and filtering, along with paging and scrolling of the data in table, are easy to use, intuitive and fast. ## Installing DataTables To use DataTables, the primary way to obtain the software is to use the [DataTables downloader](//datatables.net/download). You can also include the individual files from the [DataTables CDN](//cdn.datatables.net). See the [documentation](//datatables.net/manual/installation) for full details. ### NPM and Bower If you prefer to use a package manager such as NPM or Bower, distribution repositories are available with software built from this repository under the name `datatables.net`. Styling packages for Bootstrap, Foundation and other styling libraries are also available by adding a suffix to the package name. Please see the DataTables [NPM](//datatables.net/download/npm) and [Bower](//datatables.net/download/bower) installation pages for further information. The [DataTables installation manual](//datatables.net/manual/installation) also has details on how to use package managers with DataTables. ## Usage In its simplest case, DataTables can be initialised with a single line of Javascript: ```js $('table').dataTable(); ``` where the jQuery selector is used to obtain a reference to the table you want to enhance with DataTables. Optional configuration parameters can be passed in to DataTables to have it perform certain actions by using a configuration object as the parameter passed in to the DataTables constructor. For example: ```js $('table').dataTable( { paginate: false, scrollY: 300 } ); ``` will disable paging and enable scrolling. A full list of the options available for DataTables are available in the [documentation](//datatables.net). ## Documentation Full documentation of the DataTables options, API and plug-in interface are available on the [DataTables web-site](//datatables.net). The site also contains information on the wide variety of plug-ins that are available for DataTables, which can be used to enhance and customise your table even further. ## Support Support for DataTables is available through the [DataTables forums](//datatables.net/forums) and [commercial support options](//datatables.net/support) are available. ## License DataTables is release under the [MIT license](//datatables.net/license). You are free to use, modify and distribute this software, as long as the copyright header is left intact (specifically the comment block which starts with `/*!`)."
css-loaders,lukehaas/css-loaders,7041,1043,"['CSS', 'Less', 'SCSS']",[],"# [Single Element CSS Spinners]( This is a collection of loading spinners animated with CSS. Each spinner consists of a single `div` with a class of `loader` and content text of ""Loading..."". The text is for screen readers and can be used as a fallback state for older browsers. The aim of this project was to create a set of minimal loading spinners that are visually appealing and also convey their intended meaning. A strict limit of one element per loader (not including pseudo-elements) was placed on this project based on the belief that something as simple as a loader doesn't deserve more. Each loader is given a font size in pixels and all other sizes are in ems so to change the size of a loader, just adjust the font-size. ## Demo []( > [Check it live]( ## Browser Support | | | | --- | --- | --- | --- | --- | IE 10+ | Chrome 4.0+ | Firefox 16.0+ | Opera 15.0+ | Safari 4.0+ | ## Contributing 1. Fork it! 2. Create your feature branch: `git checkout -b my-new-feature` 3. Commit your changes: `git commit -m 'Add some feature'` 4. Push to the branch: `git push origin my-new-feature` 5. Submit a pull request :) ## History For detailed changelog, check [Releases]( ## License [MIT License]( Browser testing via []("
vex,HubSpot/vex,6933,497,"['CSS', 'JavaScript', 'HTML']",[],"## vex ### [Demo]( [Documentation]( vex is a modern dialog library which is highly configurable, easily stylable, and gets out of the way. You'll love vex because it's tiny (`5.6kb` minified and gzipped), has a clear and simple API, works on mobile devices, and can be customized to match your style in seconds. ### Features - Drop-in replacement for `alert`, `confirm`, and `prompt` - Easily configurable animations which are smooth as butter - Lightweight with no external dependencies - Looks and behaves great on mobile devices - Open multiple dialogs at once and close them individually or all at once - Built in CSS spinner for asynchronous dialogs (TODO) - UMD support ### Documentation - [Getting started](/docs/intro.md) - [API Docs](/docs/api/1-Basic.md) - [Plugins](/docs/api/4-Plugins.md) []("
weather-icons,erikflowers/weather-icons,6870,849,"['CSS', 'HTML', 'Less']",[],"# Weather Icons ## 222 Weather Themed Icons and CSS Weather Icons is the only icon font and CSS with 222 weather themed icons, ready to be dropped right into [Bootstrap]( or any project that needs high quality weather, maritime, and meteorological based icons! Get started at [ ## Basic Usage Place the 5 font files and the main `weather-icons.min.css` file in your project, with the assumption that the fonts are located up `../` from your CSS directory. The icons are displayed by using an `i` element and adding the base class `wi` and then the icon class you want, such as `day-sunny`. This then looks like ``. To add a modifier, include the class you want after the icon name, which looks like ``. You can flip, rotate, or add a fixed width. See it all at [ ## API Usage This set includes companion CSS files for popular weather service API. Presently there are mappings for Forecast.io, Open Weather Map, World Meteorological Organization, Weather Underground, and Yahoo. Check the [API List]( to see the class names. ## Wind Usage To use the wind indicators, you must also use `weather-icons-wind.min.css` along with the default CSS file. To display a wind indicator, you must use the base class `wi` and `wi-wind`, and then include the towards/from direction you want, like `from-293-deg`. This ends up looking like . You can use any degree from 0 to 359 in this manner. **Note:** A ""from"" class has the point of the arrow at the opposite end of the degree. For example, a ""from 90 degrees"" icon would point to the 270 degree mark, wheras a ""towards 270 degrees"" would point at the same 270 degree mark. Included in the set as well are aliases to point to cardinal directions. They work the same as degrees, for example `` would be an arrow pointing to the South by Southeast (roughly 158 degrees). ## Contributing If you feel so inclined to add icon ideas, icon art, or other fixes/changes to how the package works, feel free to help! ## Credit The icon designs are originally by [Lukas Bischoff]( Icon art for v1.1 forward, HTML, Less, and CSS are by [me (Erik)]( ## Licensing * Weather Icons licensed under [SIL OFL 1.1]( * Code licensed under [MIT License]( * Documentation licensed under [CC BY 3.0]("
compass,Compass/compass,6734,1179,"['CSS', 'Ruby', 'HTML']",[],# Compass Stylesheet Authoring Framework **Depreciated:** Compass is no longer supported. Build Status: []( Code Quality: []( ## Resources * [Compass Homepage]( * [Installing Compass]( * [Compass Reference]( ## Author Compass is written by [Chris Eppstein]( Chris is a software engineer at [LinkedIn]( and a member of the [Sass]( core team. ## Core Team Members * [Scott Davis]( * [Miriam Suzanne]( * [Brandon Mathis]( ## Major Contributors * [Nico Hagenburger]( ## License Copyright (c) 2008-2014 Christopher M. Eppstein All Rights Reserved. Released under a [slightly modified MIT License](LICENSE.markdown).
Anki-Android,ankidroid/Anki-Android,7981,2163,"['Kotlin', 'HTML', 'Shell']","['anki', 'android', 'ankidroid', 'srs', 'flashcards']","# AnkiDroid A semi-official port of the open source [Anki]( spaced repetition flashcard system to Android. Memorize anything with AnkiDroid! ### Features - Night mode - Whiteboard - Progress widget - Detailed statistics - Syncing with AnkiWeb - Write answers (optional) - Text-to-speech integration - More than 6000 premade decks - Spaced repetition (supermemo 2 algorithm) - Supported contents: text, images, sounds, MathJax - Add cards by intent from other applications like dictionaries Install --------- Wiki ---- View [Wiki]( Help ---- Check the [user manual]( and the wiki for usage instructions. See the [help page]( for how to submit a bug report or contact a project member, etc. Contribute ---------- You can contribute to AnkiDroid by beta testing, translating, or submitting code. See the [contribution wiki page]( for more info. Join Us On ---------- ## Credits ### Code Contributors Thanks to these awesome code contributors who keep this project going ### [Sponsors]( ### [Backers]( A big thank you to each of our backers Your generous donations mean the world to us, and we can't express our gratitude enough. Your support fuels our mission and helps us make a real difference ### [Translators]( Thanks to our 1400 translators, for allowing us to be available, partially or totally, in 99 languages as of July 2022. License ------- * [GPL-3.0 License]( * [AGPL-3.0 Licence]( for some part of the back-end * [LGPL-3.0 License]( for the AnkiDroid API"
Exposed,JetBrains/Exposed,7961,660,['Kotlin'],"['kotlin', 'sql', 'dao', 'orm']","[]( []( []( []( []( ## Welcome to **Exposed**, an ORM framework for [Kotlin]( Exposed is a lightweight SQL library on top of a JDBC driver for the Kotlin language. Exposed has two flavors of database access: typesafe SQL wrapping DSL and lightweight Data Access Objects (DAO). With Exposed, you have two options for database access: wrapping DSL and a lightweight DAO. Our official mascot is the cuttlefish, which is well-known for its outstanding mimicry ability that enables it to blend seamlessly into any environment. Similar to our mascot, Exposed can be used to mimic a variety of database engines, which helps you to build applications without dependencies on any specific database engine and to switch between them with very little or no changes. ## Supported Databases - H2 (versions 2.x; 1.x version is deprecated and will be removed in future releases) - []( - []( - []( - []( (Also, PostgreSQL using the [pgjdbc-ng]( JDBC driver) - []( - []( ## Dependencies ### Maven Central configuration Releases of Exposed are available in the Maven Central repository. You can declare this repository in your build script as follows: #### Gradle Groovy and Kotlin DSL **Warning:** You might need to set your Kotlin JVM target to 8, and when using Spring to 17, in order for this to work properly: ```kotlin repositories { // Versions after 0.30.1 // Versions before 0.30.1 is unavailable for now mavenCentral() } ``` #### Maven The Maven Central repository is enabled by default for Maven users. ### Exposed modules `Exposed` consists of the following modules: * exposed-core - base module, which contains both DSL api along with mapping * exposed-crypt - provides additional column types to store encrypted data in DB and encode/decode it on client-side * exposed-dao - DAO api * exposed-java-time - date-time extensions based on Java8 Time API * exposed-jdbc - transport level implementation based on Java JDBC API * exposed-jodatime - date-time extensions based on JodaTime library * exposed-json - JSON and JSONB data type extensions * exposed-kotlin-datetime - date-time extensions based on kotlinx-datetime * exposed-money - extensions to support MonetaryAmount from ""javax.money:money-api"" * exposed-spring-boot-starter - a starter for [Spring Boot]( to utilize Exposed as the ORM instead of [Hibernate]( ```xml org.jetbrains.exposed exposed-core 0.50.1 org.jetbrains.exposed exposed-crypt 0.50.1 org.jetbrains.exposed exposed-dao 0.50.1 org.jetbrains.exposed exposed-java-time 0.50.1 org.jetbrains.exposed exposed-jdbc 0.50.1 org.jetbrains.exposed exposed-jodatime 0.50.1 org.jetbrains.exposed exposed-json 0.50.1 org.jetbrains.exposed exposed-kotlin-datetime 0.50.1 org.jetbrains.exposed exposed-money 0.50.1 org.jetbrains.exposed exposed-spring-boot-starter 0.50.1 ``` #### Gradle Groovy ```groovy dependencies { implementation 'org.jetbrains.exposed:exposed-core:0.50.1' implementation 'org.jetbrains.exposed:exposed-crypt:0.50.1' implementation 'org.jetbrains.exposed:exposed-dao:0.50.1' implementation 'org.jetbrains.exposed:exposed-jdbc:0.50.1' implementation 'org.jetbrains.exposed:exposed-jodatime:0.50.1' // or implementation 'org.jetbrains.exposed:exposed-java-time:0.50.1' // or implementation 'org.jetbrains.exposed:exposed-kotlin-datetime:0.50.1' implementation 'org.jetbrains.exposed:exposed-json:0.50.1' implementation 'org.jetbrains.exposed:exposed-money:0.50.1' implementation 'org.jetbrains.exposed:exposed-spring-boot-starter:0.50.1' } ``` #### Gradle Kotlin DSL In `build.gradle.kts`: ```kotlin val exposedVersion: String by project dependencies { implementation(""org.jetbrains.exposed:exposed-core:$exposedVersion"") implementation(""org.jetbrains.exposed:exposed-crypt:$exposedVersion"") implementation(""org.jetbrains.exposed:exposed-dao:$exposedVersion"") implementation(""org.jetbrains.exposed:exposed-jdbc:$exposedVersion"") implementation(""org.jetbrains.exposed:exposed-jodatime:$exposedVersion"") // or implementation(""org.jetbrains.exposed:exposed-java-time:$exposedVersion"") // or implementation(""org.jetbrains.exposed:exposed-kotlin-datetime:$exposedVersion"") implementation(""org.jetbrains.exposed:exposed-json:$exposedVersion"") implementation(""org.jetbrains.exposed:exposed-money:$exposedVersion"") implementation(""org.jetbrains.exposed:exposed-spring-boot-starter:$exposedVersion"") } ``` and in `gradle.properties` ``` exposedVersion=0.50.1 ``` ## Samples Check out the [samples](samples/README.md) for a quick start. ## Links Currently, Exposed is available for **maven/gradle builds**. Check the [Maven Central]( and read [Getting Started]( to get an insight on setting up Exposed. For more information visit the links below: - [Documentation]( with examples and docs - [Contributing to Exposed](#contributing) - [Migration Guide]( - [Breaking changes]( and any migration details - [Slack Channel]( - [Issue Tracker]( ## Filing issues Please note that we are moving away from GitHub Issues for reporting of bugs and features. Please log any new requests on [YouTrack]( You must be logged in to view and log issues, otherwise you will be met with a 404. ## Community Do you have questions? Feel free to [request an invitation]( for the [kotlinlang slack]( and join the project conversation at our [#exposed]( channel. ## Pull requests We actively welcome your pull requests. However, linking your work to an existing issue is preferred. - Fork the repo and create your branch from main. - Name your branch something that is descriptive to the work you are doing. i.e. adds-new-thing. - If you've added code that should be tested, add tests and ensure the test suite passes. - Make sure you address any lint warnings. - If you make the existing code better, please let us know in your PR description. See the [contribution guidelines]( for more details. ## Examples ### SQL DSL ```kotlin import org.jetbrains.exposed.sql.* import org.jetbrains.exposed.sql.SqlExpressionBuilder.like import org.jetbrains.exposed.sql.transactions.transaction object Users : Table() { val id: Column = varchar(""id"", 10) val name: Column = varchar(""name"", length = 50) val cityId: Column = (integer(""city_id"") references Cities.id).nullable() override val primaryKey = PrimaryKey(id, name = ""PK_User_ID"") // name is optional here } object Cities : Table() { val id: Column = integer(""id"").autoIncrement() val name: Column = varchar(""name"", 50) override val primaryKey = PrimaryKey(id, name = ""PK_Cities_ID"") } fun main() { Database.connect(""jdbc:h2:mem:test"", driver = ""org.h2.Driver"", user = ""root"", password = """") transaction { addLogger(StdOutSqlLogger) SchemaUtils.create(Cities, Users) val saintPetersburgId = Cities.insert { it[name] = ""St. Petersburg"" } get Cities.id val munichId = Cities.insert { it[name] = ""Munich"" } get Cities.id val pragueId = Cities.insert { it.update(name, stringLiteral("" Prague "").trim().substring(1, 2)) }[Cities.id] val pragueName = Cities.selectAll().where { Cities.id eq pragueId }.single()[Cities.name] println(""pragueName = $pragueName"") Users.insert { it[id] = ""andrey"" it[name] = ""Andrey"" it[Users.cityId] = saintPetersburgId } Users.insert { it[id] = ""sergey"" it[name] = ""Sergey"" it[Users.cityId] = munichId } Users.insert { it[id] = ""eugene"" it[name] = ""Eugene"" it[Users.cityId] = munichId } Users.insert { it[id] = ""alex"" it[name] = ""Alex"" it[Users.cityId] = null } Users.insert { it[id] = ""smth"" it[name] = ""Something"" it[Users.cityId] = null } Users.update({ Users.id eq ""alex"" }) { it[name] = ""Alexey"" } Users.deleteWhere{ Users.name like ""%thing"" } println(""All cities:"") for (city in Cities.selectAll()) { println(""${city[Cities.id]}: ${city[Cities.name]}"") } println(""Manual join:"") (Users innerJoin Cities) .select(Users.name, Cities.name) .where { (Users.id.eq(""andrey"") or Users.name.eq(""Sergey"")) and Users.id.eq(""sergey"") and Users.cityId.eq(Cities.id) }.forEach { println(""${it[Users.name]} lives in ${it[Cities.name]}"") } println(""Join with foreign key:"") (Users innerJoin Cities) .select(Users.name, Users.cityId, Cities.name) .where { Cities.name.eq(""St. Petersburg"") or Users.cityId.isNull() } .forEach { if (it[Users.cityId] != null) { println(""${it[Users.name]} lives in ${it[Cities.name]}"") } else { println(""${it[Users.name]} lives nowhere"") } } println(""Functions and group by:"") ((Cities innerJoin Users) .select(Cities.name, Users.id.count()) .groupBy(Cities.name) ).forEach { val cityName = it[Cities.name] val userCount = it[Users.id.count()] if (userCount > 0) { println(""$userCount user(s) live(s) in $cityName"") } else { println(""Nobody lives in $cityName"") } } SchemaUtils.drop(Users, Cities) } } ``` Generated SQL: ```sql SQL: CREATE TABLE IF NOT EXISTS Cities (id INT AUTO_INCREMENT, name VARCHAR(50) NOT NULL, CONSTRAINT PK_Cities_ID PRIMARY KEY (id)) SQL: CREATE TABLE IF NOT EXISTS Users (id VARCHAR(10), name VARCHAR(50) NOT NULL, city_id INT NULL, CONSTRAINT PK_User_ID PRIMARY KEY (id), CONSTRAINT FK_Users_city_id__ID FOREIGN KEY (city_id) REFERENCES Cities(id) ON DELETE RESTRICT ON UPDATE RESTRICT) SQL: INSERT INTO Cities (name) VALUES ('St. Petersburg') SQL: INSERT INTO Cities (name) VALUES ('Munich') SQL: INSERT INTO Cities (name) VALUES (SUBSTRING(TRIM(' Prague '), 1, 2)) SQL: SELECT Cities.id, Cities.name FROM Cities WHERE Cities.id = 3 pragueName = Pr SQL: INSERT INTO Users (id, name, city_id) VALUES ('andrey', 'Andrey', 1) SQL: INSERT INTO Users (id, name, city_id) VALUES ('sergey', 'Sergey', 2) SQL: INSERT INTO Users (id, name, city_id) VALUES ('eugene', 'Eugene', 2) SQL: INSERT INTO Users (id, name, city_id) VALUES ('alex', 'Alex', NULL) SQL: INSERT INTO Users (id, name, city_id) VALUES ('smth', 'Something', NULL) SQL: UPDATE Users SET name='Alexey' WHERE Users.id = 'alex' SQL: DELETE FROM Users WHERE Users.name LIKE '%thing' All cities: SQL: SELECT Cities.id, Cities.name FROM Cities 1: St. Petersburg 2: Munich 3: Pr Manual join: SQL: SELECT Users.name, Cities.name FROM Users INNER JOIN Cities ON Cities.id = Users.city_id WHERE ((Users.id = 'andrey') or (Users.name = 'Sergey')... [TRUNCATED]"
LibreTube,libre-tube/LibreTube,7846,422,"['Kotlin', 'Shell']","['kotlin', 'android', 'youtube']","[]( []( []( []( > **Note** > We don't accept feature or bug requests on these platforms. Kindly submit requests only on GitHub. []( []( []( Credits Readme Design and Banners by [XelXen]( Readme Screenshots by [ARBoyGo]( Readme Emoji is from [openmoji]( Icons [Default App Icon]( by [XelXen]( [Boosted Bird]( by [Margot Albert-Heuzey]( About YouTube has an extremely invasive [privacy policy]( which relies on using user data in unethical ways. They store a lot of your personal data - ranging from ideas, music taste, content, political opinions, and much more than you think. This project is aimed at improving the users' privacy by being independent from Google and bypassing their data collection. Therefore, the app is using the [Piped API]( which uses proxies to circumvent Google's data collection and includes some other additional features. If you have questions or need help, please make sure to read the [FAQ]( before asking for help at the community channels. The [Matrix room]( is considered as the main communication channel, all other forums or social media accounts are maintained by volunteers from the community but not the developer(s). Screenshots [](fastlane/metadata/android/en-US/images/phoneScreenshots/Screenshot_1.jpg) [](fastlane/metadata/android/en-US/images/phoneScreenshots/Screenshot_2.jpg) [](fastlane/metadata/android/en-US/images/phoneScreenshots/Screenshot_3.jpg) [](fastlane/metadata/android/en-US/images/phoneScreenshots/Screenshot_4.jpg) [](fastlane/metadata/android/en-US/images/phoneScreenshots/Screenshot_9.jpg) * For more [Screenshot]( Features - [x] No Ads - [x] User Accounts - [x] Subscriptions - [x] Subscription Groups - [x] User Playlists - [x] Playlist Bookmarks - [x] Watch/Search History - [x] SponsorBlock - [x] DeArrow - [x] ReturnYouTubeDislike - [x] Downloads Contributing Whether you have ideas, translations, design changes, code cleaning or really heavy code changes, help is always welcome. The more is done, the better it gets! Please respect our [Code of Conduct]( in order to keep all interactions and dicussions healthy. You can open and build the project like any other normal Android project by using Android Studio. If creating a pull request containing code changes, please make sure to format your code with `ktlint --code-style=android_studio -F` before. Please make sure the title of your pull request and the commit messages follow the [conventional commit types]( (e.g. `feat: support for xy`). The most common commit types are ""feat"", ""fix"", ""refactor"", ""ci"" and ""chore"". > **Note** > Any issue avoiding the issue template will be ignored and forced to be closed. Donate Donations can be made at: * * Contributions in any form are welcome! Translations Differences to NewPipe With NewPipe, the extraction is done locally on your phone, and all the requests sent towards YouTube/Google are done directly from the network you're connected to, which doesn't use a middleman server in between. Therefore, Google can still access information such as the user's IP address. Aside from that, subscriptions can only be stored locally. LibreTube takes this one step further and proxies all requests via Piped (which uses the NewPipeExtractor). This prevents Google servers from accessing your IP address or any other personal data. Apart from that, Piped allows syncing your subscriptions between LibreTube and Piped, which can be used on desktop too. If the NewPipeExtractor breaks, it only requires an update of Piped and not LibreTube itself. Therefore, fixes usually arrive faster than in NewPipe. While LibreTube only supports YouTube, NewPipe also allows the use of other platforms like SoundCloud, PeerTube, Bandcamp and media.ccc.de. Both are great clients for watching YouTube videos. It depends on the individual's use case which one fits their needs better. Privacy Policy and Disclaimer LibreTube aims to protect the privacy of its users. [Our Privacy Policy](/PRIVACY_POLICY.md) gives detailed information on which data the app stores in order to work, how it is being used, and how the project protects your personal information. It is recommended to read the privacy policy of LibreTube as well as the privacy policy of the instance you have chosen inside the app. ## License []( LibreTube is [Free Software]( You can use, study, share and modify it at your will. The app can be redistributed and/or modified under the terms of the [GNU General Public License version 3 or later]( published by the [Free Software Foundation]( Scroll to top"
Unciv,yairm210/Unciv,7822,1474,"['Kotlin', 'Dockerfile', 'Shell']","['civilization-v', 'android', 'libgdx', 'civilization', 'game']","# Unciv - Civ V remake for Android & Desktop []( []( []( []( []( []( []( []( []( ## What is this? An open source, moddability-focused Android and Desktop remake of Civ V, made with LibGDX ## Is this any good? Depends what you're looking for. If you're in the market for high-res graphics, amazing soundtracks, animations etc, I highly recommend Firaxis's Civ-V-like game, ""Civilization V"". If you want a small, fast, moddable, FOSS, in-depth 4X that can still run on a potato, you've come to the right place :) ## What's the roadmap? In this order: * Polish! As you may have noticed, Unciv is fully functional but rough around the edges. This means: * UI+UX improvements ([suggestions welcome!]( * Better automation, AI etc. in-game * G&K mechanics - espionage, small other changes (see [#4697]( * BNW mechanics - trade routes, world congress, etc. ## Contributing Programmers start [here]( Translators start [here]( Modders start [here]( You can join us in any of the open issue, or work on improving anything you want - once you're finished, issue a pull request and it'll go into the next version! If not, you can help by spreading the word - vote for Unciv where you can, mention it on Reddit or Twitter etc, and help us with new ideas of how to get the word out! ## FAQ ## How do I install? - **Android** - [Google Play]( or [F-droid]( - **Windows/Linux** - [itch.io]( Flatpak via [Flathub]( or [AUR]( - **Raspberry Pi** - [Pi-apps]( - **MacOS** - Install [with this guide]( - Jars, APKs and Windows/Linux builds also available in [Releases]( (run jar with `java -jar Unciv.jar`) - *not recommended* since we update frequently and you will quickly become out-of-date - [Build from scratch]( if that's your thing ### How about IOS? I'm not planning on it. It means paying money to Apple, yet another release path, and since I don't have an IOS device it means I can't test it properly. ### Steam release? Steam has decided that they don't want to host Unciv, they probably don't want to risk legal issues with Firaxis (although those should be non-existent, see below) ### Will you implement {feature}? If it's in the original Civ V, then yes! If not, then the feature won't be added to the base game - possibly it will be added as a way to mod the game, which is constantly expanding #### Why not? This is its own game, why not add features that weren't in Civ V? Having a clear vision is important for actually getting things done. Anyone can make a suggestion. Not all are good, viable, or simple. Not many can actually implement stuff. As an open source project, this stuff is done in our spare time, of which there isn't much. We need a clear-cut criteria to decide what to work on and what not to work on. #### Will you implement Civ VI? Considering how long it took to get this far, no. ### How can I learn to play? Where's the wiki? All the tutorial information is available in-game at menu > civilopedia > tutorials All the information is included in the amazing [Civ V wiki]( Since this is a Civ V clone, you can search Google for how to play Civ V and there are loads of answers =) Alternatively, you could [join us on Discord]( and ask there =D ### Aren't you basically making a Civ V clone? Is that even legal? According to the [US Copyright Office FL-108]( intellectual property rights *do not* apply to mechanics - as I'm sure you know, there are a billion Flappy Bird knockoffs It is definitely illegal: - To use any assets from the original game (images, sound etc) - they belong to Firaxis It is probably illegal (no solid sources on this): - To use the Civilization name - To impersonate the Civ games (so calling yourself civi|zation with a similar logo, for instance) Interestingly, [Civilization is a registered trademark]( but it looks like it's only *that particular logo* which is trademarked, so technically you could make another game called ""Civilization"" and it'll stick. In any case we're not going there :) ## Run with Docker []( If you have docker compose installed: ```$ docker compose build && docker compose up``` and then goto If just docker: ```$ docker build . -t unciv && docker run -d -p 6901:6901 -p 5901:5901 unciv ``` Or just use our already built one: ```$ docker run -d -p 6901:6901 -p 5901:5901 ghcr.io/yairm210/unciv ``` and then goto ## [Credits and 3rd parties](docs/Credits.md)"
ViMusic,vfsfitvnm/ViMusic,7815,631,['Kotlin'],"['android', 'jetpack-compose', 'music-player', 'youtube', 'music']","ViMusic An Android application for streaming music from YouTube Music --- ## Features - Play (almost) any song or video from YouTube Music - Background playback - Cache audio chunks for offline playback - Search for songs, albums, artists videos and playlists - Bookmark artists and albums - Import playlists - Fetch, display and edit songs lyrics or synchronized lyrics - Local playlist management - Reorder songs in playlist or queue - Light/Dark/Dynamic theme - Skip silence - Sleep timer - Audio normalization - Android Auto - Persistent queue - Open YouTube/YouTube Music links (`watch`, `playlist`, `channel`) - ... ## Installation []( []( []( ## Acknowledgments - [**YouTube-Internal-Clients**]( A python script that discovers hidden YouTube API clients. Just a research project. - [**ionicons**]( Premium hand-crafted icons built by Ionic, for Ionic apps and web apps everywhere. App icon based on icon created by Ilham Fitrotul Hayat - Flaticon ## Disclaimer This project and its contents are not affiliated with, funded, authorized, endorsed by, or in any way associated with YouTube, Google LLC or any of its affiliates and subsidiaries. Any trademark, service mark, trade name, or other intellectual property rights used in this project are owned by the respective owners."
cheesesquare,chrisbanes/cheesesquare,7741,1817,['Kotlin'],[],"Cheesesquare Sample =================================== Demos the new Android Design library. This is not an exhaustive sample, but shows some of the important features in the Design library: - Collapsing Toolbar - FloatingActionButton - View anchoring - NavigationView - Snackbar Pre-requisites -------------- - Android SDK v22 - Android Build Tools v22.0.1 - Android Support Repository r16 (for v22.2.1) License ------- Copyright 2014 The Android Open Source Project, Inc. Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
RIBs,uber/RIBs,7693,902,"['Kotlin', 'Java', 'Swift']","['ios', 'android', 'mobile', 'mobile-app', 'mobile-development']","[]( []( []( []( []( RIBs is the cross-platform architecture framework behind many mobile apps at Uber. The name RIBs is short for Router, Interactor and Builder, which are core components of this architecture. This framework is designed for mobile apps with a large number of engineers and nested states. The RIBs architecture provides: * **Shared architecture across iOS and Android.** Build cross-platform apps that have similar architecture, enabling iOS and Android teams to cross-review business logic code. * **Testability and Isolation.** Classes must be easy to unit test and reason about in isolation. Individual RIB classes have distinct responsibilities like: routing, business, view logic, creation. Plus, most RIB logic is decoupled from child RIB logic. This makes RIB classes easy to test and reason about independently. * **Tooling for developer productivity.** RIBs come with IDE tooling around code generation, memory leak detection, static analysis and runtime integrations - all which improve developer productivity for large teams or small. * **An architecture that scales.** This architecture has proven to scale to hundreds of engineers working on the same codebase and apps with hundreds of RIBs. ## Documentation To get started with RIBs, please refer to the [RIBs documentation]( This describes key concepts on RIBs, from what they are for, their structure and common use cases. To get more hands on with RIBs, we have written a [series of tutorials]( that run you through the main aspects of the architecture with hands-on examples. To read about the backstory on why we created RIBs, see [this blog post]( we wrote when releasing RIBs in production the first time and see [this short video]( where we discussed how the RIBs architecture works. #### What is the difference between RIBs and MV*/VIPER? MVC, MVP, MVI, MVVM and VIPER are architecture patterns. RIBs is a framework. What differentiates RIBs from frameworks based on MV*/VIPER is: - **Business logic drives the app, not the view tree**. Unlike with MV*/VIPER, a RIB does not have to have a view. This means that the app hierarchy is driven by the business logic, not the view tree. - **Independent business logic and view trees**. RIBs decouple how the business logic scopes are structured from view hierarchies. This allows the application to have a deep business logic tree, isolating business logic nodes, while maintaining a shallow view hierarchy making layouts, animations and transitions easy. There are some other novel things about RIBs. However, these could also be implemented with other MV*/VIPER frameworks. These are: - **Cross-platform approach**, allowing iOS and Android architecture to stay in sync. - **Tooling for easier adoption** on larger apps or teams. Tooling we are open sourcing includes IDE plugins for code generation and static code analysis. - **Strong opinions about how state should be communicated**, using DI and Rx. Each RIB defines its dependencies and what dependencies it needs from its parent. Parent components that fulfill a childs parent dependencies are provided to child Builders as a constructor dependency to allow for hierarchical DI scoping. This means that information is communicated via these dependencies up and down the tree. ## Usage 1. Clone this repository 2. Integrate using your preferred installation mechanism For usage of the tooling built around RIBs, please see the [Tooling section]( in our documentation. ## Installation for Android To integrate the recommended minimum setup for RIBs add the following to your `build.gradle`: ```gradle dependencies { annotationProcessor 'com.uber.rib:rib-compiler-test:0.16.2' implementation 'com.uber.rib:rib-android:0.16.2' testImplementation 'com.uber.rib:rib-test:0.16.2' } ``` There are a number of extension packages available as well including Kotlin extensions, Jetpack Compose support, Coroutines support ## Installation for iOS #### CocoaPods To integrate RIBs into your project add the following to your `Podfile`: ```ruby pod 'RIBs', '~> 0.9' ``` #### Carthage To integrate RIBs into your project using Carthage add the following to your `Cartfile`: ```ruby github ""uber/RIBs"" ~> 0.9 ``` ## Related projects If you like RIBs, check out other related open source projects from our team: - [Needle]( a compile-time safe Swift dependency injection framework. - [Motif]( An abstract on top of Dagger offering simpler APIs for nested scopes. - [Swift Concurrency]( a set of concurrency utility classes used by Uber, inspired by the equivalent [java.util.concurrent]( package classes. - [Swift Abstract Class]( a light-weight library along with an executable that enables compile-time safe abstract class development for Swift projects. - [Swift Common]( common libraries used by this set of Swift open source projects. ## License Copyright (C) 2017 Uber Technologies Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
Pokedex,skydoves/Pokedex,7653,1018,['Kotlin'],"['android', 'kotlin', 'pokemon', 'pokedex', 'mvvm']","Pokedex Pokedex demonstrates modern Android development with Hilt, Coroutines, Flow, Jetpack (Room, ViewModel), and Material Design based on MVVM architecture. > [!TIP] > If you want to see the Jetpack Compose version of Pokedex, check out the [Pokedex Compose]( repository. ## Download Go to the [Releases]( to download the latest APK. ## Tech stack & Open-source libraries - Minimum SDK level 21 - [Kotlin]( based, [Coroutines]( + [Flow]( for asynchronous. - Jetpack - Lifecycle: Observe Android lifecycles and handle UI states upon the lifecycle changes. - ViewModel: Manages UI-related data holder and lifecycle aware. Allows data to survive configuration changes such as screen rotations. - DataBinding: Binds UI components in your layouts to data sources in your app using a declarative format rather than programmatically. - Room: Constructs Database by providing an abstraction layer over SQLite to allow fluent database access. - [Hilt]( for dependency injection. - Architecture - MVVM Architecture (View - DataBinding - ViewModel - Model) - [Bindables]( Android DataBinding kit for notifying data changes to UI layers. - Repository Pattern - [Retrofit2 & OkHttp3]( Construct the REST APIs and paging network data. - [Sandwich]( Construct a lightweight and modern response interface to handle network payload for Android. - [Moshi]( A modern JSON library for Kotlin and Java. - [WhatIf]( Check nullable objects and empty collections more fluently. - [Bundler]( Android Intent & Bundle extensions, which insert and retrieve values elegantly. - [ksp]( Kotlin Symbol Processing API. - [Turbine]( A small testing library for kotlinx.coroutines Flow. - [Material-Components]( Material design components for building ripple animation, and CardView. - [Glide]( [GlidePalette]( Loading images from network. - [TransformationLayout]( Implementing transformation motion animations. - Custom Views - [Rainbow]( An easy way to apply gradations and tinting for Android. - [AndroidRibbon]( A simple way to implement a beautiful ribbon with the shimmering on Android. - [ProgressView]( A polished and flexible ProgressView, fully customizable with animations. - [Timber]( A logger with a small, extensible API. ## Architecture **Pokedex** is based on the MVVM architecture and the Repository pattern, which follows the [Google's official architecture guidance]( The overall architecture of **Pokedex** is composed of two layers; the UI layer and the data layer. Each layer has dedicated components and they have each different responsibilities, as defined below: **Pokedex** was built with [Guide to app architecture]( so it would be a great sample to show how the architecture works in real-world projects. ### Architecture Overview - Each layer follows [unidirectional event/data flow]( the UI layer emits user events to the data layer, and the data layer exposes data as a stream to other layers. - The data layer is designed to work independently from other layers and must be pure, which means it doesn't have any dependencies on the other layers. With this loosely coupled architecture, you can increase the reusability of components and scalability of your app. ### UI Layer The UI layer consists of UI elements to configure screens that could interact with users and [ViewModel]( that holds app states and restores data when configuration changes. - UI elements observe the data flow via [DataBinding]( which is the most essential part of the MVVM architecture. - With [Bindables]( which is an Android DataBinding kit for notifying data changes, you can implement two-way binding, and data observation in XML very clean. ### Data Layer The data Layer consists of repositories, which include business logic, such as querying data from the local database and requesting remote data from the network. It is implemented as an offline-first source of business logic and follows the [single source of truth]( principle. **Pokedex** is an offline-first app is an app that is able to perform all, or a critical subset of its core functionality without access to the internet. So users don't need to be up-to-date on the network resources every time and it will decrease users' data consumption. For further information, you can check out [Build an offline-first app]( ## Modularization **Pokedex** adopted modularization strategies below: - **Reusability**: Modulizing reusable codes properly enable opportunities for code sharing and limits code accessibility in other modules at the same time. - **Parallel Building**: Each module can be run in parallel and it reduces the build time. - **Strict visibility control**: Modules restrict to expose dedicated components and access to other layers, so it prevents they're being used outside the module - **Decentralized focusing**: Each developer team can assign their dedicated module and they can focus on their own modules. For more information, check out the [Guide to Android app modularization]( ## MAD Score ## Open API Pokedex using the [PokeAPI]( for constructing RESTful API. PokeAPI provides a RESTful API interface to highly detailed objects built from thousands of lines of data related to Pokmon. ## Find this repository useful? :heart: Support it by joining __[stargazers]( for this repository. :star: Also, __[follow me]( on GitHub for my next creations! # License ```xml Designed and developed by 2022 skydoves (Jaewoong Eum) Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. ```"
uhabits,iSoron/uhabits,7371,913,"['Kotlin', 'Java', 'Swift']","['android', 'habits', 'habit-tracker', 'streak', 'java']","Loop Habit Tracker Loop is a mobile app that helps you create and maintain good habits, allowing you to achieve your long-term goals. Detailed graphs and statistics show you how your habits improved over time. It is completely ad-free and open source. ## Screenshots [![Main screen][screen1th]][screen1] [![Edit habit][screen2th]][screen2] [![Habit strength][screen3th]][screen3] [![Habit history and streaks][screen4th]][screen4] [![Widgets][screen5th]][screen5] [![Night mode][screen6th]][screen6] ## Features * Beautiful, minimalistic and lightweight interface. Loop has an elegant and minimalistic interface that is very easy to use, even for first-time users. Highly optimized for speed, the app works well even on older phones. * Habit score. Loop has an advanced formula for calculating the strength of your habits. Every repetition makes your habit stronger and every missed day makes it weaker. A few missed days after a long streak, however, will not completely destroy your progress, unlike many other don't-break-the-chain apps. * Flexible schedules. In addition to daily habits, Loop supports habits with more complex schedules, such as 3 times per week or every other day. * Reminders. Schedule notifications to remind you of your habits. Each habit can have its own reminder, at a chosen time of the day. Easily check or dismiss your habit directly from the notification. * Widgets. Be reminded of your habits whenever you unlock your phone. Colorful widgets allow you to track your habits directly from your home screen, without even opening the app. * Take control of your data. If you want to further analyze your data, or move it to another service, Loop allows you to export it to spreadsheets (CSV) or to a database file (SQLite). For power users, checkmarks can be added through other apps, such as Tasker. * No limitations. Track as many habits as you wish. Loop imposes no artificial limits on how many habits you can have. All features are available to all users. There are no in-app purchases. * Completely ad-free and open source. There are no advertisements, annoying notifications or intrusive permissions in this app, and there will never be. The app is completely open-source (GPLv3). * Works offline and respects your privacy. Loop doesn't require an Internet connection or online account registration. Your confidential data is never sent to anyone. Neither the developers nor any third-parties have access to it. ## Installing The easiest way to install Loop is through the [Google Play Store][playstore] or [F-Droid][fdroid]. You may also download and install the APK from the [releases page][releases]; note, however, that the app will not be updated automatically. To build this app from the source code, see [build instructions][build]. ## Contributing Loop is an open source project developed entirely by volunteers. If you would like to contribute to the project, you are very welcome. There are many ways to contribute, even if you are not a software developer. * **Report bugs, suggest features.** The easiest way to contribute is to simply use the app and let us know if you find any problems or have any suggestions to improve it. To report a problem, please [create a new bug report]( To request a new feature or vote on existing feature requests, please visit our [GitHub Discussions page]( If you would like to receive the newest versions of the app earlier than everyone else, [join our open beta on Google Play][beta]. * **Spread the word.** If you like the app, share it with your family, friends and colleagues. You can also rate and review the app on Google Play Store, to help other users find it more easily. * **Translate the app into your own language.** If you are not a native English speaker, and would like to see the app translated into your own language, please join our [open translation project][poedit]. If the translation is already completed, you are also very welcome to join and proofread it. * **Write some code.** If you are an Android developer, you are very welcome to contribute with code. Please see the [guidelines]( ## License Copyright (C) 2016-2021 linson Santos Xavier Loop Habit Tracker is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. Loop Habit Tracker is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see . [screen1]: screenshots/1.png [screen2]: screenshots/2.png [screen3]: screenshots/3.png [screen4]: screenshots/4.png [screen5]: screenshots/5.png [screen6]: screenshots/6.png [screen1th]: screenshots/1.thumb.png [screen2th]: screenshots/2.thumb.png [screen3th]: screenshots/3.thumb.png [screen4th]: screenshots/4.thumb.png [screen5th]: screenshots/5.thumb.png [screen6th]: screenshots/6.thumb.png [poedit]: [playstore]: [releases]: [fdroid]: [build]: [beta]:"
mihon,mihonapp/mihon,7301,281,['Kotlin'],[],"# Mihon [App](#) ### Full-featured reader Discover and read manga, webtoons, comics, and more easier than ever on your Android device. []( []( []( [](/LICENSE) []( ## Download []( []( *Requires Android 8.0 or higher.* ## Features * Local reading of content. * A configurable reader with multiple viewers, reading directions and other settings. * Tracker support: [MyAnimeList]( [AniList]( [Kitsu]( [MangaUpdates]( [Shikimori]( and [Bangumi]( support. * Categories to organize your library. * Light and dark themes. * Schedule updating your library for new chapters. * Create backups locally to read offline or to your desired cloud service. * Plus much more... ## Contributing [Code of conduct](./CODE_OF_CONDUCT.md) [Contributing guide](./CONTRIBUTING.md) Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change. Before reporting a new issue, take a look at the [FAQ]( the [changelog]( and the already opened [issues]( if you got any questions, join our [Discord server]( ### Repositories []( []( ### Credits Thank you to all the people who have contributed! ### Disclaimer The developer(s) of this application does not have any affiliation with the content providers available, and this application hosts zero content. ### License Copyright 2015 Javier Toms Copyright 2024 The Mihon Open Source Project Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
flutter_ui_challenges,lohanidamodar/flutter_ui_challenges,4528,1400,"['Dart', 'C++', 'CMake']","['flutter', 'flutter-examples', 'flutter-demo', 'flutter-ui-challenges', 'flutter-ui']","# Flutter UI Challenges My effort on replicating various apps UI on flutter. > Exciting News! > > Level up your Flutter skills in just 30 days with [30DaysMasterFlutter]( > > [Join the fun and become a Flutter pro!]( ## Live [Flutter UI Challenges Web]( []( []( []( ## Building and running the code [ **Updated** ] - Should work on all platforms with Flutter Stable Release ### Table of contents - **[Animation Examples UI](#animations)** - **[Ecommerce UIs](#ecommerce)** - **[Login/signup UIs](#user-flow-screens)** - **[Settings UIs](#settings-uis)** - **[Dashboard UIs](#dashboard-uis)** - **[Quotes App UIs](#quotes-app-uis)** - **[Motorbike App UIs](#motorbike-app-uis)** - **[Profile UIs](#profile-screens)** - **[Invitation App UIs](#inviation-app-ui)** - **[Lists UIs](#lists-uis)** - **[Navigation UIs](#navigations)** - **[Onboarding UIs](#onboarding-screens)** - **[Miscellaneous UIs](#miscellaneous-widgets)** - **[Blog UIs](#blog)** - **[Food App UIs](#food-app)** - **[Quiz App UIs](#quiz-app)** - **[Todo App UIs](#todo-app)** - **[Hotel App UIs](#hotel-app)** - **[Travel App UIs](#travel-app)** - **[Grocery App UI Kit](#grocery-app-ui-kit)** - **[Bank App Clone](#bank-app-clone)** - **[Furniture App UI](#furniture-app-ui)** ## Contributors 1. [Damodar Lohani]( 2. [Aparna Dulal] ( 2. [Sudip Thapa]( 3. [Shyam Adhikari (UI/UX Designer)]( 4. [Mausam Rayamajhi]( 5. [Siddhartha Joshi]( ## Packages Used - Flutter Swiper ( - Flutter Custom Clippers ( ## Credits The code for Springy Widget is taken and refactored from ( ## Animations ## Ecommerce ## User Flow Screens ## Settings UIs ## Dashboard UIs ## Quotes App UIs ## Motorbike App UIs ## Profile Screens ## Inviation App UI ## Lists UIs ## Navigations ## Onboarding Screens (Smart walled onboarding is from ## miscellaneous widgets ## Blog ## Food App ## Quiz App ## Todo App ## Hotel App ## Travel App ## grocery App UI Kit (design credit: ### Whats implemented - Working bottom navigator to show different pages - Navigation push/pop to show details page - Stateless & Stateful Widgets - Custom widgets for list items, category items etc. ## Bank App Clone Bank app clone by [Mausam Rayamajhi]( ## Furniture App UI Furniture App by [Mausam Rayamajhi]( ## Plant App UI Plant UI Clone by [Ambika Dulal]( ## TravelUi Clone Furniture App by [Ambika Dulal]( ## Wallet App Clone Furniture App by [Ambika Dulal]("
flutter_vignettes,gskinnerTeam/flutter_vignettes,4432,975,"['Dart', 'C++', 'CMake']",[],"### The Flutter Vignettes A collection of explorations into the exciting user experience possibilities enabled by the Flutter platform. Built by [gskinner]( in partnership with Google, these vignettes range from the practical to the novel. They aim to inspire both developers and designers to build delightful and beautiful experiences with Flutter. In addition to forking and reviewing the [MIT licensed code](LICENSE.md) available here, you can also check out more information on the [Vignette Showcase Website]( ### About gskinner We exist to build inovative digital experiences for smart clients, and we love how easy Flutter makes that. Don't hesitate to [stop by our site]( to learn more about what we do. We'd love to hear from you! ### The Vignettes Travel Cards Use a Stack widget to create a parallax effect inside of a list, while also using a Transform to give it a 3D card effect. View Code Mindfulness Gooey Transition Draw curved vector paths and use them to mask content. Utilizes a small physics simulation to calculate tension between a set of points. View Code Boarding Pass Cards Uses the Transform widget to create a folding card effect. In this case a boarding pass with multiple folds, each fold containing a child widget. View Code Inbox Swipe Particles Demonstrates how you can use particles in your Flutter app and how to tie multiple actions to a list swipe. View Code Icon Flip Button Bar Example of a bespoke NavigationBar with animated buttons that change size, shape, and color when selected. View Code Liquid Rewards Cards Shows how to easily create resizeable list items using AnimatedContainer; also uses the Canvas API to simulate a liquid effect. View Code Dog Toy Slider Use a Flare animation to create a custom Slider control. Creates a custom FlareControl class for playback while the slider itself is painted on a Canvas. View Code Guide To the Stars Particles Shows how to use an animated Canvas as the primary background for your app. In this case, a starfield effect that controls its animation speed based on user scrolling and page transitions. View Code Paris Travel Hero Transition Shows how you can create a custom Hero effect that contains complex animations and retains its state between pages. View Code Fluid Button Bar Uses a Canvas to create a fluid-style navigation bar that has a fun bouncy feel to it; also shows how to use the Path API to draw, and animate some custom icons. View Code Product Zoom Transition Example of an animated png sequence within a Hero animation; also uses a Canvas to render and animate a product detail overlay. View Code Article Dark Mode Shows how a png sequence can be used to mask an arbitrary widget. Here that technique is used in a page transition between light and dark themes. View Code Sports App Pull To Refresh Shows how to create a custom pull to refresh animation. In this example, we used a sprite sequence to render a basketball spinning around the hoop as it loads. View Code Plant Shopping Cart An example of multi-part form validation and the ability to customize the form contents based on the country the user has selected. View Code Feature Artist Carousel Uses a custom 3D model renderer and blending mask to create a fun and unique background effect. View Code Sparkle Party Particles Uses the drawVertices API to draw a ton of particles extremely quickly. The particles are animated using a sprite sheet and comes with 4 different presets. View Code BudgetTracker Graphs Demonstrates how charts and graphs can be implemented using the Canvas API. It also provides an example of arbitrary panning and scrolling in a view. View Code ### Installation If you're new to Flutter the first thing you'll need is to follow the [setup instructions]( Once you're set up and can compile the sample Flutter app, you're ready to run some vignettes! Each vignette is stored in its own folder in the repository. Using your IDE of choice, open the vignette directory you'd like to run. Then, using the terminal inside your IDE, run `flutter pub get` to fetch any dependencies, and `flutter run` to deploy to your connected device or simulator. If you would like to try these for Flutter for web, you can use `flutter run -d chrome`. Note that Flutter for web is currently a technical preview and not all of the vignettes will work correctly. For more information on enabling Flutter for web follow the [setup instructions]( ### License These vignettes are released under the [MIT license](LICENSE.md). You can use the code for any purpose, including commercial projects. []("
getwidget,ionicfirebaseapp/getwidget,4430,590,"['Dart', 'C++', 'CMake']","['flutter', 'dart', 'flutter-ui', 'flutter-widget', 'widgetkit']","[]( []( []( []( []( GetWidget, a leading [**Flutter app development company**]( proudly operates as a 100% free and open-source platform. We encourage and support an active, healthy community that accepts contributions from the public including you. There are a couple of ways in which you can contribute to the growing community of getwidget. UI Kit library built with Flutter SDK to make Flutter development easier and more joyful than ever. GetWidget has 1000+ pre-build widgets that you can reuse to develop both Flutter mobile app and web app. Our motto is to provide the best Flutter UI library to the Flutter community to speed up their development process and build awesome apps with [**pre-build Flutter Library Components**]( ## Table of contents - [Screenshot](#screenshot) - [Quick start](#quick-start) - [Features](#features) - [Demo](#demo) - [Contributing](#contributing) - [Documentation](#documentation) - [Copyright and license](#copyright-and-license) - [Marketplace]( ## Screenshot ## Quick start Read the [Getting started page]( Forum [Support and discussion ]( ## Features we have launched the library with the following components : [GETWIDGET WIDGET COLLECTION]( #### [Flutter Button Widget]( | [Flutter Elevated Button Widget]( | [Flutter Rounded Button Widget]( | [Flutter Square Button Widget]( | [Flutter Icon Button Widget]( | [Flutter Social Button Widget]( | [Flutter Badge Widget]( | [Flutter Avatar Widget]( | [Flutter Image Widget]( | [Flutter Card Widget]( | [Flutter Carousel Widget]( | [Flutter Tile Widget]( | [Flutter Tabbar Widget]( | [Flutter Typography]( | [Flutter Toaster Widget]( | [Flutter Switch Toggle Widget]( | [Flutter Drawer Widget]( | [Flutter Accordian Widget]( | [Flutter Alert Widget]( | [Flutter Appbar Widget]( | [Flutter Searchbar Widget]( | [Flutter Floating Widget]( | [Flutter Rating Widget]( | [Flutter Dropdown Widget]( | [Flutter Loader Widget]( | [Flutter Progress Bar Widget]( | [Flutter Shimmer Widget]( | [Flutter Animation Widget]( | [Flutter Border Widget]( | [Flutter Bottomsheet Widget]( | [Flutter Checkbox Widget]( | [Flutter CheckboxListTile Widget]( | [Flutter Radio Button Widget]( | [Flutter Radio ListTile Widget]( | [Flutter Sticky Header Widget]( ## Demo ### Play Store ### An Open-Source News App Built With GetWidget & Flutter Ionicfirebaseapp.com has been developed an open-source News Mobile App with GetWidget, So can start building app faster to get an overview and do customization. You can Download News App Souce Code here: ## Contributing GetWidget is **100% free** and **open source**. We encourage and support an active, healthy community that accepts contributions from the public including you. There are a couple of ways in which you can contribute to the growing community of `getwidget`. * Pick up any issue marked with [""good first issue""]( * Fix a bug * Write and improve some **documentation**. Documentation is very critical to us. We would appreciate help in adding multiple languages to our docs. * If you are a developer, feel free to check out the source and submit pull requests. * Dig into [**CONTRIBUTING.MD**](CONTRIBUTING.md), which covers submitting bugs, requesting new features, preparing your code for a pull request, etc. * Please don't forget to **like**, **follow**, and **star our repo**! Join our growing [community]( to keep up to date with the latest GetWidget development. ## Flutter Getwidget Documentation [**Installation Guide**]( ### Social Media Twitter: Facebook: Linkedin: Instagram: ## Copyright-and-license Code and documentation Copyright 2017-2020 the [GETWIDGET Authors]( and [IONICFIREBASEAPP]( Code released under the [MIT License]. Docs released under [Creative Commons]( ## Contributors ### Code Contributors This project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)]. ### Financial Contributors Become a financial contributor and help us sustain our community. [[Contribute]( #### Individuals #### Organizations Support this project with your organization. Your logo will show up here with a link to your website. [[Contribute]("
fvm,leoafarias/fvm,4345,210,"['Dart', 'Shell', 'PowerShell']","['flutter', 'cli', 'dart', 'flutter-sdk-versions', 'flutter-releases']","# fvm []( []( []( []( []( []( FVM streamlines Flutter version management. It allows per project SDK versions, ensuring consistent app builds and easier testing of new releases, thereby boosting the efficiency of your Flutter project tasks. ## Why FVM? - Need for simultaneous use of multiple Flutter SDKs. - SDK testing requires constant [channel]( switching. - Channel switches are slow and need repeated reinstalls. - Difficulty managing the latest successful SDK version used in an app. - Flutter's major updates demand total app migration. - Inconsistencies occur in development environments within teams. For more information, read [FVM documentation]( ## Contributors --- Checkout Flutter Sidekick. [Read more about it here.]( ## Troubleshooting Please view our [FAQ]( ## License This project is licensed under the MIT License; see [LICENSE](LICENSE) file for details."
packages,flutter/packages,4048,2555,"['Dart', 'Java', 'Objective-C']",[],"# Flutter Packages []( []( []( This repo is a companion repo to the main [flutter repo]( It contains the source code for Flutter's first-party packages (i.e., packages developed by the core Flutter team). Check the [`packages`](./packages) directory to see all packages. These packages are also available on [pub]( ## Issues Please file any issues, bugs, or feature requests in the [main flutter repo]( Issues pertaining to this repository are [labeled ""package""]( ## Contributing If you wish to contribute a new package to the Flutter ecosystem, please see the documentation for [developing packages]( You can store your package source code in any GitHub repository (the present repo is only intended for packages developed by the core Flutter team). Once your package is ready you can [publish]( to the [pub repository]( If you wish to contribute a change to any of the existing packages in this repo, please review our [contribution guide]( and send a [pull request]( ## Packages These are the packages hosted in this repository: | Package | Pub | Points | Popularity | Issues | Pull requests | |---------|-----|--------|------------|--------|---------------| | [animations](./packages/animations/) | []( | []( | []( | []( | []( | | [camera](./packages/camera/) | []( | []( | []( | []( | []( | | [cross\_file](./packages/cross_file/) | []( | []( | []( | []( | []( | | [css\_colors](./packages/css_colors/) | []( | []( | []( | []( | []( | | [cupertino\_icons](./third_party/packages/cupertino_icons/) | []( | []( | []( | []( | []( | | [espresso](./packages/espresso/) | []( | []( | []( | []( | []( | | [extension\_google\_sign\_in\_as\_googleapis\_auth](./packages/extension_google_sign_in_as_googleapis_auth/) | []( | []( | []( | []( | []( | | [file\_selector](./packages/file_selector/) | []( | []( | []( | []( | []( | | [flutter\_adaptive\_scaffold](./packages/flutter_adaptive_scaffold/) | []( | []( | []( | []( | []( | | [flutter\_image](./packages/flutter_image/) | []( | []( | []( | []( | []( | | [flutter\_lints](./packages/flutter_lints/) | []( | []( | []( | []( | []( | | [flutter\_markdown](./packages/flutter_markdown/) | []( | []( | []( | []( | []( | | [flutter\_plugin\_android\_lifecycle](./packages/flutter_plugin_android_lifecycle/) | []( | []( | []( | []( | []( | | [flutter\_template\_images](./packages/flutter_template_images/) | []( | []( | []( | []( | []( | | [go\_router](./packages/go_router/) | []( | []( | []( | []( | []( | | [go\_router\_builder](./packages/go_router_builder/) | []( | []( | []( | []( | []( | | [google\_maps\_flutter](./packages/google_maps_flutter/) | []( | []( | []( | []( | []( | | [google\_sign\_in](./packages/google_sign_in/) | []( | []( | []( | []( | []( | | [image\_picker](./packages/image_picker/) | []( | []( | []( | []( | []( | | [interactive\_media\_ads](./packages/interactive_media_ads/) | []( | []( | []( | []( | []( | | [in\_app\_purchase](./packages/in_app_purchase/) | []( | []( | []( | []( | []( | | [ios\_platform\_images](./packages/ios_platform_images/) | []( | []( | []( | []( | []( | | [local\_auth](./packages/local_auth/) | []( | []( | []( | []( | []( | | [metrics\_center](./packages/metrics_center/) | []( | []( | []( | []( | []( | | [multicast\_dns](./packages/multicast_dns/) | []( | []( | []( | []( | []( | | [palette\_generator](./packages/palette_generator/) | []( | []( | []( | []( | []( | | [path\_provider](./packages/path_provider/) | []( | []( | []( | []( | []( | | [pigeon](./packages/pigeon/) | []( | []( | []( | []( | []( | | [platform](./packages/platform/) | []( | []( | []( | []( | []( | | [pointer\_interceptor](./packages/pointer_interceptor/) | []( | []( | []( | []( | []( | | [plugin\_platform\_interface](./packages/plugin_platform_interface/) | []( | []( | []( | []( | []( | | [process](./packages/process/) | []( | []( | []( | []( | []( | | [quick\_actions](./packages/quick_actions/) | []( | []( | []( | []( | []( | | [google\_identity\_services\_web](./packages/google_identity_services_web/) | []( | []( | []( | []( | []( | | [rfw](./packages/rfw/) | []( | []( | []( | []( | []( | | [shared\_preferences](./packages/shared_preferences/) | []( | []( | []( | []( | []( | | [standard\_message\_codec](./packages/standard_message_codec/) | []( | []( | []( | []( | []( | | [two\_dimensional\_scrollables](./packages/two_dimensional_scrollables/) | []( | []( | []( | []( | []( | | [url\_launcher](./packages/url_launcher/) | []( | []( | []( | []( | []( | | [video\_player](./packages/video_player/) | []( | []( | []( | []( | []( | | [web\_benchmarks](./packages/web_benchmarks/) | []( | []( | []( | []( | []( | | [webview\_flutter](./packages/webview_flutter/) | []( | []( | []( | []( | []( | | [xdg\_directories](./packages/xdg_directories/) | []( | []( | []( | []( | []( |"
hive,isar/hive,3895,387,['Dart'],"['flutter', 'dart', 'key-value', 'nosql', 'encryption']","Fast, Enjoyable & Secure NoSQL Database Hive is a lightweight and buzzing-fast key-value database made for Flutter and Dart. ## Features - Bee everywhere: mobile, desktop, browser - Buzzing speed: Faster than a bee on caffeine! - Sweet, powerful, & intuitive API - Queen's Guard: Encryption built right in. - Thinking in swarms: Multi-isolate support. - Everything a bee needs and more! > Bee fact: A single bee can visit 5,000 flowers in a day! ## Buzz into Action Feeling the excitement? Great! Let's help you take your first flight with Hive. #### Add dependencies To kickstart the journey add `hive`, `isar_flutter_libs` and `path_provider` to your `pubspec.yaml`. ```yaml dependencies: hive: ^4.0.0 isar_flutter_libs: ^4.0.0-dev.13 path_provider: ^2.1.0 ``` Pssst! `path_provider` will help you to find the optimal directory for each platform. #### Designate a Home Hive needs a place to call home. Using `path_provider` we can find a valid directory. ```dart void main() async { WidgetsFlutterBinding.ensureInitialized(); final dir = await getApplicationDocumentsDirectory(); Hive.defaultDirectory = dir.path; // ... } ``` #### And... Action! Woohoo! You're all set. Jump in and let your Hive adventure begin! ```dart import 'package:hive/hive.dart'; final box = Hive.box(); box.put('name', 'David'); final name = box.get('name'); print('Name: $name'); ``` > Bee fact: Honeybees can fly at a speed of up to 30 kilometers per hour! # Hive Handbook In Hive, data is neatly organized into containers known as boxes. Think of boxes as tables you'd find in SQL, but far more flexible they don't stick to a set structure and can contain a variety of data. Boxes can be encrypted to store sensitive data. ## Table of Contents Want to jump to a specific section? Here's a handy table of contents: - [Opening Boxes](#-opening-boxes) - [Closing Boxes](#-bidding-adieu-closing-boxes) - [Inserting](#-filling-the-honeycomb-inserting-data) - [Reading](#-extracting-honey-i-mean-data) - [Deleting](#-deleting-data) - [Using Boxes like Lists](#-using-boxes-like-lists) - [Type safety](#-type-safety) - [Non-primitive Objects](#-bee-yond-the-basics-non-primitive-objects) - [Transactions](#-transactions) - [Isolates](#-the-isolate-dance) - [FAQ](#-buzzworthy-questions) > Bee fact: Bees have five eyes three simple eyes on top of the head, and two compound eyes, with numerous hexagonal facets. ### Opening Boxes Your journey with Hive begins with opening your first box. Trust me, it's unbee-lievably easy: ```dart final box = Hive.box(name: 'myBox'); ``` When you call `Hive.box(name: 'myBox')` for the first time with a given name, Hive will create a new box for you. If you call it again with the same name, Hive will return the already existing box. You can also use `Hive.box()` without providing a name. In this case, Hive will return the default box. There are optional parameters you can pass to `Hive.box()`: | Parameter | Description | | --------------- | ------------------------------------------------------------------------- | | `name` | Label your box with a distinct name | | `directory` | Select a home for your box. If omitted, Hive uses the `defaultDirectory`. | | `encryptionKey` | Hand over this key, and Hive will encrypt your box. Keep it safe! | | `maxSizeMiB` | The maximum size of the box in MiB. Go for a modest number. | > Bee fact: Beeswax, which is secreted from the abdomen of worker bees, is used to construct the honeycomb. ### Bidding Adieu: Closing Boxes It's not advised to close boxes that might be accessed again. This prevents unnecessary overhead of reopening the box and ensures smooth data retrieval. To close a box just call `box.close()`. Wipe the box from the face of the earth with `box.deleteFromDisk()`. > Bee fact: When a bee finds a good source of nectar, it flies back to the hive and shows its friends where the nectar source is by doing a dance. ### Filling the Honeycomb: Inserting Data Once we have a box, it's time to fill it with sweet data! At its core, a box is just a key-value store. String keys are mapped to arbitrary primitive values. You can think of a box as a persisted `Map`. ```dart final box = Hive.box(); box.put('danceMoves', 'Waggle Dance'); box.put('wingSpeed', 200); ``` Updating values? If a particular key already exists, Hive simply updates its corresponding value. And complex types like lists and maps? They're in too! ```dart box.put('friends', ['Buzzy', 'Stinger', 'Honey']); box.put('memories', {'firstFlight': 'Sunny Day', 'bestNectar': 'Rose'}); ``` Instead of `.put()` you prefer the syntax of maps? Hive gets you: ```dart box['danceMoves'] = 'Round Dance'; box['wingSpeed'] = 220; ``` Got a bucket of honey facts? Drop them all at once with `box.putAll()`: ```dart box.putAll({'favoriteFlower': 'Lavender', 'wingSpeed': 210}); ``` > Bee fact: A single bee colony can produce anywhere from 30 to 100 pounds of honey in a year, depending on the availability of nectar sources. ### Extracting Honey... I mean, Data! Need a snippet of info from your Hive? No need to don the beekeeper suit; just scoop it out using `box.get()` or `box.getAll()`. If a key doesn't exist, `box.get()` simply return a `null`. But fret not; you can tell it to have a backup plan: ```dart final box = Hive.box(name: 'beeees'); final fav = box.get('favoriteFlower'); final moves = box.get('danceMoves', defaultValue: 'waggle'); ``` Oh, and if you're feeling fancy, use the `[]` operator for a more stylish approach: ```dart final fav = box['favoriteFlower']; final moves = box['danceMoves'] ?? 'waggle'; ``` > Bee fact: Worker bees are the only bees most people ever see flying around outside the hive. They're female, and their roles are to forage for food, build and protect the hive, and more. ### Deleting Data Time for some spring cleaning in the hive! To remove a single entry from your box, use `box.delete()`: ```dart final deleted = box.delete('lavenderHoney'); print('Honey eaten: $deleted'); // Honey eaten: true ``` Perhaps it's time for a complete reset, making space for a fresh batch of honey. If you're looking to remove all key-value pairs from a box, use `box.clear()`: ```dart box.clear(); ``` > Bee fact: Bees have been around for more than 30 million years! Their long history predates the existence of humans and even dinosaurs. ### Using Boxes like Lists In the bee world, honeycombs aren't just random compartments; they're methodically organized. Similarly, while we've been viewing Hive boxes as maps so far, they can be used just like lists: ```dart final box = Hive.box(); box.add('Rose'); box.add('Tulip'); print(box.getAt(0)); // Rose print(box.getAt(1)); // Tulip ``` But remember, bees can't retrieve honey from a comb that's empty or doesn't exist. Likewise, index-based operations will throw an error if you try an index out of bounds: ```dart final box = Hive.box(); box.add('Daisy'); print(box.getAt(1)); // Error! This will make the bees buzz in confusion ``` Even if we insert a key-value pair we can still access the values by index. ```dart final box = Hive.box(); box.add('Lily'); box.put('key', 'Orchid'); print(box.getAt(0)); // Lily print(box.getAt(1)); // Orchid ``` Of course, we can also use the `[]` operator in combination with indexes : ```dart final box = Hive.box(); box.add('Marigold'); print(box[0]); // Marigold box[0] = 'Daffodil'; box[1] = 'Bluebell'; // Error! This will get the bees in a whirl ``` > Bee fact: To produce one pound of honey, a hive's bees must visit 2 million flowers and fly over 55,000 miles. ### Type safety Safety is the bee's priority! To keep your data sweet and pure boxes have an optional generic type parameter. It allows you to store only values of a specific type in a box: ```dart final box = Hive.box(name: 'BeeTreasures'); box.put('DaisyDance', 'SweetNectarShake'); box.put('RoseRumba', 'GoldenPollenParty'); box.put('TulipTango', 777); // Error - You can't fool the bees! ``` Make sure to use the same type whenever you get the box. Otherwise, you'll get an error: ```dart Hive.box(name: 'BeeTreasures'); // Error - We already have a String box! ``` > Bee fact: Bees have two stomachs. One is for eating, and the other is for storing nectar collected from flowers or water so they can carry it back to their hive. Talk about a sweet backpack! ### Bee-yond the Basics: Non-primitive Objects Hive goes beyond storing just basic data types! Along with primitives, lists, and maps, Hive can store any Dart object of your liking. The only buzz you need to know? Your object should come equipped with a `.fromJson()` and `.toJson()` method: ```dart class Bee { Bee({required this.name, required this.role}); factory Bee.fromJson(Map json) => Bee( name: json['name'] as String, role: json['role'] as String, ); final String name; final String role; Map toJson() => { 'name': name, 'role': role, }; } ``` Before our bee-friends can buzz around in Hive, you need to do the beekeeper's job and register the `Bee` class: ```dart Hive.registerAdapter('Bee', Bee.fromJson); ``` Now, you're all set to let your bees fly: ```dart final box = Hive.box(); final bumble = Bee(name: 'Bumble', role: 'Worker'); box.put('BumbleID', bumble); print(box.get('BumbleID')); // Bumble - Worker ``` > Bee fact: Bees are responsible for pollinating about one-third of the world's food crops. ### Transactions Transactions are an efficient way to update multiple values at once. They are also useful if you want to make sure that a Box is not changed by other code while you are working with it. ```dart final box = Hive.box(); box.write(() { box.store('nectar1', 'GoldenNectar'); box.store('nectar2', 'WildflowerBrew'); box.store('nectar3', 'CloverDew'); }); box.read(() { box.get('nectar1'); // GoldenNectar }); ``` Changes made in a transaction are always atomic. Either all changes are applied or none of them. So if an error occurs during a transaction, the box will not be changed. ```dart final box = Hive.box(); box.put('honeyLevel', 5); box.write(() { box.put('honeyLevel', 6); ... [TRUNCATED]"
flutter-folio,gskinnerTeam/flutter-folio,3807,782,"['Dart', 'C++', 'CMake']",[],"# Flutter Folio A demo app showcasing how Flutter can deliver a great multi-platform experience, targeting iOS, Android, MacOS, Windows, Linux, and web. Built by [gskinner]( in partnership with Google, Flutter Folio purposefully considers user expectations, input devices and idioms for each platform, ensuring it feels at home on every device. In addition to forking and reviewing the [MIT licensed](LICENSE.md) code available here, you can check out more information on the [Flutter Folio Showcase Website]( ### About gskinner We exist to build innovative digital experiences for smart clients, and we love how easy Flutter makes that experience. Don't hesitate to [stop by our site]( to learn more about what we do. We'd love to hear from you! ### Demo Builds To preview the app you can download from the app store on your device by visiting: ### Installation If you're new to Flutter the first thing you'll need is to follow the [setup instructions]( Once Flutter is setup, you can use the latest `stable` channel: * Run `flutter channel stable` * Run `flutter upgrade` Once you're on `dev` and desktop is enabled, you're ready to run the app: * `flutter run -d windows` * `flutter run -d macos` * `flutter run -d linux` * `flutter run -d android` * `flutter run -d ios` * `flutter run -d web` If you re-start your IDE, you should also see a new launch option for your current desktop platform. ### Client Keys This repo includes a set of Keys for Cloudinary and Firebase that are on the free pricing plans. Depending on traffic, these may reach their limit. If that happens, you will need to provide your own keys in order to run the app locally, those can be found in `AppKeys.dart`. These limits should refresh each month, so your mileage will vary here. ### License This application is released under the [MIT license](LICENSE.md). You can use the code for any purpose, including commercial projects. []("
wsa_pacman,alesimula/wsa_pacman,3805,823,"['Dart', 'C++', 'CMake']",[],"# wsa_pacman A GUI package manager and package installer for Windows Subsystem for Android (WSA). Currently provides a double-click GUI installer for .apk and .xapk files that shows app information (package, icon, version and permissions), allows normal installations as well as upgrades and downgrades. The app additionally provides a button to open Android settings and one to open the ""Manage Applications"" Android settings page, from which you can uninstall or disable applications and grant or revoke permissions ## Settings - Autostart WSA - on/off - Android port - Default: 58526 - Language - [All options](./locale/) - Theme mode - System - Dark - Light - Window transparency (mica) - Full - Partial - Disabled - Adaptive icon shape - Squircle - Circle - Rounded square - Disabled ## FAQ **Q:** WSA PacMan is always showing the Offline status, why is that? **A:** First things first make sure WSA is installed (duh); Open the 'Windows Subsystem for Android Settings' app, in the Developer tab and make sure the 'Developer mode' switch is enabled; inside manage developer settings, make sure the 'USB debugging' option is enabled. Should all of the above fail, [try following this procedure]( make sure to check the 'always allow' option. ## **Q:** Can I use WSA PacMan on older versions of Windows (eg. Windows 10)? **A:** WSA PacMan depends on Windows Subsystem for Linux, which is only ***officially*** supported on Windows 11. However, you may be able to install WSA on Windows 10 [using this project]( by JimDude7404 and following the step-by-step guide on the GitHub page. ## **Q:** Can i install the Play Store? **A:** The play store is not _officially_ supported on WSA, and at the moment it is only possible to install it using an unofficial WSA build. I recommend installing the [Aurora Store]( instead, which is an unofficial Play Store client; but if you really want the Play Store and other Google apps, [check out this project]( ## More screenshots"
dart-sass,sass/dart-sass,3803,347,"['Dart', 'HTML', 'Shell']","['sass', 'css-preprocessor', 'dart', 'dart-sass']","A [Dart][dart] implementation of [Sass][sass]. **Sass makes CSS fun**. [dart]: [sass]: * [Using Dart Sass](#using-dart-sass) * [From Chocolatey or Scoop (Windows)](#from-chocolatey-or-scoop-windows) * [From Homebrew (macOS)](#from-homebrew-macos-or-linux) * [Standalone](#standalone) * [From npm](#from-npm) * [Dart Sass in the Browser](#dart-sass-in-the-browser) * [Legacy JavaScript API](#legacy-javascript-api) * [Using Sass with Jest](#using-sass-with-jest) * [From Pub](#from-pub) * [`sass_api` Package](#sass_api-package) * [From Source](#from-source) * [In Docker](#in-docker) * [Why Dart?](#why-dart) * [Compatibility Policy](#compatibility-policy) * [Browser Compatibility](#browser-compatibility) * [Node.js Compatibility](#nodejs-compatibility) * [Invalid CSS](#invalid-css) * [Embedded Dart Sass](#embedded-dart-sass) * [Usage](#usage) * [Behavioral Differences from Ruby Sass](#behavioral-differences-from-ruby-sass) ## Using Dart Sass There are a few different ways to install and run Dart Sass, depending on your environment and your needs. ### From Chocolatey or Scoop (Windows) If you use [the Chocolatey package manager]( or [the Scoop package manager]( for Windows, you can install Dart Sass by running ```cmd choco install sass ``` or ```cmd scoop install sass ``` That'll give you a `sass` executable on your command line that will run Dart Sass. See [the CLI docs][cli] for details. [cli]: ### From Homebrew (macOS or Linux) If you use [the Homebrew package manager]( you can install Dart Sass by running ```sh brew install sass/sass/sass ``` That'll give you a `sass` executable on your command line that will run Dart Sass. ### Standalone You can download the standalone Dart Sass archive for your operating systemcontaining the Dart VM and the snapshot of the executablefrom [the GitHub release page][]. Extract it, [add the directory to your path][], restart your terminal, and the `sass` executable is ready to run! [the GitHub release page]: [add the directory to your path]: ### From npm Dart Sass is available, compiled to JavaScript, [as an npm package][npm]. You can install it globally using `npm install -g sass` which will provide access to the `sass` executable. You can also add it to your project using `npm install --save-dev sass`. This provides the executable as well as a library: [npm]: ```js const sass = require('sass'); const result = sass.compile(scssFilename); // OR // Note that `compileAsync()` is substantially slower than `compile()`. const result = await sass.compileAsync(scssFilename); ``` See [the Sass website][js api] for full API documentation. [js api]: #### Dart Sass in the Browser The `sass` npm package can also be run directly in the browser. It's compatible with all major web bundlers as long as you disable renaming (such as [`--keep-names`] in esbuild). You can also import it directly from a browser as an ECMAScript Module without any bundling (assuming `node_modules` is served as well): [`--keep-names`]: ```html ``` Or from a CDN: ```html ``` Or even bundled with all its dependencies: ```html ``` Since the browser doesn't have access to the filesystem, the [`compile()`] and `compileAsync()` functions aren't available for it. If you want to load other files, you'll need to pass a [custom importer] to [`compileString()`] or [`compileStringAsync()`]. The [legacy API] is also not supported in the browser. [`compile()`]: [`compileAsync()`]: [custom importer]: [`compileString()`]: [`compileStringAsync()`]: [legacy API]: #legacy-javascript-api #### Legacy JavaScript API Dart Sass also supports an older JavaScript API that's fully compatible with [Node Sass] (with a few exceptions listed below), with support for both the [`render()`] and [`renderSync()`] functions. This API is considered deprecated and will be removed in Dart Sass 2.0.0, so it should be avoided in new projects. [Node Sass]: [`render()`]: [`renderSync()`]: Sass's support for the legacy JavaScript API has the following limitations: * Only the `""expanded""` and `""compressed""` values of [`outputStyle`] are supported. * Dart Sass doesn't support the [`precision`] option. Dart Sass defaults to a sufficiently high precision for all existing browsers, and making this customizable would make the code substantially less efficient. * Dart Sass doesn't support the [`sourceComments`] option. Source maps are the recommended way of locating the origin of generated selectors. [`outputStyle`]: [`precision`]: [`sourceComments`]: #### Using Sass with Jest If you're using [Jest] to run your tests, be aware that it has a [longstanding bug] where its default test environment breaks JavaScript's built-in [`instanceof` operator]. Dart Sass's JS package uses `instanceof` fairly heavily, so in order to avoid breaking Sass you'll need to install [`jest-environment-node-single-context`] and add `testEnvironment: 'jest-environment-node-single-context'` to your Jest config. [Jest]: [longstanding bug]: [`instanceof` operator]: [`jest-environment-node-single-context`]: ### From Pub If you're a Dart user, you can install Dart Sass globally using `pub global activate sass`, which will provide a `sass` executable. You can also add it to your pubspec and use it as a library. We strongly recommend importing it with the prefix `sass`: ```dart import 'package:sass/sass.dart' as sass; void main(List args) { print(sass.compile(args.first)); } ``` See [the Dart API docs][api] for details. [api]: #### `sass_api` Package Dart users also have access to more in-depth APIs via the [`sass_api` package]. This provides access to the Sass AST and APIs for resolving Sass loads without running a full compilation. It's separated out into its own package so that it can increase its version number independently of the main `sass` package. [`sass_api` package]: ### From Source Assuming you've already checked out this repository: 1. [Install Dart]( If you download an archive manually rather than using an installer, make sure the SDK's `bin` directory is on your `PATH`. 2. [Install Buf]. This is used to build the protocol buffers for the [embedded compiler]. 3. In this repository, run `dart pub get`. This will install Dart Sass's dependencies. 4. Run `dart run grinder protobuf`. This will download and build the embedded protocol definition. 5. Run `dart bin/sass.dart path/to/file.scss`. [Install Buf]: [embedded compiler]: #embedded-dart-sass That's it! ### In Docker You can install and run Dart Sass within Docker using the following Dockerfile commands: ```Dockerfile # Dart stage FROM bufbuild/buf AS buf FROM dart:stable AS dart # Add your scss files COPY --from=another_stage /app /app # Include Protocol Buffer binary COPY --from=buf /usr/local/bin/buf /usr/local/bin/ WORKDIR /dart-sass RUN git clone . && \ dart pub get && \ dart run grinder protobuf # This is where you run sass.dart on your scss file(s) RUN dart ./bin/sass.dart /app/sass/example.scss /app/public/css/example.css ``` ## Why Dart? Dart Sass has replaced Ruby Sass as the canonical implementation of the Sass language. We chose Dart because it presented a number of advantages: * It's fast. The Dart VM is highly optimized, and getting faster all the time (for the latest performance numbers, see [`perf.md`][perf]). It's much faster than Ruby, and close to par with C++. * It's portable. The Dart VM has no external dependencies and can compile applications into standalone snapshot files, so we can distribute Dart Sass as only three files (the VM, the snapshot, and a wrapper script). Dart can also be compiled to JavaScript, which makes it easy to distribute Sass through npm, which the majority of our users use already. * It's easy to write. Dart is a higher-level language than C++, which means it doesn't require lots of hassle with memory management and build systems. It's also statically typed, which makes it easier to confidently make large refactors than with Ruby. * It's friendlier to contributors. Dart is substantially easier to learn than Ruby, and many Sass users in Google in particular are already familiar with it. More contributors translates to faster, more consistent development. [perf]: ## Compatibility Policy For the most part, Dart Sass follows [semantic versioning][]. We consider all of the following to be part of the versioned API: [semantic versioning]: * The Sass language semantics implemented by Dart Sass. * The Dart API. * The JavaScript API. * The command-line interface. Because Dart Sass has a single version that's shared across the Dart, JavaScript, and standalone distributions, this may mean that we increment the major version number when there are in fact no breaking changes for one or more distributions. However, we will attempt to limit the number of breaking changes we make and group them in as few releases as possible to minimize churn. We strongly encourage users to use [the changelog][] for a full understanding of all the changes in each release. [the changelog]: There is one exception where breaking changes may be made outside of a major version revision. It is occasionally the case that CSS adds a feature that's incompatible with existing Sass syntax in some way. Because Sass is committed to full CSS compatibility, we occasionally need to break compatibility with old Sass code in order to remain compatible with CSS. In these cases, we will first release a version of Sass that emits deprecation warnings for any stylesheets whose behavior will change. Then, at least three months after the release of a version with these deprecation warnings, we will release a minor version with the breaking change to the Sass language semantics. ### Browser Compatibility In general, we consider any change to Dart Sass's CSS output that would cause that CSS to stop working in a real browser to be a breaking change. However, there are some cases where such a change would have substantial benefits and would only negatively affect a small minority of rarely-used browsers. We don't want to have to block such a change on a m... [TRUNCATED]"
flutter_easy_refresh,xuelongqy/flutter_easy_refresh,3801,621,"['Dart', 'C++', 'CMake']","['refresh', 'load-more', 'easy-refresh', 'flutter']","# flutter_easy_refresh [](/LICENSE) []( []( ## English | []( Just like the name, EasyRefresh can easily implement pull-down refresh and pull-up load on Flutter applications. It supports almost all Flutter Scrollable widgets. Its function is very similar to Android's SmartRefreshLayout, and it also absorbs the advantages of many third-party libraries. EasyRefresh integrates various styles of Header and Footer, but it has no limitations, you can easily customize it. Using Flutter's powerful animations, even just a simple control can be done. The goal of EasyRefresh is to create a powerful, stable and mature pull-to-refresh framework for Flutter. ### [Online demo]( ### [APK download]( ### [API reference]( ## Features: - Supports all scrollable widgets - Scrolling physics scope, exactly matching scrollable widgets - Integrate multiple cool Header and Footer - Support custom styles to achieve various animation effects - Support pull-down refresh, pull-up load (Can be triggered and finished with a controller) - Support indicator position setting, combined with listeners can also be placed in any position - Support refresh when the page starts, and customize the view - Support safe area, no more occlusion - Customize scroll parameters to allow lists to have different scrolling feedback and inertia ## Sample #### 1. Default constructor - In the child scope, all scrolling components will share one physics. If there is scroll nesting, use EasyRefresh.builder or set the scope with ScrollConfiguration ```dart EasyRefresh( onRefresh: () async { .... }, onLoad: () async { .... }, child: ListView(), ); ``` #### 2. Builder constructor ```dart EasyRefresh.builder( onRefresh: () async { .... return IndicatorResult.success; }, onLoad: () async { .... }, childBuilder: (context, physics) { return ListView( physics: physics, ); }, ); ``` #### 3. Indicator locate ```dart EasyRefresh( header: Header( position: IndicatorPosition.locator, ), footer: Footer( position: IndicatorPosition.locator, ), onRefresh: () async { .... }, onLoad: () async { .... return IndicatorResult.noMore; }, child: CustomScrollView( slivers: [ SliverAppBar(), const HeaderLocator.sliver(), ... const FooterLocator.sliver(), ], ), ); ``` #### 4. Use controller ```dart EasyRefreshController _controller = EasyRefreshController( controlFinishRefresh: true, controlFinishLoad: true, ); .... EasyRefresh( controller: _controller, onRefresh: () async { .... _controller.finishRefresh(); _controller.resetFooter(); }, onLoad: () async { .... _controller.finishLoad(IndicatorResult.noMore); }, .... ); .... _controller.callRefresh(); _controller.callLoad(); ``` #### 5. Specify Header and Footer ```dart EasyRefresh( header: MaterialHeader(), footer: MaterialFooter(), child: ListView(), .... ); // Global EasyRefresh.defaultHeaderBuilder = () => ClassicHeader(); EasyRefresh.defaultFooterBuilder = () => ClassicFooter(); ``` #### 6. NestedScrollView ```dart EasyRefresh.builder( header: MaterialHeader( clamping: true, ), onRefresh: () async { .... }, onLoad: () async { .... }, childBuilder: (context, physics) { return NestedScrollView( physics: physics, body: ListView( physics: physics, ); ); }, ); // or EasyRefresh.builder( header: MaterialHeader( clamping: true, position: IndicatorPosition.locator, ), onRefresh: () async { .... }, onLoad: () async { .... }, childBuilder: (context, physics) { return NestedScrollView( physics: physics, headerSliverBuilder: (context, innerBoxIsScrolled) { return [ const HeaderLocator.sliver(clearExtent: false), .... ]; }, body: ListView( physics: physics, ); ); }, ); ``` ## Feel free to contribute One's maintenance is lonely. If you have good suggestions and changes, feel free to contribute your code. If you have really cool styles, It's even cooler to share with everyone. #### Thanks to all the people who already contributed! ## QQ Group - 554981921 #### Into the group of instructions The group is not only solve the problem of EasyRefresh, any Flutter related issues can be discussed. Just as its name, craigslist, as long as there is time, group of Lord will help you solve problems together. ## Thanks [SmartRefreshLayout]( [flutter_spinkit]( ## Licenses ``` MIT License Copyright (c) 2018 xuelongqy Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ```"
dioxus,DioxusLabs/dioxus,18755,716,"['Rust', 'R', 'TypeScript']","['rust', 'virtualdom', 'react', 'ui', 'wasm']","Website | Examples | Guide | | PT-BR | | Trke Build for web, desktop, and mobile, and more with a single codebase. Zero-config setup, integrated hotreloading, and signals-based state management. Add backend functionality with Server Functions and bundle with our CLI. ```rust fn app() -> Element { let mut count = use_signal(|| 0); rsx! { h1 { ""High-Five counter: {count}"" } button { onclick: move |_| count += 1, ""Up high!"" } button { onclick: move |_| count -= 1, ""Down low!"" } } } ``` ## Unique features: - Cross-platform apps in three lines of code (web, desktop, mobile, server, and more) - [Ergonomic state management]( combines the best of React, Solid, and Svelte - Extremely performant, powered by Rust's fastest wasm-framework [sledgehammer]( - Integrated bundler for deploying to the web, macOS, Linux, and Windows - And more! Read the [take a tour of Dioxus]( ## Instant hot-reloading With one command, `dx serve` and your app is running. Edit your markup and styles and see the results in real time. Rust code hotreloading is not yet 1st class, but possible with [hot-lib-reloader]( ## Bundler for deploying to the web and desktop Simply run `dx bundle` and your app will be built and bundled with maximization optimizations. On the web, take advantage of [`.avif` generation, `.wasm` compression, minification]( and more. Build webapps weighing [less than 50kb]( and desktop/mobile apps less than 15mb. ## Fantastic documentation We've put a ton of effort into building clean, readable, and comprehensive documentation. All html elements and listeners are documented with MDN docs, and our docsite runs continuous integration with Dioxus itself to ensure that the docs are always up to date. Check out the [Dioxus website]( for guides, references, recipes, and more. Fun fact: we use the Dioxus website as a testbed for new diouxs features - [check it out!]( ## Emphasis on developer experience Dioxus prioritizes developer experience, and we've put a ton of effort into end-to-end tooling. We've built a [VSCode extension]( that autoformats your RSX code, converts HTML to RSX, and more. We've also built a very powerful [CLI]( that supports creating new apps, serving them, and cross-platform bundling, with deployment on the roadmap. ## Community Dioxus is a community-driven project, with a very active [Discord]( and [GitHub]( community. We're always looking for help, and we're happy to answer questions and help you get started. [Our SDK]( is community-run and we even have a [GitHub organization]( for the best Dioxus crates that receive free upgrades and support. ## Full-time core team Dioxus has grown from a side project to a small team of fulltime engineers. Thanks to the generous support of FutureWei, Satellite.im, the GitHub Accelerator program, we're able to work on Dioxus full-time. Our long term goal is for Dioxus to become self-sustaining by providing paid high-quality enterprise tools. If your company is interested in adopting Dioxus and would like to work with us, please reach out! ## Supported Platforms Web Tier 1 Support Render directly to the DOM using WebAssembly Pre-render with SSR and rehydrate on the client Simple ""hello world"" at about 50kb, comparable to React Built-in dev server and hot reloading for quick iteration Fullstack Tier 1 Support Suspense, hydration, and server-side rendering Quickly drop in backend functionality with server functions Extractors, middleware, and routing integrations Compatible with desktop and mobile! Desktop Tier 1 Support Render using Webview or - experimentally - with WGPU or Freya (skia) Zero-config setup. Simply `cargo run` or `dx serve` to build your app Full support for native system access without IPC Supports macOS, Linux, and Windows. Portable <3mb binaries Liveview Tier 1 Support Render apps - or just a single component - entirely on the server Integrations with popular Rust frameworks like Axum and Warp Extremely low-latency and ability to support 10,000+ simultaneous apps Mobile Tier 2 Support Render using Webview or - experimentally - with WGPU or Skia Support for iOS and Android Currently quite experimental, with lots of improvements coming throughout 2024 Terminal Tier 2 Support Render apps directly into your terminal, similar to ink.js Powered by the familiar flexbox and CSS model of the browser Built-in widgets like text input, buttons, and focus system ## Running the examples The examples in the top level of this repository can be run with `cargo run --example `. However, we encourage you to download the dioxus-cli and run the examples with `dx serve` since many examples also support web. When running for web, you either need to modify the Cargo.toml to disable the default desktop feature, or use ## Dioxus vs other frameworks We love all frameworks and enjoy watching innovation in the Rust ecosystem. In fact, many of our projects are shared with other frameworks. For example, our flex-box library [Taffy]( is used by [Bevy]( [Zed]( [Lapce]( [Iced]( and many more. Dioxus places an emphasis on a few key points that make it different from other frameworks: - **React-like**: we rely on concepts like components, props, and hooks to build UIs, with our state management being closer to Svelte than to SolidJS. - **HTML and CSS**: we lean completely into HTML and CSS, quirks and all. - **Renderer-agnostic**: you can swap out the renderer for any platform you want thanks to [our fast VirtualDOM]( - **Collaborative**: whenever possible, we spin out crates like [Taffy]( [magnanis]( [include_mdbook]( and [blitz]( so the ecosystem can grow together. ### Dioxus vs Tauri Tauri is a framework for building desktop (and soon, mobile) apps where your frontend is written in a web-based framework like React, Vue, Svelte, etc. Whenever you need to do native work, you can write Rust functions and call them from your frontend. - **Natively Rust**: Tauri's architecture limits your UI to either JavaScript or WebAssembly. With Dioxus, your Rust code is running natively on the user's machine, letting you do things like spawning threads, accessing the filesystem, without any IPC bridge. This drastically simplifies your app's architecture and makes it easier to build. You can build a Tauri app with Dioxus-Web as a frontend if you'd like. - **Different scopes**: Tauri needs to support JavaScript and its complex build tooling, limiting the scope of what you can do with it. Since Dioxus is exclusively focused on Rust, we're able to provide extra utilities like Server Functions, advanced bundling, and a native renderer. - **Shared DNA**: While Tauri and Dioxus are separate projects, they do share libraries like Tao and Wry: windowing and webview libraries maintained by the Tauri team. ### Dioxus vs Leptos Leptos is a library for building fullstack web-apps, similar to SolidJS and SolidStart. The two libraries share similar goals on the web, but have several key differences: - **Reactivity model**: Leptos uses signals for its underlying reactivity, while Dioxus opts for a VirtualDom and re-renders. While in theory signals are more efficient, in practice, Dioxus' VirtualDom performs little-to-no actual diffing (thanks to our [block-dom inspired templates]( and is [actually faster than Leptos]( - **Control flow**: Because Leptos uses signals for reactivity, you are constrained to Leptos' primitives for things like `for` loops and `if` statements. If you get this wrong, your app will lose reactivity, leading to hard to debug UI issues. With Dioxus, you can use iterators, regular Rust `for` loops and `if` statements, and your app will still be reactive. In practice, a Dioxus component to insert counters into a list might look like this: ```rust fn Counters() -> Element { let mut counters = use_signal(|| vec![0; 10]); rsx! { button { onclick: move |_| counters.push(counters.len()), ""Add Counter"" } ul { for idx in 0..counters.len() { li { button { onclick: move |_| counters.write()[idx] += 1, ""{counters.index(idx)}"" } button { onclick: move |_| { counters.remove(idx); }, ""Remove"" } } } } } } ``` [While in Leptos you would use the `` component.]( ```rust fn Counters() -> impl IntoView { let counters = RwSignal::new(vec![0; 10]); view! { ""Add Counter"" {Memo::new(move |_| counters.with(|n| n[idx]))} ""Remove"" } } ``` - **`Copy` state**: Dioxus 0.1 to 0.4 relied on lifetimes to relax the rules of Rust's borrow checker. This worked well for event handlers, but struggled around async. In Dioxus 0.5, we've switched to a [`Copy` state model]( borrowed from Leptos. - **Different scopes**: Dioxus provides renderers for web, desktop, mobile, LiveView, and more. We also maintain community libraries and a cross-platform SDK. The scope of this work is huge, meaning we've historically released at a slower cadence than Leptos. Leptos focuses on the fullstack web, with features that Dioxus doesn't have like ``-based streaming HTML, islands, `` components, and other web-specific features. Generally, web apps you build with Leptos will have a smaller footprint. - **Different DSLs**: While both frameworks target the web, Dioxus uses its own custom Rust-like DSL for building UIs while Leptos uses a more HTML-like syntax. We chose this to retain compatibility with IDE features like codefolding and syntax highlighting. Generally, Dioxus leans into more ""magic"" with its DSL. For example, dioxus will automatically format strings for you while Leptos can split up strings into static and dynamic segments. ```rust // dioxus rsx! { div { class: ""my-class"", enabled: true, ""Hello, {name}"" } } // leptos view! { ""Hello "" {name} } ``` ### Dioxus vs Yew Yew is a framework for building single-page web apps and initially served as an inspiration for Dioxus. Unfortunately, the architecture of Yew didn't support the various features we wanted, and thus Dioxus was born. - **Single-page apps**: Yew is designed exclusively for single-page web apps and is instrinsically tied to the web platform. Dioxus is fullstack and crossplatform, making it suitabl... [TRUNCATED]"
zellij,zellij-org/zellij,18481,578,"['Rust', 'Shell']","['workspace', 'terminal', 'multiplexer']","Zellij [Installation] [Screencasts & Tutorials] [Configuration] [Layouts] [FAQ] # What is this? [Zellij]( is a workspace aimed at developers, ops-oriented people and anyone who loves the terminal. Similar programs are sometimes called ""Terminal Multiplexers"". Zellij is designed around the philosophy that one must not sacrifice simplicity for power, taking pride in its great experience out of the box as well as the advanced features it places at its users' fingertips. Zellij is geared toward beginner and power users alike - allowing deep customizability, personal automation through [layouts]( true multiplayer collaboration, unique UX features such as floating and stacked panes, and a [plugin system]( allowing one to create plugins in any language that compiles to WebAssembly. You can get started by [installing]( Zellij and checking out the [Screencasts & Tutorials]( For more details about our future plans, read about upcoming features in our [roadmap](#roadmap). ## How do I install it? The easiest way to install Zellij is through a [package for your OS](./docs/THIRD_PARTY_INSTALL.md). If one is not available for your OS, you could download a prebuilt binary from the [latest release]( and place it in your `$PATH`. If you'd like, we could [automatically choose one for you](#try-zellij-without-installing). You can also install (compile) with `cargo`: ``` cargo install --locked zellij ``` #### Try Zellij without installing bash/zsh: ```bash bash <(curl -L zellij.dev/launch) ``` fish/xonsh: ```bash bash -c 'bash <(curl -L zellij.dev/launch)' ``` ## How do I start a development environment? * Clone the project * In the project folder, for debug builds run: `cargo xtask run` * To run all tests: `cargo xtask test` For more build commands, see [CONTRIBUTING.md](CONTRIBUTING.md). ## Configuration For configuring Zellij, please see the [Configuration Documentation]( ## What is the current status of the project? Zellij should be ready for everyday use, but it's still classified as a beta. This means that there might be a rare crash or wrong behaviour here and there, but that once found it should be fixed rather quickly. If this happens to you, we would be very happy if you could open an issue and tell us how to reproduce it as best you can. ## Roadmap Presented here is the project roadmap, divided into three main sections. These are issues that are either being actively worked on or are planned for the near future. ***If you'll click on the image, you'll be led to an SVG version of it on the website where you can directly click on every issue*** []( ## License MIT ## Sponsored by"
qdrant,qdrant/qdrant,18323,1241,"['Rust', 'Python', 'Shell']","['neural-network', 'matching', 'search-engine', 'knn-algorithm', 'hnsw']","Vector Search Engine for the next generation of AI applications **Qdrant** (read: _quadrant_) is a vector similarity search engine and vector database. It provides a production-ready service with a convenient API to store, search, and manage pointsvectors with an additional payload Qdrant is tailored to extended filtering support. It makes it useful for all sorts of neural-network or semantic-based matching, faceted search, and other applications. Qdrant is written in Rust , which makes it fast and reliable even under high load. See [benchmarks]( With Qdrant, embeddings or neural network encoders can be turned into full-fledged applications for matching, searching, recommending, and much more! Qdrant is also available as a fully managed **[Qdrant Cloud]( including a **free tier**. Quick Start Client Libraries Demo Projects Integrations Contact ## Getting Started ### Python ``` pip install qdrant-client ``` The python client offers a convenient way to start with Qdrant locally: ```python from qdrant_client import QdrantClient qdrant = QdrantClient("":memory:"") # Create in-memory Qdrant instance, for testing, CI/CD # OR client = QdrantClient(path=""path/to/db"") # Persists changes to disk, fast prototyping ``` ### Client-Server To experience the full power of Qdrant locally, run the container with this command: ```bash docker run -p 6333:6333 qdrant/qdrant ``` Now you can connect to this with any client, including Python: ```python qdrant = QdrantClient("" # Connect to existing Qdrant instance ``` Before deploying Qdrant to production, be sure to read our [installation]( and [security]( guides. ### Clients Qdrant offers the following client libraries to help you integrate it into your application stack with ease: - Official: - [Go client]( - [Rust client]( - [JavaScript/TypeScript client]( - [Python client]( - [.NET/C# client]( - [Java client]( - Community: - [Elixir]( - [PHP]( - [Ruby]( - [Java]( ### Where do I go from here? - [Quick Start Guide]( - End to End [Colab Notebook]( demo with SentenceBERT and Qdrant - Detailed [Documentation]( are great starting points - [Step-by-Step Tutorial]( to create your first neural network project with Qdrant ## Demo Projects ### Discover Semantic Text Search Unlock the power of semantic embeddings with Qdrant, transcending keyword-based search to find meaningful connections in short texts. Deploy a neural search in minutes using a pre-trained neural network, and experience the future of text search. [Try it online!]( ### Explore Similar Image Search - Food Discovery There's more to discovery than text search, especially when it comes to food. People often choose meals based on appearance rather than descriptions and ingredients. Let Qdrant help your users find their next delicious meal using visual search, even if they don't know the dish's name. [Check it out!]( ### Master Extreme Classification - E-commerce Product Categorization Enter the cutting-edge realm of extreme classification, an emerging machine learning field tackling multi-class and multi-label problems with millions of labels. Harness the potential of similarity learning models, and see how a pre-trained transformer model and Qdrant can revolutionize e-commerce product categorization. [Play with it online!]( More solutions Semantic Text Search Similar Image Search Recommendations Chat Bots Matching Engines Anomaly Detection ## API ### REST Online OpenAPI 3.0 documentation is available [here]( OpenAPI makes it easy to generate a client for virtually any framework or programming language. You can also download raw OpenAPI [definitions]( ### gRPC For faster production-tier searches, Qdrant also provides a gRPC interface. You can find gRPC documentation [here]( ## Features ### Filtering and Payload Qdrant can attach any JSON payloads to vectors, allowing for both the storage and filtering of data based on the values in these payloads. Payload supports a wide range of data types and query conditions, including keyword matching, full-text filtering, numerical ranges, geo-locations, and more. Filtering conditions can be combined in various ways, including `should`, `must`, and `must_not` clauses, ensuring that you can implement any desired business logic on top of similarity matching. ### Hybrid Search with Sparse Vectors To address the limitations of vector embeddings when searching for specific keywords, Qdrant introduces support for sparse vectors in addition to the regular dense ones. Sparse vectors can be viewed as an generalisation of BM25 or TF-IDF ranking. They enable you to harness the capabilities of transformer-based neural networks to weigh individual tokens effectively. ### Vector Quantization and On-Disk Storage Qdrant provides multiple options to make vector search cheaper and more resource-efficient. Built-in vector quantization reduces RAM usage by up to 97% and dynamically manages the trade-off between search speed and precision. ### Distributed Deployment Qdrant offers comprehensive horizontal scaling support through two key mechanisms: 1. Size expansion via sharding and throughput enhancement via replication 2. Zero-downtime rolling updates and seamless dynamic scaling of the collections ### Highlighted Features * **Query Planning and Payload Indexes** - leverages stored payload information to optimize query execution strategy. * **SIMD Hardware Acceleration** - utilizes modern CPU x86-x64 and Neon architectures to deliver better performance. * **Async I/O** - uses `io_uring` to maximize disk throughput utilization even on a network-attached storage. * **Write-Ahead Logging** - ensures data persistence with update confirmation, even during power outages. # Integrations Examples and/or documentation of Qdrant integrations: - [Cohere]( ([blogpost on building a QA app with Cohere and Qdrant]( - Use Cohere embeddings with Qdrant - [DocArray]( - Use Qdrant as a document store in DocArray - [Haystack]( - Use Qdrant as a document store with Haystack ([blogpost]( - [LangChain]( ([blogpost]( - Use Qdrant as a memory backend for LangChain. - [LlamaIndex]( - Use Qdrant as a Vector Store with LlamaIndex. - [OpenAI - ChatGPT retrieval plugin]( - Use Qdrant as a memory backend for ChatGPT - [Microsoft Semantic Kernel]( - Use Qdrant as persistent memory with Semantic Kernel ## Contacts - Have questions? Join our [Discord channel]( or mention [@qdrant_engine on Twitter]( - Want to stay in touch with latest releases? Subscribe to our [Newsletters]( - Looking for a managed cloud? Check [pricing]( need something personalised? We're at [info@qdrant.tech](mailto:info@qdrant.tech) ## Contributors Thanks to the people who contributed to Qdrant: Andrey Vasnetsov Andre Zayarni Joan Fontanals trean Konstantin Daniil Naumetc Viacheslav Poturaev Alexander Galibey HaiCheViet Marcin Puc Anton V. Arnaud Gourlay Egor Ivkov Ivan Pleshkov Daniil Anton Kaliaev Andre Julius Prokudin Alexander Tim Eggert Gabriel Velo Boqin Qin( ) Russ Cam erare-humanum Roman Titov Hozan George Kornl Csernai Luis Cosso Tim Vise Timon Vonk Yiping Deng Alex Huang Ibrahim M. Akrab stencillogic Moaz bin Mokhtar ## License Qdrant is licensed under the Apache License, Version 2.0. View a copy of the [License file]("
relay,facebook/relay,18213,1797,"['Rust', 'JavaScript', 'HTML']",[],"# [Relay]( []( []( Relay is a JavaScript framework for building data-driven React applications. * **Declarative:** Never again communicate with your data store using an imperative API. Simply declare your data requirements using GraphQL and let Relay figure out how and when to fetch your data. * **Colocation:** Queries live next to the views that rely on them, so you can easily reason about your app. Relay aggregates queries into efficient network requests to fetch only what you need. * **Mutations:** Relay lets you mutate data on the client and server using GraphQL mutations, and offers automatic data consistency, optimistic updates, and error handling. [See how to use Relay in your own project]( ## Example The [relay-examples]( repository contains an implementation of [TodoMVC]( To try it out: ``` git clone cd relay-examples/todo yarn yarn build yarn start ``` Then, just point your browser at ` ## Contribute We actively welcome pull requests, learn how to [contribute](./.github/CONTRIBUTING.md). ## Users We have a [community-maintained list]( of people and projects using Relay in production. ## License Relay is [MIT licensed](./LICENSE). ## Thanks We'd like to thank [the contributors]( that helped make Relay in open source possible. The open source project [`relay-hooks`]( allowed the community to experiment with Relay and React Hooks, and was a source of valuable feedback for us. The idea for the `useSubscription` hook originated in [an issue]( on that repo. Thank you @morrys for driving this project and for playing such an important role in our open source community. Thank you for helping make this possible!"
atuin,atuinsh/atuin,18129,500,"['Rust', 'TypeScript', 'Shell']","['shell', 'rust', 'zsh', 'history', 'fish']","magical shell history [English] | [] Atuin replaces your existing shell history with a SQLite database, and records additional context for your commands. Additionally, it provides optional and _fully encrypted_ synchronisation of your history between machines, via an Atuin server. exit code, duration, time and command shown As well as the search UI, it can do things like this: ``` # search for all successful `make` commands, recorded after 3pm yesterday atuin search --exit 0 --after ""yesterday 3pm"" make ``` You may use either the server I host, or host your own! Or just don't use sync at all. As all history sync is encrypted, I couldn't access your data even if I wanted to. And I **really** don't want to. ## Features - rebind `ctrl-r` and `up` (configurable) to a full screen history search UI - store shell history in a sqlite database - back up and sync **encrypted** shell history - the same history across terminals, across sessions, and across machines - log exit code, cwd, hostname, session, command duration, etc - calculate statistics such as ""most used command"" - old history file is not replaced - quick-jump to previous items with Alt-\ - switch filter modes via ctrl-r; search history just from the current session, directory, or globally - enter to execute a command, tab to edit ## Documentation - [Quickstart](#quickstart) - [Install](#install) - [Import]( - [Configuration]( - [Searching history]( - [Cloud history sync]( - [History stats]( - [Self host Atuin server]( - [Key binding]( - [Shell completions]( ## Supported Shells - zsh - bash - fish - nushell - xonsh ## Community ### Forum Atuin has a community forum, please ask here for help and support: ### Discord Atuin also has a community Discord, available [here]( # Quickstart ## With the default sync server This will sign you up for the default sync server, hosted by me. Everything is end-to-end encrypted, so your secrets are safe! Read more below for offline-only usage, or for hosting your own server. ``` # bash/zsh/etc bash <(curl --proto '= --tlsv1.2 -sSf # fish bash (curl --proto '= --tlsv1.2 -sSf | psub) atuin register -u -e atuin import auto atuin sync ``` Then restart your shell! > [!NOTE] > > **For Bash users**: The above sets up `bash-preexec` for necessary hooks, but > `bash-preexec` has limitations. For details, please see the [Bash](#bash) > section below. ## Offline only (no sync) ``` bash <(curl atuin import auto ``` By default, Atuin will check for updates. You can [disable update checks by modifying]( `config.toml`. Then restart your shell! ## Install Packaging status ### Script (recommended) The install script will help you through the setup, ensuring your shell is properly configured. It will also use one of the below methods, preferring the system package manager where possible (pacman, homebrew, etc etc). ``` # do not run this as root, root will be asked for if required bash <(curl ``` And then follow [the shell setup](#shell-plugin) ### With cargo It's best to use [rustup]( to get setup with a Rust toolchain, then you can run: ``` cargo install atuin ``` And then follow [the shell setup](#shell-plugin) #### Daemon Build Dependencies [Protoc]( is required to build the daemon, which is enabled by default. This is because we use protobufs for the message serialization ### Homebrew ``` brew install atuin ``` And then follow [the shell setup](#shell-plugin) ### MacPorts Atuin is also available in [MacPorts]( ``` sudo port install atuin ``` And then follow [the shell setup](#shell-plugin) ### Cave Atuin is available in the Exherbo Linux [rust repository]( ``` cave resolve -x repository/rust cave resolve -x atuin ``` ### Nix This repository is a flake, and can be installed using `nix profile`: ``` nix profile install ""github:atuinsh/atuin"" ``` Atuin is also available in [nixpkgs]( ``` nix-env -f '' -iA atuin ``` And then follow [the shell setup](#shell-plugin) ### Pacman Atuin is available in the Arch Linux [[extra] repository]( ``` pacman -S atuin ``` And then follow [the shell setup](#shell-plugin) ### Xbps Atuin is available in the Void Linux [repository]( ``` sudo xbps-install atuin ``` And then follow [the shell setup](#shell-plugin) ### Termux Atuin is available in the Termux package repository: ``` pkg install atuin ``` And then follow [the shell setup](#shell-plugin) ### From source ``` git clone cd atuin/crates/atuin cargo install --path . ``` And then follow [the shell setup](#shell-plugin) ## Shell plugin Once the binary is installed, the shell plugin requires installing. If you use the install script, this should all be done for you! After installing, remember to restart your shell. ### zsh ``` echo 'eval ""$(atuin init zsh)""' >> ~/.zshrc ``` #### Zinit ```sh zinit load atuinsh/atuin ``` #### Antigen ```sh antigen bundle atuinsh/atuin@main ``` ### bash Atuin works in `bash >= 3.1` when combined with either ble.sh or bash-preexec. We recommend to use Atuin with the recent versions of `bash >= 5`. #### [ble.sh]( Atuin works best in bash when using [ble.sh]( >= 0.4. With ble.sh (>= 0.4) installed, just add atuin to your .bashrc ```bash echo 'eval ""$(atuin init bash)""' >> ~/.bashrc ``` > [!IMPORTANT] > > Please make sure that the above line comes after sourcing ble.sh, so Atuin detects ble.sh. #### [bash-preexec]( [Bash-preexec]( can also be used, but you may experience minor problems of missing commands, ignored `HISTCONTROL`, wrong recorded duration and exit status of some commands. To use bash-preexec, download and initialize it ```bash curl -o ~/.bash-preexec.sh echo '[[ -f ~/.bash-preexec.sh ]] && source ~/.bash-preexec.sh' >> ~/.bashrc ``` Then set up Atuin ```bash echo 'eval ""$(atuin init bash)""' >> ~/.bashrc ``` > [!NOTE] > > bash-preexec cannot properly invoke the `preexec` hook for subshell commands > `(...)`, function definitions `func() { ...; }`, empty for-in-statements `for > i in; do ...; done`, etc., so those commands may not be recorded in the > Atuin's history. > > bash-preexec currently has an issue where it will stop honoring > `HISTCONTROL=ignorespace`. While Atuin will ignore commands prefixed with > whitespace, they may still end up in your bash history. Please check your > configuration! All other shells do not have this issue. > > Also, there can be problems in the recorded duration and the exit status of > some commands. > [!IMPORTANT] > > To use Atuin in `bash < 4` with bash-preexec, the option `enter_accept` needs > to be turned on (which is so by default). ### fish Add ``` atuin init fish | source ``` to your `is-interactive` block in your `~/.config/fish/config.fish` file ### Nushell Run in *Nushell*: ``` mkdir ~/.local/share/atuin/ atuin init nu | save -f ~/.local/share/atuin/init.nu ``` Add to `config.nu`: ``` source ~/.local/share/atuin/init.nu ``` ### Xonsh Add ``` execx($(atuin init xonsh)) ``` to the end of your `~/.xonshrc` # Security If you find any security issues, we'd appreciate it if you could alert ellie@atuin.sh # Contributors Made with [contrib.rocks]( [English]: ./README.md []: ./docs/zh-CN/README.md"
wasmer,wasmerio/wasmer,18012,755,"['Rust', 'C++', 'HTML']","['webassembly', 'wasm', 'wasi', 'emscripten', 'rust']","Wasmer is a _blazing fast_ and _secure_ [**WebAssembly**]( runtime that enables incredibly _lightweight containers_ to run anywhere: from _Desktop_ to the _Cloud_, _Edge_ and your browser. - **Secure** by default. No file, network, or environment access, unless explicitly enabled. - **Pluggable**. supports [**WASIX**]( [WASI]( and [Emscripten]( out of the box. - **Incredibly Fast**. Run WebAssembly at near-native speeds. - **Embeddable** [anywhere via Wasmer SDKs]( ### Install Wasmer ```sh curl -sSfL | sh ``` Other installation options (Powershell, Brew, Cargo, ...) _Wasmer can be installed from various package managers. Choose the one that fits best for your environment:_ * Powershell (Windows) ```powershell iwr -useb | iex ``` - Homebrew (macOS, Linux) ```sh brew install wasmer ``` - Scoop (Windows) ```sh scoop install wasmer ``` - Chocolatey (Windows) ```sh choco install wasmer ``` - Cargo binstall ```sh cargo binstall wasmer-cli ``` - Cargo _Note: All the available features are described in the [`wasmer-cli` crate docs]( ```sh cargo install wasmer-cli ``` > Looking for more installation options? See [the `wasmer-install` > repository]( to learn > more! > Note: You can also try Wasmer online in [wasmer.sh]( > ### Quickstart You can start by running [Cowsay]( ```bash $ wasmer run cowsay ""hello world"" _____________ < hello world > ------------- \ ^__^ \ (oo)\_______ (__)\ )\/\ ||----w | || || ``` > There are many more available packages, such as [`wasmer/python`]( or [`quickjs`]( [Create your own package]( or explore packages from the community: #### Here is what you can do next: - [Run a package]( - [Publish a package]( - [Deploy your website]( - [Read more about Wasmer]( ## Wasmer SDK You can use the Wasmer runtime **embedded in different languages** with the Wasmer SDK: | | Language | Package | Documentation | | ---------------- | ------------------------------------ | ------------------------------------- | ---------------------- | | ![Rust logo] | [**Rust**][Rust integration] | [`wasmer` Rust crate] | [Learn][rust docs] | | ![C logo] | [**C**][C integration] | [`wasm.h` header] | [Learn][c docs] | | ![C++ logo] | [**C++**][C integration] | [`wasm.hh` header] | [Learn][c docs] | | ![C# logo] | [**C#**][C# integration] | [`WasmerSharp` NuGet package] | [Learn][c# docs] | | ![D logo] | [**D**][D integration] | [`wasmer` Dub package] | [Learn][d docs] | | ![Python logo] | [**Python**][Python integration] | [`wasmer` PyPI package] | [Learn][python docs] | | ![JS logo] | [**Javascript**][JS integration] | [`@wasmerio` NPM packages] | [Learn][js docs] | | ![Go logo] | [**Go**][Go integration] | [`wasmer` Go package] | [Learn][go docs] | | ![PHP logo] | [**PHP**][PHP integration] | [`wasm` PECL package] | [Learn][php docs] | | ![Ruby logo] | [**Ruby**][Ruby integration] | [`wasmer` Ruby Gem] | [Learn][ruby docs] | | ![Java logo] | [**Java**][Java integration] | [`wasmer/wasmer-jni` Bintray package] | [Learn][java docs] | | ![R logo] | [**R**][R integration] | _no published package_ | [Learn][r docs] | | ![Postgres logo] | [**Postgres**][Postgres integration] | _no published package_ | [Learn][postgres docs] | | ![Swift logo] | [**Swift**][Swift integration] | _no published package_ | | | ![Zig logo] | [**Zig**][Zig integration] | _no published package_ | | | ![Dart logo] | [**Dart**][Dart integration] | [`wasm` pub package] | | | ![Crystal logo] | [**Crystal**][Crystal integration] | _no published package_ | [Learn][crystal docs] | | ![Lisp logo] | [**Lisp**][Lisp integration] | _no published package_ | | | ![Julia logo] | [**Julia**][Julia integration] | _no published package_ | | | ![VLang logo] | [**V**][vlang integration] | _no published package_ | | | ![Ocaml logo] | [**OCaml**][OCaml integration] | [`wasmer` OCaml package] | | [Missing a language?]( [rust logo]: [rust integration]: [`wasmer` rust crate]: [rust docs]: [c logo]: [c integration]: [`wasm.h` header]: [c docs]: [c++ logo]: [`wasm.hh` header]: [c# logo]: [c# integration]: [`wasmersharp` nuget package]: [c# docs]: [d logo]: [d integration]: [`wasmer` Dub package]: [d docs]: [python logo]: [python integration]: [`wasmer` pypi package]: [python docs]: [go logo]: [go integration]: [`wasmer` go package]: [go docs]: [php logo]: [php integration]: [`wasm` pecl package]: [php docs]: [js logo]: [js integration]: [`@wasmerio` npm packages]: [js docs]: [ruby logo]: [ruby integration]: [`wasmer` ruby gem]: [ruby docs]: [java logo]: [java integration]: [`wasmer/wasmer-jni` bintray package]: [java docs]: [elixir logo]: [elixir integration]: [elixir docs]: [`wasmex` hex package]: [r logo]: [r integration]: [r docs]: [postgres logo]: [postgres integration]: [postgres docs]: [swift logo]: [swift integration]: [zig logo]: [zig integration]: [dart logo]: [dart integration]: [`wasm` pub package]: [lisp logo]: [lisp integration]: [crystal logo]: [crystal integration]: [crystal docs]: [julia logo]: [julia integration]: [vlang logo]: [vlang integration]: [OCaml logo]: [OCaml integration]: [`wasmer` OCaml package]: ## Contribute We appreciate your help! We recommend reading the following guide on how to contribute into a complex project successfully: Check our docs on how to [build Wasmer from source]( or [test your changes]( ## Community Wasmer has an amazing community of developers and contributors. Welcome, please join us! - [Wasmer Community Discord]( - [Wasmer on Twitter]( -------- > _README also in: > [ -Chinese]( > [ Deutsch-German]( > [ Espaol-Spanish]( > [ Franais-French]( > [ -Japanese]( > [ -Korean]("
czkawka,qarmin/czkawka,17934,592,"['Rust', 'Fluent', 'Shell']","['duplicates', 'gtk-rs', 'rust', 'cleaner', 'similar-images']","**Czkawka** (_tchkavka_ (IPA: [kafka]), ""hiccup"" in Polish) is a simple, fast and free app to remove unnecessary files from your computer. **Krokiet** ((IPA: [krct]), ""croquet"" in Polish) same as above, but uses Slint frontend. ## Features - Written in memory-safe Rust - Amazingly fast - due to using more or less advanced algorithms and multithreading - Free, Open Source without ads - Multiplatform - works on Linux, Windows, macOS, FreeBSD and many more - Cache support - second and further scans should be much faster than the first one - CLI frontend - for easy automation - GUI frontend - uses GTK 4 or Slint frameworks - No spying - Czkawka does not have access to the Internet, nor does it collect any user information or statistics - Multilingual - support multiple languages like Polish, English or Italian - Multiple tools to use: - Duplicates - Finds duplicates based on file name, size or hash - Empty Folders - Finds empty folders with the help of an advanced algorithm - Big Files - Finds the provided number of the biggest files in given location - Empty Files - Looks for empty files across the drive - Temporary Files - Finds temporary files - Similar Images - Finds images which are not exactly the same (different resolution, watermarks) - Similar Videos - Looks for visually similar videos - Same Music - Searches for similar music by tags or by reading content and comparing it - Invalid Symbolic Links - Shows symbolic links which point to non-existent files/directories - Broken Files - Finds files that are invalid or corrupted - Bad Extensions - Lists files whose content not match with their extension Changelog and new releases can be found in [Github releases]( or in [CHANGELOG.md](CHANGELOG.md). More about latest version, you can find [in Medium article]( ## Usage, installation, compilation, requirements, license Each tool uses different technologies, so you can find instructions for each of them in the appropriate file: - [Czkawka GUI (GTK frontend)](czkawka_gui/README.md) - [Czkawka CLI](czkawka_cli/README.md) - [Czkawka Core](czkawka_core/README.md) - [Krokiet GUI (Slint frontend)](krokiet/README.md) ## Comparison to other tools Bleachbit is a master at finding and removing temporary files, while Czkawka only finds the most basic ones. So these two apps shouldn't be compared directly or be considered as an alternative to one another. In this comparison remember, that even if app have same features they may work different(e.g. one app may have more options to choose than other). | | Czkawka | Krokiet | FSlint | DupeGuru | Bleachbit | |:------------------------:|:-----------:|:-----------:|:------:|:-----------------:|:-----------:| | Language | Rust | Rust | Python | Python/Obj-C | Python | | Framework base language | C | Rust | C | C/C++/Obj-C/Swift | C | | Framework | GTK 4 | Slint | PyGTK2 | Qt 5 (PyQt)/Cocoa | PyGTK3 | | OS | Lin,Mac,Win | Lin,Mac,Win | Lin | Lin,Mac,Win | Lin,Mac,Win | | Duplicate finder | | | | | | | Empty files | | | | | | | Empty folders | | | | | | | Temporary files | | | | | | | Big files | | | | | | | Similar images | | | | | | | Similar videos | | | | | | | Music duplicates(tags) | | | | | | | Invalid symlinks | | | | | | | Broken files | | | | | | | Names conflict | | | | | | | Invalid names/extensions | | | | | | | Installed packages | | | | | | | Bad ID | | | | | | | Non stripped binaries | | | | | | | Redundant whitespace | | | | | | | Overwriting files | | | | | | | Multiple languages | | | | | | | Cache support | | | | | | | In active development | Yes | Yes | No | Yes | Yes | ## Other apps There are many similar applications to Czkawka on the Internet, which do some things better and some things worse: ### GUI - [DupeGuru]( - Many options to customize; great photo compare tool - [FSlint]( - A little outdated, but still have some tools not available in Czkawka - [AntiDupl.NET]( - Shows a lot of metadata of compared images - [Video Duplicate Finder]( - Finds similar videos(surprising, isn't it), supports video thumbnails ### CLI Due to limited time, the biggest emphasis is on the GUI version so if you are looking for really good and feature-packed console apps, then take a look at these: - [Fclones]( - One of the fastest tools to find duplicates; it is written also in Rust - [Rmlint]( - Nice console interface and also is feature packed - [RdFind]( - Fast, but written in C++ \\\_()\_/ ## Contributions Contributions to this repository are welcome. You can help by creating: - Bug reports - memory leaks, unexpected behavior, crashes - Feature proposals - proposal to change/add/delete some features - Pull Requests - implementing a new feature yourself or fixing bugs. If the change is bigger, then it's a good idea to open a new issue to discuss changes, but issues with label `PR welcome` are already checked and accepted. - Documentation - There is an [instruction](instructions/Instruction.md) which you can improve. - Translations - Instruction how to translate files is available [here](instructions/Translations.md) - External contributions - App use big number of external libraries like [lofty]( [image-rs]( or [symphonia]( so improving this libraries will automatically improve Czkawka You can also help by doing other things: - Creating text articles - [LinuxUprising]( or [Ubunlog]( - Adding Czkawka to repositories - [Alpine Linux]( or [NixOS]( or [OpenMandriva]( - Creating videos - [First Video]( or [Spanish Tutorial]( - Recommending it to others ## Thanks Big thanks to Pdraig Brady, creator of fantastic FSlint, because without his work I wouldn't create this tool. Thanks also to all the people who create patches for this program, make it available on other systems, create videos, articles about it etc. Also, I really appreciate work of people that create crates on which Czkawka is based and for that I try to report bugs to make it even better. ## Donations If you are using the app, I would appreciate a donation for its further development, which can be done [here]("
just,casey/just,17848,403,"['Rust', 'Shell', 'Makefile']",[],"Table of Contents just `just` is a handy way to save and run project-specific commands. This readme is also available as a [book]( ( []( !) Commands, called recipes, are stored in a file called `justfile` with syntax inspired by `make`: You can then run them with `just RECIPE`: ```sh $ just test-all cc *.c -o main ./test --all Yay, all your tests passed! ``` `just` has a ton of useful features, and many improvements over `make`: - `just` is a command runner, not a build system, so it avoids much of [`make`'s complexity and idiosyncrasies](#what-are-the-idiosyncrasies-of-make-that-just-avoids). No need for `.PHONY` recipes! - Linux, MacOS, and Windows are supported with no additional dependencies. (Although if your system doesn't have an `sh`, you'll need to [choose a different shell](#shell).) - Errors are specific and informative, and syntax errors are reported along with their source context. - Recipes can accept [command line arguments](#recipe-parameters). - Wherever possible, errors are resolved statically. Unknown recipes and circular dependencies are reported before anything runs. - `just` [loads `.env` files](#dotenv-settings), making it easy to populate environment variables. - Recipes can be [listed from the command line](#listing-available-recipes). - Command line completion scripts are [available for most popular shells](#shell-completion-scripts). - Recipes can be written in [arbitrary languages](#writing-recipes-in-other-languages), like Python or NodeJS. - `just` can be invoked from any subdirectory, not just the directory that contains the `justfile`. - And [much more]( If you need help with `just` please feel free to open an issue or ping me on [Discord]( Feature requests and bug reports are always welcome! Installation ------------ ### Prerequisites `just` should run on any system with a reasonable `sh`, including Linux, MacOS, and the BSDs. On Windows, `just` works with the `sh` provided by [Git for Windows]( [GitHub Desktop]( or [Cygwin]( If you'd rather not install `sh`, you can use the `shell` setting to use the shell of your choice. Like PowerShell: ```just # use PowerShell instead of sh: set shell := [""powershell.exe"", ""-c""] hello: Write-Host ""Hello, world!"" ``` or `cmd.exe`: ```just # use cmd.exe instead of sh: set shell := [""cmd.exe"", ""/c""] list: dir ``` You can also set the shell using command-line arguments. For example, to use PowerShell, launch `just` with `--shell powershell.exe --shell-arg -c`. (PowerShell is installed by default on Windows 7 SP1 and Windows Server 2008 R2 S1 and later, and `cmd.exe` is quite fiddly, so PowerShell is recommended for most Windows users.) ### Packages Operating System Package Manager Package Command Alpine Linux apk-tools just apk add just Arch Linux pacman just pacman -S just Debian 13 (unreleased) and Ubuntu 24.04 derivatives apt just apt install just Debian and Ubuntu derivatives MPR just git clone cd just makedeb -si Debian and Ubuntu derivatives Prebuilt-MPR just You must have the Prebuilt-MPR set up on your system in order to run this command. apt install just Fedora Linux DNF just dnf install just FreeBSD pkg just pkg install just Gentoo Linux Portage guru/dev-build/just eselect repository enable guru emerge --sync guru emerge dev-build/just macOS MacPorts just port install just Microsoft Windows Chocolatey just choco install just Microsoft Windows Scoop just scoop install just Microsoft Windows Windows Package Manager Casey/Just winget install --id Casey.Just --exact NixOS Nix just nix-env -iA nixos.just openSUSE Zypper just zypper in just Solus eopkg just eopkg install just Various asdf just asdf plugin add just asdf install just <version> Various Cargo just cargo install just Various Conda just conda install -c conda-forge just Various Homebrew just brew install just Various Nix just nix-env -iA nixpkgs.just Void Linux XBPS just xbps-install -S just ### Pre-Built Binaries Pre-built binaries for Linux, MacOS, and Windows can be found on [the releases page]( You can use the following command on Linux, MacOS, or Windows to download the latest release, just replace `DEST` with the directory where you'd like to put `just`: ```sh curl --proto '= --tlsv1.2 -sSf | bash -s -- --to DEST ``` For example, to install `just` to `~/bin`: ```sh # create ~/bin mkdir -p ~/bin # download and extract just to ~/bin/just curl --proto '= --tlsv1.2 -sSf | bash -s -- --to ~/bin # add `~/bin` to the paths that your shell searches for executables # this line should be added to your shells initialization file, # e.g. `~/.bashrc` or `~/.zshrc` export PATH=""$PATH:$HOME/bin"" # just should now be executable just --help ``` Note that `install.sh` may fail on GitHub Actions, or in other environments where many machines share IP addresses. `install.sh` calls GitHub APIs in order to determine the latest version of `just` to install, and those API calls are rate-limited on a per-IP basis. To make `install.sh` more reliable in such circumstances, pass a specific tag to install with `--tag`. ### GitHub Actions `just` can be installed on GitHub Actions in a few ways. Using package managers pre-installed on GitHub Actions runners on MacOS with `brew install just`, and on Windows with `choco install just`. With [extractions/setup-just]( ```yaml - uses: extractions/setup-just@v1 with: just-version: 1.5.0 # optional semver specification, otherwise latest ``` Or with [taiki-e/install-action]( ```yaml - uses: taiki-e/install-action@just ``` ### Release RSS Feed An [RSS feed]( of `just` releases is available [here]( ### Node.js Installation [just-install]( can be used to automate installation of `just` in Node.js applications. `just` is a great, more robust alternative to npm scripts. If you want to include `just` in the dependencies of a Node.js application, `just-install` will install a local, platform-specific binary as part of the `npm install` command. This removes the need for every developer to install `just` independently using one of the processes mentioned above. After installation, the `just` command will work in npm scripts or with npx. It's great for teams who want to make the set up process for their project as easy as possible. For more information, see the [just-install README file]( Backwards Compatibility ----------------------- With the release of version 1.0, `just` features a strong commitment to backwards compatibility and stability. Future releases will not introduce backwards incompatible changes that make existing `justfile`s stop working, or break working invocations of the command-line interface. This does not, however, preclude fixing outright bugs, even if doing so might break `justfiles` that rely on their behavior. There will never be a `just` 2.0. Any desirable backwards-incompatible changes will be opt-in on a per-`justfile` basis, so users may migrate at their leisure. Features that aren't yet ready for stabilization are gated behind the `--unstable` flag. Features enabled by `--unstable` may change in backwards incompatible ways at any time. Unstable features can also be enabled by setting the environment variable `JUST_UNSTABLE` to any value other than `false`, `0`, or the empty string. Editor Support -------------- `justfile` syntax is close enough to `make` that you may want to tell your editor to use `make` syntax highlighting for `just`. ### Vim and Neovim #### `vim-just` The [vim-just]( plugin provides syntax highlighting for `justfile`s. Install it with your favorite package manager, like [Plug]( ```vim call plug#begin() Plug 'NoahTheDuke/vim-just' call plug#end() ``` Or with Vim's built-in package support: ```sh mkdir -p ~/.vim/pack/vendor/start cd ~/.vim/pack/vendor/start git clone ``` #### `tree-sitter-just` [tree-sitter-just]( is an [Nvim Treesitter]( plugin for Neovim. #### Makefile Syntax Highlighting Vim's built-in makefile syntax highlighting isn't perfect for `justfile`s, but it's better than nothing. You can put the following in `~/.vim/filetype.vim`: ```vimscript if exists(""did_load_filetypes"") finish endif augroup filetypedetect au BufNewFile,BufRead justfile setf make augroup END ``` Or add the following to an individual `justfile` to enable `make` mode on a per-file basis: ```text # vim: set ft=make : ``` ### Emacs [just-mode]( provides syntax highlighting and automatic indentation of `justfile`s. It is available on [MELPA]( as [just-mode]( [justl]( provides commands for executing and listing recipes. You can add the following to an individual `justfile` to enable `make` mode on a per-file basis: ```text # Local Variables: # mode: makefile # End: ``` ### Visual Studio Code An extension for VS Code is [available here]( Unmaintained VS Code extensions include [skellock/vscode-just]( and [sclu1034/vscode-just]( ### JetBrains IDEs A plugin for JetBrains IDEs by [linux_china]( is [available here]( ### Kakoune Kakoune supports `justfile` syntax highlighting out of the box, thanks to TeddyDD. ### Helix [Helix]( supports `justfile` syntax highlighting out-of-the-box since version 23.05. ### Sublime Text The [Just package]( by [nk9]( with `just` syntax and some other tools is available on [PackageControl]( ### Micro [Micro]( supports Justfile syntax highlighting out of the box, thanks to [tomodachi94]( ### Other Editors Feel free to send me the commands necessary to get syntax highlighting working in your editor of choice so that I may include them here. Quick Start ----------- See [the installation section](#installation) for how to install `just` on your computer. Try running `just --version` to make sure that it's installed correctly. For an overview of the syntax, check out [this cheatsheet]( Once `just` is installed and working, create a file named `justfile` in the root of your project with the following contents: ```just recipe-name: echo 'This is a recipe!' # this is a comment another-recipe: @echo 'This is another recipe.' ``` When you invoke `just` it looks for file `justfile` in the current directory and upwards, so you can i... [TRUNCATED]"
RustPython,RustPython/RustPython,17820,1193,"['Rust', 'Python', 'JavaScript']","['rust', 'python3', 'python-language', 'jit', 'interpreter']","# [RustPython]( A Python-3 (CPython >= 3.12.0) Interpreter written in Rust :snake: :scream: :metal:. []( []( []( []( [][discord] []( []( []( []( []( ## Usage **Check out our [online demo]( running on WebAssembly.** RustPython requires Rust latest stable version (e.g 1.67.1 at February 7th 2023). If you don't currently have Rust installed on your system you can do so by following the instructions at [rustup.rs]( To check the version of Rust you're currently running, use `rustc --version`. If you wish to update, `rustup update stable` will update your Rust installation to the most recent stable release. To build RustPython locally, first, clone the source code: ```bash git clone ``` Then you can change into the RustPython directory and run the demo (Note: `--release` is needed to prevent stack overflow on Windows): ```bash $ cd RustPython $ cargo run --release demo_closures.py Hello, RustPython! ``` Or use the interactive shell: ```bash $ cargo run --release Welcome to rustpython >>>>> 2+2 4 ``` NOTE: For windows users, please set `RUSTPYTHONPATH` environment variable as `Lib` path in project directory. (e.g. When RustPython directory is `C:\RustPython`, set `RUSTPYTHONPATH` as `C:\RustPython\Lib`) You can also install and run RustPython with the following: ```bash $ cargo install --git $ rustpython Welcome to the magnificent Rust Python interpreter >>>>> ``` If you'd like to make requests, you can enable the `ssl` feature, which also lets you install the `pip` package manager. Note that on Windows, you may need to install OpenSSL, or you can enable the `ssl-vendor` feature instead, which compiles OpenSSL for you but requires a C compiler, perl, and `make`. OpenSSL version 3 is expected and tested in CI. Older versions may not work. Once you've installed rustpython with SSL support, you can install pip by running: ```bash cargo install --git --features ssl rustpython --install-pip ``` You can also install RustPython through the `conda` package manager, though this isn't officially supported and may be out of date: ```bash conda install rustpython -c conda-forge rustpython ``` ### WASI You can compile RustPython to a standalone WebAssembly WASI module so it can run anywhere. Build ```bash cargo build --target wasm32-wasi --no-default-features --features freeze-stdlib,stdlib --release ``` Run by wasmer ```bash wasmer run --dir `pwd` -- target/wasm32-wasi/release/rustpython.wasm `pwd`/extra_tests/snippets/stdlib_random.py ``` Run by wapm ```bash $ wapm install rustpython $ wapm run rustpython >>>>> 2+2 4 ``` #### Building the WASI file You can build the WebAssembly WASI file with: ```bash cargo build --release --target wasm32-wasi --features=""freeze-stdlib"" ``` > Note: we use the `freeze-stdlib` to include the standard library inside the binary. You also have to run once `rustup target add wasm32-wasi`. ### JIT (Just in time) compiler RustPython has a **very** experimental JIT compiler that compile python functions into native code. #### Building By default the JIT compiler isn't enabled, it's enabled with the `jit` cargo feature. ```bash cargo run --features jit ``` This requires autoconf, automake, libtool, and clang to be installed. #### Using To compile a function, call `__jit__()` on it. ```python def foo(): a = 5 return 10 + a foo.__jit__() # this will compile foo to native code and subsequent calls will execute that native code assert foo() == 15 ``` ## Embedding RustPython into your Rust Applications Interested in exposing Python scripting in an application written in Rust, perhaps to allow quickly tweaking logic where Rust's compile times would be inhibitive? Then `examples/hello_embed.rs` and `examples/mini_repl.rs` may be of some assistance. ## Disclaimer RustPython is in development, and while the interpreter certainly can be used in interesting use cases like running Python in WASM and embedding into a Rust project, do note that RustPython is not totally production-ready. Contribution is more than welcome! See our contribution section for more information on this. ## Conference videos Checkout those talks on conferences: - [FOSDEM 2019]( - [EuroPython 2018]( ## Use cases Although RustPython is a fairly young project, a few people have used it to make cool projects: - [GreptimeDB]( an open-source, cloud-native, distributed time-series database. Using RustPython for embedded scripting. - [pyckitup]( a game engine written in rust. - [Robot Rumble]( an arena-based AI competition platform - [Ruff]( an extremely fast Python linter, written in Rust ## Goals - Full Python-3 environment entirely in Rust (not CPython bindings) - A clean implementation without compatibility hacks ## Documentation Currently along with other areas of the project, documentation is still in an early phase. You can read the [online documentation]( for the latest release, or the [user guide]( You can also generate documentation locally by running: ```shell cargo doc # Including documentation for all dependencies cargo doc --no-deps --all # Excluding all dependencies ``` Documentation HTML files can then be found in the `target/doc` directory or you can append `--open` to the previous commands to have the documentation open automatically on your default browser. For a high level overview of the components, see the [architecture](architecture/architecture.md) document. ## Contributing Contributions are more than welcome, and in many cases we are happy to guide contributors through PRs or on Discord. Please refer to the [development guide](DEVELOPMENT.md) as well for tips on developments. With that in mind, please note this project is maintained by volunteers, some of the best ways to get started are below: Most tasks are listed in the [issue tracker]( Check issues labeled with [good first issue]( if you wish to start coding. To enhance CPython compatibility, try to increase unittest coverage by checking this article: [How to contribute to RustPython by CPython unittest]( Another approach is to checkout the source code: builtin functions and object methods are often the simplest and easiest way to contribute. You can also simply run `./whats_left.py` to assist in finding any unimplemented method. ## Compiling to WebAssembly [See this doc](wasm/README.md) ## Community [][discord] Chat with us on [Discord][discord]. ## Code of conduct Our code of conduct [can be found here](code-of-conduct.md). ## Credit The initial work was based on [windelbouwman/rspython]( and [shinglyu/RustPython]( [discord]: ## Links These are some useful links to related projects: - - - ## License This project is licensed under the MIT license. Please see the [LICENSE](LICENSE) file for more details. The [project logo](logo.png) is licensed under the CC-BY-4.0 license. Please see the [LICENSE-logo](LICENSE-logo) file for more details."
tabby,TabbyML/tabby,17762,729,"['Rust', 'Python', 'HTML']","['ai', 'codegen', 'coding-assistant', 'coding-language', 'developer-experience']","# Tabby [ Docs]( [ Slack]( [ Live Demo]( []( []( []( []( Tabby is a self-hosted AI coding assistant, offering an open-source and on-premises alternative to GitHub Copilot. It boasts several key features: * Self-contained, with no need for a DBMS or cloud service. * OpenAPI interface, easy to integrate with existing infrastructure (e.g Cloud IDE). * Supports consumer-grade GPUs. ## What's New * **05/22/2024** Tabby [VSCode 1.6]( comes with **multiple choices** in inline completion, and the **auto-generated commit messages**! * **05/11/2024** [v0.11.0]( brings significant enterprise upgrades, including **storage usage** stats, **GitHub & GitLab** integration, **Activities** page, and the long-awaited **Ask Tabby** feature! * **04/22/2024** [v0.10.0]( released, featuring the latest **Reports** tab with team-wise analytics for Tabby usage. Archived * **04/19/2024** Tabby now incorporates [locally relevant snippets]( from local LSP, and recently modified code) for code completion! * **04/17/2024** CodeGemma and CodeQwen model series have now been added to the [official registry]( * **03/20/2024** [v0.9]( released, highlighting a full feature admin UI. * **12/23/2023** Seamlessly [deploy Tabby on any cloud]( with [SkyServe]( from SkyPilot. * **12/15/2023** [v0.7.0]( released with team management and secured access! * **10/15/2023** RAG-based code completion is enabled by detail in [v0.3.0]( Check out the [blogpost]( explaining how Tabby utilizes repo-level context to get even smarter! * **11/27/2023** [v0.6.0]( released! * **11/09/2023** [v0.5.5]( released! With a redesign of UI + performance improvement. * **10/24/2023** Major updates for Tabby IDE plugins across [VSCode/Vim/IntelliJ]( * **10/04/2023** Check out the [model directory]( for the latest models supported by Tabby. * **09/18/2023** Apple's M1/M2 Metal inference support has landed in [v0.1.1]( * **08/31/2023** Tabby's first stable release [v0.0.1]( . * **08/28/2023** Experimental support for the [CodeLlama 7B]( * **08/24/2023** Tabby is now on [JetBrains Marketplace]( ## Getting Started You can find our documentation [here]( - [Installation]( - [IDE/Editor Extensions]( - [Configuration]( ### Run Tabby in 1 Minute The easiest way to start a Tabby server is by using the following Docker command: ```bash docker run -it \ --gpus all -p 8080:8080 -v $HOME/.tabby:/data \ tabbyml/tabby \ serve --model TabbyML/StarCoder-1B --device cuda ``` For additional options (e.g inference type, parallelism), please refer to the [documentation page]( ## Contributing Full guide at [CONTRIBUTING.md]( ### Get the Code ```bash git clone --recurse-submodules cd tabby ``` If you have already cloned the repository, you could run the `git submodule update --recursive --init` command to fetch all submodules. ### Build 1. Set up the Rust environment by following this [tutorial]( 2. Install the required dependencies: ```bash # For MacOS brew install protobuf # For Ubuntu / Debian apt-get install protobuf-compiler libopenblas-dev ``` 3. Install useful tools: ```bash # For Ubuntu sudo apt install make sqlite3 graphviz ``` 4. Now, you can build Tabby by running the command `cargo build`. ### Start Hacking! ... and don't forget to submit a [Pull Request]( ## Community - [Twitter / X]( - engage with TabbyML for all things possible - [LinkedIn]( - follow for the latest from the community - [Newsletter]( - subscribe to unlock Tabby insights and secrets ### Activity ### Star History []("
butterknife,JakeWharton/butterknife,25568,4602,"['Java', 'HTML', 'Kotlin']",[],"Butter Knife ============ **Attention**: This tool is now deprecated. Please switch to [view binding]( Existing versions will continue to work, obviously, but only critical bug fixes for integration with AGP will be considered. Feature development and general bug fixes have stopped. Field and method binding for Android views which uses annotation processing to generate boilerplate code for you. * Eliminate `findViewById` calls by using `@BindView` on fields. * Group multiple views in a list or array. Operate on all of them at once with actions, setters, or properties. * Eliminate anonymous inner-classes for listeners by annotating methods with `@OnClick` and others. * Eliminate resource lookups by using resource annotations on fields. ```java class ExampleActivity extends Activity { @BindView(R.id.user) EditText username; @BindView(R.id.pass) EditText password; @BindString(R.string.login_error) String loginErrorMessage; @OnClick(R.id.submit) void submit() { // TODO call server... } @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.simple_activity); ButterKnife.bind(this); // TODO Use fields... } } ``` For documentation and additional information see [the website][3]. __Remember: A butter knife is like a [dagger][1], only infinitely less sharp.__ Download -------- ```groovy android { ... // Butterknife requires Java 8. compileOptions { sourceCompatibility JavaVersion.VERSION_1_8 targetCompatibility JavaVersion.VERSION_1_8 } } dependencies { implementation 'com.jakewharton:butterknife:10.2.3' annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3' } ``` If you are using Kotlin, replace `annotationProcessor` with `kapt`. Snapshots of the development version are available in [Sonatype's `snapshots` repository][snap]. Library projects -------------------- To use Butter Knife in a library, add the plugin to your `buildscript`: ```groovy buildscript { repositories { mavenCentral() google() } dependencies { classpath 'com.jakewharton:butterknife-gradle-plugin:10.2.3' } } ``` and then apply it in your module: ```groovy apply plugin: 'com.android.library' apply plugin: 'com.jakewharton.butterknife' ``` Now make sure you use `R2` instead of `R` inside all Butter Knife annotations. ```java class ExampleActivity extends Activity { @BindView(R2.id.user) EditText username; @BindView(R2.id.pass) EditText password; ... } ``` License ------- Copyright 2013 Jake Wharton Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. [1]: [2]: [3]: [snap]:"
toBeTopJavaer,hollischuang/toBeTopJavaer,25204,5461,['Java'],"['java', 'programmer', 'jvm', 'spring', 'mysql']","## To Be Top Javaer - Java | | | | | ---- | ---------- | -------------- | | v4.0 | 2022-05-20 | | | v3.0 | 2020-03-31 | v2.020%GitHub Page| | v2.0 | 2019-02-19 | | | v1.1 | 2018-03-12 | | | v1.0 | 2015-08-01 | | Java50060>>> ... ~ ### *""""Java* ### GitHub Pages []( Gitee Pages []( () ### Hollis51CTOCSDNJavaJava ### [GPL] ### [GitHub]( (hollischuang@gmail)"
Signal-Android,signalapp/Signal-Android,25023,6024,"['Java', 'Kotlin', 'Handlebars']",[],"# Signal Android Signal is a simple, powerful, and secure messenger. Signal uses your phone's data connection (WiFi/3G/4G/5G) to communicate securely. Millions of people use Signal every day for free and instantaneous communication anywhere in the world. Send and receive high-fidelity messages, participate in HD voice/video calls, and explore a growing set of new features that help you stay connected. Signals advanced privacy-preserving technology is always enabled, so you can focus on sharing the moments that matter with the people who matter to you. Currently available on the Play Store and [signal.org]( ## Contributing Bug reports We use GitHub for bug tracking. Please search the existing issues for your bug and create a new one if the issue is not yet tracked! ## Joining the Beta Want to live life on the bleeding edge and help out with testing? You can subscribe to Signal Android Beta releases here: If you're interested in a life of peace and tranquility, stick with the standard releases. ## Contributing Code If you're new to the Signal codebase, we recommend going through our issues and picking out a simple bug to fix (check the ""easy"" label in our issues) in order to get yourself familiar. Also please have a look at the [CONTRIBUTING.md]( that might answer some of your questions. For larger changes and feature ideas, we ask that you propose it on the [unofficial Community Forum]( for a high-level discussion with the wider community before implementation. ## Contributing Ideas Have something you want to say about Signal projects or want to be part of the conversation? Get involved in the [community forum]( Help ==== ## Support For troubleshooting and questions, please visit our support center! ## Documentation Looking for documentation? Check out the wiki! # Legal things ## Cryptography Notice This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country's laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See for more information. The U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms. The form and manner of this distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code. ## License Copyright 2013-2024 Signal Messenger, LLC Licensed under the GNU AGPLv3: Google Play and the Google Play logo are trademarks of Google LLC."
incubator-seata,apache/incubator-seata,24991,8692,"['Java', 'ANTLR', 'TypeScript']","['tcc', 'saga', 'xa', 'at', 'consistency']","# Seata: Simple Extensible Autonomous Transaction Architecture []( []( []( []( ## What is Seata? A **distributed transaction solution** with high performance and ease of use for **microservices** architecture. ### Distributed Transaction Problem in Microservices Let's imagine a traditional monolithic application. Its business is built up with 3 modules. They use a single local data source. Naturally, data consistency will be guaranteed by the local transaction. Things have changed in a microservices architecture. The 3 modules mentioned above are designed to be 3 services on top of 3 different data sources ([Pattern: Database per service]( Data consistency within every single service is naturally guaranteed by the local transaction. **But how about the whole business logic scope?** ### How Seata do? Seata is just a solution to the problem mentioned above. Firstly, how to define a **Distributed Transaction**? We say, a **Distributed Transaction** is a **Global Transaction** which is made up with a batch of **Branch Transaction**, and normally **Branch Transaction** is just **Local Transaction**. There are three roles in Seata Framework: - **Transaction Coordinator(TC):** Maintain status of global and branch transactions, drive the global commit or rollback. - **Transaction Manager(TM):** Define the scope of global transaction: begin a global transaction, commit or rollback a global transaction. - **Resource Manager(RM):** Manage resources that branch transactions working on, talk to TC for registering branch transactions and reporting status of branch transactions, and drive the branch transaction commit or rollback. A typical lifecycle of Seata managed distributed transaction: 1. TM asks TC to begin a new global transaction. TC generates an XID representing the global transaction. 2. XID is propagated through microservices' invoke chain. 3. RM registers local transaction as a branch of the corresponding global transaction of XID to TC. 4. TM asks TC for committing or rollbacking the corresponding global transaction of XID. 5. TC drives all branch transactions under the corresponding global transaction of XID to finish branch committing or rollbacking. For more details about principle and design, please go to [Seata wiki page]( ### History ##### Alibaba - **TXC**: Taobao Transaction Constructor. Alibaba middleware team started this project since 2014 to meet the distributed transaction problems caused by application architecture change from monolithic to microservices. - **GTS**: Global Transaction Service. TXC as an Aliyun middleware product with new name GTS was published since 2016. - **Fescar**: we started the open source project Fescar based on TXC/GTS since 2019 to work closely with the community in the future. ##### Ant Financial - **XTS**: Extended Transaction Service. Ant Financial middleware team developed the distributed transaction middleware since 2007, which is widely used in Ant Financial and solves the problems of data consistency across databases and services. - **DTX**: Distributed Transaction Extended. Since 2013, XTS has been published on the Ant Financial Cloud, with the name of DTX . ##### Seata Community - **Seata** :Simple Extensible Autonomous Transaction Architecture. Ant Financial joins Fescar, which make it to be a more neutral and open community for distributed transaction, and Fescar be renamed to Seata. ## Maven dependency Depending on the scenario, choose one of the two dependencies: `io.seata:seata-all` or `io.seata:seata-spring-boot-starter`. ```xml 2.0.0 io.seata seata-all ${seata.version} io.seata seata-spring-boot-starter ${seata.version} ``` ## Quick Start [Quick Start]( ## Documentation You can view the full documentation from Seata Official Website: [Seata Website page]( ## Reporting bugs Please follow the [template](./.github/ISSUE_TEMPLATE/BUG_REPORT.md)for reporting any issues. ## Security Please do not use our public issue tracker but refer to our [security policy](./SECURITY.md) ## Contributing Contributors are welcomed to join the Seata project. Please check [CONTRIBUTING](./CONTRIBUTING.md) and[CONTRIBUTING-CN](./CONTRIBUTING_CN.md)about how to contribute to this project. ## Contact * Mailing list: * dev@seata.apache.org , for dev/user discussion. [subscribe](mailto:dev-subscribe@seata.apache.org), [unsubscribe](mailto:dev-unsubscribe@seata.apache.org), [archive]( * Online chat: ## Seata ecosystem * [Seata Website]( - Seata official website * [Seata GoLang]( - Seata GoLang client and server * [Seata Samples]( - Samples for Seata * [Seata GoLang Simples]( - Samples for Seata GoLang * [Seata K8s]( - Seata integration with k8s * [Seata CLI]( - CLI tool for Seata ## Contributors This project exists thanks to all the people who contribute. [[Contributors]( ## License Seata is under the Apache 2.0 license. See the[LICENSE](file for details. ## Who is using These are only part of the companies using Seata, for reference only. If you are using Seata, please [add your company here]( to tell us your scenario to make Seata better."
proxyee-down,proxyee-down-org/proxyee-down,24962,4458,"['Java', 'Vue', 'JavaScript']",[],## proxyee-down**issue** `JAVA``GO``````````` [gopeed]( # [Proxyee Down]( []( []( []( []( []( > Proxyee Down HTTP `netty` HTTP ## []( ## 1 **11352304**2 **20236964**3 **20233754**4 **737991056** ## `java` + `spring` + `boot` + `netty` `vue.js` + `iview` ### oracle jdk 1.8+ openjfx(openjdkjavafx) ### ``` git clone cd proxyee-down/front #build html npm install npm run build cd ../main mvn clean package -Pprd ``` ### ``` java -jar proxyee-down-main.jar ```
ruoyi-vue-pro,YunaiV/ruoyi-vue-pro,24873,5196,"['Java', 'PLpgSQL', 'TSQL']","['springboot', 'vue', 'mysql', 'redis', 'mybatis-plus']",**!** **** **** top3 Star ## * Vue3 + element-plus * Vue3 + vben(ant-design-vue) * Vue2 + element-ui * * ## | | JDK 8 + Spring Boot 2.7 | JDK 17/21 + Spring Boot 3.2 | |---------------------------------------------------------------------|---------------------------------------------------------------------------|---------------------------------------------------------------------------------------| | [ruoyi-vue-pro]( | [`master`]( | [`master-jdk17`]( | | [yudao-boot-mini]( | [`master`]( | [`master-jdk17`]( | * CRMERP * CRMERP []( 5-10 ## **** 100% > _Issues_ > > Star * Java `master` JDK 8 + Spring Boot 2.7`master-jdk17` JDK 17/21 + Spring Boot 3.2 * Vue3 `element-plus``vben(ant-design-vue)` Vue2 `element-ui` * `uni-app` APPH5 * Spring Boot MySQL + MyBatis PlusRedis + Redisson * MySQLOraclePostgreSQLSQL ServerMariaDB DMTiDB * EventRedisRabbitMQKafkaRocketMQ * Spring Security & Token & Redis SSO * Redis * SaaS * Flowable / * JavaVue SQL * Spring WebSocket Token WebSocket * * MinIO * ## []( ### | | Star | | |-----------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------| | [ruoyi-vue-pro]( | []( []( | Spring Boot | | [yudao-cloud]( | []( []( | Spring Cloud | | [Spring-Boot-Labs]( | []( []( | Spring Boot & Cloud | ### | | Star | | |----------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------| | [yudao-ui-admin-vue3]( | []( []( | Vue3 + element-plus | | [yudao-ui-admin-vben]( | []( []( | Vue3 + vben(ant-design-vue) | | [yudao-mall-uniapp]( | []( []( | uni-app | | [yudao-ui-admin-vue2]( | []( []( | Vue2 + element-ui | | [yudao-ui-admin-uniapp]( | []( []( | Vue2 + element-ui | | [yudao-ui-go-view]( | []( []( | Vue3 + naive-ui | ## **** Apache 2.0 [MIT License]( 100% Copyright []( Java 113770 Java 42462 ## **Aix9975** SCRM OA ERP CMS HIS IM ## * * * ERP CRM > RuoYi-Vue ******** > > * > * **** ### | | | | |-----|-------|---------------------------------| | | | | | | | | | | | | | | | | | | | | | | | | | | | SaaS | | | | | | | | | | | | | | | | | | | | | | | | Swagger | | | | | | | | | | | | | | | | | | | | SSO OAuth2 | | | | IP | ### | | | | |-----|-------|----------------------------------------| | | | 7 | | | | Element UI | | | | | | | | | | | | | | | | | | | OA | | ### | | | | |-----|------|---------------------------| | | | | | | | | | | | | | | | | | | | | ### | | | | |-----|-----------|----------------------------------------------| | | | JavaVueSQL CRUD | | | | Swagger RESTful API | | | | Screw WordHTMLMD | | | | HTML JSONVue | | | | SpringBoot | | | | ) | | | | S3MinIOFTP | | | WebSocket | WebSocket | | | API | RESTful API API | | | MySQL | SQL | | | Redis | Redis Redis Key | | | | Redis Stream Pub/Sub | | | Java | Spring Boot Admin Java | | | | SkyWalking | | | | SkyWalking | | | | Redis | | | | | | | | JUnit + Mockito | ### | | | | |-----|-------|--------------------| | | | | | | | | ### | | | | |-----|--------|-------------------------------| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | ### ### | | | | |-----|------|----------------------------------| | | | C | | | | | | | | | | | | | | | | | ### ERP ### CRM ## ### | | | |-----------------------|--------------------| | `yudao-dependencies` | Maven | | `yudao-framework` | Java | | `yudao-server` | + APP | | `yudao-module-system` | Module | | `yudao-module-member` | Module | | `yudao-module-infra` | Module | | `yudao-module-bpm` | Module | | `yudao-module-pay` | Module | | `yudao-module-mall` | Module | | `yudao-module-erp` | ERP Module | | `yudao-module-crm` | CRM Module | | `yudao-module-mp` | Module | | `yudao-module-report` | Module | ### | | | | | |---------------------------------------------------------------------------------------------|------------------|----------------|----------------------------------------------------------------| | [Spring Boot]( | | 2.7.18 | []( | | [MySQL]( | | 5.7 / 8.0+ | | | [Druid]( | JDBC | 1.2.19 | []( | | [MyBatis Plus]( | MyBatis | 3.5.3.2 | []( | | [Dynamic Datasource]( | | 3.6.1 | []( | | [Redis]( | key-value | 5.0 / 6.0 /7.0 | | | [Redisson]( | Redis | 3.18.0 | []( | | [Spring MVC]( | MVC | 5.3.24 | []( | | [Spring Security]( | Spring | 5.7.11 | []( | | [Hibernate Validator]( | | 6.2.5 | []( | | [Flowable]( | | 6.8.0 | []( | | [Quartz]( | | 2.3.2 | []( | | [Springdoc]( | Swagger | 1.6.15 | []( | | [SkyWalking]( | | 8.12.0 | []( | | [Spring Boot Admin]( | Spring Boot | 2.7.10 | []( | | [Jackson]( | JSON | 2.13.3 | | | [MapStruct]( | Java Bean | 1.5.5.Final | []( | | [Lombok]( | Java | 1.18.30 | []( | | [JUnit]( | Java | 5.8.2 | - | | [Mockito]( | Java Mock | 4.8.0 | - | ## ### | | biu | biu | biu | |----------|-----------------------------|---------------------------|--------------------------| | & | | | | | & | | | | | & | | | - | | & | | | - | | & | | | - | | | | | - | | | | | | | & | | | | | & | | | - | ### | | biu | biu | biu | |---------|---------------------------------|---------------------------------|---------------------------------| | | | | | | & | | | - | | | | | | | & | | | | | OA | | | | ### | | biu | biu | biu | |---------------|-------------------------------|-----------------------------|---------------------------| | | | | - | | | | | - | | & | | | | | | | | - | | API | | | - | | MySQL & Redis | | | - | | | | | | ### | | biu | biu | biu | |---------|---------------------------|---------------------------------|---------------------------------| | & | | | | | & | | | --- | ### | | biu | biu | biu | |-------|---------------------------------|---------------------------------|---------------------------------------| | | | | | | | | | | ### | biu | biu | biu | |----------------------------------|----------------------------------|----------------------------------| | | | | | | | | | | | |
SmartRefreshLayout,scwang90/SmartRefreshLayout,24726,4930,"['Java', 'Batchfile']","['refreshlayout', 'overscroll', 'pull-to-refresh', 'pulltorefresh', 'android']","# Android-SmartRefreshLayout []( []( []( []( []( ## [English](README_EN.md) | SmartRefreshLayoutHeaderFooter SmartRefreshLayoutView ViewGroup FrameLayoutLinearLayout [SwipeRefreshLayout]( [Ultra-Pull-To-Refresh]( Header Footer ## IOS IOS[]( ## github []( ## : - - - Layout (LinearLayout,FrameLayout...) - ViewAbsListViewRecyclerViewWebView....View - Header Footer. - ListView CoordinatorLayout . - . - . - App. - - - Header Footer - AndroidX - []( - [IOS]( ## - []( - []( - []( - []( - []( - []( - []( - [Header]( ## Demo [ APK-Demo]( #### ||| |:---:|:---:| ||| ||| |:---:|:---:| ||| #### Style |Delivery|DropBox| |:---:|:---:| ||| |[Refresh-your-delivery]( githubHeader |BezierRadar|BezierCircle| |:---:|:---:| ||| |[Pull To Refresh]( Down To Refresh]( |FlyRefresh|Classics| |:---:|:---:| ||| |[FlyRefresh]( |Phoenix|Taurus| |:---:|:---:| ||| |[Yalantis/Phoenix]( |BattleCity|HitBlock| |:---:|:---:| ||| |[FunGame/BattleCity]( |WaveSwipe|Material| |:---:|:---:| ||| |[WaveSwipeRefreshLayout]( |StoreHouse|WaterDrop| |:---:|:---:| ||| |[CRefreshLayout]( HeaderHeader V2.x 8 - refresh-layout-kernel - refresh-header-classics - refresh-header-radar - refresh-header-falsify - refresh-header-material - refresh-header-two-level - refresh-footer-ball - refresh-footer-classics ## #### 1. build.gradle ```gradle implementation 'androidx.appcompat:appcompat:1.0.0' // 1.0.0 implementation 'io.github.scwang90:refresh-layout-kernel:2.1.0' // implementation 'io.github.scwang90:refresh-header-classics:2.1.0' // implementation 'io.github.scwang90:refresh-header-radar:2.1.0' // implementation 'io.github.scwang90:refresh-header-falsify:2.1.0' // implementation 'io.github.scwang90:refresh-header-material:2.1.0' // implementation 'io.github.scwang90:refresh-header-two-level:2.1.0' // implementation 'io.github.scwang90:refresh-footer-ball:2.1.0' // implementation 'io.github.scwang90:refresh-footer-classics:2.1.0' // ``` AndroidX gradle.properties ~ ``` android.useAndroidX=true android.enableJetifier=true ``` #### 2.XML SmartRefreshLayout ```xml ``` #### 3. Activity Fragment ```java RefreshLayout refreshLayout = (RefreshLayout)findViewById(R.id.refreshLayout); refreshLayout.setRefreshHeader(new ClassicsHeader(this)); refreshLayout.setRefreshFooter(new ClassicsFooter(this)); refreshLayout.setOnRefreshListener(new OnRefreshListener() { @Override public void onRefresh(RefreshLayout refreshlayout) { refreshlayout.finishRefresh(2000/*,false*/);//false } }); refreshLayout.setOnLoadMoreListener(new OnLoadMoreListener() { @Override public void onLoadMore(RefreshLayout refreshlayout) { refreshlayout.finishLoadMore(2000/*,false*/);//false } }); ``` ## Header Footer #### 1. ```java public class App extends Application { //static static { //Header SmartRefreshLayout.setDefaultRefreshHeaderCreator(new DefaultRefreshHeaderCreator() { @Override public RefreshHeader createRefreshHeader(Context context, RefreshLayout layout) { layout.setPrimaryColorsId(R.color.colorPrimary, android.R.color.white);// return new ClassicsHeader(context);//.setTimeFormat(new DynamicTimeFormat("" %s""));//Header Header } }); //Footer SmartRefreshLayout.setDefaultRefreshFooterCreator(new DefaultRefreshFooterCreator() { @Override public RefreshFooter createRefreshFooter(Context context, RefreshLayout layout) { //Footer BallPulseFooter return new ClassicsFooter(context).setDrawableSize(20); } }); } } ``` HeaderFooter #### 2. XML ```xml ``` XMLHeaderFooterAndroid Studio ~ #### 3. Java ```java final RefreshLayout refreshLayout = (RefreshLayout) findViewById(R.id.refreshLayout); // Header refreshLayout.setRefreshHeader(new BezierRadarHeader(this).setEnableHorizontalDrag(true)); // Footer refreshLayout.setRefreshFooter(new BallPulseFooter(this).setSpinnerStyle(SpinnerStyle.Scale)); ``` #### 4. - []( - []( - [Header]( ## SmartRefreshLayout ## SmartRefreshLayout SmartRefreshLayout ""Star"" ^_^ ~ > ~ githubgithub []( #### [github/afKT/DevUtils]( [github/Loror]( [github/faith-hb/WidgetCase]( [github/Bamboy120315/Freedom]( [github/Tencent/APIJSON]( [github/dengyuhan]( [github/zrp2017]( [github/fly803/BaseProject]( [github/razerdp]( [github/SuperChenC/s-mvp]( [github/KingJA/LoadSir]( [github/jianshijiuyou]( [github/zxy198717]( [github/addappcn]( [github/RainliFu]( [github/sugarya]( [github/stormzhang]( ## ### QQ - 602537182 #### Bug bug bugbug QQ ### QQ - 914275312 477963933 538979188 #### Bug #### ~ ## [MultiWaveHeader]( [SmartRefreshHorizontal]( []( ## [SwipeRefreshLayout]( [Ultra-Pull-To-Refresh]( [TwinklingRefreshLayout]( [BeautifulRefreshLayout]( License ------- Copyright 2017 scwang90 Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
EventBus,greenrobot/EventBus,24599,4654,"['Java', 'CSS']",[],"EventBus ======== [EventBus]( is a publish/subscribe event bus for Android and Java. []( []( EventBus... * simplifies the communication between components * decouples event senders and receivers * performs well with Activities, Fragments, and background threads * avoids complex and error-prone dependencies and life cycle issues * makes your code simpler * is fast * is tiny (~60k jar) * is proven in practice by apps with 1,000,000,000+ installs * has advanced features like delivery threads, subscriber priorities, etc. EventBus in 3 steps ------------------- 1. Define events: ```java public static class MessageEvent { /* Additional fields if needed */ } ``` 2. Prepare subscribers: Declare and annotate your subscribing method, optionally specify a [thread mode]( ```java @Subscribe(threadMode = ThreadMode.MAIN) public void onMessageEvent(MessageEvent event) { // Do something } ``` Register and unregister your subscriber. For example on Android, activities and fragments should usually register according to their life cycle: ```java @Override public void onStart() { super.onStart(); EventBus.getDefault().register(this); } @Override public void onStop() { super.onStop(); EventBus.getDefault().unregister(this); } ``` 3. Post events: ```java EventBus.getDefault().post(new MessageEvent()); ``` Read the full [getting started guide]( There are also some [examples]( **Note:** we highly recommend the [EventBus annotation processor with its subscriber index]( This will avoid some reflection related problems seen in the wild. Add EventBus to your project ---------------------------- Available on Maven Central. Android projects: ```groovy implementation(""org.greenrobot:eventbus:3.3.1"") ``` Java projects: ```groovy implementation(""org.greenrobot:eventbus-java:3.3.1"") ``` ```xml org.greenrobot eventbus-java 3.3.1 ``` R8, ProGuard ------------ If your project uses R8 or ProGuard this library ships [with embedded rules](/eventbus-android/consumer-rules.pro). Homepage, Documentation, Links ------------------------------ For more details please check the [EventBus website]( Here are some direct links you may find useful: [Features]( [Documentation]( [Changelog]( [FAQ]( License ------- Copyright (C) 2012-2021 Markus Junginger, greenrobot ( EventBus binaries and source code can be used according to the [Apache License, Version 2.0](LICENSE). Other projects by greenrobot ============================ [__ObjectBox__]( ([GitHub]( is a new superfast object-oriented database. [__Essentials__]( is a set of utility classes and hash functions for Android & Java projects."
Hystrix,Netflix/Hystrix,23912,4697,"['Java', 'Clojure', 'CSS']",[],"# Hystrix: Latency and Fault Tolerance for Distributed Systems []() [![][travis img]][travis] [![][maven img]][maven] [![][license img]][license] # Hystrix Status Hystrix is no longer in active development, and is currently in maintenance mode. Hystrix (at version 1.5.18) is stable enough to meet the needs of Netflix for our existing applications. Meanwhile, our focus has shifted towards more adaptive implementations that react to an applications real time performance rather than pre-configured settings (for example, through [adaptive concurrency limits]( For the cases where something like Hystrix makes sense, we intend to continue using Hystrix for existing applications, and to leverage open and active projects like [resilience4j]( for new internal projects. We are beginning to recommend others do the same. Netflix Hystrix is now officially in maintenance mode, with the following expectations to the greater community: Netflix will no longer actively review issues, merge pull-requests, and release new versions of Hystrix. We have made a final release of Hystrix (1.5.18) per [issue 1891]( so that the latest version in Maven Central is aligned with the last known stable version used internally at Netflix (1.5.11). If members of the community are interested in taking ownership of Hystrix and moving it back into active mode, please reach out to hystrixoss@googlegroups.com. Hystrix has served Netflix and the community well over the years, and the transition to maintenance mode is in no way an indication that the concepts and ideas from Hystrix are no longer valuable. On the contrary, Hystrix has inspired many great ideas and projects. We thank everyone at Netflix, and in the greater community, for all the contributions made to Hystrix over the years. ## Introduction Hystrix is a latency and fault tolerance library designed to isolate points of access to remote systems, services and 3rd party libraries, stop cascading failure and enable resilience in complex distributed systems where failure is inevitable. ## Full Documentation See the [Wiki]( for full documentation, examples, operational details and other information. See the [Javadoc]( for the API. ## Communication - Google Group: [HystrixOSS]( - Twitter: [@HystrixOSS]( - [GitHub Issues]( ## What does it do? #### 1) Latency and Fault Tolerance Stop cascading failures. Fallbacks and graceful degradation. Fail fast and rapid recovery. Thread and semaphore isolation with circuit breakers. #### 2) Realtime Operations Realtime monitoring and configuration changes. Watch service and property changes take effect immediately as they spread across a fleet. Be alerted, make decisions, affect change and see results in seconds. #### 3) Concurrency Parallel execution. Concurrency aware request caching. Automated batching through request collapsing. ## Hello World! Code to be isolated is wrapped inside the run() method of a HystrixCommand similar to the following: ```java public class CommandHelloWorld extends HystrixCommand { private final String name; public CommandHelloWorld(String name) { super(HystrixCommandGroupKey.Factory.asKey(""ExampleGroup"")); this.name = name; } @Override protected String run() { return ""Hello "" + name + ""!""; } } ``` This command could be used like this: ```java String s = new CommandHelloWorld(""Bob"").execute(); Future s = new CommandHelloWorld(""Bob"").queue(); Observable s = new CommandHelloWorld(""Bob"").observe(); ``` More examples and information can be found in the [How To Use]( section. Example source code can be found in the [hystrix-examples]( module. ## Binaries Binaries and dependency information for Maven, Ivy, Gradle and others can be found at [ Change history and version numbers => [CHANGELOG.md]( Example for Maven: ```xml com.netflix.hystrix hystrix-core x.y.z ``` and for Ivy: ```xml ``` If you need to download the jars instead of using a build system, create a Maven pom file like this with the desired version: ```xml 4.0.0 com.netflix.hystrix.download hystrix-download 1.0-SNAPSHOT Simple POM to download hystrix-core and dependencies com.netflix.hystrix hystrix-core x.y.z ``` Then execute: ``` mvn -f download-hystrix-pom.xml dependency:copy-dependencies ``` It will download hystrix-core-*.jar and its dependencies into ./target/dependency/. You need Java 6 or later. ## Build To build: ``` $ git clone git@github.com:Netflix/Hystrix.git $ cd Hystrix/ $ ./gradlew build ``` Further details on building can be found on the [Getting Started]( page of the wiki. ## Run Demo To run a [demo app]( do the following: ``` $ git clone git@github.com:Netflix/Hystrix.git $ cd Hystrix/ ./gradlew runDemo ``` You will see output similar to the following: ``` Request => GetUserAccountCommand[SUCCESS][8ms], GetPaymentInformationCommand[SUCCESS][20ms], GetUserAccountCommand[SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][101ms], CreditCardCommand[SUCCESS][1075ms] Request => GetUserAccountCommand[FAILURE, FALLBACK_SUCCESS][2ms], GetPaymentInformationCommand[SUCCESS][22ms], GetUserAccountCommand[FAILURE, FALLBACK_SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][130ms], CreditCardCommand[SUCCESS][1050ms] Request => GetUserAccountCommand[FAILURE, FALLBACK_SUCCESS][4ms], GetPaymentInformationCommand[SUCCESS][19ms], GetUserAccountCommand[FAILURE, FALLBACK_SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][145ms], CreditCardCommand[SUCCESS][1301ms] Request => GetUserAccountCommand[SUCCESS][4ms], GetPaymentInformationCommand[SUCCESS][11ms], GetUserAccountCommand[SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][93ms], CreditCardCommand[SUCCESS][1409ms] ##################################################################################### # CreditCardCommand: Requests: 17 Errors: 0 (0%) Mean: 1171 75th: 1391 90th: 1470 99th: 1486 # GetOrderCommand: Requests: 21 Errors: 0 (0%) Mean: 100 75th: 144 90th: 207 99th: 230 # GetUserAccountCommand: Requests: 21 Errors: 4 (19%) Mean: 8 75th: 11 90th: 46 99th: 51 # GetPaymentInformationCommand: Requests: 21 Errors: 0 (0%) Mean: 18 75th: 21 90th: 24 99th: 25 ##################################################################################### Request => GetUserAccountCommand[SUCCESS][10ms], GetPaymentInformationCommand[SUCCESS][16ms], GetUserAccountCommand[SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][51ms], CreditCardCommand[SUCCESS][922ms] Request => GetUserAccountCommand[SUCCESS][12ms], GetPaymentInformationCommand[SUCCESS][12ms], GetUserAccountCommand[SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][68ms], CreditCardCommand[SUCCESS][1257ms] Request => GetUserAccountCommand[SUCCESS][10ms], GetPaymentInformationCommand[SUCCESS][11ms], GetUserAccountCommand[SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][78ms], CreditCardCommand[SUCCESS][1295ms] Request => GetUserAccountCommand[FAILURE, FALLBACK_SUCCESS][6ms], GetPaymentInformationCommand[SUCCESS][11ms], GetUserAccountCommand[FAILURE, FALLBACK_SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][153ms], CreditCardCommand[SUCCESS][1321ms] ``` This demo simulates 4 different [HystrixCommand]( implementations with failures, latency, timeouts and duplicate calls in a multi-threaded environment. It logs the results of [HystrixRequestLog]( and metrics from [HystrixCommandMetrics]( ## Dashboard The hystrix-dashboard component of this project has been deprecated and moved to [Netflix-Skunkworks/hystrix-dashboard]( Please see the README there for more details including important security considerations. ## Bugs and Feedback For bugs, questions and discussions please use the [GitHub Issues]( ## LICENSE Copyright 2013 Netflix, Inc. Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. [travis]: [travis img]: [maven]: [maven img]: [release]: [release img]: [license]:LICENSE-2.0.txt [license img]:"
Telegram,DrKLO/Telegram,23905,7764,"['Java', 'C++', 'C']",['telegram'],"## Telegram messenger for Android [Telegram]( is a messaging app with a focus on speed and security. Its superfast, simple and free. This repo contains the official source code for [Telegram App for Android]( ## Creating your Telegram Application We welcome all developers to use our API and source code to create applications on our platform. There are several things we require from **all developers** for the moment. 1. [**Obtain your own api_id**]( for your application. 2. Please **do not** use the name Telegram for your app or make sure your users understand that it is unofficial. 3. Kindly **do not** use our standard logo (white paper plane in a blue circle) as your app's logo. 3. Please study our [**security guidelines**]( and take good care of your users' data and privacy. 4. Please remember to publish **your** code too in order to comply with the licences. ### API, Protocol documentation Telegram API manuals: MTproto protocol manuals: ### Compilation Guide **Note**: In order to support [reproducible builds]( this repo contains dummy release.keystore, google-services.json and filled variables inside BuildVars.java. Before publishing your own APKs please make sure to replace all these files with your own. You will require Android Studio 3.4, Android NDK rev. 20 and Android SDK 8.1 1. Download the Telegram source code from ( git clone ) 2. Copy your release.keystore into TMessagesProj/config 3. Fill out RELEASE_KEY_PASSWORD, RELEASE_KEY_ALIAS, RELEASE_STORE_PASSWORD in gradle.properties to access your release.keystore 4. Go to create two android apps with application IDs org.telegram.messenger and org.telegram.messenger.beta, turn on firebase messaging and download google-services.json, which should be copied to the same folder as TMessagesProj. 5. Open the project in the Studio (note that it should be opened, NOT imported). 6. Fill out values in TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java theres a link for each of the variables showing where and which data to obtain. 7. You are ready to compile Telegram. ### Localization We moved all translations to Please use it."
react,typescript-cheatsheets/react,44195,4019,"['JavaScript', 'CSS', 'Shell']","['typescript', 'cheatsheet', 'react', 'guide', 'hacktoberfest']","# React+TypeScript Cheatsheets Cheatsheets for experienced React developers getting started with TypeScript --- [**Web docs**]( | [**Espaol**]( | [**Portugus**]( | [Contribute!]( | [Ask!]( :wave: This repo is maintained by [@swyx]( [@eps1lon]( and [@filiptammergard]( We're so happy you want to try out TypeScript with React! If you see anything wrong or missing, please [file an issue]( :+1: --- [](/CONTRIBUTORS.md) | []( | []( ## All React + TypeScript Cheatsheets - [The Basic Cheatsheet]( is focused on helping React devs just start using TS in React **apps** - Focus on opinionated best practices, copy+pastable examples. - Explains some basic TS types usage and setup along the way. - Answers the most Frequently Asked Questions. - Does not cover generic type logic in detail. Instead we prefer to teach simple troubleshooting techniques for newbies. - The goal is to get effective with TS without learning _too much_ TS. - [The Advanced Cheatsheet]( helps show and explain advanced usage of generic types for people writing reusable type utilities/functions/render prop/higher order components and TS+React **libraries**. - It also has miscellaneous tips and tricks for pro users. - Advice for contributing to DefinitelyTyped. - The goal is to take _full advantage_ of TypeScript. - [The Migrating Cheatsheet]( helps collate advice for incrementally migrating large codebases from JS or Flow, **from people who have done it**. - We do not try to convince people to switch, only to help people who have already decided. - This is a new cheatsheet, all assistance is welcome. - [The HOC Cheatsheet]( specifically teaches people to write HOCs with examples. - Familiarity with [Generics]( is necessary. - This is the newest cheatsheet, all assistance is welcome. --- ## Basic Cheatsheet ### Basic Cheatsheet Table of Contents Expand Table of Contents - [Section 1: Setup TypeScript with React](#section-1-setup-typescript-with-react) - [Prerequisites](#prerequisites) - [React and TypeScript starter kits](#react-and-typescript-starter-kits) - [Try React and TypeScript online](#try-react-and-typescript-online) - [Section 2: Getting Started](#section-2-getting-started) - [Function Components](#function-components) - [Hooks](#hooks) - [useState](#usestate) - [useReducer](#usereducer) - [useEffect / useLayoutEffect](#useeffect--uselayouteffect) - [useRef](#useref) - [Option 1: DOM element ref](#option-1-dom-element-ref) - [Option 2: Mutable value ref](#option-2-mutable-value-ref) - [See also](#see-also) - [useImperativeHandle](#useimperativehandle) - [Custom Hooks](#custom-hooks) - [More Hooks + TypeScript reading:](#more-hooks--typescript-reading) - [Example React Hooks + TypeScript Libraries:](#example-react-hooks--typescript-libraries) - [Class Components](#class-components) - [Typing getDerivedStateFromProps](#typing-getderivedstatefromprops) - [You May Not Need `defaultProps`](#you-may-not-need-defaultprops) - [Typing `defaultProps`](#typing-defaultprops) - [Consuming Props of a Component with defaultProps](#consuming-props-of-a-component-with-defaultprops) - [Problem Statement](#problem-statement) - [Solution](#solution) - [Misc Discussions and Knowledge](#misc-discussions-and-knowledge) - [Typing Component Props](#typing-component-props) - [Basic Prop Types Examples](#basic-prop-types-examples) - [Useful React Prop Type Examples](#useful-react-prop-type-examples) - [Types or Interfaces?](#types-or-interfaces) - [TL;DR](#tldr) - [More Advice](#more-advice) - [Useful table for Types vs Interfaces](#useful-table-for-types-vs-interfaces) - [getDerivedStateFromProps](#getderivedstatefromprops) - [Forms and Events](#forms-and-events) - [List of event types](#list-of-event-types) - [Context](#context) - [Basic Example](#basic-example) - [Extended Example](#extended-example) - [forwardRef/createRef](#forwardrefcreateref) - [Generic forwardRefs](#generic-forwardrefs) - [Option 1 - Wrapper component](#option-1---wrapper-component) - [Option 2 - Redeclare forwardRef](#option-2---redeclare-forwardref) - [More Info](#more-info) - [Portals](#portals) - [Error Boundaries](#error-boundaries) - [Option 1: Using react-error-boundary](#option-1-using-react-error-boundary) - [Options 2: Writing your custom error boundary component](#options-2-writing-your-custom-error-boundary-component) - [Concurrent React/React Suspense](#concurrent-reactreact-suspense) - [Troubleshooting Handbook: Types](#troubleshooting-handbook-types) - [Union Types and Type Guarding](#union-types-and-type-guarding) - [Optional Types](#optional-types) - [Enum Types](#enum-types) - [Type Assertion](#type-assertion) - [Simulating Nominal Types](#simulating-nominal-types) - [Intersection Types](#intersection-types) - [Union Types](#union-types) - [Overloading Function Types](#overloading-function-types) - [Using Inferred Types](#using-inferred-types) - [Using Partial Types](#using-partial-types) - [The Types I need weren't exported!](#the-types-i-need-werent-exported) - [The Types I need don't exist!](#the-types-i-need-dont-exist) - [Slapping `any` on everything](#slapping-any-on-everything) - [Autogenerate types](#autogenerate-types) - [Typing Exported Hooks](#typing-exported-hooks) - [Typing Exported Components](#typing-exported-components) - [Frequent Known Problems with TypeScript](#frequent-known-problems-with-typescript) - [TypeScript doesn't narrow after an object element null check](#typescript-doesnt-narrow-after-an-object-element-null-check) - [TypeScript doesn't let you restrict the type of children](#typescript-doesnt-let-you-restrict-the-type-of-children) - [Troubleshooting Handbook: Operators](#troubleshooting-handbook-operators) - [Troubleshooting Handbook: Utilities](#troubleshooting-handbook-utilities) - [Troubleshooting Handbook: tsconfig.json](#troubleshooting-handbook-tsconfigjson) - [Troubleshooting Handbook: Fixing bugs in official typings](#troubleshooting-handbook-fixing-bugs-in-official-typings) - [Troubleshooting Handbook: Globals, Images and other non-TS files](#troubleshooting-handbook-globals-images-and-other-non-ts-files) - [Editor Tooling and Integration](#editor-tooling-and-integration) - [Linting](#linting) - [Other React + TypeScript resources](#other-react--typescript-resources) - [Recommended React + TypeScript talks](#recommended-react--typescript-talks) - [Time to Really Learn TypeScript](#time-to-really-learn-typescript) - [Example App](#example-app) ### Section 1: Setup #### Prerequisites You can use this cheatsheet for reference at any skill level, but basic understanding of React and TypeScript is assumed. Here is a list of prerequisites: - Basic understanding of [React]( - Familiarity with [TypeScript Basics]( and [Everyday Types]( In the cheatsheet we assume you are using the latest versions of React and TypeScript. #### React and TypeScript starter kits React has documentation for [how to start a new React project]( with some of the most popular frameworks. Here's how to start them with TypeScript: - [Next.js]( `npx create-next-app@latest --ts` - [Remix]( `npx create-remix@latest` - [Gatsby]( `npm init gatsby --ts` - [Expo]( `npx create-expo-app -t with-typescript` #### Try React and TypeScript online There are some tools that let you run React and TypeScript online, which can be helpful for debugging or making sharable reproductions. - [TypeScript playground]( - [StackBlitz]( - [CodeSandbox]( ### Section 2: Getting Started #### Function Components These can be written as normal functions that take a `props` argument and return a JSX element. ```tsx // Declaring type of props - see ""Typing Component Props"" for more examples type AppProps = { message: string; }; /* use `interface` if exporting so that consumers can extend */ // Easiest way to declare a Function Component; return type is inferred. const App = ({ message }: AppProps) => {message}; // you can choose annotate the return type so an error is raised if you accidentally return some other type const App = ({ message }: AppProps): React.JSX.Element => {message}; // you can also inline the type declaration; eliminates naming the prop types, but looks repetitive const App = ({ message }: { message: string }) => {message}; // Alternatively, you can use `React.FunctionComponent` (or `React.FC`), if you prefer. // With latest React types and TypeScript 5.1. it's mostly a stylistic choice, otherwise discouraged. const App: React.FunctionComponent<{ message: string }> = ({ message }) => ( {message} ); ``` > Tip: You might use [Paul Shen's VS Code Extension]( to automate the type destructure declaration (incl a [keyboard shortcut]( Why is React.FC not needed? What about React.FunctionComponent/React.VoidFunctionComponent? You may see this in many React+TypeScript codebases: ```tsx const App: React.FunctionComponent<{ message: string }> = ({ message }) => ( {message} ); ``` However, the general consensus today is that `React.FunctionComponent` (or the shorthand `React.FC`) is not needed. If you're still using React 17 or TypeScript lower than 5.1, it is even [discouraged]( This is a nuanced opinion of course, but if you agree and want to remove `React.FC` from your codebase, you can use [this jscodeshift codemod]( Some differences from the ""normal function"" version: - `React.FunctionComponent` is explicit about the return type, while the normal function version is implicit (or else needs additional annotation). - It provides typechecking and autocomplete for static properties like `displayName`, `propTypes`, and `defaultProps`. - Note that there are some known issues using `defaultProps` with `React.FunctionComponent`. See [this issue for details]( We maintain a separate `defaultProps` section you can also look up. - Before the [React 18 type updates]( `React.FunctionComponent` provided an implicit definition of `children` (see below), which was heavily debated and is one of the reasons [`React.FC` was removed from the Create React App TypeScript template]( ```tsx // before React 18 types const ... [TRUNCATED]"
meteor,meteor/meteor,44077,5161,"['JavaScript', 'TypeScript', 'Shell']","['javascript', 'meteor', 'mongodb', 'build-system', 'npm']","[]( []( []( []( Meteor is an **ultra-simple** environment for building **modern** web applications. - [Official Website]( - [Installation]( - [Documentation]( ### **Create your applications using modern JavaScript** Benefit from the latest technology updates to rapidly prototype and develop your applications. ### **Integrate technologies you already use** Use popular frameworks and tools right out-of-the-box. Focus on building features instead of configuring disparate components yourself. ### **Build apps for any device** Use the same code whether youre developing for web, iOS, Android, or desktop for a seamless update experience for your users. # Getting Started How about trying a tutorial to get started with your favorite technology? | [ React]( | | - | | [ Blaze]( | | [ Vue]( | | [ Svelte]( | Next, read the [documentation]( and get some [examples]( # Quick Start On your platform, use this line: ```shell > npm install -g meteor ``` To create a project: ```shell > meteor create my-app ``` Run it: ```shell cd my-app meteor ``` # Developer Resources **Building an application with Meteor?** * Deploy on [Meteor Cloud]( * Discuss on [Forums]( * Join the Meteor community Slack by clicking this [invite link]( * Announcement list. Subscribe in the [footer]( Interested in helping or contributing to Meteor? These resources will help: * [Core development guide](DEVELOPMENT.md) * [Contribution guidelines](CONTRIBUTING.md) * [Feature requests]( * [Issue tracker]( To uninstall Meteor: - If installed via npm, run: ```shell meteor-installer uninstall ``` - If installed via curl, run: ```shell rm -rf ~/.meteor sudo rm /usr/local/bin/meteor ``` To find more information about installation, [read here]("
uBlock,gorhill/uBlock,43756,2936,"['JavaScript', 'CSS', 'HTML']","['ublock-origin', 'blocker', 'firefox', 'chromium', 'ublock']","[![Badge Commits]][Commit Rate] [![Badge Issues]][Issues] [![Badge Localization]][Crowdin] [![Badge License]][License] [![Badge NPM]][NPM] [![Badge Mozilla]][Mozilla] [![Badge Chrome]][Chrome] [![Badge Edge]][Edge] *** uBlock Origin (uBO) BEWARE! uBO is (and has always been) COMPLETELY UNRELATED to the website ublock.org. *** *** uBlock Origin (uBO) is a CPU and memory-efficient [wide-spectrum content blocker][Blocking] for Chromium and Firefox. It blocks ads, trackers, coin miners, popups, annoying anti-blockers, malware sites, etc., by default using [EasyList][EasyList], [EasyPrivacy][EasyPrivacy], [Peter Lowe's Blocklist][Peter Lowe's Blocklist], [Online Malicious URL Blocklist][Malicious Blocklist], and uBO [filter lists][uBO Filters]. There are many other lists available to block even more. Hosts files are also supported. uBO uses the EasyList filter syntax and [extends][Extended Syntax] the syntax to work with custom rules and filters. You may easily unselect any preselected filter lists if you think uBO blocks too much. For reference, Adblock Plus installs with only EasyList, ABP filters, and Acceptable Ads enabled by default. It is important to note that using a blocker is **NOT** [theft]. Do not fall for this creepy idea. The _ultimate_ logical consequence of `blocking = theft` is the criminalization of the inalienable right to privacy. Ads, ""unintrusive"" or not, are just the visible portion of the privacy-invading means entering your browser when you visit most sites. **uBO's primary goal is to help users neutralize these privacy-invading methods** in a way that welcomes those users who do not wish to use more technical means. *** * [Documentation](#documentation) * [Installation](#installation) * [Firefox](#firefox) * [Thunderbird](#thunderbird) * [Chromium](#chromium) * [All Programs](#all-programs) * [Enterprise Deployment](#enterprise-deployment) * [Release History](#release-history) * [Translations](#translations) * [About](#about) ## Documentation Basic Mode Advanced Mode The simple popup user interface for an install-it-and-forget-it type of installation that is configured optimally by default. The advanced popup user interface includes a point-and-click firewall that is configurable on a per-site basis. Visit the [Wiki][Wiki] for documentation. For support, questions, or help, visit [/r/uBlockOrigin][Reddit]. ## Installation [Required Permissions][Permissions] #### Firefox [Firefox Add-ons][Mozilla] [Development Builds][Beta] uBO [works best][Works Best] on Firefox and is available for desktop and Android versions. #### Thunderbird [Thunderbird Add-ons][Thunderbird] In Thunderbird, uBlock Origin does not affect emails, just feeds. #### Chromium [Chrome Web Store][Chrome] [Microsoft Edge Add-ons][Edge] (Published by: [Nicole Rolls][Nicole Rolls]) [Opera Add-ons][Opera] [Development Builds][Chrome Dev] uBO should be compatible with any Chromium-based browser. #### All Programs Do **NOT** use uBO with any other content blocker. uBO [performs][Performance] as well as or better than most popular blockers. Other blockers can prevent uBO's privacy or anti-blocker-defusing features from working correctly. [Manual Installation][Manual Installation] #### Enterprise Deployment [Deploying uBO][Deployment] ## Release History [Releases Page][Releases] ## Translations Help translate uBO via [Crowdin][Crowdin]. ## About [Manifesto][Manifesto] [Privacy Policy][Privacy Policy] [GPLv3 License][License] Free. Open-source. For users by users. No donations sought. If you ever want to contribute something, think about the people working hard to maintain the filter lists you are using, which are available to use by all for free. [Peter Lowe's Blocklist]: [Malicious Blocklist]: [Performance]: [EasyPrivacy]: [Thunderbird]: [Chrome Dev]: [EasyList]: [Mozilla]: [Crowdin]: [Chrome]: [Reddit]: [Theft]: [Opera]: [Edge]: [NPM]: [Manifesto]: MANIFESTO.md [License]: LICENSE.txt [Nicole Rolls]: [Manual Installation]: [Extended Syntax]: [Privacy Policy]: [uBO Filters]: [Permissions]: [Commit Rate]: [Works Best]: [Deployment]: [Blocking]: [Releases]: [Issues]: [Beta]: [Wiki]: [Badge Localization]: [Badge Commits]: [Badge Mozilla]: [Badge License]: [Badge Chrome]: [Badge Edge]: [Badge Issues]: [Badge NPM]:"
Motrix,agalwood/Motrix,43672,4417,"['JavaScript', 'Vue', 'SCSS']","['motrix', 'aria2', 'download-manager', 'macos', 'windows']","# Motrix ## A full-featured download manager []( English | [](./README-CN.md) Motrix is a full-featured download manager that supports downloading HTTP, FTP, BitTorrent, Magnet, etc. Motrix has a clean and easy to use interface. I hope you will like it . [Official Website]( | [Manual]( ## Installation Download from [GitHub Releases]( and install it. ### Windows It is recommended to install Motrix using the installation package (Motrix-Setup-x.y.z.exe) to ensure a complete experience, such as associating torrent files, capturing magnet links, etc. If you use package management tools to manage applications on Windows, such as [Chocolatey]( [scoop]( You can use them to install Motrix. #### Chocolatey Thanks to [@Yato]( for continuing to maintain the [Motrix Chocolatey]( package. To install motrix, run the following command from the `command line` or from `PowerShell`: ```bash # Install choco install motrix # Upgrade choco upgrade motrix ``` #### scoop If you prefer the portable version, you can use [scoop]( (need Windows 7+) to install Motrix. ```bash scoop bucket add extras scoop install motrix ``` ### macOS The macOS users can install Motrix using `brew`, thanks to [PR]( of [@Mitscherlich]( ```bash brew update && brew install motrix ``` #### Auto Update Since Motrix v1.8.0 and later versions changed the App BundleID ( `net.agalwood.Motrix` => `app.motrix.native` ), the automatic update of Motrix v1.6.11 will fail. [Motrix Install Assistant]( will help you install the latest Motrix application. ### Linux You can download the `AppImage` (for all Linux distributions) or `snap` to install Motrix, see [GitHub/release]( for more Linux installation package formats. Motrix may need to run with `sudo` for the first time in Linux because there is no permission to create the download session file (`/var/cache/aria2.session`). If you want to build from source code, please read the **Build** section. #### AppImage The latest version of Motrix AppImage requires you to manually perform desktop integration. Please check the documentation of [AppImageLauncher]( . > Desktop Integration > Since electron-builder 21 desktop integration is not a part of produced AppImage file. > [AppImageLauncher]( is the recommended way to integrate AppImages. Deepin 20 Beta users failed to install Motrix, please follow the steps below: Open the `Terminal`, paste and run the following command to install Motrix again. ```bash sudo apt --fix-broken install ``` #### Snap Motrix has been listed on [Snapcraft]( , Ubuntu users recommend downloading from the Snap Store. Tips for v1.5.10 The tray may not display the indicator normally, which makes it inconvenient to exit the application. Please unchecked Preferences--Basic Settings--Hide App Menu (Windows & Linux Only), click Save & Apply. Then click ""Exit"" in the File menu to exit the application. Please update to v1.5.12 and above, you can use the keyboard shortcut Ctrl + q to quickly exit the application. #### AUR For Arch Linux users, Motrix is available in [aur]( thanks to the maintainer [@weearc]( Run the following command to install: ```bash yay -S motrix ``` #### Flatpak Thanks to the [PR]( of [@proletarius101]( Motrix has been listed [Flathub]( Linux users who like the Flatpak can try it. ```bash # Install flatpak install flathub net.agalwood.Motrix # Run flatpak run net.agalwood.Motrix ``` ## Features - Simple and clear user interface - Supports BitTorrent & Magnet - BitTorrent selective download - Update tracker list every day automatically - UPnP & NAT-PMP Port Mapping - Up to 10 concurrent download tasks - Supports 64 threads in a single task - Supports speed limit - Mock User-Agent - Download completed Notification - Ready for Touch Bar (Mac only) - Resident system tray for quick operation - Tray speed meter displays real-time speed (Mac only) - Dark mode - Delete related files when removing tasks (optional) - I18n, [View supported languages](#-internationalization). - More features in development ## User Interface ## Development ### Clone Code ```bash git clone git@github.com:agalwood/Motrix.git ``` ### Install Dependencies ```bash cd Motrix yarn ``` > Error: Electron failed to install correctly, please delete node_modules/electron and try installing again `Electron` failed to install correctly, please refer to ### Dev Mode ```bash yarn run dev ``` ### Build Release ```bash yarn run build ``` #### Build for Apple Silicon ```bash yarn run build:applesilicon ``` After building, the application will be found in the project's `release` directory. ## Technology Stack - [Electron]( - [Vue]( + [VueX]( + [Element]( - [Aria2]( ## TODO Development Roadmap see: [Trello]( ## Contribute []( If you are interested in participating in joint development, PR and Forks are welcome! ## Internationalization Translations into versions for other languages are welcome ! Please read the [translation guide](./CONTRIBUTING.md#-translation-guide) before starting translations. | Key | Name | Status | |-------|:--------------------|:-------------| | ar | Arabic | [@hadialqattan]( [@AhmedElTabarani]( | | bg | | [@null-none]( | | ca | Catal | [@marcizhu]( | | de | Deutsch | [@Schloemicher]( | | el | | [@Likecinema]( | | en-US | English | | | es | Espaol | [@Chofito]( | fa | | [@Nima-Ra]( | | fr | Franais | [@gpatarin]( | | hu | Hungarian | [@zalnaRs]( | | id | Indonesia | [@aarestu]( | | it | Italiano | [@blackcat-917]( | | ja | | [@hbkrkzk]( | | ko | | [@KOZ39]( | | nb | Norsk Bokml | [@rubjo]( | | nl | Nederlands | [@nickbouwhuis]( | | pl | Polski | [@KanarekLife]( | | pt-BR | Portuguese (Brazil) | [@andrenoberto]( | | ro | Romn | [@alyn3d]( | | ru | | [@bladeaweb]( | | th | | [@nxanywhere]( | | tr | Trke | [@abdullah]( | | uk | | [@bladeaweb]( | | vi | Ting Vit | [@duythanhvn]( | | zh-CN | | | | zh-TW | | [@Yukaii]( [@5idereal]( | ## License [MIT]( Copyright (c) 2018-present Dr_rOot"
parcel,parcel-bundler/parcel,43176,2254,"['JavaScript', 'Rust', 'HTML']","['module-bundler', 'build-tool', 'javascript', 'css', 'html']","[](#backers) [](#sponsors) []( []( []( []( []( Parcel is a zero configuration build tool for the web. It combines a great out-of-the-box development experience with a scalable architecture that can take your project from just getting started to massive production application. ## Features - **Zero config** Parcel supports many languages and file types out of the box, from web technologies like HTML, CSS, and JavaScript, to assets like images, fonts, videos, and more. It has a built-in dev server with hot reloading, beautiful error diagnostics, and much more. No configuration needed! - **Lightning fast** Parcel's JavaScript compiler is written in Rust for native performance. Your code is built in parallel using worker threads, utilizing all of the cores on your machine. Everything is cached, so you never build the same code twice. It's like using watch mode, but even when you restart Parcel! - **Automatic production optimization** Parcel optimizes your whole app for production automatically. This includes tree-shaking and minifying your JavaScript, CSS, and HTML, resizing and optimizing images, content hashing, automatic code splitting, and much more. - **Ship for any target** Parcel automatically transforms your code for your target environments. From modern and legacy browser support, to zero config JSX and TypeScript compilation, Parcel makes it easy to build for any target or many! - **Scalable** Parcel requires zero configuration to get started. But as your application grows and your build requirements become more complex, it's possible to extend Parcel in just about every way. A simple configuration format and powerful plugin system that's designed from the ground up for performance means Parcel can support projects of any size. ## Getting Started See the following guides in our documentation on how to get started with Parcel. * [Building a webapp with Parcel]( * [Building a library with Parcel]( * [Migrating from Parcel v1]( ## Documentation Read the docs at ## Community - Ask questions on [GitHub Discussions]( - Join the community on [Discord]( - Stay up to date on new features and announcements on [Twitter]( ## Contributors This project exists thanks to all the people who contribute. [[Contribute]](CONTRIBUTING.md). ## Backers Thank you to all our backers! [[Become a backer]( ## Sponsors Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor]("
hiring-without-whiteboards,poteto/hiring-without-whiteboards,42168,3362,['JavaScript'],"['interview', 'hiring', 'whiteboard', 'jobs', 'tech']","# Hiring Without Whiteboards A list of companies (or teams) that don't do ""whiteboard"" interviews. ""Whiteboards"" is used as a metaphor, and is a _symbol_ for the kinds of CS trivia questions that are associated with bad interview practices. Whiteboards are not bad CS trivia questions are. Using sites like HackerRank/LeetCode _probably_ fall into a similar category. The companies and teams listed here use interview techniques and questions that resemble day-to-day work. For example, pairing on a real world problem or a paid/unpaid take home exercise. Read (and contribute to) [our recommendations](RECOMMENDATIONS.md) for ways to conduct better interviews. ### tl;dr - Discussing a real world problem (with or without whiteboard) is - Solving CS trivia, technical puzzles, riddles, brainteasers (with or without whiteboard) is Please open a [PR]( to be added. ### Duds If you've been through an interview with one of these companies recently, and your experience suggests otherwise from their description, please open a [PR]( to remove them from this list. ### I want to search/sort/filter/group by X! Check out our [Airtable]( Additions to this document that are properly formatted will automatically be pushed and added to Airtable. Keywords from the description will also be extracted. You can see (and contribute!) to the [API here]( Also check out [No Whiteboards]( to search for jobs at these companies. ### Discussion and other reads - Discussion - [HackerNews (2017)]( - [HackerNews (2020)]( - [Finding a better alternative to the whiteboard interview]( - [How to hire engineering talent without the BS]( --- ## 0 - 9 - [1000.software]( | Krakow, Poland and Remote | Series of 2 interviews first on soft skills, second on technical skills (how to build things, how to solve specific, real world problem, best practice) and meeting with a team leader. Sometimes a take home, simple project. ## A - C - [Aalyria]( | Remote | Timeboxed design exercise and related coding exercise, followed by a technical/behavioral discussion with the team, and behavioral interview with leadership - [Able]( | Lima, PE / Remote | Coding interview, Technical interview (Backlog Refinement + System Design), Leadership interview (Behavioural) - [Abstract]( | San Francisco, CA - [Accenture]( | San Francisco, CA / Los Angeles, CA / New York, NY / Kuala Lumpur, Malaysia | Technical phone discussion with architecture manager, followed by behavioral interview focusing on soft skills - [Accredible]( | Cambridge, UK / San Francisco, CA / Remote | Take home project, then a pair-programming and discussion onsite / Skype round. - [Acko]( | Mumbai, India | Phone interview, followed by a small take home problem. Finally a F2F or skype pair programming session - [Acumen]( | London, UK | Small take home test, and sit in on some sprint rituals on-site - [Ad Hoc]( | Remote / Washington, DC | Technical take-home assignment, followed by multiple video calls that are discussions of technical background and experience. - [Adaface]( | Remote/ Singapore, Singapore / Bangalore, India | Conversational on-the-job technical assessment, followed by video calls with technical lead and founders - [AdCellerant]( | Denver, CO | Technical phone screen, 5-day take home code challenge, then on-site interview comprised of cultural and technical discussions - [Adeva]( | New York, USA | 4 steps interviewing process that includes online coding assignment + lead engineer call. - [AdEx Network]( | Sofia, Bulgaria / Remote | Email screening process, followed by a take-home assignment - [Admiral]( | Gainesville, FL / Remote | Intro phone call with hiring manager, take-home assignment, (mostly) non-technical on-site with team/leadership - [Adnymics]( | Munich, DE | Take home project, then work with the team for a day - [Adthena]( | London, UK | Takehome project and discussion on-site - [AdWyze]( | Bangalore, India | Short takehome project + (for fulltime) onsite pairing - [Adyen]( | Amsterdam, NL | Take-home assignment, design discussion based on take home, culture fit etc. Provides visa sponsorship to the Netherlands. - [Affinipay]( | Austin, TX | Short takehome project + video interview about coding with engineering manager - [Agency Enterprise Studio]( | Remote / Los Angeles, CA / Florianpolis, Brazil | Live coding of a task you'd do daily - [Ageno]( | Bielsko-Biala, Poland | Simple Magento Take-home project and discussion on the real world problems. - [AgileMD]( | San Francisco, CA | Takehome project - [AImotive]( | Budapest, Hungary | Small take-home project, then in-person interview about technical background - [Airbase]( | San Francisco, CA; Bangalore, India; Remote | Intro Call with HR or EMs, small take-home project, two tech rounds with Airbase Engineers (based on real world engineering problems), followed by a final values round with the Founder or Director of Engineering. - [Airtable]( | San Francisco, CA; Austin, TX; Mountain View, CA; New York, NY; Remote | Take home project that resembles a problem Airtable solves for. Five hour on-site which includes a discussion of the project, UI design, discussing architectural tradeoffs, and code debugging. - [Aiwip]( | London, UK | Skype/phone interview followed by takehome project or worksample (or whiteboard) - [Albert]( | Los Angeles, CA | Discussion with senior engineer, and then practical pair programming related to my experience + the position - [Algolia]( | Paris, France / San Francisco, CA | Takehome project & Onsite discussions and presentation - [all about apps GmbH]( | Vienna, Austria | 2-phase technical discussion & examination with department heads and management. - [Allegro]( | Warsaw, Poland; Poznan, Poland; Torun, Poland; Wroclaw, Poland; Krakow, Poland | Take home, simple project. Series of 2 technical interviews (how to build things, how to solve specific, real world problem) and meeting with a team leader. - [Alluxi]( | Monterrey, Mexico | Initial skype interview, technical interview with Senior engineer and work sample review. - [Almabase]( | Bengaluru, India | Take-home assignment, design discussion based on take home, low level and high level design rounds based on real life problems, culture fit etc. during onsite. - [AlphaSights]( | London, UK / New York, NY / Remote | Initial interview, pair programming then final round with general technical questions - [AMAGI]( | Makati, Philippines | 1) Review of your resume, portfolio, and/or GitHub profile; 2) 1 hour discussion (in-person or Skype) about your goals, experience, personal culture, and how to apply technical solutions to real problems; - [Analytical Flavor Systems]( | Manhattan, New York | Code sample or take-home project, both with discussion. - [Angaza]( | San Francisco, CA | Take-home assignment with guaranteed feedback, on-site interviews involving actual day-to-day work - [Animech]( | Uppsala, Sweden | Multiple interviews with technical staff with real problem discussions. - [Anyfin]( | Stockholm, Sweden | Takehome project & Onsite discussions and presentation. - [Aparkado]( | Cologne, Germany / Remote | Intro with Co-Founder, team fit with the team plus a small real-world problem to solve, followed by final round with CEO / Co-Founder. - [Apollo Agriculture]( | Nairobi, Kenya / Remote | Takehome project or Worksample (or whiteboard) - [Applied]( | London, UK | Situational judgement tests focusing on real-world soft skills (online then in structured interview) - [Arachnys]( | London, UK | Take home test, real world pair programming - [Articulate]( | Remote | Take-home project & pair program on a problem similar to daily work - [Artsy]( | New York, NY / London, UK / Berlin, Germany / Los Angeles, CA / Hong Kong, Hong Kong / Remote | Our process: 1) Informal chat 2) Application 3) Phone screen 4) In-person interview with 1 lead, 2 individual contributors and 1 non-engineer (30-45 mins each), focusing on your work habits and expertise as demonstrated in your previous work 5) ~4 in-depth professional reference calls (30-45 mins each). - [ASI Data Science]( | London, UK | Project to work at home, general technical questions, pair programming with engineers - [ASOS]( | London, UK | Take home or in-person code refactoring exercise, in-person walk-though of solution including software craftsmanship principles and design decisions, in-person freestyle architecture walk-through - [Ataccama]( | Prague, Czech Republic | Face to face interview (skype or onsite), coding task for 30 min, meeting with team members - [aTech Media]( | London, UK | Face to face interview, review of existing open source contributions or, if none are available, asked to write a library for something that interests them - [Atlan]( | New Delhi, India | A mini project (to be done within 8 days), followed by a discussion with the team you're applying to. Then as the final step, a call with one of the founders. - [Aura Frames]( | New York, NY / San Francisco, CA | Simplified real-world coding task on Coderpad.io, followed by a few hours onsite writing code in our actual codebase. - [Auth0 by Okta]( | Bellevue, WA; San Francisco, CA; Buenos Aires, Argentina; Warsaw, Poland; Toronto, Canada; Remote | Series of interviews, go over technical background and past experiences, take-home project - [Auto1]( | Berlin, DE | Series of Skype interviews which covers general technical questions, followed by a take-home assignment - [Automattic]( | Remote | short take-home code test, then a part-time, paid project. - [AutoScout24]( | Munich, Germany | Skype interview followed by home assignment from our day-to-day business and then on-site interview including lunch with a team - [Avant]( | Chicago, IL | Pair programming interviews. - [Avarteq GmbH]( | Berlin, Germany / Saarbrcken, Germany | Technical interview with our developers on-site or remote followed by a work sample in a pair programming session or a previous take-home project with a follow-up discussion and detailed feedback. - [Axelerant]( | Remote | Take-home ... [TRUNCATED]"
zx,google/zx,42032,1066,"['JavaScript', 'TypeScript']","['javascript', 'nodejs', 'shell', 'bash', 'cli']","zx ```js #!/usr/bin/env zx await $`cat package.json | grep name` let branch = await $`git branch --show-current` await $`dep deploy --branch=${branch}` await Promise.all([ $`sleep 1; echo 1`, $`sleep 2; echo 2`, $`sleep 3; echo 3`, ]) let name = 'foo bar' await $`mkdir /tmp/${name}` ``` Bash is great, but when it comes to writing more complex scripts, many people prefer a more convenient programming language. JavaScript is a perfect choice, but the Node.js standard library requires additional hassle before using. The `zx` package provides useful wrappers around `child_process`, escapes arguments and gives sensible defaults. ## Install ```bash npm install zx ``` ## Documentation Read documentation on [google.github.io/zx]( ## License [Apache-2.0](LICENSE) Disclaimer: _This is not an officially supported Google product._"
yarn,yarnpkg/yarn,41349,2724,"['JavaScript', 'Shell', 'PowerShell']","['yarn', 'npm', 'package-manager', 'javascript']","> ## Important note > > This repository holds the sources for Yarn 1.x (latest version at the time of this writing being 1.22). New releases (at this time the 3.2.3, although we're currently working on our next major) are tracked on the [yarnpkg/berry]( repository, this one here being mostly kept for historical purposes and the occasional hotfix we publish to make the migration from 1.x to later releases easier. > > If you hit bugs or issues with Yarn 1.x, we strongly suggest you [migrate]( to the latest release - at this point they have been maintained longer than 1.x, and many classes of problems have already been addressed there. By using the [`nodeLinker` setting]( you'll also have the choice of how you want to install your packages: node_modules like npm, symlinks like pnpm, or manifest files via [Yarn PnP]( --- Fast, reliable, and secure dependency management. --- **Fast:** Yarn caches every package it has downloaded, so it never needs to download the same package again. It also does almost everything concurrently to maximize resource utilization. This means even faster installs. **Reliable:** Using a detailed but concise lockfile format and a deterministic algorithm for install operations, Yarn is able to guarantee that any installation that works on one system will work exactly the same on another system. **Secure:** Yarn uses checksums to verify the integrity of every installed package before its code is executed. ## Features * **Offline Mode.** If you've installed a package before,thenyou can install it again withoutaninternet connection. * **Deterministic.** The same dependencies will be installed in the same exact way on any machine, regardless ofinstallationorder. * **Network Performance.** Yarn efficiently queuesrequests andavoids request waterfalls in order to maximize network utilization. * **Network Resilience.** A single request that fails will not cause the entire installation to fail. Requests are automatically retried upon failure. * **Flat Mode.** Yarn resolves mismatched versions of dependencies to a single version to avoid creating duplicates. * **More emojis.** ## Our supports ### [Gold sponsors]( All your environment variables, in one place. Stop struggling with scattered API keys, hacking together home-brewed tools, and avoiding access controls. Keep your team and servers in sync with Doppler. Your app, enterprise-ready. Start selling to enterprise customers with just a few lines of code. Add Single Sign-On (and more) in minutes instead of months with WorkOS. ## Installing Yarn Read the [Installation Guide]( on our website for detailed instructions on how to install Yarn. ## Using Yarn Read the [Usage Guide]( on our website for detailed instructions on how to use Yarn. ## Contributing to Yarn The 1.x codebase is fairly old and will only accept security fixes. For new features or bugfixes, please see our new [repository]( and its [contribution guide]( ## Prior art Yarn wouldn't exist if it wasn't for excellent prior art. Yarn has been inspired by the following projects: - [Bundler]( - [Cargo]( - [npm]( ## Credits Thanks to [Sam Holmes]( for donating the npm package name!"
30-Days-Of-JavaScript,Asabeneh/30-Days-Of-JavaScript,41218,9584,"['JavaScript', 'HTML']","['30daysofjavascript', 'javascript-for-everyone', 'css', 'html', 'javascript']","# 30 Days Of JavaScript | # Day | Topics | | ----- | :-------------------------------------------------------------------------------------------------------------------------------------------------: | | 01 | [Introduction](./readMe.md) | | 02 | [Data Types](./02_Day_Data_types/02_day_data_types.md) | | 03 | [Booleans, Operators, Date](./03_Day_Booleans_operators_date/03_booleans_operators_date.md) | | 04 | [Conditionals](./04_Day_Conditionals/04_day_conditionals.md) | | 05 | [Arrays](./05_Day_Arrays/05_day_arrays.md) | | 06 | [Loops](./06_Day_Loops/06_day_loops.md) | | 07 | [Functions](./07_Day_Functions/07_day_functions.md) | | 08 | [Objects](./08_Day_Objects/08_day_objects.md) | | 09 | [Higher Order Functions](./09_Day_Higher_order_functions/09_day_higher_order_functions.md) | | 10 | [Sets and Maps](./10_Day_Sets_and_Maps/10_day_Sets_and_Maps.md) | | 11 | [Destructuring and Spreading](./11_Day_Destructuring_and_spreading/11_day_destructuring_and_spreading.md) | | 12 | [Regular Expressions](./12_Day_Regular_expressions/12_day_regular_expressions.md) | | 13 | [Console Object Methods](./13_Day_Console_object_methods/13_day_console_object_methods.md) | | 14 | [Error Handling](./14_Day_Error_handling/14_day_error_handling.md) | | 15 | [Classes](./15_Day_Classes/15_day_classes.md) | | 16 | [JSON](./16_Day_JSON/16_day_json.md) | | 17 | [Web Storages](./17_Day_Web_storages/17_day_web_storages.md) | | 18 | [Promises](./18_Day_Promises/18_day_promises.md) | | 19 | [Closure](./19_Day_Closures/19_day_closures.md) | | 20 | [Writing Clean Code](./20_Day_Writing_clean_codes/20_day_writing_clean_codes.md) | | 21 | [DOM](./21_Day_DOM/21_day_dom.md) | | 22 | [Manipulating DOM Object](./22_Day_Manipulating_DOM_object/22_day_manipulating_DOM_object.md) | | 23 | [Event Listeners](./23_Day_Event_listeners/23_day_event_listeners.md) | | 24 | [Mini Project: Solar System](./24_Day_Project_solar_system/24_day_project_solar_system.md) | | 25 | [Mini Project: World Countries Data Visualization 1](./25_Day_World_countries_data_visualization_1/25_day_world_countries_data_visualization_1.md) | | 26 | [Mini Project: World Countries Data Visualization 2](./26_Day_World_countries_data_visualization_2/26_day_world_countries_data_visualization_2.md) | | 27 | [Mini Project: Portfolio](./27_Day_Mini_project_portfolio/27_day_mini_project_portfolio.md) | | 28 | [Mini Project: Leaderboard](./28_Day_Mini_project_leaderboard/28_day_mini_project_leaderboard.md) | | 29 | [Mini Project: Animating characters](./29_Day_Mini_project_animating_characters/29_day_mini_project_animating_characters.md) | | 30 | [Final Projects](./30_Day_Mini_project_final/30_day_mini_project_final.md) | HAPPY CODING Support the author to create more educational materials 30 Days Of JavaScript: Introduction Author: Asabeneh Yetayeh January, 2020 [English](./readMe.md) [Spanish](./Spanish/readme.md) [Italian](./Italian/readMe.md) [Russian](./RU/README.md) [Turkish](./Turkish/readMe.md) [Azerbaijan](./Azerbaijani/readMe.md) [Korean](./Korea/README.md) [Vietnamese](./Vietnamese/README.md) [Polish](./Polish/readMe.md) [Portuguese](./Portuguese/readMe.md) [Day 2 >>](./02_Day_Data_types/02_day_data_types.md) - [30 Days Of JavaScript](#30-days-of-javascript) - [ Day 1](#-day-1) - [Introduction](#introduction) - [Requirements](#requirements) - [Setup](#setup) - [Install Node.js](#install-nodejs) - [Browser](#browser) - [Installing Google Chrome](#installing-google-chrome) - [Opening Google Chrome Console](#opening-google-chrome-console) - [Writing Code on Browser Console](#writing-code-on-browser-console) - [Console.log](#consolelog) - [Console.log with Multiple Arguments](#consolelog-with-multiple-arguments) - [Comments](#comments) - [Syntax](#syntax) - [Arithmetics](#arithmetics) - [Code Editor](#code-editor) - [Installing Visual Studio Code](#installing-visual-studio-code) - [How to Use Visual Studio Code](#how-to-use-visual-studio-code) - [Adding JavaScript to a Web Page](#adding-javascript-to-a-web-page) - [Inline Script](#inline-script) - [Internal Script](#internal-script) - [External Script](#external-script) - [Multiple External Scripts](#multiple-external-scripts) - [Introduction to Data types](#introduction-to-data-types) - [Numbers](#numbers) - [Strings](#strings) - [Booleans](#booleans) - [Undefined](#undefined) - [Null](#null) - [Checking Data Types](#checking-data-types) - [Comments Again](#comments-again) - [Variables](#variables) - [ Day 1: Exercises](#-day-1-exercises) # Day 1 ## Introduction **Congratulations** on deciding to participate in 30 days of JavaScript programming challenge. In this challenge, you will learn everything you need to be a JavaScript programmer, and in general, the whole concept of programming. In the end of the challenge, you will get a 30DaysOfJavaScript programming challenge completion certificate. In case you need help or if you would like to help others you may join the dedicated [telegram group]( **A 30DaysOfJavaScript** challenge is a guide for both beginners and advanced JavaScript developers. Welcome to JavaScript. JavaScript is the language of the web. I enjoy using and teaching JavaScript and I hope you will do so too. In this step by step JavaScript challenge, you will learn JavaScript, the most popular programming language in the history of mankind. JavaScript is used **_to add interactivity to websites, to develop mobile apps, desktop applications, games_** and nowadays JavaScript can be used for **server-side programming**, **_machine learning_** and **_AI_**. **_JavaScript (JS)_** has increased in popularity in recent years and has been the leading programming language for last ten years and is the most used programming language on GitHub. This challenge is easy to read, written in conversational English, engaging, motivating and at the same time, it is very demanding. You need to allocate much time to finish this challenge. If you are a visual learner, you may get the video lesson on Washera YouTube channel. Subscribe the channel, comment and ask questions on YouTube vides and be proactive, the author will eventually notice you. The author likes to hear your opinion about the challenge, share the author by expressing your thoughts about the 30DaysOfJavaScript challenge. You can leave your testimonial on this [link]( ## Requirements No prior knowledge of programming is required to follow this challenge. You need only: 1. Motivation 2. A computer 3. Internet 4. A browser 5. A code editor ## Setup I believe you have the motivation and a strong desire to be a developer, a computer and Internet. If you have those, then you have everything to get started. ### Install Node.js You may not need Node.js right now but you may need it for later. Install [node.js]( After downloading double click and install We can check if node is installed on our local machine by opening our device terminal or command prompt. ```sh asabeneh $ node -v v12.14.0 ``` When making this tutorial I was using Node version 12.14.0, but now the recommended version of Node.js for download is v14.17.6, by the time you use this material you may have a higher Node.js version. ### Browser There are many browsers out there. However, I strongly recommend Google Chrome. #### Installing Google Chrome Install [Google Chrome]( if you do not have one yet. We can write small JavaScript code on the browser console, but we do not use the browser console to develop applications. #### Opening Google Chrome Console You can open Google Chrome console either by clicking three dots at the top right corner of the browser, selecting _More tools -> Developer tools_ or using a keyboard shortcut. I prefer using shortcuts. To open the Chrome console using a keyboard shortcut. ```sh Mac Command+Option+J Windows/Linux: Ctl+Shift+J ``` After you open the Google Chrome console, try to explore the marked buttons. We will spend most of the time on the Console. The Console is the place where your JavaScript code goes. The Google Console V8 engine changes your JavaScript code to machine code. Let us write a JavaScript code on the Google Chrome console: #### Writing Code on Browser Console We can write any JavaScript code on the Google console or any browser console. However, for this challenge, we only focus on Google Chrome console. Open the console using: ```sh Mac Command+Option+I Windows: Ctl+Shift+I ``` ##### Console.log To write our first JavaScript code, we used a built-in function **console.log()**. We passed an argument as input data, and the function displays the output. We passed `'Hello, World'` as input data or argument in the console.log() function. ```js console.log('Hello, World!') ``` ##### Console.log with Multiple Arguments The **`console.log()`** function can take multiple parameters separated by commas. The syntax looks like as follows:**`console.log(param1, param2, param3)`** ```js console.log('Hello', 'World', '!') console.log('HAPPY', 'NEW', 'YEAR', 2020) console.log('Welcome', 'to', 30, 'Days', 'Of', 'JavaScript') ``` As you can see from the snippet code above, _`console.log()`_ can take multiple arguments. Congratulations! You wrote your first JavaScript code using _`console.log()`_. ##### Comments We can add comments to our code. Comments are very important to make code more readable and to leave remarks in our code. JavaScript does not execute the comment part of our code. In JavaScript, any text line starting with // in JavaScript is a comment, and anything enclosed like this `//` is also a comment. **Example: Single Line Comment** ```js // This is the first comment // This is the second comment // I am a single line comment ``` **Example: Multiline Comment** ```js /* This is a multiline comment Multiline comments can take multiple lines JavaScript is the language of the web */ ``` ##### Syntax Programming languages are similar to human languages. English or many other language uses words, phrases, sentences, compound sentences and other more to convey a meaningful messa... [TRUNCATED]"
pm2,Unitech/pm2,40833,2577,"['JavaScript', 'Shell', 'Smarty']","['pm2', 'nodejs', 'node', 'process-manager', 'monitoring']","P(rocess) M(anager) 2 Runtime Edition PM2 is a production process manager for Node.js applications with a built-in load balancer. It allows you to keep applications alive forever, to reload them without downtime and to facilitate common system admin tasks. Starting an application in production mode is as easy as: ```bash $ pm2 start app.js ``` PM2 is constantly assailed by [more than 1800 tests]( Official website: [ Works on Linux (stable) & macOS (stable) & Windows (stable). All Node.js versions are supported starting Node.js 12.X. ### Installing PM2 With NPM: ```bash $ npm install pm2 -g ``` You can install Node.js easily with [NVM]( or [FNM]( ### Start an application You can start any application (Node.js, Python, Ruby, binaries in $PATH...) like that: ```bash $ pm2 start app.js ``` Your app is now daemonized, monitored and kept alive forever. ### Managing Applications Once applications are started you can manage them easily: To list all running applications: ```bash $ pm2 list ``` Managing apps is straightforward: ```bash $ pm2 stop $ pm2 restart $ pm2 delete ``` To have more details on a specific application: ```bash $ pm2 describe ``` To monitor logs, custom metrics, application information: ```bash $ pm2 monit ``` [More about Process Management]( ### Cluster Mode: Node.js Load Balancing & Zero Downtime Reload The Cluster mode is a special mode when starting a Node.js application, it starts multiple processes and load-balance HTTP/TCP/UDP queries between them. This increase overall performance (by a factor of x10 on 16 cores machines) and reliability (faster socket re-balancing in case of unhandled errors). Starting a Node.js application in cluster mode that will leverage all CPUs available: ```bash $ pm2 start api.js -i ``` `` can be `'max'`, `-1` (all cpu minus 1) or a specified number of instances to start. **Zero Downtime Reload** Hot Reload allows to update an application without any downtime: ```bash $ pm2 reload all ``` [More informations about how PM2 make clustering easy]( ### Container Support With the drop-in replacement command for `node`, called `pm2-runtime`, run your Node.js application in a hardened production environment. Using it is seamless: ``` RUN npm install pm2 -g CMD [ ""pm2-runtime"", ""npm"", ""--"", ""start"" ] ``` [Read More about the dedicated integration]( ### Host monitoring speedbar PM2 allows to monitor your host/server vitals with a monitoring speedbar. To enable host monitoring: ```bash $ pm2 set pm2:sysmonit true $ pm2 update ``` ### Terminal Based Monitoring Monitor all processes launched straight from the command line: ```bash $ pm2 monit ``` ### Log Management To consult logs just type the command: ```bash $ pm2 logs ``` Standard, Raw, JSON and formated output are available. Examples: ```bash $ pm2 logs APP-NAME # Display APP-NAME logs $ pm2 logs --json # JSON output $ pm2 logs --format # Formated output $ pm2 flush # Flush all logs $ pm2 reloadLogs # Reload all logs ``` To enable log rotation install the following module ```bash $ pm2 install pm2-logrotate ``` [More about log management]( ### Startup Scripts Generation PM2 can generate and configure a Startup Script to keep PM2 and your processes alive at every server restart. Init Systems Supported: **systemd**, **upstart**, **launchd**, **rc.d** ```bash # Generate Startup Script $ pm2 startup # Freeze your process list across server restart $ pm2 save # Remove Startup Script $ pm2 unstartup ``` [More about Startup Scripts Generation]( ### Updating PM2 ```bash # Install latest PM2 version $ npm install pm2@latest -g # Save process list, exit old PM2 & restore all processes $ pm2 update ``` *PM2 updates are seamless* ## PM2+ Monitoring If you manage your apps with PM2, PM2+ makes it easy to monitor and manage apps across servers. Feel free to try it: [Discover the monitoring dashboard for PM2]( Thanks in advance and we hope that you like PM2! ## CHANGELOG [CHANGELOG]( ## Contributors [Contributors]( ## License PM2 is made available under the terms of the GNU Affero General Public License 3.0 (AGPL 3.0). For other licenses [contact us](mailto:contact@keymetrics.io)."
opensource.guide,github/opensource.guide,13655,14234,"['HTML', 'JavaScript', 'SCSS']","['open-source', 'oss', 'best-practices', 'tutorial', 'documentation']","# Open Source Guides []( Open Source Guides ( are a collection of resources for individuals, communities, and companies who want to learn how to run and contribute to an open-source project. ## Background Open Source Guides were created and are curated by GitHub, along with input from outside community reviewers, but they are not exclusive to GitHub products. One reason we started this project is that we felt that there weren't enough resources for people creating open-source projects. Our goal was to aggregate community best practices, *not* what GitHub (or any other individual or entity) thinks is best. Therefore, we used examples and quotations from others to illustrate our points. ## Contributing This site is powered by [Jekyll]( Check out our [contributing guidelines](/CONTRIBUTING.md) for ways to offer feedback and contribute. ## Licenses Content is released under [CC-BY-4.0]( See [notices](notices.md) for complete details, including attribution guidelines, contribution terms, and software and third-party licenses and permissions. ## Acknowledgments The initial release of these guides were authored by **[@nayafia][1], [@bkeepers][2], [@stephbwills][3],** and **[@mlinksva][4]**. Thanks to **[@aitchabee][5], [@benbalter][6], [@brettcannon][7], [@caabernathy][8], [@coralineada][9], [@dmleong][10], [@ericholscher][11], [@gr2m][12], [@janl][13], [@jessfraz][14], [@joshsimmons][15], [@kfogel][16], [@kytrinyx][17], [@lee-dohm][18], [@mikeal][19], [@mikemcquaid][20], [@nathansobo][21], [@nruff][22], [@nsqe][23], [@orta][24], [@parkr][25], [@shazow][26], [@steveklabnik][27],** and **[@wooorm][28]** for lending their valuable input and expertise leading up to the initial release, and to **[@sophshep][29]** and **[@jeejkang][30]** for designing and illustrating the guides. ## Disclaimer While we've got advice about running an open source project, we're not lawyers. Be sure to read our [disclaimer](notices.md#legal-disclaimer) before diving in. [1]: [2]: [3]: [4]: [5]: [6]: [7]: [8]: [9]: [10]: [11]: [12]: [13]: [14]: [15]: [16]: [17]: [18]: [19]: [20]: [21]: [22]: [23]: [24]: [25]: [26]: [27]: [28]: [29]: [30]:"
design-blocks,froala/design-blocks,13502,1253,"['HTML', 'CSS', 'JavaScript']","['website-design', 'design-templates', 'designer', 'html5', 'bootstrap4']","# [Froala Design Blocks]( []( []( []( []( []( []( []( Over 170 responsive design blocks ready to be used in your web or mobile apps. All blocks are based on the Bootstrap Library, and they are the building blocks for beautiful websites. **Discuss it on [Product Hunt]( ** Design Blocks Builder WYSIWYG HTML Editor Pages Blog Download ## Table of contents - [Quick start](#quick-start) - [Implementations](#implementations) - [What's included?](#whats-included) - [Dependencies](#dependencies) - [Categories](#categories) - [Browser support](#browser-support) - [Community](#community) - [Bugs and feature requests](#bugs-and-feature-requests) - [Contributing guidelines](#contributing-guidelines) - [Contributors](#contributors) - [Copyright and license](#copyright-and-license) ## Quick start 1. **Download Froala Design Blocks.** There are several ways to start using the Froala Design Blocks depending on how you prefer: - [Use the builder]( - [Download the latest release]( and then read the [What's included](#whats-included) section below. - Clone the repo and run it. ```bash git clone cd design-blocks npm install npm run start ``` 2. **Design Blocks Skeleton.** You can use the following code layout as a starting point. ```html Froala Design Blocks - Skeleton ``` 3. **Add design blocks.** Once you have the Froala Design Blocks basic HTML structure in place, start browsing the design blocks that you want to use and copy/paste the HTML for them. ## Implementations []( []( []( []( []( []( ## What's included Within the download archive you'll find the following directories and files, logically grouping common assets and providing both compiled and minified variations. You'll see something like this: ``` design-blocks/ dist/ css/ froala_blocks.css froala_blocks.min.css imgs/ call_to_action.html contacts.html contents.html features.html footers.html forms.html headers.html index.html pricings.html teams.html testimonials.html assets/ screenshots/ src/ ``` We provide compiled CSS (`froala_blocks.css`), as well as compiled and minified CSS (`froala_blocks.min.css`). Also, in the downloaded archive you will find useful images and PSD files that you can use to create new backgrounds. In the `screenshots` folder, there are the screenshots of all design blocks. ## Dependencies - **Bootstrap**. Froala Design Blocks is built on Bootstrap 4 library and fully supports it. It uses the Javascript files only for the header design blocks, so if you don't need them, we recommend not to include the Bootstrap JS files in order to reduce your bundle size. - **Font Awesome**. We're using the amazing Font Awesome library for the social network icons. - **Google Fonts**. By default, the Design Blocks toolkit is built using the Roboto font, however that can easily be changed to other fonts. ## Categories - Call to action - - Contacts - - Contents - - Features - - Footers - - Forms - - Headers - - Pricings - - Teams - - Testimonials - ## Browser Support At the moment, we aim to support all major web browsers. Any issue in the browsers listed below should be reported as a bug: - Internet Explorer 10+ - Microsoft Edge 14+ - Safari 6+ - Firefox (Current - 1) and Current versions - Chrome (Current - 1) and Current versions - Opera (Current - 1) and Current versions - Safari iOS 7.0+ - Android 6.0+ (Current - 1) and Current means that we support the current stable version of the browser and the version that precedes it. ## Bugs and feature requests Have a bug or a feature request? Please first read the issue guidelines and search for existing and closed issues. If your problem or idea is not addressed yet, [please open a new issue]( ## Community Get updates on Froala Design Blocks' development and chat with the project maintainers and community members: - Follow [@froala on Twitter]( - Read and subscribe to [The Official Froala Blog]( - Check the [Official Website]( - Join us [on Facebook]( - [Google+]( - [Pinterest]( ## Contributing guidelines All contributions are more than welcomed. Contributions may close an issue, fix a bug (reported or not reported), add new design blocks, improve the existing code, add new feature, and so on. In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation. [Read the full Code of Conduct]( The `dev` branch is the default and base branch for the project. It is used for development and all Pull Requests should go there. Please make sure not to commit the `dist` folder in the `dev` branch. #### Development The project needs to be compiled, therefore the files in the `src` folder are those we'll be developing on. Don't make changes in the `dist` or `demo` folders as they will be overwritten when `src` is compiled. 1. Get code ```bash git clone git@github.com:froala/design-blocks.git cd design-blocks ``` 2. Install dependencies and run project ```bash npm install npm run start ``` With the gulp server running, the project is available at the following address [localhost:8001]( The `src` files are automatically compiled when changes have been made. #### Versioning Through the development of new versions, we're going use the Semantic Versioning: Example: 1.0.0. - Major release: increment the first digit and reset middle and last digits to zero. Introduces major changes that might break backward compatibility. E.g. 2.0.0 - Minor release: increment the middle digit and reset last digit to zero. It would fix bugs and also add new features without breaking backward compatibility. E.g. 1.1.0 - Patch release: increment the third digit. It would fix bugs and keep backward compatibility. E.g. 1.0.1 ## Contributors Special thanks to everyone who contributed to getting the Froala Design Blocks to the current state. - [Creative Tim]( - design blocks PSDs, help with typography and SVGs for shapes - [Reaction]( - design blocks Sketches: - [m5o]( -help with update to Bootstrap 4 - [Pexels]( - photos - [Undraw]( - illustrations - [FeatherIcons]( - icons ## Copyright and License Code and documentation copyright 2018 [Froala Labs]( Code released under the [Froala Open Web Design License]( Graphics license: - shapes: free to use by [Creative Tim]( - photos: free under the creative license from [Pexels]( - illustrations: free under the creative license from [Undraw]( - icons: free under MIT license [FeatherIcons]("
ai-edu,microsoft/ai-edu,13246,2883,"['HTML', 'Jupyter Notebook', 'Python']",[],"Microsoft AI Education Community, AI-EduMicrosoft Research AsiaMSRA ************ ## **** - 2021816 **A6- ** **[A6-](.//A6-)** - 2021625 ****AI-Edu V1.3.0 []( - 2021621 **** [LightGBM](.//B16-LightGBM) - [](./docs/News.md) ## **** 1.Python 2. 3. 4. 5. 6. ... ... 2019_MSC_ 2019_MSC_ 2020_SP_NNI ... ## **** **AI-Edu**Issues [Issues Channel]( issue**BUGPull Request IssueIssue [](./docs/Contributing.md) ## **** - Github Issue - ## **** ## **** [LICENSE](./LICENSE.md)"
responsive-html-email-template,leemunroe/responsive-html-email-template,13047,4388,['HTML'],"['email-template', 'email', 'responsive', 'html-emails', 'html']","# Free Responsive HTML Email Template Sometimes all you want is a really simple responsive HTML email template with a clear call-to-action button. Here it is. [See live preview]( ## Inline your CSS before sending Email is notorious for inconsistent CSS support. Therefore you should always inline your CSS and send a test to yourself before sending. ### Sending emails directly from your codebase or using a developer service? For an API service (like Mailgun, SendGrid, Postmark) **you need to inline the CSS before sending**. See `email-inlined.html` for an example. You can use this [Email CSS Inliner]( and then [send a test email to yourself]( to verify it works as expected. * Copy all of email.html * Paste the HTML as the source into the inliner * Copy the HTML output and use this as the email template you send ### Sending emails using a marketing service like Mailchimp? Use the template `email.html` as is. They'll put the CSS inline for you when you put together your campaign. ## Images in email When inserting images remember to include the following attributes or risk them breaking in different clients: * `src` * `alt` * `width` * `height` * `border` Example: `` [More information here]( ## Tried and tested on all major email clients Tested on mobile, desktop and web. ## More HTML email resources * [10 Premium HTML Email Templates for Developers]( * [Free Figma Email Template Design System]( * [An Introduction To Building And Sending HTML Email]( * [Grunt Email Design Workflow]( * [Everything Web Developers Need To Know About Transactional Email]( * [Manage and Send Email Templates To Yourself]( * [Accessible Email Evaluation Tool]( This free template is part of a pack of responsive email templates for developers and startups available on [HTML Email]( []("
html-css,gustavoguanabara/html-css,12918,3117,"['HTML', 'CSS']","['curso', 'gratis', 'cursoemvideo', 'gustavoguanabara', 'html5']","# Curso de HTML5 e CSS3 Material pblico para o ensino bsico de HTML5 e CSS3 para alunos iniciantes. Acesse o material em PDF, analise o cdigo disponibilizado para cada exerccio e veja-os funcionando em execuo direta via repositrio GitHub. * [Acesse os PDFs das aulas clicando aqui]( * [Cdigo disponvel para os exerccios]( * [Execute os exerccios aqui]( * [Resolva os desafios de HTML aqui]( ## Direitos de uso Voc tem todo o direito de usar esse material para seu prprio aprendizado. Professores tambm podem ter acesso a todo o contedo e us-los com seus alunos. Porm todos o que usarem esse material - seja para qual for a finalidade - devero manter a referncia ao material original, criado e disponibilizado pelo Prof. Gustavo Guanabara. Este contedo no poder ser utilizado em nenhuma hiptese para ser replicada - integral ou parcialmente - por autores/ editoras/ instituies de ensino para criar livros ou apostilas, com finalidades de obter ganho financeiro com ele."
smiley-sans,atelier-anchor/smiley-sans,12719,366,"['HTML', 'Shell']","['cjk', 'font', 'typeface']",[]( []( [GB/T 2312-1980]( []( ## - [Releases]( 4 - `.otf` `.ttf` - `.woff2` - [GitHub Actions]( Artifacts - - [Windows]( - [macOS]( - [Homebrew]( Homebrew ```bash brew tap homebrew/cask-fonts # brew install font-smiley-sans ``` - Linux - Arch Linux [AUR]( ```bash yay -S ttf-smiley-sans # yay -S ttf-smiley-sans-bin # yay -S ttf-smiley-sans-git # ``` - [Adobe]( - [Office]( - [Procreate]( - [docs](docs/) ## | | | |:-:|:-:| | | [GB/T 2312-1980]( 6763 []( 8105 8335 | | | 415 100 | | | 80 | | | 71 | | | 174 | | | 4 `````` `` | | | 200 | ## OpenType | | | |:-:|:-:| | `ordn` | `1``2` | | `frac` | `````` | | `sups` | `````` | | `pnum` | | | `tnum` | | | `case` | | | `fwid` | | | `vert``vrt2` | | | `locl` | `` `` `j` `` | | `ss01` | `J``K``Q``a``f``l``r``&``` | | `ss02` | `f` | | `calt` | `1+2``9:41``fi``tj` | | `ccmp` | `` | ## - - - - ## - [oooooohmygosh]( - []( - []( - []( ## [SIL Open Font License v1.1](LICENSE) --- Copyright 20222024 [atelierAnchor]( All rights reserved.
awesome-creative-coding,terkelg/awesome-creative-coding,12306,849,['HTML'],"['awesome', 'creative-coding', 'interaction-design', 'information-visualization', 'list']","# Awesome Creative Coding []( # []( > Carefully curated list of awesome [creative coding]( resources primarily for beginners/intermediates. Creative coding is a different discipline than programming systems. The goal is to create something expressive instead of something functional. **Interaction design**, **information visualization** and **generative art** are all different types of creative coding which has become a household term describing **artworks articulated as code**. _Please read the [contribution guidelines](contributing.md) before contributing._ ## Contents - [Books](#books) - [Online Books](#online-books) - [Courses](#courses) - [Tools](#tools) - [Frameworks Libraries Ecosystems](#frameworks--libraries--ecosystems) - [Visual Programming Languages](#visual-programming-languages) - [Sound Programming Languages](#sound-programming-languages) - [Web Programming Libraries](#web-programming--libraries) - [Projection Mapping VJing](#projection-mapping--vjing) - [Online](#online) - [Hardware](#hardware) - [Other](#other) - [Learning Resources](#learning-resources) - [Videos](#videos) - [Talks](#talks) - [Articles](#articles) - [Shaders OpenGL WebGL](#shaders--opengl--webgl) - [Canvas](#canvas) - [Hardware](#hardware-1) - [Other](#other-1) - [Interactive](#interactive) - [Quick References Cheat-Sheets](#quick-references--cheatsheets) - [Communities](#communities) - [Subreddits](#subreddits) - [Slack](#slack) - [Other](#other-2) - [Math](#math) - [Machine learning Computer Vision Ai](#machine-learning--computer-vision--ai) - [Inspiration](#inspiration) - [Events](#events) - [Schools Workshops](#schools--workshops) - [Blogs Websites](#blogs--websites) - [Related](#related) ## Books - [Generative Art: A Practical Guide]( - Practical guide using Processing. - [Generative Design]( - Visualize, Program, and Create with Processing. - [The Nature of Code]( - Simulating natural systems with Processing. - [Programming Design Systems]( - Practical introduction to the new foundations of graphic design. - [Learning Modern 3D Graphics Programming]( - Series of tutorials on using OpenGL to do graphical rendering. - [Programming Interactivity]( - Designer's Guide to Processing, Arduino, and openFrameworks. - [openFrameworks Essentials]( - openFrameworks beginner Guide for programmer, visual artist, or designer. - [Mastering openFrameworks: Creative Coding Demystified]( - Advanced in depth guide to openFrameworks. - [Algorithms for Visual Design Using the Processing Language]( - Experiment with design problems to create 3D animations, GUIs, and more. - [Foundation HTML5 Animation with JavaScript]( - Everything you need to know to create animation using the HTML5 canvas. - [Playing with chaos]( - Programming Fractals and Strange Attractors in JavaScript. - [Ray Tracing in One Weekend]( - Mini book about Ray Tracing. - [Processing 2: Creative Programming Cookbook]( - Guides you to explore the Processing environment using practical and useful recipes. - [Data-driven Graphic Design]( - Creative Coding for Visual Communication. - [Real-Time Rendering]( - Learn how to use modern techniques to generate synthetic three-dimensional images in a fraction of a second. - [Graphics Shaders: Theory and Practice]( - Introduction to shader programming in general, but focusing on the GLSL shading language. - [Anton's OpenGL 4 Tutorials]( - Practical guide to starting 3d programming with OpenGL. - [Physics for JavaScript Games, Animation, and Simulations]( - Teaches JavaScript programmers how to incorporate real physics into their HTML5 games, animations, and simulations. - [Math for Programmers]( - Book teaches you to solve mathematical problems in code. - [Synthse d'images avec OpenGL (ES)]( - Book in french, which covers OpenGL, OpenGL ES and WebGL. - [Hands-On Music Generation with Magenta]( - Explore the role of deep learning in music generation and assisted music composition. ## Online Books - [The Book of Shaders]( - Step-by-step guide through the abstract and complex universe of fragment shaders. - [WebGL Fundamentals]( - WebGL from the ground up. No magic. - [WebGL 2 Fundamentals]( - WebGL2 from the ground up. No magic. - [Learn OpenGL]( - Extensive tutorial resource for learning Modern OpenGL. - [Scratchapixel 2.0]( - Learn Computer Graphics From Scratch. - [ofBook]( - Community-written book/guide on openFrameworks. - [OGLdev]( - Collection of modern OpenGL tutorials by Etay Meiri. - [OpenGL Tutorial]( - Site dedicated to tutorials for OpenGL 3.3 and later. - [Open.gl]( - Guide that teach you the basics of using OpenGL. - [Pixel Shaders]( - Interactive Introduction to Graphics Programming. - [OpenGLBook]( - Free OpenGL programming tutorial in online book format. - [Graphics Programming Projects]( - Book about 3D computational graphics by Morgan McGuire. - [On Generative Algorithms]( - Notes about generating various organic patterns, with examples and Python code, by Anders Hoff. - [Computer Graphics from Scratch]( - A raytracing and rasterization textbook that teaches you how OpenGL and DirectX works. - [A Primer on Bzier Curves]( - A free book for when you really need to know how to do Bzier things. - [3D Game Shaders For Beginners]( - Step-by-step guide to real-time shading techniques. - [XEM WebGL Guide]( - Step-by-step guide to WebGL. - [Creative Coding Notebooks]( - An authorial set of fundamental Python recipes on Creative Coding and Computer Art, by Diego Incio. - [WebGL Academy]( - Learn WebGL and 3D algorithmic in a progressive and interactive way. ## Courses - [Create 3D Graphics in JS Using WebGL]( - Get started creating content with WebGL without any frameworks. - [Learn HTML5 Graphics and Animation]( - Introduction to the canvas 2D drawing API. - [Interactive 3D Graphics]( - Udacity course that teach you the principles of 3D computer graphics. - [Interactive Computer Graphics]( - Computer graphics course from Coursera. - [Kadenze Creative Coding]( - Selection of Kadenze courses covering p5.js, TensorFlow, Max/Jitter, and ChucK. - [Creative Programming for Digital Media & Mobile Apps]( - Coursera course on creative coding with processing. - [Imaginary Institute]( - Learn how to create gorgeous interactive graphics. - [Future Learn: Creative Coding]( - Use computer programming as a creative discipline to generate sounds, images, animations and more. - [Intro to JS: Drawing & Animation]( - Use JavaScript and the ProcessingJS library to create drawings and animations. - [Advanced JS: Natural Simulations]( - Combine JS, ProcessingJS, and mathematical concepts to simulate nature in your programs - [Interactive Data Visualization with Processing]( - Learn how to read, map, and illustrate data with Processing. - [Programming Data Visualizations: A Coding Toolkit for Processing]( - Join information designer Nicholas Felton in the world of Processing. - [Introduction to Data Visualization]( - Join Nicholas Felton for a smart, comprehensive, and inspiring intro to data visualization. - [Programming Graphics I]( [2]( [3]( - Learn generative art and Processing with art with Joshua Davis. - [Creative Coding with Canvas & WebGL]( - Workshop by Matt DesLauriers. that teaches you about generative art, interactive animations, 3D graphics, and shaders. - [Advanced Creative Coding with WebGL & Shaders]( - Workshop by Matt DesLauriers that go deeper into graphics programming, math and shaders. - [Three.js Journey]( - This course by Bruno Simon will teach you the secrets to create the coolest WebGL websites with Three.js whether your are a beginner or an advanced developer. - [3D Computer Graphics Programming]( - Learn all the theory and the math behind 3D graphics while creating a software renderer from scratch using the C programming language ## Tools ### Frameworks Libraries Ecosystems - [Processing]( [Cross-platform] - Computer programming language and IDE for visual arts. - [Cinder]( [Cross-platform] - Open source library for professional-quality creative coding in C++. - [openFrameworks]( [Cross-platform] - Open source C++ toolkit for creative coding. - [C4]( [iOS] -Open-source creative coding framework for iOS. - [Unity]( [Mac, Win] - Game engine, but useful for creative coding and installations. - [Godot]( [Cross-platform] - Open source game engine, that can also be used for all sorts of things. - [PlayCanvas]( [Cross-platform] - Open source, realtime collaborative WebGL engine. - [hg_sdf]( [Cross-platform] - GLSL library for building signed distance functions. - [nannou]( [Cross-platform] - Open-source creative coding framework for the Rust language. - [thi.ng]( [Cross-platform] - Open source collection of computational design tools for JavaScript, TypeScript, Clojure and ClojureScript languages. - [PixelKit]( [iOS, Mac] - Open source, live graphics, Swift framework, powered by Metal. - [OPENRNDR]( [Cross-platform] - Open source library for creative coding written in Kotlin. - [Phaser]( [Cross-platform] - HTML5 framework for building games, uses both a Canvas and WebGL renderer. - [Canvas-sketch]( [Cross-platform] - HTML5 framework for making generative artwork in JavaScript and the browser. - [AsyncGraphics]( [iOS, macOS] - Open source, live graphics, async / await, Swift package, powered by Metal. - [Lygia]( [Cross-platform] - Granular and multi-language (GLSL, HLSL, WGSL, MSL and CUDA) shader library designed for performance and flexibility. - [Fragment.tools]( [Cross-platform] - A web development environment for creative coding. ### Visual Programming Languages - [vvvv]( [Win] - Hybrid visual/textual live-programming environment for easy prototyping and development. - [NodeBox]( [Mac, Win] - Cross-platform, node-based GUI for efficient data visualizations and generative design. - [TouchDesigner]( [Mac, Win] - Visual development platform to create realtime projects. - [Quartz Composer]( [Mac] - Development tool for processing and rendering graphical data. - [Vuo]( [Mac] - Live interactive-media programming environment. - [Max]... [TRUNCATED]"
Spoon-Knife,octocat/Spoon-Knife,12293,143008,"['HTML', 'CSS']",[],"### Well hello there! This repository is meant to provide an example for *forking* a repository on GitHub. Creating a *fork* is producing a personal copy of someone else's project. Forks act as a sort of bridge between the original repository and your personal copy. You can submit *Pull Requests* to help make other people's projects better by offering your changes up to the original project. Forking is at the core of social coding at GitHub. After forking this repository, you can make some changes to the project, and submit [a Pull Request]( as practice. For some more information on how to fork a repository, [check out our guide, ""Forking Projects""""]( Thanks! :sparkling_heart:"
minimal-mistakes,mmistakes/minimal-mistakes,11940,24758,"['HTML', 'SCSS', 'JavaScript']","['jekyll', 'jekyll-theme', 'theme', 'github-pages', 'ruby-gem']","# [Minimal Mistakes Jekyll theme]( []( []( Minimal Mistakes is a flexible two-column Jekyll theme, perfect for building personal sites, blogs, and portfolios. As the name implies, styling is purposely minimalistic to be enhanced and customized by you :smile:. :sparkles: See what's new in the [CHANGELOG](CHANGELOG.md). **Note:** The theme uses the [jekyll-include-cache]( plugin which will need to be installed in your `Gemfile` and must be retained in the `plugins` array of `_config.yml`. Otherwise you'll encounter `Unknown tag 'include_cached'` errors at build. [![Minimal Mistakes live preview][2]][1] [1]: [2]: screenshot.png (live preview) ## Notable features - Bundled as a ""theme gem"" for easier installation/upgrading. - Compatible with GitHub Pages. - Support for Jekyll's built-in Sass/SCSS preprocessor. - Nine different skins (color variations). - Several responsive layout options (single, archive index, search, splash, and paginated home page). - Optimized for search engines with support for [Twitter Cards]( and [Open Graph]( data. - Optional [header images]( [custom sidebars]( [table of contents]( [galleries]( related posts, [breadcrumb links]( [navigation lists]( and more. - Commenting support (powered by [Disqus]( [Facebook]( Google+, [Discourse]( static-based via [Staticman]( [utterances]( and [giscus]( - [Google Analytics]( support. - UI localized text in English (default), Arabic (), Brazilian Portuguese (Portugus brasileiro), Catalan, Chinese, Danish, Dutch, Finnish, French (Franais), German (Deutsch), Greek, Hebrew, Hindi (), Hungarian, Indonesian, Irish (Gaeilge), Italian (Italiano), Japanese, Kiswahili, Korean, Malayalam, Myanmar (Burmese), Nepali (Nepalese), Norwegian (Norsk), Persian (), Polish, Punjabi (), Romanian, Russian, Slovak, Spanish (Espaol), Swedish, Thai, Turkish (Trke), Ukrainian () and Vietnamese. ## Skins (color variations) This theme comes in nine different skins (in addition to the default one). | `air` | `contrast` | `dark` | | --- | --- | --- | | []( | []( | []( | | `dirt` | `mint` | `sunrise` | | --- | --- | --- | | []( | []( | []( | | `aqua` | `neon` | `plum` | | --- | --- | --- | | []( | []( | []( | ## Demo pages | Name | Description | | ------------------------------------------- | ----------------------------------------------------- | | [Post with Header Image][header-image-post] | A post with a large header image. | | [HTML Tags and Formatting Post][html-tags-post] | A variety of common markup showing how the theme styles them. | | [Syntax Highlighting Post][syntax-post] | Post displaying highlighted code. | | [Post with a Gallery][gallery-post] | A post showing several images wrapped in `` elements. | | [Sample Collection Page][sample-collection] | Single page from a collection. | | [Categories Archive][categories-archive] | Posts grouped by category. | | [Tags Archive][tags-archive] | Posts grouped by tag. | Additional sample posts are available under [posts archive][year-archive] on the demo site. Source files for these (and the entire demo site) can be found in [`/docs`](docs). [header-image-post]: [gallery-post]: [html-tags-post]: [syntax-post]: [sample-collection]: [categories-archive]: [tags-archive]: [year-archive]: ## Installation There are three ways to install: as a [gem-based theme]( as a [remote theme]( (GitHub Pages compatible), or forking/directly copying all of the theme files into your project. ### Gem-based method With Gem-based themes, directories such as the `assets`, `_layouts`, `_includes`, and `_sass` are stored in the themes gem, hidden from your immediate view. Yet all of the necessary directories will be read and processed during Jekylls build process. This allows for easier installation and updating as you don't have to manage any of the theme files. To install: 1. Add the following to your `Gemfile`: ```ruby gem ""minimal-mistakes-jekyll"" ``` 2. Fetch and update bundled gems by running the following [Bundler]( command: ```bash bundle ``` 3. Set the `theme` in your project's Jekyll `_config.yml` file: ```yaml theme: minimal-mistakes-jekyll ``` To update the theme run `bundle update`. ### Remote theme method Remote themes are similar to Gem-based themes, but do not require `Gemfile` changes or whitelisting making them ideal for sites hosted with GitHub Pages. To install: 1. Create/replace the contents of your `Gemfile` with the following: ```ruby source "" gem ""github-pages"", group: :jekyll_plugins gem ""jekyll-include-cache"", group: :jekyll_plugins ``` 2. Add `jekyll-include-cache` to the `plugins` array of your `_config.yml`. 3. Fetch and update bundled gems by running the following [Bundler]( command: ```bash bundle ``` 4. Add `remote_theme: ""mmistakes/minimal-mistakes@4.26.1""` to your `_config.yml` file. Remove any other `theme:` or `remote_theme:` entry. **Looking for an example?** Use the [Minimal Mistakes remote theme starter]( for the quickest method of getting a GitHub Pages hosted site up and running. Generate a new repository from the starter, replace sample content with your own, and configure as needed. ## Usage For detailed instructions on how to configure, customize, add/migrate content, and more read the [theme's documentation]( ## Contributing Found a typo in the documentation or interested in [fixing a bug]( Then by all means [submit an issue]( or [pull request]( If this is your first pull request, it may be helpful to read up on the [GitHub Flow]( first. For help with using the theme or general Jekyll support questions, please use the [Jekyll Talk forums]( ### Pull Requests When submitting a pull request: 1. Clone the repo. 2. Create a branch off of `master` and give it a meaningful name (e.g. `my-awesome-new-feature`). 3. Open a pull request on GitHub and describe the feature or fix. Theme documentation and demo pages can be found in the [`/docs`](docs) if submitting improvements, typo corrections, etc. ## Development To set up your environment to develop this theme, run `bundle install`. To test the theme, run `bundle exec rake preview` and open your browser at ` This starts a Jekyll server using content in the `test/` directory. As modifications are made to the theme and test site, it will regenerate and you should see the changes in the browser after a refresh. ## Credits ### Creator **Michael Rose** - - - ### Icons + Demo Images: - [The Noun Project]( - Garrett Knoll, Arthur Shlain, and [tracy tam]( - [Font Awesome]( - [Unsplash]( ### Other: - [Jekyll]( - [jQuery]( - [Susy]( - [Breakpoint]( - [Magnific Popup]( - [FitVids.JS]( - [GreedyNav.js]( - [Smooth Scroll]( - [Gumshoe]( - [jQuery throttle / debounce]( - [Lunr]( - [Clipboard.js]( ## License The MIT License (MIT) Copyright (c) 2013-2024 Michael Rose and contributors Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Minimal Mistakes incorporates icons from [The Noun Project]( creators Garrett Knoll, Arthur Shlain, and tracy tam. Icons are distributed under Creative Commons Attribution 3.0 United States (CC BY 3.0 US). Minimal Mistakes incorporates [Font Awesome]( Copyright (c) 2017 Dave Gandy. Font Awesome is distributed under the terms of the [SIL OFL 1.1]( and [MIT License]( Minimal Mistakes incorporates photographs from [Unsplash]( Minimal Mistakes incorporates [Susy]( Copyright (c) 2017, Miriam Eric Suzanne. Susy is distributed under the terms of the [BSD 3-clause ""New"" or ""Revised"" License]( Minimal Mistakes incorporates [Breakpoint]( Breakpoint is distributed under the terms of the [MIT/GPL Licenses]( Minimal Mistakes incorporates [FitVids.js]( Copyright (c) 2013 Dave Rubert and Chris Coyier. FitVids is distributed under the terms of the [WTFPL License]( Minimal Mistakes incorporates [Magnific Popup]( Copyright (c) 2014-2016 Dmitry Semenov, Magnific Popup is distributed under the terms of the MIT License. Minimal Mistakes incorporates [Smooth Scroll]( Copyright (c) 2019 Chris Ferdinandi. Smooth Scroll is distributed under the terms of the [MIT License]( Minimal Mistakes incorporates [Gumshoejs]( Copyright (c) 2019 Chris Ferdinandi. Gumshoejs is distributed under the terms of the [MIT License]( Minimal Mistakes incorporates [jQuery throttle / debounce]( Copyright (c) 2010 ""Cowboy"" Ben Alman. jQuery throttle / debounce is distributed under the terms of the [MIT License]( Minimal Mistakes incorporates [GreedyNav.js]( Copyright (c) 2015 Luke Jackson. GreedyNav.js is distributed under the terms of the [MIT License]( Minimal Mistakes incorporates [Jekyll Group-By-Array]( Copyright (c) 2015 Max White . Jekyll Group-By-Array is distributed under the terms of the [MIT License]( Minimal Mistakes incorporates [@allejo's Pure Liquid Jekyll Table of Contents]( Copyright (c) 2017 Vladimir Jimenez. Pure Liquid Jekyll Table of Contents is distributed under the terms of the [MIT License]( Minimal Mistakes incorporates [Lunr]( Copyright (c) 2018 Oliver Nightingale. Lunr is distributed under the terms of the [MIT License]( Minimal Mistakes incorporates [clipboard.js]( Copyright (c) 2021 Zeno Rocha. Clipboard.js is distributed under... [TRUNCATED]"
deep-learning-drizzle,kmario23/deep-learning-drizzle,11851,2882,"['HTML', 'Python']","['machine-learning', 'deep-learning', 'deep-neural-networks', 'pattern-recognition', 'computer-vision']","# :balloon: :tada: Deep Learning Drizzle :confetti_ball: :balloon: :books: [**""Read enough so you start developing intuitions and then trust your intuitions and go for it!""** ]( :books: Prof. Geoffrey Hinton, University of Toronto :heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign: ### Contents :heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign: | | | | ------------------------------------------------------------ | ------------------------------------------------------------ | | **Deep Learning (Deep Neural Networks)** [:arrow_heading_down:]( | **Probabilistic Graphical Models** [:arrow_heading_down:]( | | | | | **Machine Learning Fundamentals** [:arrow_heading_down:]( | **Natural Language Processing** [:arrow_heading_down:]( | | | | | **Optimization for Machine Learning** [:arrow_heading_down:]( | **Automatic Speech Recognition** [:arrow_heading_down:]( | | | | | **General Machine Learning** [:arrow_heading_down:]( | **Modern Computer Vision** [:arrow_heading_down:]( | | | | | **Reinforcement Learning** [:arrow_heading_down:]( | **Boot Camps or Summer Schools** [:arrow_heading_down:]( | | | | | **Bayesian Deep Learning** [:arrow_heading_down:]( | **Medical Imaging** [:arrow_heading_down:]( | | | | | **Graph Neural Networks** [:arrow_heading_down: ]( | **Bird's-eye view of Artificial Intelligence** [:arrow_heading_down:]( | | | | :heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign: ## :tada: Deep Learning (Deep Neural Networks) :confetti_ball: :balloon: :heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign::heavy_minus_sign: | S.No | Course Name | University/Instructor(s) | Course WebPage | Lecture Videos | Year | | ---- | ----------------------------------------------------- | ---------------------------------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ | --------------- | | 1. | **Neural Networks for Machine Learning** | Geoffrey Hinton, University of Toronto | [Lecture-Slides]( [CSC321-tijmen]( | [YouTube-Lectures]( [UofT-mirror]( | 2012 2014 | | 2. | **Neural Networks Demystified** | Stephen Welch, Welch Labs | [Suppl. Code]( | [YouTube-Lectures]( | 2014 | | 3. | **Deep Learning at Oxford** | Nando de Freitas, Oxford University | [Oxford-ML]( | [YouTube-Lectures]( | 2015 | | 4. | **Deep Learning for Perception** | Dhruv Batra, Virginia Tech | [ECE-6504]( | [YouTube-Lectures]( | 2015 | | 5. | **Deep Learning** | Ali Ghodsi, University of Waterloo | [STAT-946]( | [YouTube-Lectures]( | F2015 | | 6. | **CS231n: CNNs for Visual Recognition** | Andrej Karpathy, Stanford University | [CS231n]( | `None` | 2015 | | 7. | **CS224d: Deep Learning for NLP** | Richard Socher, Stanford University | [CS224d]( | [YouTube-Lectures]( | 2015 | | 8. | **Bay Area Deep Learning** | Many legends, Stanford | `None` | [YouTube-Lectures]( | 2016 | | 9. | **CS231n: CNNs for Visual Recognition** | Andrej Karpathy, Stanford University | [CS231n]( | [YouTube-Lectures]( [(Academic Torrent)]( | 2016 | | 10. | **Neural Networks** | Hugo Larochelle, Universit de Sherbrooke | [Neural-Networks]( | [YouTube-Lectures]( [(Academic Torrent)]( | 2016 | | | | | | | | | 11. | **CS224d: Deep Learning for NLP** | Richard Socher, Stanford University | [CS224d]( | [YouTube-Lectures]( [(Academic Torrent)]( | 2016 | | 12. | **CS224n: NLP with Deep Learning** | Richard Socher, Stanford University | [CS224n]( | [YouTube-Lectures]( | 2017 | | 13. | **CS231n: CNNs for Visual Recognition** | Justin Johnson, Stanford University | [CS231n]( | [YouTube-Lectures]( [(Academic Torrent)]( | 2017 | | 14. | **Topics in Deep Learning** | Ruslan Salakhutdinov, CMU | [10707]( | [YouTube-Lectures]( | F2017 | | 15. | **Deep Learning Crash Course** | Leo Isikdogan, UT Austin | `None` | [YouTube-Lectures]( | 2017 | | 16. | **Deep Learning and its Applications** | Franois Piti, Trinity College Dublin | [EE4C16]( | [YouTube-Lectures]( | 2017 | | 17. | **Deep Learning** | Andrew Ng, Stanford University | [CS230]( | [YouTube-Lectures]( | 2018 | | 18. | **UvA Deep Learning** | Efstratios Gavves, University of Amsterdam | [UvA-DLC]( | [Lecture-Videos]( | 2018 | | 19. | **Advanced Deep Learning and Reinforcement Learning** | Many legends, DeepMind | `None` | [YouTube-Lectures]( | 2018 | | 20. | **Machine Learning** | Peter Bloem, Vrije Universiteit Amsterdam | [MLVU]( | [YouTube-Lectures]( | 2018 | | | | | | | | | 21. | **Deep Learning** | Francois Fleuret, EPFL | [EE-59]( | [Video-Lectures]( | 2018 | | 22. | **Introduction to Deep Learning** | Alexander Amini, Harini Suresh and others, MIT | [6.S191]( | [YouTube-Lectures]( [2017-version]( | 2017- 2021 | | 23. | **Deep Learning for Self-Driving Cars** | Lex Fridman, MIT | [6.S094]( | [YouTube-Lectures]( | 2017-2018 | | 24. | **Introduction to Deep Learning** | Bhiksha Raj and many others, CMU | [11-485/785]( | [YouTube-Lectures]( | S2018 | | 25. | **Introduction to Deep Learning** | Bhiksha Raj and many others, CMU | [11-485/785]( | [YouTube-Lectures]( [Recitation-Inclusive]( | F2018 | | 26. | **Deep Learning Specialization** | Andrew Ng, Stanford | [DL.AI]( | [YouTube-Lectures]( | 2017-2018 | | 27. | **Deep Learning** | Ali Ghodsi, University of Waterloo | [STAT-946]( | [YouTube-Lectures]( | F2017 | | 28. | **Deep Learning** | Mitesh Khapra, IIT-Madras | [CS7015]( | [YouTube-Lectures]( | 2018 | | 29. | **Deep Learning for AI** | UPC Barcelona | [DLAI-2017]( [DLAI-2018]( | [YouTube-Lectures]( | 2017-2018 | | 30. | **Deep Learning** | Alex Bronstein and Avi Mendelson, Technion | [CS236605]( | [YouTube-Lectures]( | 2018 | | | | | | | | | 31. | **MIT Deep Learning** | Many Researchers, Lex Fridman, MIT | [6.S094, 6.S091, 6.S093]( | [YouTube-Lectures]( | 2019 | | 32. | **Deep Learning Book** companion videos | Ian Goodfellow and others | [DL-book slides]( | [YouTube-Lectures]( | 2017 | | 33. | **Theories of Deep Learning** | Many Legends, Stanford | [Stats-385]( | [YouTube-Lectures]( (first 10 lectures) | F2017 | | 34. | **Neural Networks** | Grant Sanderson | `None` | [YouTube-Lectures]( | 2017-2018 | | 35. | **CS230: Deep Learning** | Andrew Ng, Kian Katanforoosh, Stanford | [CS230]( | [YouTube-Lectures]( | A2018 | | 36. | **Theory of Deep Learning** | Lots of Legends, Canary Islands | [DALI'18]( | [YouTube-Lectures]( | 2018 | | 37. | **Introduction to Deep Learning** | Alex Smola, UC Berkeley | [Stat-157]( | [YouTube-Lectures]( | S2019 | | 38. | **Deep Unsupervised Learning** | Pieter Abbeel, UC Berkeley | [CS294-158]( | [YouTube-Lectures]( | S2019 | | 39. | **Machine Learning** | Peter Bloem, Vrije Universiteit Amsterdam | [MLVU]( | [YouTube-Lectures]( | 2019 | | 40. | **Deep Learning on Computational Accelerators** | Alex Bronstein and Avi Mendelson, Technion | [CS236605]( | [YouTube-Lectures]( | S2019 | | | | | | | | | 41. | **Introduction to Deep Learning** | Bhiksha Raj and many others, CMU | [11-785]( | [YouTube-Lectures]( | S2019 | | 42. | **Introduction to Deep Learning** | Bh... [TRUNCATED]"
v2ray-core,v2fly/v2ray-core,27882,4472,"['Go', 'Shell', 'Assembly']","['proxy', 'network', 'socks5', 'shadowsocks', 'v2ray']","Project V Project V is a set of network tools that helps you to build your own computer network. It secures your network connections and thus protects your privacy. []( []( []( []( []( ## Related Links - [Documentation]( and [Newcomer's Instructions]( - Welcome to translate V2Ray documents via [Transifex]( ## Packaging Status > If you are willing to package V2Ray for other distros/platforms, please let us know or seek for help via [GitHub issues]( []( ## License [The MIT License (MIT)]( ## Credits This repo relies on the following third-party projects: - In production: - [gorilla/websocket]( - [lucas-clemente/quic-go]( - [pires/go-proxyproto]( - [seiflotfy/cuckoofilter]( - [google/starlark-go]( - [jhump/protoreflect]( - [inetaf/netaddr]( - For testing only: - [miekg/dns]( - [h12w/socks]("
go-zero,zeromicro/go-zero,27840,3809,"['Go', 'Smarty', 'ANTLR']","['golang', 'microservice', 'rpc-framework', 'web-framework', 'gozero']","# go-zero go-zero is a web and rpc framework with lots of builtin engineering practices. Its born to ensure the stability of the busy services with resilience design and has been serving sites with tens of millions of users for years. []( []( []( []( []( []( []( []( ## What is go-zero? English | [](readme-cn.md) go-zero (listed in CNCF Landscape: [ is a web and rpc framework with lots of builtin engineering practices. Its born to ensure the stability of the busy services with resilience design and has been serving sites with tens of millions of users for years. go-zero contains simple API description syntax and code generation tool called `goctl`. You can generate Go, iOS, Android, Kotlin, Dart, TypeScript, JavaScript from .api files with `goctl`. #### Advantages of go-zero: * Improves the stability of the services with tens of millions of daily active users * Builtin chained timeout control, concurrency control, rate limit, adaptive circuit breaker, adaptive load shedding, even no configuration needed * Builtin middlewares also can be integrated into your frameworks * Simple API syntax, one command to generate a couple of different languages * Auto validate the request parameters from clients * Plenty of builtin microservice management and concurrent toolkits ## Backgrounds of go-zero At the beginning of 2018, we decided to re-design our system, from monolithic architecture with Java+MongoDB to microservice architecture. After research and comparison, we chose to: In early 2018, we embarked on a transformative journey to redesign our system, transitioning from a monolithic architecture built with Java and MongoDB to a microservices architecture. After careful research and comparison, we made a deliberate choice to: * Go Beyond with Golang * Great performance * Simple syntax * Proven engineering efficiency * Extreme deployment experience * Less server resource consumption * Self-Design Our Microservice Architecture * Microservice architecture facilitates the creation of scalable, flexible, and maintainable software systems with independent, reusable components. * Easy to locate the problems within microservices. * Easy to extend the features by adding or modifying specific microservices without impacting the entire system. ## Design considerations on go-zero By designing the microservice architecture, we expected to ensure stability, as well as productivity. And from just the beginning, we have the following design principles: * Keep it simple * High availability * Stable on high concurrency * Easy to extend * Resilience design, failure-oriented programming * Try best to be friendly to the business logic development, encapsulate the complexity * One thing, one way After almost half a year, we finished the transfer from a monolithic system to microservice system and deployed on August 2018. The new system guaranteed business growth and system stability. ## The implementation and features of go-zero go-zero is a web and rpc framework that integrates lots of engineering practices. The features are mainly listed below: * Powerful tool included, less code to write * Simple interfaces * Fully compatible with net/http * Middlewares are supported, easy to extend * High performance * Failure-oriented programming, resilience design * Builtin service discovery, load balancing * Builtin concurrency control, adaptive circuit breaker, adaptive load shedding, auto-trigger, auto recover * Auto validation of API request parameters * Chained timeout control * Auto management of data caching * Call tracing, metrics, and monitoring * High concurrency protected As below, go-zero protects the system with a couple of layers and mechanisms: ## The simplified architecture that we use with go-zero ## Installation Run the following command under your project: ```shell go get -u github.com/zeromicro/go-zero ``` ## Quick Start 1. Full examples can be checked out from below: [Rapid development of microservice systems]( [Rapid development of microservice systems - multiple RPCs]( 2. Install goctl `goctl`can be read as `go control`. `goctl` means not to be controlled by code, instead, we control it. The inside `go` is not `golang`. At the very beginning, I was expecting it to help us improve productivity, and make our lives easier. ```shell # for Go go install github.com/zeromicro/go-zero/tools/goctl@latest # For Mac brew install goctl # docker for amd64 architecture docker pull kevinwan/goctl # run goctl like docker run --rm -it -v `pwd`:/app kevinwan/goctl --help # docker for arm64(Mac) architecture docker pull kevinwan/goctl:latest-arm64 # run goctl like docker run --rm -it -v `pwd`:/app kevinwan/goctl:latest-arm64 --help ``` make sure goctl is executable. 3. Create the API file, like greet.api, you can install the plugin of goctl in vs code, api syntax is supported. ```go type ( Request { Name string `path:""name,options=[you,me]""` // parameters are auto validated } Response { Message string `json:""message""` } ) service greet-api { @handler GreetHandler get /greet/from/:name(Request) returns (Response) } ``` the .api files also can be generated by goctl, like below: ```shell goctl api -o greet.api ``` 4. Generate the go server-side code ```shell goctl api go -api greet.api -dir greet ``` the generated files look like: ```Plain Text greet etc greet-api.yaml // configuration file greet.go // main file internal config config.go // configuration definition handler greethandler.go // get/put/post/delete routes are defined here routes.go // routes list logic greetlogic.go // request logic can be written here svc servicecontext.go // service context, mysql/redis can be passed in here types types.go // request/response defined here greet.api // api description file ``` the generated code can be run directly: ```shell cd greet go mod init go mod tidy go run greet.go -f etc/greet-api.yaml ``` by default, its listening on port 8888, while it can be changed in the configuration file. you can check it by curl: ```shell curl -i ``` the response looks like below: ```http HTTP/1.1 200 OK Date: Sun, 30 Aug 2020 15:32:35 GMT Content-Length: 0 ``` 5. Write the business logic code * the dependencies can be passed into the logic within servicecontext.go, like mysql, redis, etc. * add the logic code in a logic package according to .api file 6. Generate code like Java, TypeScript, Dart, JavaScript, etc. just from the api file ```shell goctl api java -api greet.api -dir greet goctl api dart -api greet.api -dir greet ... ``` ## Benchmark [Checkout the test code]( ## Documents * [Documents]( * [Rapid development of microservice systems]( * [Rapid development of microservice systems - multiple RPCs]( * [Examples]( ## Chat group Join the chat via ## Cloud Native Landscape go-zero enlisted in the [CNCF Cloud Native Landscape]( ## Give a Star! If you like or are using this project to learn or start your solution, please give it a star. Thanks! ## Buy me a coffee"
milvus,milvus-io/milvus,27446,2642,"['Go', 'Python', 'C++']","['anns', 'nearest-neighbor-search', 'faiss', 'vector-search', 'image-search']","## What is Milvus? Milvus is an open-source vector database built to power embedding similarity search and AI applications. Milvus makes unstructured data search more accessible, and provides a consistent user experience regardless of the deployment environment. Milvus 2.0 is a cloud-native vector database with storage and computation separated by design. All components in this refactored version of Milvus are stateless to enhance elasticity and flexibility. For more architecture details, see [Milvus Architecture Overview]( Milvus was released under the [open-source Apache License 2.0]( in October 2019. It is currently a graduate project under [LF AI & Data Foundation]( ## Key features Millisecond search on trillion vector datasets Average latency measured in milliseconds on trillion vector datasets. Simplified unstructured data management Rich APIs designed for data science workflows.Consistent user experience across laptop, local cluster, and cloud.Embed real-time search and analytics into virtually any application. Reliable, always on vector database Milvus built-in replication and failover/failback features ensure data and applications can maintain business continuity in the event of a disruption. Highly scalable and elastic Component-level scalability makes it possible to scale up and down on demand. Milvus can autoscale at a component level according to the load type, making resource scheduling much more efficient. Hybrid search In addition to vectors, Milvus supports data types such as Boolean, integers, floating-point numbers, and more. A collection in Milvus can hold multiple fields for accommodating different data features or properties. Milvus pairs scalar filtering with powerful vector similarity search to offer a modern, flexible platform for analyzing unstructured data. Check for examples and boolean expression rules. Unified Lambda structure Milvus combines stream and batch processing for data storage to balance timeliness and efficiency. Its unified interface makes vector similarity search a breeze. Community supported, industry recognized With over 1,000 enterprise users, 9,000+ stars on GitHub, and an active open-source community, youre not alone when you use Milvus. As a graduate project under the LF AI & Data Foundation, Milvus has institutional support. ## Quick start ### Start with Zilliz Cloud Zilliz Cloud is a fully managed service on cloud and the simplest way to deploy LF AI Milvus, See [Zilliz Cloud]( and start your [free trial]( ### Install Milvus - [Standalone Quick Start Guide]( - [Cluster Quick Start Guide]( - [Advanced Deployment]( ### Build Milvus from source code Check the requirements first. Linux systems (Ubuntu 20.04 or later recommended): ```bash go: >= 1.21 cmake: >= 3.26.4 gcc: 7.5 ``` MacOS systems with x86_64 (Big Sur 11.5 or later recommended): ```bash go: >= 1.21 cmake: >= 3.26.4 llvm: >= 15 ``` MacOS systems with Apple Silicon (Monterey 12.0.1 or later recommended): ```bash go: >= 1.21 (Arch=ARM64) cmake: >= 3.26.4 llvm: >= 15 ``` Clone Milvus repo and build. ```bash # Clone github repository. $ git clone # Install third-party dependencies. $ cd milvus/ $ ./scripts/install_deps.sh # Compile Milvus. $ make ``` For the full story, see [developer's documentation]( > **IMPORTANT** The master branch is for the development of Milvus v2.0. On March 9th, 2021, we released Milvus v1.0, the first stable version of Milvus with long-term support. To use Milvus v1.0, switch to [branch 1.0]( ## Milvus 2.0 vs. 1.x: Cloud-native, distributed architecture, highly scalable, and more See [Milvus 2.0 vs. 1.x]( for more information. ## Real world demos Image search Chatbots Chemical structure search #### Image Search Images made searchable. Instantaneously return the most similar images from a massive database. #### Chatbots Interactive digital customer service that saves users time and businesses money. #### Chemical Structure Search Blazing fast similarity search, substructure search, or superstructure search for a specified molecule. ## Bootcamps Milvus [bootcamp]( is designed to expose users to both the simplicity and depth of the vector database. Discover how to run benchmark tests as well as build similarity search applications spanning chatbots, recommendation systems, reverse image search, molecular search, and much more. ## Contributing Contributions to Milvus are welcome from everyone. See [Guidelines for Contributing]( for details on submitting patches and the contribution workflow. See our [community repository]( to learn about our governance and access more community resources. ### All contributors ## Documentation For guidance on installation, development, deployment, and administration, check out [Milvus Docs]( For technical milestones and enhancement proposals, check out [milvus confluence]( ### SDK The implemented SDK and its API documentation are listed below: - [PyMilvus SDK]( - [Java SDK]( - [Go SDK]( - [Cpp SDK]( development) - [Node SDK]( - [Rust SDK]( development) - [CSharp SDK]( development) ### Attu Attu provides an intuitive and efficient GUI for Milvus. - [Quick start]( ## Community Join the Milvus community on [Discord]( to share your suggestions, advice, and questions with our engineering team. You can also check out our [FAQ page]( to discover solutions or answers to your issues or questions. Subscribe to Milvus mailing lists: - [Technical Steering Committee]( - [Technical Discussions]( - [Announcement]( Follow Milvus on social media: - [Medium]( - [X]( - [Youtube]( ## Reference Reference to cite when you use Milvus in a research paper: ``` @inproceedings{2021milvus, title={Milvus: A Purpose-Built Vector Data Management System}, author={Wang, Jianguo and Yi, Xiaomeng and Guo, Rentong and Jin, Hai and Xu, Peng and Li, Shengjun and Wang, Xiangyu and Guo, Xiangzhou and Li, Chengming and Xu, Xiaohai and others}, booktitle={Proceedings of the 2021 International Conference on Management of Data}, pages={2614--2627}, year={2021} } @article{2022manu, title={Manu: a cloud native vector database management system}, author={Guo, Rentong and Luan, Xiaofan and Xiang, Long and Yan, Xiao and Yi, Xiaomeng and Luo, Jigao and Cheng, Qianya and Xu, Weizhi and Luo, Jiarui and Liu, Frank and others}, journal={Proceedings of the VLDB Endowment}, volume={15}, number={12}, pages={3548--3561}, year={2022}, publisher={VLDB Endowment} } ``` ## Acknowledgments Milvus adopts dependencies from the following: - Thanks to [FAISS]( for the excellent search library. - Thanks to [etcd]( for providing great open-source key-value store tools. - Thanks to [Pulsar]( for its wonderful distributed pub-sub messaging system. - Thanks to [Tantivy]( for its full-text search engine library written in Rust. - Thanks to [RocksDB]( for the powerful storage engines. Milvus is adopted by following opensource project: - [Towhee]( a flexible, application-oriented framework for computing embedding vectors over unstructured data. - [Haystack]( an open source NLP framework that leverages Transformer models - [Langchain]( Building applications with LLMs through composability - [LLamaIndex]( a data framework for your LLM applications - [GPTCache]( a library for creating semantic cache to store responses from LLM queries."
k3s,k3s-io/k3s,26675,2241,"['Go', 'Shell', 'HCL']","['kubernetes', 'k8s']","K3s - Lightweight Kubernetes =============================================== Lightweight Kubernetes. Production ready, easy to install, half the memory, all in a binary less than 100 MB. Great for: * Edge * IoT * CI * Development * ARM * Embedding k8s * Situations where a PhD in k8s clusterology is infeasible What is this? --- K3s is a [fully conformant]( production-ready Kubernetes distribution with the following changes: 1. It is packaged as a single binary. 1. It adds support for sqlite3 as the default storage backend. Etcd3, MySQL, and Postgres are also supported. 1. It wraps Kubernetes and other components in a single, simple launcher. 1. It is secure by default with reasonable defaults for lightweight environments. 1. It has minimal to no OS dependencies (just a sane kernel and cgroup mounts needed). 1. It eliminates the need to expose a port on Kubernetes worker nodes for the kubelet API by exposing this API to the Kubernetes control plane nodes over a websocket tunnel. K3s bundles the following technologies together into a single cohesive distribution: * [Containerd]( & [runc]( * [Flannel]( for CNI * [CoreDNS]( * [Metrics Server]( * [Traefik]( for ingress * [Klipper-lb]( as an embedded service load balancer provider * [Kube-router]( netpol controller for network policy * [Helm-controller]( to allow for CRD-driven deployment of helm manifests * [Kine]( as a datastore shim that allows etcd to be replaced with other databases * [Local-path-provisioner]( for provisioning volumes using local storage * [Host utilities]( such as iptables/nftables, ebtables, ethtool, & socat These technologies can be disabled or swapped out for technologies of your choice. Additionally, K3s simplifies Kubernetes operations by maintaining functionality for: * Managing the TLS certificates of Kubernetes components * Managing the connection between worker and server nodes * Auto-deploying Kubernetes resources from local manifests in realtime as they are changed. * Managing an embedded etcd cluster Current Status -------------- []( []( []( []( What's with the name? -------------------- We wanted an installation of Kubernetes that was half the size in terms of memory footprint. Kubernetes is a 10 letter word stylized as k8s. So something half as big as Kubernetes would be a 5 letter word stylized as K3s. There is neither a long-form of K3s nor official pronunciation. Is this a fork? --------------- No, it's a distribution. A fork implies continued divergence from the original. This is not K3s's goal or practice. K3s explicitly intends not to change any core Kubernetes functionality. We seek to remain as close to upstream Kubernetes as possible. However, we maintain a small set of patches (well under 1000 lines) important to K3s's use case and deployment model. We maintain patches for other components as well. When possible, we contribute these changes back to the upstream projects, for example, with [SELinux support in containerd]( This is a common practice amongst software distributions. K3s is a distribution because it packages additional components and services necessary for a fully functional cluster that go beyond vanilla Kubernetes. These are opinionated choices on technologies for components like ingress, storage class, network policy, service load balancer, and even container runtime. These choices and technologies are touched on in more detail in the [What is this?](#what-is-this) section. How is this lightweight or smaller than upstream Kubernetes? --- There are two major ways that K3s is lighter weight than upstream Kubernetes: 1. The memory footprint to run it is smaller 2. The binary, which contains all the non-containerized components needed to run a cluster, is smaller The memory footprint is reduced primarily by running many components inside of a single process. This eliminates significant overhead that would otherwise be duplicated for each component. The binary is smaller by removing third-party storage drivers and cloud providers, explained in more detail below. What have you removed from upstream Kubernetes? --- This is a common point of confusion because it has changed over time. Early versions of K3s had much more removed than the current version. K3s currently removes two things: 1. In-tree storage drivers 1. In-tree cloud provider Both of these have out-of-tree alternatives in the form of [CSI]( and [CCM]( which work in K3s and which upstream is moving towards. We remove these to achieve a smaller binary size. They can be removed while remaining conformant because neither affects core Kubernetes functionality. They are also dependent on third-party cloud or data center technologies/services, which may not be available in many K3s' use cases. What's next? --- Check out our [roadmap](ROADMAP.md) to see what we have planned moving forward. Release cadence --- K3s maintains pace with upstream Kubernetes releases. Our goal is to release patch releases within one week, and new minors within 30 days. Our release versioning reflects the version of upstream Kubernetes that is being released. For example, the K3s release [v1.27.4+k3s1]( maps to the `v1.27.4` Kubernetes release. We add a postfix in the form of `+k3s` to allow us to make additional releases using the same version of upstream Kubernetes while remaining [semver]( compliant. For example, if we discovered a high severity bug in `v1.27.4+k3s1` and needed to release an immediate fix for it, we would release `v1.27.4+k3s2`. Documentation ------------- Please see [the official docs site]( for complete documentation. Quick-Start - Install Script -------------- The `install.sh` script provides a convenient way to download K3s and add a service to systemd or openrc. To install k3s as a service, run: ```bash curl -sfL | sh - ``` A kubeconfig file is written to `/etc/rancher/k3s/k3s.yaml` and the service is automatically started or restarted. The install script will install K3s and additional utilities, such as `kubectl`, `crictl`, `k3s-killall.sh`, and `k3s-uninstall.sh`, for example: ```bash sudo kubectl get nodes ``` `K3S_TOKEN` is created at `/var/lib/rancher/k3s/server/node-token` on your server. To install on worker nodes, pass `K3S_URL` along with `K3S_TOKEN` environment variables, for example: ```bash curl -sfL | K3S_URL= K3S_TOKEN=XXX sh - ``` Manual Download --------------- 1. Download `k3s` from latest [release]( x86_64, armhf, arm64 and s390x are supported. 1. Run the server. ```bash sudo k3s server & # Kubeconfig is written to /etc/rancher/k3s/k3s.yaml sudo k3s kubectl get nodes # On a different node run the below. NODE_TOKEN comes from # /var/lib/rancher/k3s/server/node-token on your server sudo k3s agent --server --token ${NODE_TOKEN} ``` Contributing ------------ Please check out our [contributing guide](CONTRIBUTING.md) if you're interested in contributing to K3s. Security -------- Security issues in K3s can be reported by sending an email to [security@k3s.io](mailto:security@k3s.io). Please do not file issues about security issues."
croc,schollz/croc,26551,1057,"['Go', 'Shell', 'Makefile']","['file-sharing', 'tcp', 'golang', 'peer-to-peer', 'data-transfer']","This project is supported by Github sponsors. `croc` is a tool that allows any two computers to simply and securely transfer files and folders. AFAIK, *croc* is the only CLI file-transfer tool that does **all** of the following: - allows **any two computers** to transfer data (using a relay) - provides **end-to-end encryption** (using PAKE) - enables easy **cross-platform** transfers (Windows, Linux, Mac) - allows **multiple file** transfers - allows **resuming transfers** that are interrupted - local server or port-forwarding **not needed** - **ipv6-first** with ipv4 fallback - can **use proxy**, like tor For more information about `croc`, see [my blog post]( or read a [recent interview I did]( ## Install Download [the latest release for your system]( or install a release from the command-line: ``` curl | bash ``` On macOS you can install the latest release with [Homebrew]( ``` brew install croc ``` On macOS you can also install the latest release with [MacPorts]( ``` sudo port selfupdate sudo port install croc ``` On Windows you can install the latest release with [Scoop]( [Chocolatey]( or [Winget]( ``` scoop install croc ``` ``` choco install croc ``` ``` winget install schollz.croc ``` On Unix you can install the latest release with [Nix]( ``` nix-env -i croc ``` On Alpine Linux you have to install dependencies first: ``` apk add bash coreutils wget -qO- | bash ``` On Arch Linux you can install the latest release with `pacman`: ``` pacman -S croc ``` On Fedora you can install with `dnf`: ``` dnf install croc ``` On Gentoo you can install with `portage`: ``` emerge net-misc/croc ``` On Termux you can install with `pkg`: ``` pkg install croc ``` On FreeBSD you can install with `pkg`: ``` pkg install croc ``` Or, you can [install Go]( and build from source (requires Go 1.17+): ``` go install github.com/schollz/croc/v10@latest ``` On Android there is a 3rd party F-Droid app [available to download]( ## Usage To send a file, simply do: ``` $ croc send [file(s)-or-folder] Sending 'file-or-folder' (X MB) Code is: code-phrase ``` Then to receive the file (or folder) on another computer, you can just do ``` croc code-phrase ``` The code phrase is used to establish password-authenticated key agreement ([PAKE]( which generates a secret key for the sender and recipient to use for end-to-end encryption. There are a number of configurable options (see `--help`). A set of options (like custom relay, ports, and code phrase) can be set using `--remember`. ### Custom code phrase You can send with your own code phrase (must be more than 6 characters). ``` croc send --code [code-phrase] [file(s)-or-folder] ``` ### Allow overwriting without prompt By default, croc will prompt whether to overwrite a file. You can automatically overwrite files by using the `--overwrite` flag (recipient only). For example, receive a file to automatically overwrite: ``` croc --yes --overwrite ``` ### Use pipes - stdin and stdout You can pipe to `croc`: ``` cat [filename] | croc send ``` In this case `croc` will automatically use the stdin data and send and assign a filename like ""croc-stdin-123456789"". To receive to `stdout` at you can always just use the `--yes` will automatically approve the transfer and pipe it out to `stdout`. ``` croc --yes [code-phrase] > out ``` All of the other text printed to the console is going to `stderr` so it will not interfere with the message going to `stdout`. ### Send text Sometimes you want to send URLs or short text. In addition to piping, you can easily send text with `croc`: ``` croc send --text ""hello world"" ``` This will automatically tell the receiver to use `stdout` when they receive the text so it will be displayed. ### Use a proxy You can use a proxy as your connection to the relay by adding a proxy address with `--socks5`. For example, you can send via a tor relay: ``` croc --socks5 ""127.0.0.1:9050"" send SOMEFILE ``` ### Change encryption curve You can choose from several different elliptic curves to use for encryption by using the `--curve` flag. Only the recipient can choose the curve. For example, receive a file using the P-521 curve: ``` croc --curve p521 ``` Available curves are P-256, P-348, P-521 and SIEC. P-256 is the default curve. ### Change hash algorithm You can choose from several different hash algorithms. The default is the `xxhash` algorithm which is fast and thorough. If you want to optimize for speed you can use the `imohash` algorithm which is even faster, but since it samples files (versus reading the whole file) it can mistakenly determine that a file is the same on the two computers transferring - though this is only a problem if you are syncing files versus sending a new file to a computer. ``` croc send --hash imohash SOMEFILE ``` ### Self-host relay The relay is needed to staple the parallel incoming and outgoing connections. By default, `croc` uses a public relay but you can also run your own relay: ``` croc relay ``` By default it uses TCP ports 9009-9013. Make sure to open those up. You can customize the ports (e.g. `croc relay --ports 1111,1112`), but you must have a minimum of **2** ports for the relay. The first port is for communication and the subsequent ports are used for the multiplexed data transfer. You can send files using your relay by entering `--relay` to change the relay that you are using if you want to custom host your own. ``` croc --relay ""myrelay.example.com:9009"" send [filename] ``` Note, when sending, you only need to include the first port (the communication port). The subsequent ports for data transfer will be transmitted back to the user from the relay. #### Self-host relay (docker) If it's easier you can also run a relay with Docker: ``` docker run -d -p 9009-9013:9009-9013 -e CROC_PASS='YOURPASSWORD' schollz/croc ``` Be sure to include the password for the relay otherwise any requests will be rejected. ``` croc --pass YOURPASSWORD --relay ""myreal.example.com:9009"" send [filename] ``` Note: when including `--pass YOURPASSWORD` you can instead pass a file with the password, e.g. `--pass FILEWITHPASSWORD`. ## License MIT ## Acknowledgements `croc` has gone through many iterations, and I am awed by all the great contributions! If you feel like contributing, in any way, by all means you can send an Issue, a PR, or ask a question. Thanks [@warner]( for the [idea]( [@tscholl2]( for the [encryption gists]( [@skorokithakis]( for [code on proxying two connections]( Finally thanks for making pull requests [@maximbaz]( [@meyermarcel]( [@Girbons]( [@techtide]( [@heymatthew]( [@Lunsford94]( [@lummie]( [@jesuiscamille]( [@threefjord]( [@marcossegovia]( [@csleong98]( [@afotescu]( [@callmefever]( [@El-JojA]( [@anatolyyyyyy]( [@goggle]( [@smileboywtu]( [@nicolashardy]( [@fbartels]( [@rkuprov]( [@hreese]( [@xenrox]( and [Ipar]("
kit,go-kit/kit,26196,2415,"['Go', 'Shell']","['go', 'microservices', 'golang', 'metallica']","# Go kit []( []( []( []( **Go kit** is a **programming toolkit** for building microservices (or elegant monoliths) in Go. We solve common problems in distributed systems and application architecture so you can focus on delivering business value. - Website: [gokit.io]( - Mailing list: [go-kit]( - Slack: [gophers.slack.com]( **#go-kit** ([invite]( ## Sponsors Encore the platform for building Go-based cloud backends. Click [here]( or Sponsor, above, for more information on sponsorship. ## Motivation Go has emerged as the language of the server, but it remains underrepresented in so-called ""modern enterprise"" companies like Facebook, Twitter, Netflix, and SoundCloud. Many of these organizations have turned to JVM-based stacks for their business logic, owing in large part to libraries and ecosystems that directly support their microservice architectures. To reach its next level of success, Go needs more than simple primitives and idioms. It needs a comprehensive toolkit, for coherent distributed programming in the large. Go kit is a set of packages and best practices, which provide a comprehensive, robust, and trustable way of building microservices for organizations of any size. For more details, see [the website]( [the motivating blog post]( and [the video of the talk]( See also the [Go kit talk at GopherCon 2015]( ## Goals - Operate in a heterogeneous SOA expect to interact with mostly non-Go-kit services - RPC as the primary messaging pattern - Pluggable serialization and transport not just JSON over HTTP - Operate within existing infrastructures no mandates for specific tools or technologies ## Non-goals - Supporting messaging patterns other than RPC (for now) e.g. MPI, pub/sub, CQRS, etc. - Re-implementing functionality that can be provided by adapting existing software - Having opinions on operational concerns: deployment, configuration, process supervision, orchestration, etc. ## Contributing Please see [CONTRIBUTING.md](/CONTRIBUTING.md). Thank you, [contributors]( ## Dependency management Go kit is [modules]( aware, and we encourage users to use the standard modules tooling. But Go kit is at major version 0, so it should be compatible with non-modules environments. ## Code generators There are several third-party tools that can generate Go kit code based on different starting assumptions. - [RecoLabs/microgen]( - [GrantZheng/kit]( - [kujtimiihoxha/kit]( (unmaintained) - [nytimes/marvin]( - [sagikazarmark/mga]( - [sagikazarmark/protoc-gen-go-kit]( - [metaverse/truss]( - [goadesign/goakit]( ## Related projects Projects with a have had particular influence on Go kit's design (or vice-versa). ### Service frameworks - [gizmo]( a microservice toolkit from The New York Times - [go-micro]( a distributed systems development framework - [gotalk]( async peer communication protocol & library - [Kite]( a micro-service framework - [gocircuit]( dynamic cloud orchestration ### Individual components - [afex/hystrix-go]( client-side latency and fault tolerance library - [armon/go-metrics]( library for exporting performance and runtime metrics to external metrics systems - [codahale/lunk]( structured logging in the style of Google's Dapper or Twitter's Zipkin - [eapache/go-resiliency]( resiliency patterns - [sasbury/logging]( a tagged style of logging - [grpc/grpc-go]( HTTP/2 based RPC - [inconshreveable/log15]( simple, powerful logging for Go - [mailgun/vulcand]( programmatic load balancer backed by etcd - [mattheath/phosphor]( distributed system tracing - [pivotal-golang/lager]( an opinionated logging library - [rubyist/circuitbreaker]( circuit breaker library - [sirupsen/logrus]( structured, pluggable logging for Go - [sourcegraph/appdash]( application tracing system based on Google's Dapper - [spacemonkeygo/monitor]( data collection, monitoring, instrumentation, and Zipkin client library - [streadway/handy]( net/http handler filters - [vitess/rpcplus]( package rpc + context.Context - [gdamore/mangos]( nanomsg implementation in pure Go ### Web frameworks - [Gorilla]( - [Gin]( - [Negroni]( - [Goji]( - [Martini]( - [Beego]( - [Revel]( (considered [harmful]( - [GoBuffalo]( ## Additional reading - [Architecting for the Cloud]( Netflix - [Dapper, a Large-Scale Distributed Systems Tracing Infrastructure]( Google - [Your Server as a Function]( (PDF) Twitter"
helm,helm/helm,26132,6963,"['Go', 'Shell', 'Makefile']","['cncf', 'chart', 'kubernetes', 'helm', 'charts']","# Helm []( []( []( []( Helm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources. Use Helm to: - Find and use [popular software packaged as Helm Charts]( to run in Kubernetes - Share your own applications as Helm Charts - Create reproducible builds of your Kubernetes applications - Intelligently manage your Kubernetes manifest files - Manage releases of Helm packages ## Helm in a Handbasket Helm is a tool that streamlines installing and managing Kubernetes applications. Think of it like apt/yum/homebrew for Kubernetes. - Helm renders your templates and communicates with the Kubernetes API - Helm runs on your laptop, CI/CD, or wherever you want it to run. - Charts are Helm packages that contain at least two things: - A description of the package (`Chart.yaml`) - One or more templates, which contain Kubernetes manifest files - Charts can be stored on disk, or fetched from remote chart repositories (like Debian or RedHat packages) ## Install Binary downloads of the Helm client can be found on [the Releases page]( Unpack the `helm` binary and add it to your PATH and you are good to go! If you want to use a package manager: - [Homebrew]( users can use `brew install helm`. - [Chocolatey]( users can use `choco install kubernetes-helm`. - [Scoop]( users can use `scoop install helm`. - [Snapcraft]( users can use `snap install helm --classic` To rapidly get Helm up and running, start with the [Quick Start Guide]( See the [installation guide]( for more options, including installing pre-releases. ## Docs Get started with the [Quick Start guide]( or plunge into the [complete documentation]( ## Roadmap The [Helm roadmap uses GitHub milestones]( to track the progress of the project. ## Community, discussion, contribution, and support You can reach the Helm community and developers via the following channels: - [Kubernetes Slack]( - [#helm-users]( - [#helm-dev]( - [#charts]( - Mailing List: - [Helm Mailing List]( - Developer Call: Thursdays at 9:30-10:00 Pacific ([meeting details]( ### Contribution If you're interested in contributing, please refer to the [Contributing Guide](CONTRIBUTING.md) **before submitting a pull request**. ### Code of conduct Participation in the Helm community is governed by the [Code of Conduct](code-of-conduct.md)."
viper,spf13/viper,26031,1989,"['Go', 'Makefile', 'Nix']",[],"> ## Viper v2 feedback > Viper is heading towards v2 and we would love to hear what _**you**_ would like to see in it. Share your thoughts here: > > **Thank you!** []( []( []( []( []( []( **Go configuration with fangs!** Many Go projects are built using Viper including: * [Hugo]( * [EMC RexRay]( * [Imgurs Incus]( * [Nanobox]( * [Docker Notary]( * [BloomApi]( * [doctl]( * [Clairctl]( * [Mercure]( * [Meshery]( * [Bearer]( * [Coder]( * [Vitess]( ## Install ```shell go get github.com/spf13/viper ``` **Note:** Viper uses [Go Modules]( to manage dependencies. ## What is Viper? Viper is a complete configuration solution for Go applications including [12-Factor apps]( It is designed to work within an application, and can handle all types of configuration needs and formats. It supports: * setting defaults * reading from JSON, TOML, YAML, HCL, envfile and Java properties config files * live watching and re-reading of config files (optional) * reading from environment variables * reading from remote config systems (etcd or Consul), and watching changes * reading from command line flags * reading from buffer * setting explicit values Viper can be thought of as a registry for all of your applications configuration needs. ## Why Viper? When building a modern application, you dont want to worry about configuration file formats; you want to focus on building awesome software. Viper is here to help with that. Viper does the following for you: 1. Find, load, and unmarshal a configuration file in JSON, TOML, YAML, HCL, INI, envfile or Java properties formats. 2. Provide a mechanism to set default values for your different configuration options. 3. Provide a mechanism to set override values for options specified through command line flags. 4. Provide an alias system to easily rename parameters without breaking existing code. 5. Make it easy to tell the difference between when a user has provided a command line or config file which is the same as the default. Viper uses the following precedence order. Each item takes precedence over the item below it: * explicit call to `Set` * flag * env * config * key/value store * default **Important:** Viper configuration keys are case insensitive. There are ongoing discussions about making that optional. ## Putting Values into Viper ### Establishing Defaults A good configuration system will support default values. A default value is not required for a key, but its useful in the event that a key hasn't been set via config file, environment variable, remote configuration or flag. Examples: ```go viper.SetDefault(""ContentDir"", ""content"") viper.SetDefault(""LayoutDir"", ""layouts"") viper.SetDefault(""Taxonomies"", map[string]string{""tag"": ""tags"", ""category"": ""categories""}) ``` ### Reading Config Files Viper requires minimal configuration so it knows where to look for config files. Viper supports JSON, TOML, YAML, HCL, INI, envfile and Java Properties files. Viper can search multiple paths, but currently a single Viper instance only supports a single configuration file. Viper does not default to any configuration search paths leaving defaults decision to an application. Here is an example of how to use Viper to search for and read a configuration file. None of the specific paths are required, but at least one path should be provided where a configuration file is expected. ```go viper.SetConfigName(""config"") // name of config file (without extension) viper.SetConfigType(""yaml"") // REQUIRED if the config file does not have the extension in the name viper.AddConfigPath(""/etc/appname/"") // path to look for the config file in viper.AddConfigPath(""$HOME/.appname"") // call multiple times to add many search paths viper.AddConfigPath(""."") // optionally look for config in the working directory err := viper.ReadInConfig() // Find and read the config file if err != nil { // Handle errors reading the config file panic(fmt.Errorf(""fatal error config file: %w"", err)) } ``` You can handle the specific case where no config file is found like this: ```go if err := viper.ReadInConfig(); err != nil { if _, ok := err.(viper.ConfigFileNotFoundError); ok { // Config file not found; ignore error if desired } else { // Config file was found but another error was produced } } // Config file found and successfully parsed ``` *NOTE [since 1.6]:* You can also have a file without an extension and specify the format programmatically. For those configuration files that lie in the home of the user without any extension like `.bashrc` ### Writing Config Files Reading from config files is useful, but at times you want to store all modifications made at run time. For that, a bunch of commands are available, each with its own purpose: * WriteConfig - writes the current viper configuration to the predefined path, if exists. Errors if no predefined path. Will overwrite the current config file, if it exists. * SafeWriteConfig - writes the current viper configuration to the predefined path. Errors if no predefined path. Will not overwrite the current config file, if it exists. * WriteConfigAs - writes the current viper configuration to the given filepath. Will overwrite the given file, if it exists. * SafeWriteConfigAs - writes the current viper configuration to the given filepath. Will not overwrite the given file, if it exists. As a rule of the thumb, everything marked with safe won't overwrite any file, but just create if not existent, whilst the default behavior is to create or truncate. A small examples section: ```go viper.WriteConfig() // writes current config to predefined path set by 'viper.AddConfigPath()' and 'viper.SetConfigName' viper.SafeWriteConfig() viper.WriteConfigAs(""/path/to/my/.config"") viper.SafeWriteConfigAs(""/path/to/my/.config"") // will error since it has already been written viper.SafeWriteConfigAs(""/path/to/my/.other_config"") ``` ### Watching and re-reading config files Viper supports the ability to have your application live read a config file while running. Gone are the days of needing to restart a server to have a config take effect, viper powered applications can read an update to a config file while running and not miss a beat. Simply tell the viper instance to watchConfig. Optionally you can provide a function for Viper to run each time a change occurs. **Make sure you add all of the configPaths prior to calling `WatchConfig()`** ```go viper.OnConfigChange(func(e fsnotify.Event) { fmt.Println(""Config file changed:"", e.Name) }) viper.WatchConfig() ``` ### Reading Config from io.Reader Viper predefines many configuration sources such as files, environment variables, flags, and remote K/V store, but you are not bound to them. You can also implement your own required configuration source and feed it to viper. ```go viper.SetConfigType(""yaml"") // or viper.SetConfigType(""YAML"") // any approach to require this configuration into your program. var yamlExample = []byte(` Hacker: true name: steve hobbies: - skateboarding - snowboarding - go clothing: jacket: leather trousers: denim age: 35 eyes : brown beard: true `) viper.ReadConfig(bytes.NewBuffer(yamlExample)) viper.Get(""name"") // this would be ""steve"" ``` ### Setting Overrides These could be from a command line flag, or from your own application logic. ```go viper.Set(""Verbose"", true) viper.Set(""LogFile"", LogFile) viper.Set(""host.port"", 5899) // set subset ``` ### Registering and Using Aliases Aliases permit a single value to be referenced by multiple keys ```go viper.RegisterAlias(""loud"", ""Verbose"") viper.Set(""verbose"", true) // same result as next line viper.Set(""loud"", true) // same result as prior line viper.GetBool(""loud"") // true viper.GetBool(""verbose"") // true ``` ### Working with Environment Variables Viper has full support for environment variables. This enables 12 factor applications out of the box. There are five methods that exist to aid working with ENV: * `AutomaticEnv()` * `BindEnv(string...) : error` * `SetEnvPrefix(string)` * `SetEnvKeyReplacer(string...) *strings.Replacer` * `AllowEmptyEnv(bool)` _When working with ENV variables, its important to recognize that Viper treats ENV variables as case sensitive._ Viper provides a mechanism to try to ensure that ENV variables are unique. By using `SetEnvPrefix`, you can tell Viper to use a prefix while reading from the environment variables. Both `BindEnv` and `AutomaticEnv` will use this prefix. `BindEnv` takes one or more parameters. The first parameter is the key name, the rest are the name of the environment variables to bind to this key. If more than one are provided, they will take precedence in the specified order. The name of the environment variable is case sensitive. If the ENV variable name is not provided, then Viper will automatically assume that the ENV variable matches the following format: prefix + ""_"" + the key name in ALL CAPS. When you explicitly provide the ENV variable name (the second parameter), it **does not** automatically add the prefix. For example if the second parameter is ""id"", Viper will look for the ENV variable ""ID"". One important thing to recognize when working with ENV variables is that the value will be read each time it is accessed. Viper does not fix the value when the `BindEnv` is called. `AutomaticEnv` is a powerful helper especially when combined with `SetEnvPrefix`. When called, Viper will check for an environment variable any time a `viper.Get` request is made. It will apply the following rules. It will check for an environment variable with a name matching the key uppercased and prefixed with the `EnvPrefix` if set. `SetEnvKeyReplacer` allows you to use a `strings.Replacer` object to rewrite Env keys to an extent. This is useful if you want to use `-` or something in your `Get()` calls, but want your environmental variables to use `_` delimiters. An example of using it can be found in `viper_test.go`. Alternatively, you can use `EnvKeyReplacer` with `NewWithOptions` factory function. Unlike `SetEnvKeyReplacer`, it accepts a `StringReplacer` interface allowing ... [TRUNCATED]"
lux,iawia002/lux,25642,2859,"['Go', 'JavaScript']","['downloader', 'go', 'crawler', 'scraper', 'video']","Lux Let there be Lux! Lux is a fast and simple video downloader built with Go. - [Installation](#installation) - [Prerequisites](#prerequisites) - [Install via `go install`](#install-via-go-install) - [Homebrew (macOS only)](#homebrew-macos-only) - [Arch Linux](#arch-linux) - [Void Linux](#void-linux) - [Scoop on Windows](#scoop-on-windows) - [Chocolatey on Windows](#chocolatey-on-windows) - [Cask on Windows/macOS/Linux](#cask-on-windowsmacoslinux) - [Getting Started](#getting-started) - [Download a video](#download-a-video) - [Download anything else](#download-anything-else) - [Download playlist](#download-playlist) - [Multiple inputs](#multiple-inputs) - [Resume a download](#resume-a-download) - [Auto retry](#auto-retry) - [Cookies](#cookies) - [Proxy](#proxy) - [Multi-Thread](#multi-thread) - [Short link](#short-link) - [bilibili](#bilibili) - [Use specified Referrer](#use-specified-referrer) - [Specify the output path and name](#specify-the-output-path-and-name) - [Debug Mode](#debug-mode) - [Reuse extracted data](#reuse-extracted-data) - [Options](#options) - [Download:](#download) - [Network:](#network) - [Playlist:](#playlist) - [Filesystem:](#filesystem) - [Subtitle:](#subtitle) - [Youku:](#youku) - [aria2:](#aria2) - [Supported Sites](#supported-sites) - [Known issues](#known-issues) - [](#) - [Contributing](#contributing) - [Authors](#authors) - [Similar projects](#similar-projects) - [License](#license) ## Installation ### Prerequisites The following dependencies are required and must be installed separately. - **[FFmpeg]( > **Note**: FFmpeg does not affect the download, only affects the final file merge. ### Install via `go install` To install Lux, use `go install`, or download the binary file from [Releases]( page. ```bash $ go install github.com/iawia002/lux@latest ``` ### Homebrew (macOS only) For macOS users, you can install `lux` via: ```bash $ brew install lux ``` ### Arch Linux For Arch Users [AUR]( package is available. ### Void Linux For Void linux users, you can install `lux` via: ``` $ xbps-install -S lux ``` ### [Scoop]( on Windows ```sh $ scoop install lux ``` ### [Chocolatey]( on Windows ``` $ choco install lux ``` ### [Cask]( on Windows/macOS/Linux ```sh $ cask install github.com/iawia002/lux ``` ## Getting Started Usage: ``` lux [OPTIONS] URL [URL...] ``` ### Download a video ```console $ lux "" Site: YouTube youtube.com Title: Rick Astley - Never Gonna Give You Up (Video) Type: video Stream: [248] ------------------- Quality: 1080p video/webm; codecs=""vp9"" Size: 63.93 MiB (67038963 Bytes) # download with: lux -f 248 ... 41.88 MiB / 63.93 MiB [=================>-------------] 65.51% 4.22 MiB/s 00m05s ``` The `-i` option displays all available quality of video without downloading. ```console $ lux -i "" Site: YouTube youtube.com Title: Rick Astley - Never Gonna Give You Up (Video) Type: video Streams: # All available quality [248] ------------------- Quality: 1080p video/webm; codecs=""vp9"" Size: 49.29 MiB (51687554 Bytes) # download with: lux -f 248 ... [137] ------------------- Quality: 1080p video/mp4; codecs=""avc1.640028"" Size: 43.45 MiB (45564306 Bytes) # download with: lux -f 137 ... [398] ------------------- Quality: 720p video/mp4; codecs=""av01.0.05M.08"" Size: 37.12 MiB (38926432 Bytes) # download with: lux -f 398 ... [136] ------------------- Quality: 720p video/mp4; codecs=""avc1.4d401f"" Size: 31.34 MiB (32867324 Bytes) # download with: lux -f 136 ... [247] ------------------- Quality: 720p video/webm; codecs=""vp9"" Size: 31.03 MiB (32536181 Bytes) # download with: lux -f 247 ... ``` Use `lux -f stream ""URL""` to download a specific stream listed in the output of `-i` option. ### Download anything else If Lux is provided the URL of a specific resource, then it will be downloaded directly: ```console $ lux "" lux doesn't support this URL right now, but it will try to download it directly Site: Universal Title: 1f5a87801a0711e898b12b640777720f Type: image/jpeg Stream: [default] ------------------- Size: 1.00 MiB (1051042 Bytes) # download with: lux -f default ""URL"" 1.00 MiB / 1.00 MiB [===================================] 100.00% 1.21 MiB/s 0s ``` ### Download playlist The `-p` option downloads an entire playlist instead of a single video. ```console $ lux -i -p "" Site: bilibili.com Title: Doctor X Type: video Streams: # All available quality [default] ------------------- Quality: 1080P Size: 845.66 MiB (886738354 Bytes) # download with: lux -f default ""URL"" Site: bilibili.com Title: Doctor X Type: video Streams: # All available quality [default] ------------------- Quality: 1080P Size: 930.71 MiB (975919195 Bytes) # download with: lux -f default ""URL"" ...... ``` You can use the `-start`, `-end` or `-items` option to specify the download range of the list: ``` -start Playlist video to start at (default 1) -end Playlist video to end at -items Playlist video items to download. Separated by commas like: 1,5,6,8-10 ``` For bilibili playlists only: ``` -eto File name of each bilibili episode doesn't include the playlist title ``` ### Multiple inputs You can also download multiple URLs at once: ```console $ lux -i "" "" Site: bilibili.com Title: 13MAD,14 Type: video Streams: # All available quality [default] ------------------- Quality: 1080P Size: 51.88 MiB (54403767 Bytes) # download with: lux -f default ""URL"" Site: bilibili.com Title: MAD-bgm Type: video Streams: # All available quality [default] ------------------- Quality: 1080P Size: 77.63 MiB (81404093 Bytes) # download with: lux -f default ""URL"" ``` These URLs will be downloaded one by one. You can also use the `-F` option to read URLs from file: ```console $ lux -F ~/Desktop/u.txt Site: weibo.com Title: Google via@ Type: video Stream: [default] ------------------- Size: 19.19 MiB (20118196 Bytes) # download with: lux -f default ""URL"" 19.19 MiB / 19.19 MiB [=================================] 100.00% 9.69 MiB/s 1s ...... ``` You can use the `-start`, `-end` or `-items` option to specify the download range of the list: ``` -start File line to start at (default 1) -end File line to end at -items File lines to download. Separated by commas like: 1,5,6,8-10 ``` ### Resume a download Ctrl+C interrupts a download. A temporary `.download` file is kept in the output directory. If `lux` is ran with the same arguments, then the download progress will resume from the last session. ### Auto retry lux will auto retry when the download failed, you can specify the retry times by `-retry` option (default is 100). ### Cookies Cookies can be provided to `lux` with the `-c` option if they are required for accessing the video. Cookies can be the following format or [Netscape Cookie]( format: ```console name=value; name2=value2; ... ``` Cookies can be a string or a text file, supply cookies in one of the two following ways. As a string: ```console $ lux -c ""name=value; name2=value2"" "" ``` As a text file: ```console $ lux -c cookies.txt "" ``` ### Proxy You can set the HTTP/SOCKS5 proxy using environment variables: ```console $ HTTP_PROXY="" lux -i "" ``` ```console $ HTTP_PROXY=""socks5://127.0.0.1:1080/"" lux -i "" ``` ### Multi-Thread Use `--multi-thread` or `-m` multiple threads to download single video. Use `--thread` or `-n` option to set the number of download threads(default is 10). > Note: If the video has multi fragment, the number of actual download threads will increase. > > For example: > * If `-n` is set to 10, and the video has 2 fragments, then 20 threads will actually be used. > * If the video has 20 fragments, only 10 fragments are downloaded in the same time, the actual threads count is 100. > **Special Tips:** Use too many threads in **mgtv** download will cause HTTP 403 error, we recommend setting the number of threads to **1**. ### Short link #### bilibili You can just use `av` or `ep` number to download bilibili's video: ```console $ lux -i ep198381 av21877586 Site: bilibili.com Title: 79 Type: video Streams: # All available quality [default] ------------------- Quality: 1080P Size: 485.23 MiB (508798478 Bytes) # download with: lux -f default ""URL"" Site: bilibili.com Title: 13MAD,14 Type: video Streams: # All available quality [default] ------------------- Quality: 1080P Size: 51.88 MiB (54403767 Bytes) # download with: lux -f default ""URL"" ``` ### Use specified Referrer A Referrer can be used for the request with the `-r` option: ```console $ lux -r "" "" ``` ### Specify the output path and name The `-o` option sets the path, and `-O` option sets the name of the downloaded file: ```console $ lux -o ../ -O ""hello"" "" ``` ### Debug Mode The `-d` option outputs network request messages: ```console $ lux -i -d "" URL: Method: GET Headers: ""Referer"": {"" ""Accept"": {""text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8""}, ""Accept-Charset"": {""UTF-8,*;q=0.5""}, ""Accept-Encoding"": {""gzip,deflate,sdch""}, ""Accept-Language"": {""en-US,en;q=0.8""}, ""User-Agent"": {""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.146 Safari/537.36""}, } Status Code: 200 URL: Method: GET Headers: ""Accept-Charset"": {""UTF-8,*;q=0.5""}, ""Accept-Encoding"": {""gzip,deflate,sdch""}, ""Accept-Language"": {""en-US,en;q=0.8""}, ""User-Agent"": {""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.146 Safari/537.36""}, ""Referer"": {"" ""Accept"": {""text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8""}, } Status Code: 200 Site: bilibili.com Title: R8 Type: video Streams: # All available quality [default] ------------------- Quality: 1080P Size: 64.38 MiB (67504795 Bytes) # download with: lux -f default ""URL"" ``` ### Reuse extracted data The `-j` option will print the extracted data in JSON format. ```console $ lux -j "" { ""site"": "" bilibili.com"", ""title"": ""2018day by day"", ""type"": ""video"", ""streams"": { ""15"": { ""urls"": [ { ""url"": ""..."", ""size"": 18355205, ""ext"": ""flv"" } ], ""quality"": "" 360P"", ""size"": 18355205 }, ""32"": { ""urls"": [ { ""url"": ""..."", ""size"": 40058632, ""ext"": ""flv"" }... [TRUNCATED]"
k9s,derailed/k9s,25232,1576,"['Go', 'Makefile', 'Shell']","['k9s', 'kubernetes', 'kubernetes-cli', 'kubernetes-clusters', 'k8s']","## K9s - Kubernetes CLI To Manage Your Clusters In Style! K9s provides a terminal UI to interact with your Kubernetes clusters. The aim of this project is to make it easier to navigate, observe and manage your applications in the wild. K9s continually watches Kubernetes for changes and offers subsequent commands to interact with your observed resources. --- ## Note... K9s is not pimped out by a big corporation with deep pockets. It is a complex OSS project that demands a lot of my time to maintain and support. K9s will always remain OSS and therefore free! That said, if you feel k9s makes your day to day Kubernetes journey a tad brighter, saves you time and makes you more productive, please consider [sponsoring us!]( Your donations will go a long way in keeping our servers lights on and beers in our fridge! **Thank you!** --- []( []( []( []( []( []( []( []( --- ## Screenshots 1. Pods 2. Logs 3. Deployments --- ## Demo Videos/Recordings * [K9s v0.30.0 Sneak peek]( * [Vulnerability Scans]( * [K9s v0.29.0]( * [K9s v0.21.3]( * [K9s v0.19.X]( * [K9s v0.18.0]( * [K9s v0.17.0]( * [K9s Pulses]( * [K9s v0.15.1]( * [K9s v0.13.0]( * [K9s v0.9.0]( * [K9s v0.7.0 Features]( * [K9s v0 Demo]( --- ## Documentation Please refer to our [K9s documentation]( site for installation, usage, customization and tips. ## Slack Channel Wanna discuss K9s features with your fellow `K9sers` or simply show your support for this tool? * Channel: [K9ersSlack]( * Invite: [K9slackers Invite]( ## Installation K9s is available on Linux, macOS and Windows platforms. Binaries for Linux, Windows and Mac are available as tarballs in the [release page]( * Via [Homebrew]( for macOS or Linux ```shell brew install derailed/k9s/k9s ``` * Via [MacPorts]( ```shell sudo port install k9s ``` * Via [snap]( for Linux ```shell snap install k9s --devmode ``` * On Arch Linux ```shell pacman -S k9s ``` * On OpenSUSE Linux distribution ```shell zypper install k9s ``` * On FreeBSD ```shell pkg install k9s ``` * Via [Winget]( for Windows ```shell winget install k9s ``` * Via [Scoop]( for Windows ```shell scoop install k9s ``` * Via [Chocolatey]( for Windows ```shell choco install k9s ``` * Via a GO install ```shell # NOTE: The dev version will be in effect! go install github.com/derailed/k9s@latest ``` * Via [Webi]( for Linux and macOS ```shell curl -sS | bash ``` * Via [pkgx]( for Linux and macOS ```shell pkgx k9s ``` * Via [Webi]( for Windows ```shell curl.exe -A MS | powershell ``` * As a [Docker Desktop Extension]( (for the Docker Desktop built in Kubernetes Server) ```shell docker extension install spurin/k9s-dd-extension:latest ``` --- ## Building From Source K9s is currently using GO v1.21.X or above. In order to build K9s from source you must: 1. Clone the repo 2. Build and run the executable ```shell make build && ./execs/k9s ``` --- ## Running with Docker ### Running the official Docker image You can run k9s as a Docker container by mounting your `KUBECONFIG`: ```shell docker run --rm -it -v $KUBECONFIG:/root/.kube/config quay.io/derailed/k9s ``` For default path it would be: ```shell docker run --rm -it -v ~/.kube/config:/root/.kube/config quay.io/derailed/k9s ``` ### Building your own Docker image You can build your own Docker image of k9s from the [Dockerfile](Dockerfile) with the following: ```shell docker build -t k9s-docker:v0.0.1 . ``` You can get the latest stable `kubectl` version and pass it to the `docker build` command with the `--build-arg` option. You can use the `--build-arg` option to pass any valid `kubectl` version (like `v1.18.0` or `v1.19.1`). ```shell KUBECTL_VERSION=$(make kubectl-stable-version 2>/dev/null) docker build --build-arg KUBECTL_VERSION=${KUBECTL_VERSION} -t k9s-docker:0.1 . ``` Run your container: ```shell docker run --rm -it -v ~/.kube/config:/root/.kube/config k9s-docker:0.1 ``` --- ## PreFlight Checks * K9s uses 256 colors terminal mode. On `Nix system make sure TERM is set accordingly. ```shell export TERM=xterm-256color ``` * In order to issue resource edit commands make sure your EDITOR and KUBE_EDITOR env vars are set. ```shell # Kubectl edit command will use this env var. export KUBE_EDITOR=my_fav_editor ``` * K9s prefers recent kubernetes versions ie 1.28+ --- ## K8S Compatibility Matrix | k9s | k8s client | | ------------------ | ---------- | | >= v0.27.0 | 1.26.1 | | v0.26.7 - v0.26.6 | 1.25.3 | | v0.26.5 - v0.26.4 | 1.25.1 | | v0.26.3 - v0.26.1 | 1.24.3 | | v0.26.0 - v0.25.19 | 1.24.2 | | v0.25.18 - v0.25.3 | 1.22.3 | | v0.25.2 - v0.25.0 | 1.22.0 | | <= v0.24 | 1.21.3 | --- ## The Command Line ```shell # List current version k9s version # To get info about K9s runtime (logs, configs, etc..) k9s info # List all available CLI options k9s help # To run K9s in a given namespace k9s -n mycoolns # Start K9s in an existing KubeConfig context k9s --context coolCtx # Start K9s in readonly mode - with all cluster modification commands disabled k9s --readonly ``` ## Logs And Debug Logs Given the nature of the ui k9s does produce logs to a specific location. To view the logs and turn on debug mode, use the following commands: ```shell # Find out where the logs are stored k9s info ``` ```text ____ __.________ | |/ _/ __ \______ | < \____ / ___/ | | \ / /\___ \ |____|__ \ /____//____ > \/ \/ Version: vX.Y.Z Config: /Users/fernand/.config/k9s/config.yaml Logs: /Users/fernand/.local/state/k9s/k9s.log Dumps dir: /Users/fernand/.local/state/k9s/screen-dumps Benchmarks dir: /Users/fernand/.local/state/k9s/benchmarks Skins dir: /Users/fernand/.local/share/k9s/skins Contexts dir: /Users/fernand/.local/share/k9s/clusters Custom views file: /Users/fernand/.local/share/k9s/views.yaml Plugins file: /Users/fernand/.local/share/k9s/plugins.yaml Hotkeys file: /Users/fernand/.local/share/k9s/hotkeys.yaml Alias file: /Users/fernand/.local/share/k9s/aliases.yaml ``` ### View K9s logs ```shell tail -f /Users/fernand/.local/data/k9s/k9s.log ``` ### Start K9s in debug mode ```shell k9s -l debug ``` ### Customize logs destination You can override the default log file destination either with the `--logFile` argument: ```shell k9s --logFile /tmp/k9s.log less /tmp/k9s.log ``` Or through the `K9S_LOGS_DIR` environment variable: ```shell K9S_LOGS_DIR=/var/log k9s less /var/log/k9s.log ``` ## Key Bindings K9s uses aliases to navigate most K8s resources. | Action | Command | Comment | |---------------------------------------------------------------------------------|-------------------------------|------------------------------------------------------------------------| | Show active keyboard mnemonics and help | `?` | | | Show all available resource alias | `ctrl-a` | | | To bail out of K9s | `:q`, `ctrl-c` | | | View a Kubernetes resource using singular/plural or short-name | `:`pod | accepts singular, plural, short-name or alias ie pod or pods | | View a Kubernetes resource in a given namespace | `:`pod ns-x | | | View filtered pods (New v0.30.0!) | `:`pod /fred | View all pods filtered by fred | | View labeled pods (New v0.30.0!) | `:`pod app=fred,env=dev | View all pods with labels matching app=fred and env=dev | | View pods in a given context (New v0.30.0!) | `:`pod @ctx1 | View all pods in context ctx1. Switches out your current k9s context! | | Filter out a resource view given a filter | `/`filter | Regex2 supported ie `fred|blee` to filter resources named fred or blee | | Inverse regex filter | `/`! filter | Keep everything that *doesn't* match. | | Filter resource view by labels | `/`-l label-selector | | | Fuzzy find a resource given a filter | `/`-f filter | | | Bails out of view/command/filter mode | `` | | | Key mapping to describe, view, edit, view logs,... | `d`,`v`, `e`, `l`,... | | | To view and switch to another Kubernetes context (Pod view) | `:`ctx | | | To view and switch directly to another Kubernetes context (Last used view) | `:`ctx context-name | | | To view and switch to another Kubernetes namespace | `:`ns | | | To view all saved resources | `:`screendump or sd | | | To delete a resource (TAB and ENTER to confirm) | `ctrl-d` | | | To kill a resource (no confirmation dialog, equivalent to kubectl delete --now) | `ctrl-k` | | | Launch pulses view | `:`pulses or pu | | | Launch XRay view | `:`xray RESOURCE [NAMESPACE] | RESOURCE can be one of po, svc, dp, rs, sts, ds, NAMESPACE is optional | | Launch Popeye view | `:`popeye or pop | See [popeye](#popeye) | --- ## K9s Configuration K9s keeps its configurations as YAML files inside of a `k9s` directory and the location depends on your operating system. K9s leverages [XDG]( to load its various configurations files. For information on the default locations for your OS please see [this link]( If you are still confused a quick `k9s info` will reveal where k9s is loading its configurations from. Alternatively, you can set `K9S_CONFIG_DIR` to tell K9s the directory location to pull its configurations from. | Unix | macOS | Windows | |-----------------|------------------------------------|-----------------------| | `~/.config/k9s` | `~/Library/Application Support/k9s` | `%LOCALAPPDATA%\k9s` | > NOTE: This is still in flux and will change while in pre-release stage! ```yaml # $XDG_CONFIG_HOME/k9s/config.yaml k9s: # Enable periodic refresh of resource browser windows. Default false liveViewAutoRefresh: false # The path to screen dump. Default: '%temp_dir%/k9s-screens-%username%' (k9s info) screenDumpDir: /tmp/dumps # Represents ui poll intervals. Default 2secs refreshRate: 2 # Number of retries once the connection to the api-server is lost. Default 15. maxConnRetry: 5 # Indicates whether modification commands like delete/kill/edit are disabled. Default is false readOnly: false # Toggles whether k9s should exit when CTRL-C is pressed. When set to true, you will need to exist k9s via the :quit command. Default is false. noExitOnCtrlC: false #UI settings ui: # Enable mouse support. Default false enableMouse: false # Set to true to hide K9s header. Default false headless: false # Set to true to... [TRUNCATED]"
HandBrake,HandBrake/HandBrake,15817,1264,"['C', 'C#', 'Objective-C']","['video-transcoding', 'multi-platform', 'gplv2']","# HandBrake []( []( []( HandBrake is an open-source video transcoder available for Linux, Mac, and Windows, licensed under the [GNU General Public License (GPL) Version 2](LICENSE). HandBrake takes videos you already have and makes new ones that work on your mobile phone, tablet, TV media player, game console, computer, or web browsernearly anything that supports modern video formats. HandBrake works with most common video files and formats, including ones created by consumer and professional video cameras, mobile devices such as phones and tablets, game and computer screen recordings, and DVD and Blu-ray discs. HandBrake leverages tools such as FFmpeg, x264, and x265 to create new MP4 or MKV video files from these *Sources*. For information on downloading, building/installing, and using HandBrake, see the official [HandBrake Documentation]( ## Community Support Visit the [HandBrake Community Forums]( For information on HandBrake's community support channels, please see [Community Support]( Our [community rules]( and [code of conduct]( apply to both our site and GitHub. ## Contributing We welcome most contributions. While it is our goal to allow everyone to contribute, contributions not meeting the project's goals or standards may be rejected. Please read our [guide to contributing]( This will provide you with all the information you need to start contributing to the project. ## Translations We are now accepting translations via [Transifex]( Please read our [Translations Guide]( and follow the instructions if you are interested in joining the translation effort. ## Additional Information [Authors](AUTHORS.markdown) [License](LICENSE) [News](NEWS.markdown) ## Special Thanks and to many others who have contributed! [Thanks](THANKS.markdown)"
unleashed-firmware,DarkFlippers/unleashed-firmware,15422,1313,"['C', 'Python', 'C++']","['jailbreak', 'keeloq', 'rolling-codes', 'alternative-firmware', 'flipper']","### Welcome to the Flipper Zero Unleashed Firmware repo! #### **This firmware is a fork from original (OFW) firmware** [flipperdevices/flipperzero-firmware]( ### Most stable custom firmware focused on new features and improvements of original firmware components, keeping compatibility with original firmware API and Apps ##### This software is for experimental purposes only and is not meant for any illegal activity/purposes. We do not condone illegal activity and strongly encourage keeping transmissions to legal/valid uses allowed by law. Also, this software is made without any support from Flipper Devices and is in no way related to the official team. ## FAQ (frequently asked questions) [Follow this link to find answers to most asked questions]( ## Dev builds (unstable) (built automatically from dev branch) - - ## Releases in Telegram - # What's changed - **Sub-GHz** *lib & hal* - Regional TX restrictions removed - Extra Sub-GHz frequencies added - Frequency range can be extended in settings file (Warning: It can damage Flipper's hardware) - Many rolling code [protocols]( now have the ability to save & send captured signals - FAAC SLH (Spa) & BFT Mitto (keeloq secure with seed) manual creation - External CC1101 module support [(by quen0n)]( - **Sub-GHz** *Main App* - Save last used settings [(by derskythe)]( - New frequency analyzer [(by ClusterM)]( - Press OK in frequency analyzer to use detected frequency in Read modes [(by derskythe)]( - Long press OK button in Sub-GHz Frequency analyzer to switch to Read menu [(by derskythe)]( - New option to use timestamps + protocol name when you saving file, instead of random name or timestamp only - Enable in `Radio Settings -> Protocol Names = ON` - Read mode UI improvements (shows time when signal was received) (by @wosk) - External CC1101 module support (Hardware SPI used) - External CC1101 module amplifier control (or LED control) support (enabled by default) - **Hold right in received signal list to delete selected signal** - **Custom buttons for Keeloq / Alutech AT4N / Nice Flor S / Somfy Telis / Security+ 2.0 / CAME Atomo** - now you can use arrow buttons to send signal with different button code - `Add manually` menu extended with new protocols - FAAC SLH, BFT Mitto / Somfy Telis / Nice Flor S / CAME Atomo, etc.. manual creation with programming new remote into receiver (use button 0xF for BFT Mitto, 0x8 (Prog) on Somfy Telis, (right arrow button for other protocols)) - Debug mode counter increase settings (+1 -> +5, +10, default: +1) - Debug PIN output settings for protocol development - **Sub-GHz apps** *by unleashed team* - Sub-GHz Bruteforce - static code brute-force plugin | - Time delay (between signals) setting (hold Up in main screen(says Up to Save)) + configure repeats in protocols list by pressing right button on selected protocol - Load your own file and select bytes you want to bruteforce or use preconfigured options in protocols list - Sub-GHz Remote - remote control for 5 sub-ghz files | bind one file for each button - use the built-in constructor or make config file by following this [instruction]( - **Infrared** - Recompiled IR TV Universal Remote for ALL buttons - Universal remotes for Projectors, Fans, A/Cs and Audio(soundbars, etc.) -> Also always updated and verified by our team - Infrared -> `RCA` Protocol - Infrared -> External IR modules support (with autodetect by OFW) - **NFC/RFID/iButton** * LFRFID and iButton Fuzzer plugins * Extra Mifare Classic keys in system dict * EMV Protocol + Public data parser (by @Leptopt1los and @wosk) * NFC `Add manually` -> Mifare Classic with custom UID * NFC parsers: Umarsh, Zolotaya Korona, Kazan, Metromoney, Moscow Social Card, Troika (reworked) and [many others]( (by @Leptopt1los and @assasinfil) - **Quality of life & other features** - Customizable Flipper name **Update! Now can be changed in Settings->Desktop** (by @xMasterX and @Willy-JL) - Text Input UI element -> Cursor feature (by @Willy-JL) - Byte Input Mini editor -> **Press UP** multiple times until the nibble editor appears (by @gid9798) - Clock on Desktop -> `Settings -> Desktop -> Show Clock` (by @gid9798) - Battery percentage display with different styles `Settings -> Desktop -> Battery View` - More games in Dummy Mode -> click or hold any of arrow buttons - Lock device with pin(or regular lock if pin not set) by holding UP button on main screen [(by an4tur0r)]( - **BadKB** plugin [(by Willy-JL, ClaraCrazy, XFW contributors)]( - (See in Applications->Tools) - (aka BadUSB via Bluetooth) - BadUSB -> Keyboard layouts [(by rien > dummy-decoy)]( - Custom community plugins and games added + all known working apps can be downloaded in extra pack in every release - Other small fixes and changes throughout - See other changes in readme below Also check the [changelog in releases]( for latest updates! ### Current modified and new Sub-GHz protocols list: Thanks to Official team (to their SubGHz Developer, Skorp) for implementing support (decoder + encoder / or decode only) for these protocols in OFW. Keeloq [Not ALL systems supported for decode or emulation!] - [Supported manufacturers list]( Encoders or emulation support made by @xMasterX: - Nero Radio 57bit (+ 56bit support) - CAME 12bit/24bit encoder fixes (Fixes are now merged in OFW) - Keeloq: Dea Mio, Genius Bravo, GSN, HCS101, AN-Motors, JCM Tech, MHouse, Nice Smilo, DTM Neo, FAAC RC,XT, Mutancode, Normstahl, Beninca + Allmatic, Stilmatic, CAME Space, Aprimatic (model TR and similar), Centurion Nova (thanks Carlos !) Encoders or emulation made by @Eng1n33r(first implementation in Q2 2022) and @xMasterX (current version): - CAME Atomo -> Update! check out new [instructions]( - Nice Flor S -> How to create new remote - [instructions]( - FAAC SLH (Spa) -> Update!!! Check out new [instructions]( - Keeloq: BFT Mitto -> Update! Check out new [instructions]( - Star Line - Security+ v1 & v2 (encoders was made in OFW) Encoders made by @assasinfil and @xMasterX: - Somfy Telis -> How to create new remote - [instructions]( - Somfy Keytis - KingGates Stylo 4k - Alutech AT-4N -> How to create new remote - [instructions]( - Nice ON2E (Nice One) -> How to create new remote - [instructions]( ## Please support development of the project The majority of this project is developed and maintained by me, @xMasterX. Our team is small and the guys are working on this project as much as they can solely based on the enthusiasm they have for this project and the community. - @Leptopt1los - NFC, RFID, Plugins, and many other things - @gid9798 - SubGHz, Plugins, many other things - currently offline :( - @assasinfil - SubGHz protocols, NFC parsers - @Svaarich - UI design and animations - @amec0e - Infrared assets - Community moderators in Telegram, Discord, and Reddit - And of course our GitHub community. Your PRs are a very important part of this firmware and open-source development. The amount of work done on this project is huge and we need your support, no matter how large or small. Even if you just say, ""Thank you Unleashed firmware developers!"" somewhere. Doing so will help us continue our work and will help drive us to make the firmware better every time. Also, regarding our releases, every build has and always will be free and open-source. There will be no paywall releases or closed-source apps within the firmware. As long as I am working on this project it will never happen. You can support us by using links or addresses below: |Service|Remark|Link/Wallet| |-|-|-| |**Patreon**|| |**Boosty**|patreon alternative| |cloudtips|only RU payments accepted| |YooMoney|only RU payments accepted| |USDT|(TRC20)|`TSXcitMSnWXUFqiUfEXrTVpVewXy2cYhrs`| |ETH|(BSC/ERC20-Tokens)|`darkflippers.eth` (or `0xFebF1bBc8229418FF2408C07AF6Afa49152fEc6a`)| |BTC||`bc1q0np836jk9jwr4dd7p6qv66d04vamtqkxrecck9`| |SOL|(Solana/Tokens)|`DSgwouAEgu8iP5yr7EHHDqMNYWZxAqXWsTEeqCAXGLj8`| |DOGE||`D6R6gYgBn5LwTNmPyvAQR6bZ9EtGgFCpvv`| |LTC||`ltc1q3ex4ejkl0xpx3znwrmth4lyuadr5qgv8tmq8z9`| |BCH||`qquxfyzntuqufy2dx0hrfr4sndp0tucvky4sw8qyu3`| |XMR|(Monero)| `41xUz92suUu1u5Mu4qkrcs52gtfpu9rnZRdBpCJ244KRHf6xXSvVFevdf2cnjS7RAeYr5hn9MsEfxKoFDRSctFjG5fv1Mhn`| |TON||`UQCOqcnYkvzOZUV_9bPE_8oTbOrOF03MnF-VcJyjisTZmsxa`| ## Community apps included ### [ Download Extra plugins for Unleashed]( ### [List of Extra pack]( | [List of Base *(Default)* pack]( See full list and sources here: [xMasterX/all-the-plugins]( ### Official Flipper Zero Apps Catalog [web version]( or mobile app # Instructions ## First look at official docs [docs.flipper.net]( ## [How to install](/documentation/HowToInstall.md) - [versions info](/CHANGELOG.md#recommended-update-option---web-updater): `n`,` `,`e`... ## Firmware & Development ### - **Developer Documentation** - [developer.flipper.net]( ### - **[How to build](/documentation/HowToBuild.md#how-to-build-by-yourself) | [Project-structure](#project-structure)** ### - **CLion IDE** - How to setup workspace for flipper firmware development [by Savely Krasovsky]( ### - **""Hello world!""** - plugin tutorial [English by DroomOne ]( | [Russian by Pavel Yakovlev]( ### - [How to write your own app]( Docs by atmanos **outdated API** ## Firmware & main Apps feature ### - System: [How to change Flipper name]( ### - BadUSB: [How to add new keyboard layouts]( ### - Infrared: [How to make captures to add them into Universal IR remotes]( ## **Sub-GHz** ### - [How to use Flipper as new remote (Nice FlorS, BFT Mitto, Somfy Telis, Aprimatic, AN-Motors, etc..)]( ### - External Radio: [How to connect CC1101 module]( ### - Transmission is blocked? [How to extend Sub-GHz frequency range]( ### - [How to add extra Sub-GHz frequencies]( ### - [~~Configure Sub-GHz Remote App~~]( Not recommended, please use embedded configurator ## **Plugins** ### - TOTP (Authenticator): [config description]( ### - Barcode Generator: [How to use]( ### - Multi Converter: [How to use]( ### - WAV Player: [sample files & how to convert]( ### - Sub-GHz playlist: [generator script]( ## **Plugins ... [TRUNCATED]"
cosmopolitan,jart/cosmopolitan,15410,513,"['C', 'POV-Ray SDL', 'Assembly']","['polyglot', 'containers', 'linux', 'openbsd', 'netbsd']","[]( # Cosmopolitan [Cosmopolitan Libc]( makes C a build-once run-anywhere language, like Java, except it doesn't need an interpreter or virtual machine. Instead, it reconfigures stock GCC and Clang to output a POSIX-approved polyglot format that runs natively on Linux + Mac + Windows + FreeBSD + OpenBSD + NetBSD + BIOS with the best possible performance and the tiniest footprint imaginable. ## Background For an introduction to this project, please read the [actually portable executable]( blog post and [cosmopolitan libc]( website. We also have [API documentation]( ## Getting Started You can start by obtaining a release of our `cosmocc` compiler from . ```sh mkdir -p cosmocc cd cosmocc wget unzip cosmocc.zip ``` Here's an example program we can write: ```c // hello.c #include int main() { printf(""hello world\n""); } ``` It can be compiled as follows: ```sh cosmocc -o hello hello.c ./hello ``` The Cosmopolitan Libc runtime links some heavyweight troubleshooting features by default, which are very useful for developers and admins. Here's how you can log system calls: ```sh ./hello --strace ``` Here's how you can get a much more verbose log of function calls: ```sh ./hello --ftrace ``` You can use the Cosmopolitan's toolchain to build conventional open source projects which use autotools. This strategy normally works: ```sh export CC=x86_64-unknown-cosmo-cc export CXX=x86_64-unknown-cosmo-c++ ./configure --prefix=/opt/cosmos/x86_64 make -j make install ``` ## Cosmopolitan Source Builds Cosmopolitan can be compiled from source on any of our supported platforms. The Makefile will download cosmocc automatically. It's recommended that you install a systemwide APE Loader. This command requires `sudo` access to copy the `ape` command to a system folder and register with binfmt_misc on Linux, for even more performance. ```sh ape/apeinstall.sh ``` You can now build the mono repo with any modern version of GNU Make. To make life easier, we've included one in the cosmocc toolchain, which is guaranteed to be compatible and furthermore includes our extensions for doing build system sandboxing. ```sh build/bootstrap/make -j8 o//examples/hello ``` Since the Cosmopolitan repository is very large, you might only want to build one particular thing. Here's an example of a target that can be compiled relatively quickly, which is a simple POSIX test that only depends on core LIBC packages. ```sh rm -rf o//libc o//test build/bootstrap/make o//test/posix/signal_test o//test/posix/signal_test ``` Sometimes it's desirable to build a subset of targets, without having to list out each individual one. For example if you wanted to build and run all the unit tests in the `TEST_POSIX` package, you could say: ```sh build/bootstrap/make o//test/posix ``` Cosmopolitan provides a variety of build modes. For example, if you want really tiny binaries (as small as 12kb in size) then you'd say: ```sh build/bootstrap/make m=tiny ``` You can furthermore cut out the bloat of other operating systems, and have Cosmopolitan become much more similar to Musl Libc. ```sh build/bootstrap/make m=tinylinux ``` For further details, see [//build/config.mk](build/config.mk). ## Debugging To print a log of system calls to stderr: ```sh cosmocc -o hello hello.c ./hello --strace ``` To print a log of function calls to stderr: ```sh cosmocc -o hello hello.c ./hello --ftrace ``` Both strace and ftrace use the unbreakable kprintf() facility, which is able to be sent to a file by setting an environment variable. ```sh export KPRINTF_LOG=log ./hello --strace ``` ## GDB Here's the recommended `~/.gdbinit` config: ```gdb set host-charset UTF-8 set target-charset UTF-8 set target-wide-charset UTF-8 set osabi none set complaints 0 set confirm off set history save on set history filename ~/.gdb_history define asm layout asm layout reg end define src layout src layout reg end src ``` You normally run the `.dbg` file under gdb. If you need to debug the `` file itself, then you can load the debug symbols independently as ```sh gdb foo -ex 'add-symbol-file foo.dbg 0x401000' ``` ## Platform Notes ### Shells If you use zsh and have trouble running APE programs try `sh -c ./prog` or simply upgrade to zsh 5.9+ (since we patched it two years ago). The same is the case for Python `subprocess`, old versions of fish, etc. ### Linux Some Linux systems are configured to launch MZ executables under WINE. Other distros configure their stock installs so that APE programs will print ""run-detectors: unable to find an interpreter"". For example: ```sh jart@ubuntu:~$ wget jart@ubuntu:~$ chmod +x dash jart@ubuntu:~$ ./dash run-detectors: unable to find an interpreter for ./dash ``` You can fix that by registering APE with `binfmt_misc`: ```sh sudo wget -O /usr/bin/ape -m).elf sudo chmod +x /usr/bin/ape sudo sh -c ""echo ':APE:M::MZqFpD::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register"" sudo sh -c ""echo ':APE-jart:M::jartsr::/usr/bin/ape:' >/proc/sys/fs/binfmt_misc/register"" ``` You should be good now. APE will not only work, it'll launch executables 400s faster now too. However if things still didn't work out, it's also possible to disable `binfmt_misc` as follows: ```sh sudo sh -c 'echo -1 > /proc/sys/fs/binfmt_misc/cli' # remove Ubuntu's MZ interpreter sudo sh -c 'echo -1 > /proc/sys/fs/binfmt_misc/status' # remove ALL binfmt_misc entries ``` ### WSL It's normally unsafe to use APE in a WSL environment, because it tries to run MZ executables as WIN32 binaries within the WSL environment. In order to make it safe to use Cosmopolitan software on WSL, run this: ```sh sudo sh -c ""echo -1 > /proc/sys/fs/binfmt_misc/WSLInterop"" ``` ## Discord Chatroom The Cosmopolitan development team collaborates on the Redbean Discord server. You're welcome to join us! ## Support Vector | Platform | Min Version | Circa | | :--- | ---: | ---: | | AMD | K8 Venus | 2005 | | Intel | Core | 2006 | | Linux | 2.6.18 | 2007 | | Windows | 8 [1] | 2012 | | Darwin (macOS) | 23.1.0+ | 2023 | | OpenBSD | 7 | 2021 | | FreeBSD | 13 | 2020 | | NetBSD | 9.2 | 2021 | [1] See our [vista branch]( for a community supported version of Cosmopolitan that works on Windows Vista and Windows 7. ## Special Thanks Funding for this project is crowdsourced using [GitHub Sponsors]( and [Patreon]( Your support is what makes this project possible. Thank you! We'd also like to give special thanks to the following groups and individuals: - [Joe Drumgoole]( - [Rob Figueiredo]( - [Wasmer]( For publicly sponsoring our work at the highest tier."
lvgl,lvgl/lvgl,15258,3004,"['C', 'C++', 'Python']","['embedded', 'gui', 'c', 'microcontroller', 'mcu']","English | | Portugus do Brasil | Light and Versatile Graphics Library Website | Docs | Forum | Demos | Services ## :ledger: Overview **Mature and Well-known** LVGL is the most popular free and open source embedded graphics library to create beautiful UIs for any MCU, MPU and display type. It's supported by industry leading vendors and projects like Arm, STM32, NXP, Espressif, Nuvoton, Arduino, RT-Thread, Zephyr, NuttX, Adafruit and many more. **Feature Rich** It has all the features to create modern and beautiful GUIs: 30+ built-in widgets, a powerful style system, web inspired layout managers, and a typography system supporting many languages. To integrate LVGL into your platform, all you need is at least 32kB RAM and 128 kB Flash, a C compiler, a frame buffer, and at least an 1/10 screen sized buffer for rendering. **Services** Our team is ready to help you with graphics design, UI implementation and consulting services. Contact us if you need some support during the development of your next GUI project. ## :rocket: Features **Free and Portable** - A fully portable C (C++ compatible) library with no external dependencies. - Can be compiled to any MCU or MPU, with any (RT)OS. - Supports monochrome, ePaper, OLED or TFT displays, or even monitors. [Porting Guide]( - Distributed under the MIT license, so you can easily use it in commercial projects too. - Needs only 32kB RAM and 128 kB Flash, a frame buffer, and at least an 1/10 screen sized buffer for rendering. - OS, External memory and GPU are supported but not required. **Widgets, Styles, Layouts and more** - 30+ built-in [Widgets]( Button, Label, Slider, Chart, Keyboard, Meter, Arc, Table and many more. - Flexible [Style system]( with ~100 style properties to customize any part of the widgets in any state. - [Flexbox]( and [Grid]( layouts engines to automatically size and position the widgets in a responsive way. - Texts are rendered with UTF-8 encoding supporting CJK, Thai, Hindi, Arabic, Persian writing systems. - Word wrapping, kerning, text scrolling, sub-pixel rendering, Pinyin-IME Chinese input, Emojis in texts. - Rendering engine supporting animations, anti-aliasing, opacity, smooth scrolling, shadows, image transformation, etc - Supports Mouse, Touchpad, Keypad, Keyboard, External buttons, Encoder [Input devices]( - [Multiple display]( support. **Binding and Build Support** - [Micropython Binding]( exposes LVGL API - [PikaScript Binding]( python on MCU lighter and easier. - No custom build system is used. You can build LVGL as you build the other files of your project. - Support for Make and [CMake]( is included out of the box. - [Develop on PC]( and use the same UI code on embedded hardware. - Convert the C UI code to HTML file with our [Emscripten port]( **Docs, Tools, and Services** - Detailed [Documentation]( with [100+ simple examples]( - [Services]( such as User interface design, Implementation and Consulting to make UI development simpler and faster. ## :heart: Sponsor If LVGL saved you a lot of time and money or you just had fun using it, consider [Supporting its Development]( **How do we spend the donations?** Our goal is to provide financial compensation for people who do the most for LVGL. It means not only the maintainers but anyone who implements a great feature should get a payment from the accumulated money. We use the donations to cover our operational costs like servers and related services. **How to donate?** We use [GitHub Sponsors]( where you can easily send one time or recurring donations. You can also see all of our expenses in a transparent way. **How to get paid for your contribution?** If someone implements or fixes an issue labeled as [Sponsored]( he or she will get a payment for that work. We estimate the required time, complexity and importance of the issue and set a price accordingly. To jump in just comment on a [Sponsored]( issue saying ""Hi, I'd like to deal with it. This is how I'm planning to fix/implement it..."". A work is considered ready when it's approved and merged by a maintainer. After that you can submit and expense at [opencollective.com]( and you will receive the payment in a few days. **Organizations supporting LVGL** []( **Individuals supporting LVGL** []( ## :package: Packages LVGL is available as: - [Arduino library]( - [PlatformIO package]( - [Zephyr library]( - [ESP-IDF(ESP32) component]( - [NXP MCUXpresso component]( - [NuttX library]( - [RT-Thread RTOS]( - CMSIS-Pack - [RIOT OS package]( ## :robot: Examples See some examples of creating widgets, using layouts and applying styles. You will find C and MicroPython code, and links to try out or edit the examples in an online MicroPython editor. For more examples check out the [Examples]( folder. ### Hello world label C code ```c /*Change the active screen's background color*/ lv_obj_set_style_bg_color(lv_screen_active(), lv_color_hex(0x003a57), LV_PART_MAIN); /*Create a white label, set its text and align it to the center*/ lv_obj_t * label = lv_label_create(lv_screen_active()); lv_label_set_text(label, ""Hello world""); lv_obj_set_style_text_color(label, lv_color_hex(0xffffff), LV_PART_MAIN); lv_obj_align(label, LV_ALIGN_CENTER, 0, 0); ``` MicroPython code | Online Simulator ```python # Change the active screen's background color scr = lv.screen_active() scr.set_style_bg_color(lv.color_hex(0x003a57), lv.PART.MAIN) # Create a white label, set its text and align it to the center label = lv.label(lv.screen_active()) label.set_text(""Hello world"") label.set_style_text_color(lv.color_hex(0xffffff), lv.PART.MAIN) label.align(lv.ALIGN.CENTER, 0, 0) ``` ### Button with Click Event C code ```c lv_obj_t * button = lv_button_create(lv_screen_active()); /*Add a button to the current screen*/ lv_obj_center(button); /*Set its position*/ lv_obj_set_size(button, 100, 50); /*Set its size*/ lv_obj_add_event_cb(button, button_event_cb, LV_EVENT_CLICKED, NULL); /*Assign a callback to the button*/ lv_obj_t * label = lv_label_create(button); /*Add a label to the button*/ lv_label_set_text(label, ""Button""); /*Set the labels text*/ lv_obj_center(label); /*Align the label to the center*/ ... void button_event_cb(lv_event_t * e) { printf(""Clicked\n""); } ``` MicroPython code | Online Simulator ```python def button_event_cb(e): print(""Clicked"") # Create a Button and a Label button = lv.button(lv.screen_active()) button.center() button.set_size(100, 50) button.add_event_cb(button_event_cb, lv.EVENT.CLICKED, None) label = lv.label(button) label.set_text(""Button"") label.center() ``` ### Checkboxes with Layout C code ```c lv_obj_set_flex_flow(lv_screen_active(), LV_FLEX_FLOW_COLUMN); lv_obj_set_flex_align(lv_screen_active(), LV_FLEX_ALIGN_CENTER, LV_FLEX_ALIGN_START, LV_FLEX_ALIGN_CENTER); lv_obj_t * cb; cb = lv_checkbox_create(lv_screen_active()); lv_checkbox_set_text(cb, ""Apple""); lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL); cb = lv_checkbox_create(lv_screen_active()); lv_checkbox_set_text(cb, ""Banana""); lv_obj_add_state(cb, LV_STATE_CHECKED); lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL); cb = lv_checkbox_create(lv_screen_active()); lv_checkbox_set_text(cb, ""Lemon""); lv_obj_add_state(cb, LV_STATE_DISABLED); lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL); cb = lv_checkbox_create(lv_screen_active()); lv_obj_add_state(cb, LV_STATE_CHECKED | LV_STATE_DISABLED); lv_checkbox_set_text(cb, ""Melon\nand a new line""); lv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL); ``` MicroPython code | Online Simulator ```python def event_handler(e): code = e.get_code() obj = e.get_target_obj() if code == lv.EVENT.VALUE_CHANGED: txt = obj.get_text() if obj.get_state() & lv.STATE.CHECKED: state = ""Checked"" else: state = ""Unchecked"" print(txt + "":"" + state) lv.screen_active().set_flex_flow(lv.FLEX_FLOW.COLUMN) lv.screen_active().set_flex_align(lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.CENTER) cb = lv.checkbox(lv.screen_active()) cb.set_text(""Apple"") cb.add_event_cb(event_handler, lv.EVENT.ALL, None) cb = lv.checkbox(lv.screen_active()) cb.set_text(""Banana"") cb.add_state(lv.STATE.CHECKED) cb.add_event_cb(event_handler, lv.EVENT.ALL, None) cb = lv.checkbox(lv.screen_active()) cb.set_text(""Lemon"") cb.add_state(lv.STATE.DISABLED) cb.add_event_cb(event_handler, lv.EVENT.ALL, None) cb = lv.checkbox(lv.screen_active()) cb.add_state(lv.STATE.CHECKED | lv.STATE.DISABLED) cb.set_text(""Melon"") cb.add_event_cb(event_handler, lv.EVENT.ALL, None) ``` ### Styling a Slider C code ```c lv_obj_t * slider = lv_slider_create(lv_screen_active()); lv_slider_set_value(slider, 70, LV_ANIM_OFF); lv_obj_set_size(slider, 300, 20); lv_obj_center(slider); /*Add local styles to MAIN part (background rectangle)*/ lv_obj_set_style_bg_color(slider, lv_color_hex(0x0F1215), LV_PART_MAIN); lv_obj_set_style_bg_opa(slider, 255, LV_PART_MAIN); lv_obj_set_style_border_color(slider, lv_color_hex(0x333943), LV_PART_MAIN); lv_obj_set_style_border_width(slider, 5, LV_PART_MAIN); lv_obj_set_style_pad_all(slider, 5, LV_PART_MAIN); /*Create a reusable style sheet for the INDICATOR part*/ static lv_style_t style_indicator; lv_style_init(&style_indicator); lv_style_set_bg_color(&style_indicator, lv_color_hex(0x37B9F5)); lv_style_set_bg_grad_color(&style_indicator, lv_color_hex(0x1464F0)); lv_style_set_bg_grad_dir(&style_indicator, LV_GRAD_DIR_HOR); lv_style_set_shadow_color(&style_indicator, lv_color_hex(0x37B9F5)); lv_style_set_shadow_width(&style_indicator, 15); lv_style_set_shadow_spread(&style_indicator, 5); 4 /*Add the style sheet to the slider's INDICATOR part*/ lv_obj_add_style(slider, &style_indicator, LV_PART_INDICATOR); /*Add the same style to the KNOB part too and locally overwrite some properties*/ lv_obj_add_style(slider, &style_indicator, LV_PART_KNOB); lv_obj_set_style_outline_color(slider, lv_color_hex(0x0096FF), LV_PART_KNOB); lv_obj_set_style_outline_width(slider, 3, LV_PART_KNOB); lv_obj_set_style_outline_pad(slider, -5, LV_PART_KNOB); lv_obj_set_style_shadow_spread(slider,... [TRUNCATED]"
Mailspring,Foundry376/Mailspring,15165,886,"['C', 'TypeScript', 'JavaScript']","['email', 'mail', 'electron', 'osx', 'windows']","# Mailspring []( []( **Mailspring is a new version of Nylas Mail maintained by one of the original authors. It's faster, leaner, and shipping today!** It replaces the JavaScript sync code in Nylas Mail with a new C++ sync engine based on [Mailcore2]( It uses roughly half the RAM and CPU of Nylas Mail and idles with almost zero ""CPU Wakes"", which translates to great battery life. It also has an entirely revamped composer and other great new features. Mailspring's UI is open source (GPLv3) and written in TypeScript with [Electron]( and [React]( - it's built on a plugin architecture and was designed to be easy to extend. Check out [CONTRIBUTING.md]( to get started! Mailspring's sync engine is spawned by the Electron application and runs locally on your computer. [It is open source (GPLv3) and written in C++ and C.]( For convenience, however, when you set up your development environment, Mailspring uses the latest version of the sync engine we've shipped for your platform so you don't need to pull sources or install its compile-time dependencies. ## Features Mailspring comes packed with powerful features like Unified Inbox, Snooze, Send Later, Mail Rules, Templates and more. Mailspring Pro, which you can unlock with a monthly subscription, adds even more features for people who send a ton of email: link tracking, read receipts, mailbox analytics, contact and company profiles. **All of these features run in the client - Mailspring does not send your email credentials to the cloud.** For a full list of features, check out [getmailspring.com]( ## Download Mailspring You can download compiled versions of Mailspring for Windows, Mac OS X, and Linux (deb, rpm and snap) from [ ## Getting Help You can find community-based help and discussion with other Mailspring users on our [Discourse community]( ## Contributing Mailspring is entirely open-source. Pull requests and contributions are welcome! There are three ways to contribute: building a plugin, building a theme, and submitting pull requests to the project itself. When you're getting started, you may want to join our [Discourse]( so you can ask questions and learn from other people doing development. [](CODE_OF_CONDUCT.md) ### Running Mailspring from Source To install all dependencies and run Mailspring from its source code, run the following commands from the root directory of the Mailspring repository: ``` export npm_config_arch=x64 # If you are on an M1 / Apple Silicon Mac npm install npm start ``` You can attach command line parameters by separating them using a double hyphen: ``` npm start -- --help ``` ### Building Mailspring To build Mailspring, you need to run the following command from the root directory of the Mailspring repository: ``` npm run-script build ``` ### Building A Plugin Plugins lie at the heart of Mailspring and give it its powerful features. Building your own plugins allows you to integrate the app with other tools, experiment with new workflows, and more. Follow the [Getting Started guide]( to write your first plugin in five minutes. - To create your own theme, check out the [Mailspring-Theme-Starter]( - To create your own plugin, check out the [Mailspring-Plugin-Starter]( A plugin ""store"" like the Chrome Web Store is coming soon, and will make it easy for other users to discover plugins you create. (Right now, users need to ""sideload"" the plugins into the app by downloading them and copying them into place.) You can share and browse Mailspring Plugins, and discuss plugin development with other developers, on our [Discourse]( ### Building a Theme The Mailspring user interface is styled using CSS, which means it's easy to modify and extend. Mailspring comes stock with a few beautiful themes, and there are many more which have been built by community developers. To start creating a theme, [clone the theme starter]( If you are updating an existing Nylas theme for Mailspring here is a [step by step tutorial]( Notice: as part of the update process you will probably need to [import mailspring base variables]( You can share and browse Mailspring Themes, and discuss theme development with other developers, on our [Discourse]( ### Localizing / Translating Mailspring (1.5.0 and above) supports localization. If you're a fluent speaker of another language, we'd love your help improving translations. Check out the [LOCALIZATION]( guide for more information. You can discuss localization and translation with other developers on our [Discourse]( ### Contributing to Mailspring Core Pull requests are always welcome - check out [CONTRIBUTING]( for more information about setting up the development environment, running tests locally, and submitting pull requests."
blurhash,woltapp/blurhash,15125,335,"['C', 'Swift', 'SCSS']",[],"# [BlurHash]( BlurHash is a compact representation of a placeholder for an image. ## Why would you want this? Does your designer cry every time you load their beautifully designed screen, and it is full of empty boxes because all the images have not loaded yet? Does your database engineer cry when you want to solve this by trying to cram little thumbnail images into your data to show as placeholders? BlurHash will solve your problems! How? Like this: You can also see nice examples and try it out yourself at [blurha.sh]( ## How does it work? In short, BlurHash takes an image, and gives you a short string (only 20-30 characters!) that represents the placeholder for this image. You do this on the backend of your service, and store the string along with the image. When you send data to your client, you send both the URL to the image, and the BlurHash string. Your client then takes the string, and decodes it into an image that it shows while the real image is loading over the network. The string is short enough that it comfortably fits into whatever data format you use. For instance, it can easily be added as a field in a JSON object. In summary: Want to know all the gory technical details? Read the [algorithm description](Algorithm.md). Implementing the algorithm is actually quite easy! Implementations are short and easily ported to your favourite language or platform. ## Implementations So far, we have created these implementations: * [C](C) - An encoder implementation in portable C code. * [Swift](Swift) - Encoder and decoder implementations, and a larger library offering advanced features. There is also an example app to play around with the algorithm. * [Kotlin](Kotlin) - A decoder implementation for Android. * [TypeScript](TypeScript) - Encoder and decoder implementations, and an example page to test. * [Python]( - Integration of the C encoder code into Python. These cover our use cases, but could probably use polishing, extending and improving. There are also these third party implementations that we know of: * [Pure Python]( - Implementation of both the encoder and decoder in pure Python. * [One version in Go]( and [another version in Go]( * [PHP]( - Encoder and decoder implementations in pure PHP. * [Java]( - Encoder implementation in Java. * [Clojure]( - Encoder and decoder implementations in Clojure. * [Nim]( - Encoder and decoder implementation in pure Nim. * [Rust and WebAssembly]( - Encoder and decoder implementations in Rust. Distributed as both native Rust and WebAssembly packages. * [Ruby]( - Encoder implementation in Ruby. * [Crystal]( - Encoder implementation in pure Crystal. * [Elm]( - Encoder and decoder in Elm. * [Dart]( - Encoder and decoder implementation in C into Dart using dart-ffi. * [Pure Dart]( - Encoder and decoder implementation in pure Dart. * [.NET]( - Encoder and decoder in C#. * [JavaScript]( - Encoder and decoder implementation in pure JavaScript. * [.NET]( - Encoder implementation in C#. * [Haskell]( - Encoder and decoder in pure Haskell. * [Scala]( - Encoder and decoder in Scala. * [Elixir]( - Encoder implementation in pure Elixir. * [ReScript]( - Encoder and decoder implementation in ReScript (BuckleScript). * [JavaScript]( - Tiny optimized decoder implementation JS. * [Xojo]( - Encoder and decoder implementation in pure Xojo. * [React Native]( - UI Component for React Native. (Decoder in Swift and Kotlin) * [Zig]( - Encoder implementation in Zig. * [Titanium SDK]( - Decoder for Titanium SDK (Android) * [BQN]( - Encoder, decoder and terminal viewer in pure BQN. * [Jetpack Compose]( - Decoder Jetpack Compose implementation * [C++]( - Encoder and decoder in C++. * [Kotlin Multiplatform]( - Encoding & decoding for Android, iOS & JVM * [OCaml]( - Encoder implementation in OCaml. Can't find the language you're looking for? Try your luck with the GitHub search. For example, here are the search results for [repos which have ""blurhash"" in their name]( Perhaps you'd like to help extend this list? Which brings us to... ## Contributing We'd love contributions! The algorithm is [very simple](Algorithm.md) - less than two hundred lines of code - and can easily be ported to your platform of choice. And having support for more platforms would be wonderful! So, Java decoder? Golang encoder? Haskell? Rust? We want them all! We will also try to tag any issues on our [issue tracker]( that we'd love help with, so if you just want to dip in, go have a look. You can file a pull request with us, or you can start your own repo and project if you want to run everything yourself, we don't mind. If you do want to contribute to this project, we have a [code of conduct](CodeOfConduct.md). ## Users Who uses BlurHash? Here are some projects we know about: * [Wolt]( - We are of course using it ourselves. BlurHashes are used in the mobile clients on iOS and Android, as well as on the web, as placeholders during image loading. * [Mastodon]( - The Mastodon decentralised social media network uses BlurHashes both as loading placeholders, as well as for hiding media marked as sensitive. * [Signal]( - Signal Private Messenger uses Blurhashes as placeholders before photo & video messages are downloaded in chat conversations. * [Jellyfin]( - Jellyfin the free software media system uses Blurhashes as placeholders for images of movies and TV shows when they are being downloaded. ## Good Questions ### How fast is encoding? Decoding? These implementations are not very optimised. Running them on very large images can be a bit slow. The performance of the encoder and decoder are about the same for the same input or output size, so decoding very large placeholders, especially on your UI thread, can also be a bit slow. However! The trick to using the algorithm efficiently is to not run it on full-sized data. The fine detail of an image is all thrown away, so you should scale your images down before running BlurHash on them. If you are creating thumbnails, run BlurHash on those instead of the full images. Similarly, when displaying the placeholders, very small images work very well when scaled up. We usually decode placeholders that are 32 or even 20 pixels wide, and then let the UI layer scale them up, which is indistinguishable from decoding them at full size. ### How do I pick the number of X and Y components? It depends a bit on taste. The more components you pick, the more information is retained in the placeholder, but the longer the BlurHash string will be. Also, it doesn't always look good with too many components. We usually go with 4 by 3, which seems to strike a nice balance. However, you should adjust the number of components depending on the aspect ratio of your images. For instance, very wide images should have more X components and fewer Y components. The Swift example project contains a test app where you can play around with the parameters and see the results. ### What is the `punch` parameter in some of these implementations? It is a parameter that adjusts the contrast on the decoded image. 1 means normal, smaller values will make the effect more subtle, and larger values will make it stronger. This is basically a design parameter, which lets you adjust the look. Technically, what it does is scale the AC components up or down. ### Is this only useful as an image loading placeholder? Well, that is what it was designed for originally, but it turns out to be useful for a few other things: * Masking images without having to use expensive blurs - [Mastodon]( uses it for this. * The data representation makes it quite easy to extract colour averages of the image for different areas. You can easily find approximations of things like the average colour of the top edge of the image, or of a corner. There is some code in the Swift BlurHashKit implementation to experiment with this. Also, the average colour of the entire image is just the DC component and can be decoded even without implementing any of the more complicated DCT stuff. * We have been meaning to try to implement tinted drop shadows for UI elements by using the BlurHash and extending the borders. Haven't actually had time to implement this yet though. ### Why base 83? First, 83 seems to be about how many low-ASCII characters you can find that are safe for use in all of JSON, HTML and shells. Secondly, 83 * 83 is very close to, and a little more than, 19 * 19 * 19, making it ideal for encoding three AC components in two characters. ### What about using the full Unicode character set to get a more efficient encoding? We haven't looked into how much overhead UTF-8 encoding would introduce versus base 83 in single-byte characters, but the encoding and decoding would probably be a lot more complicated, so in the spirit of minimalism BlurHash uses the simpler option. It might also be awkward to copy-paste, depending on OS capabilities. If you think it can be done and is worth it, though, do make your own version and show us! We'd love to see it in action. ### What about other basis representations than DCT? This is something we'd *love* to try. The DCT looks quite ugly when you increase the number of components, probably because the shape of the basis functions becomes too visible. Using a different basis with more aesthetically pleasing shape might be a big win. However, we have not managed come up with one. Some experimenting with a [Fourier-Bessel base]( targeted at images that are going to be cropped into circles has been done, but without much success. Here again we'd love to see what you can come up with! ## Authors * [Dag gren]( - Original algorithm design, Swift and C implementations * [Mykhailo Shchurov]( - Kotlin decoder implementation * [Hang Duy Khiem]( - Android demo app * [Olli Mahlamki]( - TypeScript decoder and encoder implementations * [Atte Lautanala]( - Python integration * [Lorenz Diener]( - Pure Python implementation * [Boris Momilovi]( - Pure PHP implementation * [Hendrik Schnepel]( - Java encoder implementation * [Tuomo Virolainen]( - Clo... [TRUNCATED]"
postgres,postgres/postgres,14932,4351,"['C', 'PLpgSQL', 'Perl']",[],"PostgreSQL Database Management System ===================================== This directory contains the source code distribution of the PostgreSQL database management system. PostgreSQL is an advanced object-relational database management system that supports an extended subset of the SQL standard, including transactions, foreign keys, subqueries, triggers, user-defined types and functions. This distribution also contains C language bindings. Copyright and license information can be found in the file COPYRIGHT. General documentation about this version of PostgreSQL can be found at . In particular, information about building PostgreSQL from the source code can be found at . The latest version of this software, and related software, may be obtained at . For more information look at our web site located at ."
kcp,skywind3000/kcp,14859,2460,"['C', 'C++', 'CMake']","['kcp', 'udp', 'arq', 'quic', 'protocol']","KCP - A Fast and Reliable ARQ Protocol ====================================== [![Powered][3]][1] [![Build Status][4]][5] [](#backers) [](#sponsors) [1]: [2]: [3]: [4]: [5]: [README in English]( # KCP TCP 10%-20% 30%-40%UDP callback KCP ikcp.h, ikcp.cP2P UDPARQ # TCPKB KCP10%-20% TCP30%-40%TCPKCPKCP #### RTOvs TCPRTOx2RTOx8KCPx2x1.51.5 #### vs TCPKCP #### 1,2,3,4,5ACK: 1, 3, 4, 5ACK3KCP21ACK42222 #### ACK vs ACK TCPACKNODELAY RTTKCPACK #### UNA vs ACK+UNA ARQUNATCPACKUNAACK KCP ACKUNA #### KCPTCPBT # [vcpkg]( git clone cd vcpkg ./bootstrap-vcpkg.sh ./vcpkg integrate install ./vcpkg install kcp vcpkgkcpMicrosoftvcpkg[issuePR]( # 1. KCP ```cpp // kcpconvtcp conv // convuser ikcpcb *kcp = ikcp_create(conv, user); ``` 2. ```cpp // KCPKCP // buf/len // user kcp KCP int udp_output(const char *buf, int len, ikcpcb *kcp, void *user) { .... } // kcp->output = udp_output; ``` 3. update ```cpp // ikcp_update kcp // 10ms ikcp_check update ikcp_update(kcp, millisec); ``` 4. ```cpp // UDP ikcp_input(kcp, received_udp_packet, received_udp_size); ``` / KCP ikcp_send ikcp_recv(kcp, ptr, size) # ARQ 1. ```cpp int ikcp_nodelay(ikcpcb *kcp, int nodelay, int interval, int resend, int nc) ``` - nodelay nodelay01 - interval interval 10ms 20ms - resend 022ACK - nc 01 - ikcp_nodelay(kcp, 0, 40, 0, 0); - ikcp_nodelay(kcp, 1, 10, 2, 1); 2. ```cpp int ikcp_wndsize(ikcpcb *kcp, int sndwnd, int rcvwnd); ``` 32. TCP SND_BUF RCV_BUF SND/RCV_BUF 3. MTU mtu1400ikcp_setmtu 4. RTO TCP KCP RTO RTORTO40ms RTO100ms100ms30ms ```cpp kcp->rx_minrto = 10; ``` # KCP KCP 3500 TCP - [Wiki Home]( - [KCP ]( - [TCP]( - []( - []( - []( # - [kcptun]( kcp-go() ssh -D shadowsocks - [dog-tunnel]( GO KCP GO KCP - [v2ray]( Shadowsocks 1.17 kcpUDP - [HP-Socket]( HP-Socket - [frp]( - [asio-kcp]( KCP UDP UDPKCP - [kcp-java]( Java KCP - [kcp-netty]( kcpJavanetty - [java-kcp]( JAVAKCP,netty(fec) - [csharp-kcp]( csharpKCP,dotNetty(fec) - [kcp-cpp]( KCP WindowsMacOSLinuxC++ - [kcp-perl]( kcpPerlPerl-Like - [kcp-go]( kcp GO UDP - [kcp-csharp]( kcp csharpkcp-go - [kcp-csharp]( Kcp csharpallocgc - [kcp2k]( Line-by-line translation to C#, with optional Server/Client on top. - [kcp-rs]( KCP rust - [kcp-rust]( KCP rust - [tokio-kcp]( tokio kcp - [kcp-rust-native]( kcp bindings - [lua-kcp]( KCP Lua Lua - [node-kcp]( node-js KCP - [nysocks]( libuv[node-addon]( - [shadowsocks-android]( Shadowsocks for android kcptun kcp shadowsocks - [kcpuv]( libuvkcpuv Demo - [Lantern]( VPNGithub 50000 kcpgo - [rpcx]( RPC 1000+ kcpgo RPC - [xkcptun]( ckcptun[OpenWrt]( [LEDE]( - [et-frame]( C#(unity3d)C#kcp - [yasio]( socket, APIKCP/TCP/UDP, : [benchmark-pump]( - [gouxp]( GoKCPFEC - [skcp]( libev - [pykcp]( Python KCP # - []( KCP - [SpatialOS]( BigWorld KCP - []( KCP - [CC]( CC kcp - [BOBO]( BOBO kcp - [UU]( UU KCP/KCPTUN - []( GRTN KCP KCP - []( KCP - []( K17 Google Play KCP - []( MOBA KCP KCP # KCP/TCP 3G/4G10%wifi/3g/4g [asio-kcp]( [zhangyuan]( KCP enet, udt - ASIO-KCP **has good performace in wifi and phone network(3G, 4G)**. - The kcp is the **first choice for realtime pvp game**. - The lag is less than 1 second when network lag happen. **3 times better than enet** when lag happen. - The enet is a good choice if your game allow 2 second lag. - **UDT is a bad idea**. It always sink into badly situation of more than serval seconds lag. And the recovery is not expected. - enet has the problem of lack of doc. And it has lots of functions that you may intrest. - kcp's doc is chinese. Good thing is the function detail which is writen in code is english. And you can use asio_kcp which is a good wrap. - The kcp is a simple thing. You will write more code if you want more feature. - UDT has a perfect doc. UDT may has more bug than others as I feeling. []( []( [SpatialOS]( KCP TCP/RakNet 60 Hz 50 - [Kcp a new low latency secure network stack]( # raknet/enet KCP reed solomon FEC RC4/Salsa20 UDP For more information, please see the [Success Stories]( # (skywind3000) [twitter]( [zhihu]( VGA Michael Abrash CPU 2007 UDP BSD Lite 4.4 TCP P2P KCP 2011 Kcptun xtaci # KCP KCP364933586QQKCP Gitter blog: ## Contributors This project exists thanks to all the people who contribute."
BlackHole,ExistentialAudio/BlackHole,14251,560,"['C', 'Shell', 'HTML']","['audio', 'driver', 'macos', 'loopback', 'virtual-audio-cable']","# BlackHole: Audio Loopback Driver []( [](LICENSE) []( []( BlackHole is a modern macOS virtual audio loopback driver that allows applications to pass audio to other applications with zero additional latency. ### [Download Installer]( ### [Join the Discord Server]( ## Funding Sponsor: ## Table of Contents - [Features](#features) - [Installation Instructions](#installation-instructions) - [Uninstallation Instructions](#uninstallation-instructions) - [User Guides](#user-guides) - [Developer Guides](#developer-guides) - [Feature Requests](#feature-requests) - [FAQ](#faq) - [Wiki]( ## Features - Builds 2, 16, 64, 128, and 256 audio channels versions - Customizable channel count, latency, hidden devices - Customizable mirror device to allow for a hidden input or output - Supports 8kHz, 16kHz, 44.1kHz, 48kHz, 88.2kHz, 96kHz, 176.4kHz, 192kHz, 352.8kHz, 384kHz, 705.6kHz and 768kHz sample rates - Zero additional driver latency - Compatible with macOS 10.10 Yosemite and newer - Builds for Intel and Apple Silicon - No kernel extensions or modifications to system security necessary ## Installation Instructions ### Option 1: Download Installer 1. [Download the latest installer]( 2. Close all running audio applications 3. Open and install package ### Option 2: Install via Homebrew - 2ch: `brew install blackhole-2ch` - 16ch: `brew install blackhole-16ch` - 64ch: `brew install blackhole-64ch` ## Uninstallation Instructions ### Option 1: Use Uninstaller - [Download BlackHole 2ch Uninstaller]( - [Download BlackHole 16ch Uninstaller]( - [Download BlackHole 64ch Uninstaller]( ### Option 2: Manually Uninstall 1. Delete the BlackHole driver with the terminal command: `rm -R /Library/Audio/Plug-Ins/HAL/BlackHoleXch.driver` Be sure to replace `X` with either `2`, `16`, or `64`. Note that the directory is the root `/Library` not `/Users/user/Library`. 2. Restart CoreAudio with the terminal command: `sudo launchctl kickstart -kp system/com.apple.audio.coreaudiod` For more specific details [visit the Wiki]( ## User Guides ### Logic Pro X - [Logic Pro X to FaceTime]( - [Logic Pro X to Google Meet]( - [Logic Pro X to Skype]( - [Logic Pro X to Zoom]( ### GarageBand - [GarageBand to FaceTime]( - [GarageBand to Google Meet]( - [GarageBand to Skype]( - [GarageBand to Zoom]( ### Reaper - [Reaper to Zoom]( by Noah Liebman ### Record System Audio 1. [Setup Multi-Output Device]( 2. In `Audio MIDI Setup` `Audio Devices` right-click on the newly created Multi-Output and select ""Use This Device For Sound Output"" 3. Open digital audio workstation (DAW) such as GarageBand and set input device to ""BlackHole"" 4. Set track to input from channel 1-2 5. Play audio from another application and monitor or record in your DAW ### Route Audio Between Applications 1. Set output driver to ""BlackHole"" in sending application 2. Output audio to any channel 3. Open receiving application and set input device to ""BlackHole"" 4. Input audio from the corresponding output channels ## Developer Guides ### A license is required for all non-GPLv3 projects Please support our hard work and continued development. To request a license [contact Existential Audio](mailto:devinroth@existential.audio). ### Build & Install After building, to install BlackHole: 1. Copy or move the built `BlackHoleXch.driver` bundle to `/Library/Audio/Plug-Ins/HAL` 2. Restart CoreAudio using `sudo launchctl kickstart -kp system/com.apple.audio.coreaudiod` ### Customizing BlackHole The following pre-compiler constants may be used to easily customize a build of BlackHole. ``` kDriver_Name kPlugIn_BundleID kPlugIn_Icon kDevice_Name kDevice_IsHidden kDevice_HasInput kDevice_HasOutput kDevice2_Name kDevice2_IsHidden kDevice2_HasInput kDevice2_HasOutput kLatency_Frame_Size kNumber_Of_Channels kSampleRates ``` They can be specified at build time with `xcodebuild` using `GCC_PREPROCESSOR_DEFINITIONS`. Example: ```bash xcodebuild \ -project BlackHole.xcodeproj \ GCC_PREPROCESSOR_DEFINITIONS='$GCC_PREPROCESSOR_DEFINITIONS kSomeConstant=value' ``` Be sure to escape any quotation marks when using strings. ### Renaming BlackHole To customize BlackHole it is required to change the following constants. - `kDriver_Name` - `kPlugIn_BundleID` (note that this must match the target bundleID) - `kPlugIn_Icon` These can specified as pre-compiler constants using ```xcodebuild```. ```bash driverName=""BlackHole"" bundleID=""audio.existential.BlackHole"" icon=""BlackHole.icns"" xcodebuild \ -project BlackHole.xcodeproj \ -configuration Release \ PRODUCT_BUNDLE_IDENTIFIER=$bundleID \ GCC_PREPROCESSOR_DEFINITIONS='$GCC_PREPROCESSOR_DEFINITIONS kDriver_Name=\""'$driverName'\"" kPlugIn_BundleID=\""'$bundleID'\"" kPlugIn_Icon=\""'$icon'\""' ``` ### Customizing Channels, Latency, and Sample Rates `kNumber_Of_Channels` is used to set the number of channels. Be careful when specifying high channel counts. Although BlackHole is designed to be extremely efficient at higher channel counts it's possible that your computer might not be able to keep up. Sample rates play a roll as well. Don't use high sample rates with a high number of channels. Some applications don't know how to handle high channel counts. Proceed with caution. `kLatency_Frame_Size` is how much time in frames that the driver has to process incoming and outgoing audio. It can be used to delay the audio inside of BlackHole up to a maximum of 65536 frames. This may be helpful if using BlackHole with a high channel count. `kSampleRates` set the sample rate or sample rates of the audio device. If using multiple sample rates separate each with a comma (`,`). For example: `kSampleRates='44100,48000'`. ### Mirror Device By default BlackHole has a hidden mirrored audio device. The devices may be customized using the following constants. ``` // Original Device kDevice_IsHidden kDevice_HasInput kDevice_HasOutput // Mirrored Device kDevice2_IsHidden kDevice2_HasInput kDevice2_HasOutput ``` When all are set to true a 2nd BlackHole will show up that works exactly the same. The inputs and outputs are mirrored so the outputs from both devices go to the inputs of both devices. This is useful if you need a separate device for input and output. Example ``` // Original Device kDevice_IsHidden=false kDevice_HasInput=true kDevice_HasOutput=false // Mirrored Device kDevice2_IsHidden=false kDevice2_HasInput=false kDevice2_HasOutput=true ``` In this situation we have two BlackHole devices. One will have inputs only and the other will have outputs only. One way to use this in projects is to hide the mirrored device and use it behind the scenes. That way the user will see an input only device while routing audio through to the output behind them scenes. Hidden audio devices can be accessed using `kAudioHardwarePropertyTranslateUIDToDevice`. ### Continuous Integration / Continuous Deployment BlackHole can be integrated into your CI/CD. Take a look at the [create_installer.sh]( shell script to see how the installer is built, signed and notarized. ## Feature Requests If you are interested in any of the following features please leave a comment in the linked issue. To request a features not listed please create a new issue. - [Sync Clock with other Audio Devices]( in development see v0.3.0 - [Output Blackhole to other Audio Device]( - [Add Support for AU Plug-ins]( - [Inter-channel routing]( - [Record Directly to File]( - [Configuration Options Menu]( - [Support for Additional Bit Depths]( ## FAQ ### Why isn't BlackHole showing up in the Applications folder? BlackHole is a virtual audio loopback driver. It only shows up in `Audio MIDI Setup`, `Sound Preferences`, or other audio applications. ### How can I listen to the audio and use BlackHole at the same time? See [Setup a Multi-Output Device]( ### What bit depth does BlackHole use, and can I change it? BlackHole uses 32-bit float bit depth since macOS Core Audio natively uses 32-bit at the system level. This provides the broadest compatibility and greatest audio headroom. This format is lossless for up to 24-bit integer. All applications should be able to playback and record audio, and do not require adjusting bit depth at the BlackHole driver level. ### How can I change the volume of a Multi-Output device? Unfortunately macOS does not support changing the volume of a Multi-Output device but you can set the volume of individual devices in Audio MIDI Setup. ### Why is nothing playing through BlackHole? - Check `System Preferences` `Security & Privacy` `Privacy` `Microphone` to make sure your digital audio workstation (DAW) application has microphone access. - Check that the volume is all the way up on BlackHole input and output in ``Audio MIDI Setup``. - If you are using a multi-output device, due to issues with macOS the Built-in Output must be enabled and listed as the top device in the Multi-Output. [See here for details]( ### Why is audio glitching after X minutes when using a multi-output or an aggregate? - You need to enable drift correction for all devices except the Clock Source also known as Master Device or Primary Device. ### Why is the Installer failing? - Certain versions of macOS have a known issue where install packages may fail to install when the install package is located in certain folders. If you downloaded the .pkg file to your Downloads folder, try moving it to the Desktop and open the .pkg again (or vice-versa). ### What Apps Don't Work with Multi-Outputs? Unfortunately multi-outputs can be buggy and some apps won't work with them at all. Here is a list of known ones. If additional incompatible applications are found, please report them by opening an [issue]( - Apple Podcasts - Apple Messages - HDHomeRun ### AirPods with an Aggregate/Multi-Output is not working. The microphone from AirPods runs at a lower sample rate which means it should not be used as the primary/clock device in an Aggregate or Multi-Output device. The solution is to use your built-in speakers (and just mute them) or BlackHole 2ch as the primary/clock device. BlackHole 16c... [TRUNCATED]"
reactos,reactos/reactos,14155,1692,"['C', 'C++', 'Assembly']","['operating-system', 'c', 'kernel', 'os', 'osdev']","--- ## Quick Links [Website]( [Official chat]( [Wiki]( [Forum]( [Community Discord]( [JIRA Bug Tracker]( [ReactOS Git mirror]( [Testman]( ## What is ReactOS? ReactOS is an Open Source effort to develop a quality operating system that is compatible with applications and drivers written for the Microsoft Windows NT family of operating systems (NT4, 2000, XP, 2003, Vista, 7). The ReactOS project, although currently focused on Windows Server 2003 compatibility, is always keeping an eye toward compatibility with Windows Vista and future Windows NT releases. The code of ReactOS is licensed under [GNU GPL 2.0]( ### Product quality warning **ReactOS is currently an Alpha quality operating system.** This means that ReactOS is under heavy development and you have to be ready to encounter some problems. Different things may not work well and it can corrupt the data present on your hard disk. It is HIGHLY recommended to test ReactOS on a virtual machine or on a computer with no sensitive or critical data! ## Building [![rosbewin.badge]][rosbewin.link] [![rosbeunix.badge]][rosbeunix.link] [![coverity.badge]][coverity.link] To build the system it is strongly advised to use the _ReactOS Build Environment (RosBE)._ Up-to-date versions for Windows and for Unix/GNU-Linux are available from our download page at: [""Build Environment""]( Alternatively one can use Microsoft Visual C++ (MSVC) version 2019+. Building with MSVC is covered here: [""Visual Studio or Microsoft Visual C++""]( See [""Building ReactOS""]( article for more details. ### Binaries To build ReactOS you must run the `configure` script in the directory you want to have your build files. Choose `configure.cmd` or `configure.sh` depending on your system. Then run `ninja ` to build a module you want or just `ninja` to build all modules. ### Bootable images To build a bootable CD image run `ninja bootcd` from the build directory. This will create a CD image with a filename `bootcd.iso`. You can always download fresh binary builds of bootable images from the [""Daily builds""]( page. ## Installing By default, ReactOS currently can only be installed on a machine that has a FAT16 or FAT32 partition as the active (bootable) partition. The partition on which ReactOS is to be installed (which may or may not be the bootable partition) must also be formatted as FAT16 or FAT32. ReactOS Setup can format the partitions if needed. Starting with 0.4.10, ReactOS can be installed using the BtrFS file system. But consider this as an experimental feature and thus regressions not triggered on FAT setup may be observed. To install ReactOS from the bootable CD distribution, extract the archive contents. Then burn the CD image, boot from it, and follow the instructions. See [""Installing ReactOS""]( Wiki page or [INSTALL](INSTALL) for more details. ## Testing If you discover a bug in ReactOS search on JIRA first - it might be reported already. If not report the bug providing logs and as much information as possible. See [""File Bugs""]( for a guide. __NOTE:__ The bug tracker is _not_ for discussions. Please use our [official chat]( or our [forum]( ## Contributing [ We are always looking for developers! Check [how to contribute](CONTRIBUTING.md) if you are willing to participate. __Legal notice__: If you have seen proprietary Microsoft Windows source code (including but not limited to the leaked Windows NT 3.5, NT 4, 2000 source code and the Windows Research Kernel), your contribution won't be accepted because of potential copyright violation. Try out cloud-based ReactOS development using Gitpod and Docker: []( You can also support ReactOS by [donating]( We rely on our backers to maintain our servers and accelerate development by [hiring full-time devs]( ## More information ReactOS is a Free and Open Source operating system based on the Windows architecture, providing support for existing applications and drivers, and an alternative to the current dominant consumer operating system. It is not another wrapper built on Linux, like WINE. It does not attempt or plan to compete with WINE; in fact, the user-mode part of ReactOS is almost entirely WINE-based and our two teams have cooperated closely in the past. ReactOS is also not ""yet another OS"". It does not attempt to be a third player like any other alternative OS out there. People are not meant to uninstall Linux and use ReactOS instead; ReactOS is a replacement for Windows users who want a Windows replacement that behaves just like Windows. More information is available at: [reactos.org]( Also see the [media/doc](/media/doc/) subdirectory for some sparse notes. ## Who is responsible Active devs are listed as members of [GitHub organization]( See also the [CREDITS](CREDITS) file for others. ## Code mirrors The main development is done on [GitHub]( We have an [alternative mirror]( in case GitHub is down. There is also an obsolete [SVN archive repository]( that is kept for historical purposes. [coverity.badge]: [rosbewin.badge]: [rosbeunix.badge]: [prwelcome.badge]: [coverity.link]: [rosbewin.link]: [rosbeunix.link]:"
DeepFaceLab,iperov/DeepFaceLab,45815,10275,['Python'],"['faceswap', 'face-swap', 'deep-learning', 'deeplearning', 'deep-neural-networks']","# DeepFaceLab ### the leading software for creating deepfakes More than 95% of deepfake videos are created with DeepFaceLab. DeepFaceLab is used by such popular youtube channels as | [deeptomcruise]( [1facerussia]( [arnoldschwarzneggar]( |---|---|---| | [mariahcareyathome?]( [diepnep]( [mr__heisenberg]( [deepcaprio]( |---|---|---|---| | [VFXChris Ume]( [Sham00k]( |---|---| | [Collider videos]( [iFake]( [NextFace]( |---|---|---| | [Futuring Machine]( [RepresentUS]( [Corridor Crew]( |---|---|---| | [DeepFaker]( [DeepFakes in movie]( |---|---| | [DeepFakeCreator]( [Jarkan]( |---|---| # What can I do using DeepFaceLab? ## Replace the face ## De-age the face ## Replace the head ## Manipulate politicians lips (voice replacement is not included!) (also requires a skill in video editors such as *Adobe After Effects* or *Davinci Resolve*) # Deepfake native resolution progress Unfortunately, there is no ""make everything ok"" button in DeepFaceLab. You should spend time studying the workflow and growing your skills. A skill in programs such as *AfterEffects* or *Davinci Resolve* is also desirable. ## Mini tutorial ## Releases Windows (magnet link) Last release. Use torrent client to download. Windows (Mega.nz) Contains new and prev releases. Windows (yandex.ru) Contains new and prev releases. Google Colab (github) by @chervonij . You can train fakes for free using Google Colab. Linux (github) by @nagadit CentOS Linux (github) May be outdated. By @elemantalcode ## Links ### Guides and tutorials DeepFaceLab guide Main guide Faceset creation guide How to create the right faceset Google Colab guide Guide how to train the fake on Google Colab Compositing To achieve the highest quality, compose deepfake manually in video editors such as Davinci Resolve or Adobe AfterEffects Discussion and suggestions ### Supplementary material Ready to work facesets Celebrity facesets made by community Pretrained models Pretrained models made by community ### Communication groups Discord Official discord channel. English / Russian. Telegram group Official telegram group. English / Russian. For anonymous communication. Don't forget to hide your phone number mrdeepfakes the biggest NSFW English community reddit r/DeepFakesSFW/ Post your deepfakes there ! reddit r/RUdeepfakes/ ! QQ124500433 QQ dfldata.cc deepfaker.xyz ) ## Related works DeepFaceLive Real-time face swap for PC streaming or video calls neuralchen/SimSwap Swapping face using ONE single photo deepfakes/faceswap Something that was before DeepFaceLab and still remains in the past ## How I can help the project? ### Sponsor deepfake research and DeepFaceLab development. Donate via Yoomoney bitcoin:bc1qkhh7h0gwwhxgg6h6gpllfgstkd645fefrd5s6z ### Collect facesets You can collect faceset of any celebrity that can be used in DeepFaceLab and share it in the community ### Star this repo Register github account and push ""Star"" button. ## Meme zone #deepfacelab #deepfakes #faceswap #face-swap #deep-learning #deeplearning #deep-neural-networks #deepface #deep-face-swap #fakeapp #fake-app #neural-networks #neural-nets #tensorflow #cuda #nvidia"
professional-programming,charlax/professional-programming,45533,3624,"['Python', 'HTML']","['read-articles', 'programmer', 'professional', 'scalability', 'concepts']","## Table of Contents - [Professional Programming - about this list](#professional-programming---about-this-list) - [Principles](#principles) - [Contributing to this list](#contributing-to-this-list) - [Must-read books](#must-read-books) - [Must-read articles](#must-read-articles) - [Other general material and list of resources](#other-general-material-and-list-of-resources) - [Other lists](#other-lists) - [Books](#books) - [Articles](#articles) - [Axioms](#axioms) - [Courses](#courses) - [Topics](#topics) - [Algorithm and data structures](#algorithm-and-data-structures) - [API design & development](#api-design--development) - [Attitude, habits, mindset](#attitude-habits-mindset) - [Procrastination](#procrastination) - [Authentication/authorization](#authenticationauthorization) - [Automation](#automation) - [Beyond software engineering & random](#beyond-software-engineering--random) - [Biases](#biases) - [Business](#business) - [Cache](#cache) - [Career growth](#career-growth) - [Choosing your next/first opportunity](#choosing-your-nextfirst-opportunity) - [Getting to Staff Eng](#getting-to-staff-eng) - [Characters sets](#characters-sets) - [Chess](#chess) - [Clouds](#clouds) - [Code reviews](#code-reviews) - [Coding & code quality](#coding--code-quality) - [Communication](#communication) - [Compilers](#compilers) - [Configuration](#configuration) - [Continuous Integration (CI)](#continuous-integration-ci) - [Databases](#databases) - [NoSQL](#nosql) - [Postgres](#postgres) - [Data formats](#data-formats) - [Data science/data engineering](#data-sciencedata-engineering) - [Debugging](#debugging) - [Design (visual, UX, UI, typography)](#design-visual-ux-ui-typography) - [Design (OO modeling, architecture, patterns, anti-patterns, etc.)](#design-oo-modeling-architecture-patterns-anti-patterns-etc) - [Design: database schema](#design-database-schema) - [Design: patterns](#design-patterns) - [Design: simplicity](#design-simplicity) - [Dev environment & tools](#dev-environment--tools) - [Diversity & inclusion](#diversity--inclusion) - [Docker](#docker) - [Documentation](#documentation) - [Dotfiles](#dotfiles) - [Editors & IDE](#editors--ide) - [Email](#email) - [Engineering management](#engineering-management) - [Exercises](#exercises) - [Experimentation](#experimentation) - [Functional programming (FP)](#functional-programming-fp) - [Games development](#games-development) - [Graphics](#graphics) - [Hardware](#hardware) - [HTTP](# - [Humor](#humor) - [Incident response (oncall, alerting, outages, firefighting, postmortem)](#incident-response-oncall-alerting-outages-firefighting-postmortem) - [Postmortem](#postmortem) - [Internet](#internet) - [Interviewing](#interviewing) - [Kubernetes](#kubernetes) - [Large Language Model (LLM)](#large-language-model-llm) - [Learning & memorizing](#learning--memorizing) - [Licenses (legal)](#licenses-legal) - [Linux (system management)](#linux-system-management) - [Low-code/no-code](#low-codeno-code) - [Low-level, assembly](#low-level-assembly) - [Machine learning/AI](#machine-learningai) - [Math](#math) - [Marketing](#marketing) - [Network](#network) - [Observability (monitoring, logging, exception handling)](#observability-monitoring-logging-exception-handling) - [Logging](#logging) - [Error/exception handling](#errorexception-handling) - [Metrics](#metrics) - [Monitoring](#monitoring) - [Open source](#open-source) - [Operating system (OS)](#operating-system-os) - [Over-engineering](#over-engineering) - [Performance](#performance) - [Personal knowledge management (PKM)](#personal-knowledge-management-pkm) - [Personal productivity](#personal-productivity) - [Perspective](#perspective) - [Privacy](#privacy) - [Problem solving](#problem-solving) - [Product management for software engineers](#product-management-for-software-engineers) - [Project management](#project-management) - [Programming languages](#programming-languages) - [Python](#python) - [JavaScript](#javascript) - [Garbage collection](#garbage-collection) - [Programming paradigm](#programming-paradigm) - [Public speaking (presenting)](#public-speaking-presenting) - [Reading](#reading) - [Refactoring](#refactoring) - [Regex](#regex) - [Releasing & deploying](#releasing--deploying) - [Versioning](#versioning) - [Checklists](#checklists) - [Feature flags](#feature-flags) - [Testing in production](#testing-in-production) - [Reliability](#reliability) - [Resiliency](#resiliency) - [Search](#search) - [Security](#security) - [Shell (command line)](#shell-command-line) - [SQL](#sql) - [System administration](#system-administration) - [System architecture](#system-architecture) - [Architecture patterns](#architecture-patterns) - [Microservices/splitting a monolith](#microservicessplitting-a-monolith) - [Scalability](#scalability) - [Site Reliability Engineering (SRE)](#site-reliability-engineering-sre) - [Technical debt](#technical-debt) - [Testing](#testing) - [Tools](#tools) - [Type system](#type-system) - [Version control (Git)](#version-control-git) - [Work ethics, productivity & work/life balance](#work-ethics-productivity--worklife-balance) - [Web development](#web-development) - [Writing (communication, blogging)](#writing-communication-blogging) - [Resources & inspiration for presentations](#resources--inspiration-for-presentations) - [Keeping up-to-date](#keeping-up-to-date) - [Concepts](#concepts) - [My other lists](#my-other-lists) # Professional Programming - about this list > Give me six hours to chop down a tree and I will spend the first four sharpening the axe. (Abraham Lincoln) A collection of full-stack resources for programmers. The goal of this page is to make you a more proficient developer. You'll find only resources that I've found truly inspiring, or that have become timeless classics. ## Principles - This page is not meant to be comprehensive. I am trying to keep it light and not too overwhelming. - The selection of articles is opinionated. - I don't necessarily agree with or endorse every single line that is written in every single one of those resources. The same applies to their authors: I don't endorse everything each of those authors has said and will ever say. Items: - : list of resources - : book - : video/movie extract/movie/talk - : slides/presentation - : must-read - : paper ## Contributing to this list Feel free to open a PR to contribute! I will not be adding everything: as stated above, I am trying to keep the list concise. ## Must-read books I've found these books incredibly inspiring: - [The Pragmatic Programmer: From Journeyman to Master]( hands-on the most inspiring and useful book I've read about programming. - [Code Complete: A Practical Handbook of Software Construction]( a nice addition to The Pragmatic Programmer, gives you the necessary framework to talk about code. - [Release It!]( this books goes beyond code and gives you best practices for building production-ready software. It will give you about 3 years worth of real-world experience. - [Scalability Rules: 50 Principles for Scaling Web Sites]( - [The Linux Programming Interface: A Linux and UNIX System Programming Handbook]( outside of teaching you almost everything you need to know about Linux, this book will give you insights into how software evolves, and the value of having simple & elegant interfaces. - [Structure and interpretation of Computer Programs]( (free): One of the most influential textbooks in Computer Science (written and used at MIT), SICP has been influential in CS education. [Byte]() recommended SICP ""for professional programmers who are really interested in their profession"". There are some free books available, including: - [Professional software development]( pretty complete and a good companion to this page. The free chapters are mostly focused on software development processes: design, testing, code writing, etc. - and not so much about tech itself. - [vhf/free-programming-books]( - [EbookFoundation/free-programming-books]( ## Must-read articles - [Practical Advice for New Software Engineers]( - [On Being A Senior Engineer]( - [Lessons Learned in Software Development]( one of those articles that give you years of hard-earned lessons, all in one short article. Must read. - [Things I Learnt The Hard Way]( - Spec first, then code - Tests make better APIs - Future thinking is future trashing - Documentation is a love letter to your future self - Sometimes, it's better to let the application crash than do nothing - Understand and stay away of cargo cult - ""Right tool for the job"" is just to push an agenda - Learn the basics functional programming - ALWAYS use timezones with your dates - ALWAYS use UTF-8 - Create libraries - Learn to monitor - Explicit is better than implicit - Companies look for specialists but keep generalists longer - The best secure way to deal with user data is not to capture it - When it's time to stop, it's time to stop - You're responsible for the use of your code - Don't tell ""It's done"" when it's not - Pay attention on how people react to you - Beware of micro-aggressions - Keep a list of ""Things I Don't Know"" - [Signs that you're a good programmer]( (not everything in here is great - some of the points are counterproductive) - The instinct to experiment first - Emotional detachment from code and design - Eager to fix what isn't broken - Fascinated by the incomprehensible - Compelled to teach - Incorruptible patience - A destructive pursuit of perfection - Encyclopedic grasp of the platform - Thinks In Code - When In Rome, Does As Romans Do - Creates their own tools - Indifferent to Hierarchy - Excited by failure - Indifferent to circumstances - Substitutes impulse for commitment - Driven by experiences - [7 absolute truths I unlearned as junior developer]( - Early in your career, you can learn 10x more in a supportive team in 1 year, than coding on your own - Every company has problems, every company has technical debt. - Being overly opinionated on topics you lack real-world experi... [TRUNCATED]"
hackingtool,Z4nzu/hackingtool,43085,4731,"['Python', 'Shell', 'Dockerfile']","['allinonehackingtool', 'web-attack', 'password-attack', 'hacking', 'wireless-attack']",### All in One Hacking tool For Hackers []( #### Install Kali Linux in WIndows10 Without VirtualBox [YOUTUBE]( or use Docker ## Update Available V1.2.0 - [] Installation Bug Fixed - [x] Added New Tools - [x] Reverse Engineering - [x] RAT Tools - [x] Web Crawling - [x] Payload Injector - [x] Multitor Tools update - [X] Added Tool in wifijamming - [X] Added Tool in steganography # Hackingtool Menu - [Anonymously Hiding Tools](#anonymously-hiding-tools) - [Information gathering tools](#information-gathering-tools) - [Wordlist Generator](#wordlist-generator) - [Wireless attack tools](#wireless-attack-tools) - [SQL Injection Tools](#sql-injection-tools) - [Phishing attack tools](#phishing-attack-tools) - [Web Attack tools](#web-attack-tools) - [Post exploitation tools](#post-exploitation-tools) - [Forensic tools](#forensic-tools) - [Payload creation tools](#payload-creation-tools) - [Exploit framework](#exploit-framework) - [Reverse engineering tools](#reverse-engineering-tools) - [DDOS Attack Tools](#ddos-attack-tools) - [Remote Administrator Tools (RAT)](#remote-administrator-tools--rat-) - [XSS Attack Tools](#xss-attack-tools) - [Steganograhy tools](#steganograhy-tools) - [Other tools](#other-tools) - [SocialMedia Bruteforce](#socialmedia-bruteforce) - [Android Hacking tools](#android-hacking-tools) - [IDN Homograph Attack](#idn-homograph-attack) - [Email Verify tools](#email-verify-tools) - [Hash cracking tools](#hash-cracking-tools) - [Wifi Deauthenticate](#wifi-deauthenticate) - [SocialMedia Finder](#socialmedia-finder) - [Payload Injector](#payload-injector) - [Web crawling](#web-crawling) - [Mix tools](#mix-tools) ### Anonymously Hiding Tools - [Anonmously Surf]( - [Multitor]( ### Information gathering tools - [Network Map (nmap)]( - [Dracnmap]( - Port scanning - Host to IP - [Xerosploit]( - [RED HAWK (All In One Scanning)]( - [ReconSpider(For All Scanning)]( - IsItDown (Check Website Down/Up) - [Infoga - Email OSINT]( - [ReconDog]( - [Striker]( - [SecretFinder (like API & etc)]( - [Find Info Using Shodan]( - [Port Scanner - rang3r (Python 2.7)]( - [Port Scanner - Ranger Reloaded (Python 3+)]( - [Breacher]( ### Wordlist Generator - [Cupp]( - [WordlistCreator]( - [Goblin WordGenerator]( - [Password list (1.4 Billion Clear Text Password)]( ### Wireless attack tools - [WiFi-Pumpkin]( - [pixiewps]( - [Bluetooth Honeypot GUI Framework]( - [Fluxion]( - [Wifiphisher]( - [Wifite]( - [EvilTwin]( - [Fastssh]( - Howmanypeople ### SQL Injection Tools - [Sqlmap tool]( - [NoSqlMap]( - [Damn Small SQLi Scanner]( - [Explo]( - [Blisqy - Exploit Time-based blind-SQL injection]( - [Leviathan - Wide Range Mass Audit Toolkit]( - [SQLScan]( ### Phishing attack tools - [Setoolkit]( - [SocialFish]( - [HiddenEye]( - [Evilginx2]( - [I-See_You(Get Location using phishing attack)]( - [SayCheese (Grab target's Webcam Shots)]( - [QR Code Jacking]( - [ShellPhish]( - [BlackPhish]( ### Web Attack tools - [Web2Attack]( - Skipfish - [SubDomain Finder]( - [CheckURL]( - [Blazy(Also Find ClickJacking)]( - [Sub-Domain TakeOver]( - [Dirb]( ### Post exploitation tools - [Vegile - Ghost In The Shell]( - [Chrome Keylogger]( ### Forensic tools - Autopsy - Wireshark - [Bulk extractor]( - [Disk Clone and ISO Image Acquire]( - [Toolsley]( - [Volatility3]( ### Payload creation tools - [The FatRat]( - [Brutal]( - [Stitch]( - [MSFvenom Payload Creator]( - [Venom Shellcode Generator]( - [Spycam]( - [Mob-Droid]( - [Enigma]( ### Exploit framework - [RouterSploit]( - [WebSploit]( ) - [Commix]( - [Web2Attack]( ### Reverse engineering tools - [Androguard]( ) - [Apk2Gold]( ) - [JadX]( ### DDOS Attack Tools - SlowLoris - [Asyncrone | Multifunction SYN Flood DDoS Weapon]( - [UFOnet]( - [GoldenEye]( ### Remote Administrator Tools (RAT) - [Stitch]( - [Pyshell]( ### XSS Attack Tools - [DalFox(Finder of XSS)]( - [XSS Payload Generator]( - [Extended XSS Searcher and Finder]( - [XSS-Freak]( - [XSpear]( - [XSSCon]( - [XanXSS]( - [Advanced XSS Detection Suite]( - [RVuln]( - [Cyclops]( ### Steganograhy tools - SteganoHide - StegnoCracker - [StegoCracker]( - [Whitespace]( ### Other tools #### SocialMedia Bruteforce - [Instagram Attack]( - [AllinOne SocialMedia Attack]( - [Facebook Attack]( - [Application Checker]( #### Android Hacking tools - [Keydroid]( - [MySMS]( - [Lockphish (Grab target LOCK PIN)]( - [DroidCam (Capture Image)]( - [EvilApp (Hijack Session)]( - [HatCloud(Bypass CloudFlare for IP)]( #### IDN Homograph Attack - [EvilURL]( #### Email Verify tools - [Knockmail]( #### Hash cracking tools - [Hash Buster]( #### Wifi Deauthenticate - [WifiJammer-NG]( - [KawaiiDeauther]( #### SocialMedia Finder - [Find SocialMedia By Facial Recognation System]( - [Find SocialMedia By UserName]( - [Sherlock]( - [SocialScan | Username or Email]( #### Payload Injector - [Debinject]( - [Pixload]( #### Web crawling - [Gospider]( #### Mix tools - Terminal Multiplexer ## Installation For Linux ### !! RUN HACKINGTOOL AS ROOT !! ## Steps are given below : ## Step : 1 Download hackingtool git clone ## Step : 2 Give Permission to hackingtool chmod -R 755 hackingtool ## Step : 3 Move to hackingtool directory cd hackingtool ## Step : 4 Run hackingtool sudo bash install.sh ## Step : 5 For installing tools in directory sudo hackingtool ## Use image with Docker ### Create Docker Image - Create the docker image ```bash docker buitl -t vgpastor/hackingtool . ``` ### Run as container ```bash docker-compose up -d ``` ### Interact with terminal - Get into the container ```bash docker exec -it hackingtool bash ``` **OUTPUT:** ```bash Select Best Option : [1] Kali Linux / Parrot-Os (apt) [2] Arch Linux (pacman) [0] Exit ``` Enter the options and continue. - If need open other ports you can edit the docker-compose.yml file - Volumes are mounted in the container to persist data and can share files between the host and the container #### Thanks to original Author of the tools used in hackingtool Please Don't Use for illegal Activity ### To do - [ ] Release Tool - [ ] Add Tools for CTF - [ ] Want to do automatic ## Social Media :mailbox_with_no_mail: []( []( ##### Your Favourite Tool is not in hackingtool or Suggestions Please [CLICK HERE]( #### Don't Forgot to share with Your Friends ### The new Update get will soon stay updated #### Thank you..!!
pandas,pandas-dev/pandas,42221,17414,"['Python', 'Cython', 'HTML']","['data-analysis', 'pandas', 'flexible', 'alignment', 'python']","----------------- # pandas: powerful Python data analysis toolkit | | | | --- | --- | | Testing | []( []( | | Package | []( []( []( []( | | Meta | []( []( []( []( | ## What is it? **pandas** is a Python package that provides fast, flexible, and expressive data structures designed to make working with ""relational"" or ""labeled"" data both easy and intuitive. It aims to be the fundamental high-level building block for doing practical, **real world** data analysis in Python. Additionally, it has the broader goal of becoming **the most powerful and flexible open source data analysis / manipulation tool available in any language**. It is already well on its way towards this goal. ## Table of Contents - [Main Features](#main-features) - [Where to get it](#where-to-get-it) - [Dependencies](#dependencies) - [Installation from sources](#installation-from-sources) - [License](#license) - [Documentation](#documentation) - [Background](#background) - [Getting Help](#getting-help) - [Discussion and Development](#discussion-and-development) - [Contributing to pandas](#contributing-to-pandas) ## Main Features Here are just a few of the things that pandas does well: - Easy handling of [**missing data**][missing-data] (represented as `NaN`, `NA`, or `NaT`) in floating point as well as non-floating point data - Size mutability: columns can be [**inserted and deleted**][insertion-deletion] from DataFrame and higher dimensional objects - Automatic and explicit [**data alignment**][alignment]: objects can be explicitly aligned to a set of labels, or the user can simply ignore the labels and let `Series`, `DataFrame`, etc. automatically align the data for you in computations - Powerful, flexible [**group by**][groupby] functionality to perform split-apply-combine operations on data sets, for both aggregating and transforming data - Make it [**easy to convert**][conversion] ragged, differently-indexed data in other Python and NumPy data structures into DataFrame objects - Intelligent label-based [**slicing**][slicing], [**fancy indexing**][fancy-indexing], and [**subsetting**][subsetting] of large data sets - Intuitive [**merging**][merging] and [**joining**][joining] data sets - Flexible [**reshaping**][reshape] and [**pivoting**][pivot-table] of data sets - [**Hierarchical**][mi] labeling of axes (possible to have multiple labels per tick) - Robust IO tools for loading data from [**flat files**][flat-files] (CSV and delimited), [**Excel files**][excel], [**databases**][db], and saving/loading data from the ultrafast [**HDF5 format**][hdfstore] - [**Time series**][timeseries]-specific functionality: date range generation and frequency conversion, moving window statistics, date shifting and lagging [missing-data]: [insertion-deletion]: [alignment]: [groupby]: [conversion]: [slicing]: [fancy-indexing]: [subsetting]: [merging]: [joining]: [reshape]: [pivot-table]: [mi]: [flat-files]: [excel]: [db]: [hdfstore]: [timeseries]: ## Where to get it The source code is currently hosted on GitHub at: Binary installers for the latest released version are available at the [Python Package Index (PyPI)]( and on [Conda]( ```sh # conda conda install -c conda-forge pandas ``` ```sh # or PyPI pip install pandas ``` The list of changes to pandas between each release can be found [here]( For full details, see the commit logs at ## Dependencies - [NumPy - Adds support for large, multi-dimensional arrays, matrices and high-level mathematical functions to operate on these arrays]( - [python-dateutil - Provides powerful extensions to the standard datetime module]( - [pytz - Brings the Olson tz database into Python which allows accurate and cross platform timezone calculations]( See the [full installation instructions]( for minimum supported versions of required, recommended and optional dependencies. ## Installation from sources To install pandas from source you need [Cython]( in addition to the normal dependencies above. Cython can be installed from PyPI: ```sh pip install cython ``` In the `pandas` directory (same one where you found this file after cloning the git repo), execute: ```sh pip install . ``` or for installing in [development mode]( ```sh python -m pip install -ve . --no-build-isolation --config-settings=editable-verbose=true ``` See the full instructions for [installing from source]( ## License [BSD 3](LICENSE) ## Documentation The official documentation is hosted on [PyData.org]( ## Background Work on ``pandas`` started at [AQR]( (a quantitative hedge fund) in 2008 and has been under active development since then. ## Getting Help For usage questions, the best place to go to is [StackOverflow]( Further, general questions and discussions can also take place on the [pydata mailing list]( ## Discussion and Development Most development discussions take place on GitHub in this repo, via the [GitHub issue tracker]( Further, the [pandas-dev mailing list]( can also be used for specialized discussions or design issues, and a [Slack channel]( is available for quick development related questions. There are also frequent [community meetings]( for project maintainers open to the community as well as monthly [new contributor meetings]( to help support new contributors. Additional information on the communication channels can be found on the [contributor community]( page. ## Contributing to pandas []( All contributions, bug reports, bug fixes, documentation improvements, enhancements, and ideas are welcome. A detailed overview on how to contribute can be found in the **[contributing guide]( If you are simply looking to start working with the pandas codebase, navigate to the [GitHub ""issues"" tab]( and start looking through interesting issues. There are a number of issues listed under [Docs]( and [good first issue]( where you could start out. You can also triage issues which may include reproducing bug reports, or asking for vital information such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to [subscribe to pandas on CodeTriage]( Or maybe through using pandas you have an idea of your own or are looking for something in the documentation and thinking this can be improved...you can do something about it! Feel free to ask questions on the [mailing list]( or on [Slack]( As contributors and maintainers to this project, you are expected to abide by pandas' code of conduct. More information can be found at: [Contributor Code of Conduct]( [Go to Top](#table-of-contents)"
MetaGPT,geekan/MetaGPT,40266,4785,"['Python', 'JavaScript', 'TypeScript']","['agent', 'gpt', 'llm', 'metagpt', 'hacktoberfest']","# MetaGPT: The Multi-Agent Framework Assign different roles to GPTs to form a collaborative entity for complex tasks. ## News Mar. 29, 2024: [v0.8.0]( released. Now you can use Data Interpreter ([arxiv]( [example]( [code]( via pypi package import. Meanwhile, we integrated RAG module and supported multiple new LLMs. Feb. 08, 2024: [v0.7.0]( released, supporting assigning different LLMs to different Roles. We also introduced [Data Interpreter]( a powerful agent capable of solving a wide range of real-world problems. Jan. 16, 2024: Our paper [MetaGPT: Meta Programming for A Multi-Agent Collaborative Framework ]( accepted for **oral presentation (top 1.2%)** at ICLR 2024, **ranking #1** in the LLM-based Agent category. Jan. 03, 2024: [v0.6.0]( released, new features include serialization, upgraded OpenAI package and supported multiple LLM, provided [minimal example for debate]( etc. Dec. 15, 2023: [v0.5.0]( released, introducing some experimental features such as incremental development, multilingual, multiple programming languages, etc. Nov. 08, 2023: MetaGPT is selected into [Open100: Top 100 Open Source achievements]( Sep. 01, 2023: MetaGPT tops GitHub Trending Monthly for the **17th time** in August 2023. Jun. 30, 2023: MetaGPT is now open source. Apr. 24, 2023: First line of MetaGPT code committed. ## Software Company as Multi-Agent System 1. MetaGPT takes a **one line requirement** as input and outputs **user stories / competitive analysis / requirements / data structures / APIs / documents, etc.** 2. Internally, MetaGPT includes **product managers / architects / project managers / engineers.** It provides the entire process of a **software company along with carefully orchestrated SOPs.** 1. `Code = SOP(Team)` is the core philosophy. We materialize SOP and apply it to teams composed of LLMs. Software Company Multi-Agent Schematic (Gradually Implementing) ## Get Started ### Installation > Ensure that Python 3.9+ is installed on your system. You can check this by using: `python --version`. > You can use conda like this: `conda create -n metagpt python=3.9 && conda activate metagpt` ```bash pip install --upgrade metagpt # or `pip install --upgrade git+ # or `git clone && cd MetaGPT && pip install --upgrade -e .` ``` For detailed installation guidance, please refer to [cli_install]( or [docker_install]( ### Configuration You can init the config of MetaGPT by running the following command, or manually create `~/.metagpt/config2.yaml` file: ```bash # Check for more details metagpt --init-config # it will create ~/.metagpt/config2.yaml, just modify it to your needs ``` You can configure `~/.metagpt/config2.yaml` according to the [example]( and [doc]( ```yaml llm: api_type: ""openai"" # or azure / ollama / groq etc. Check LLMType for more options model: ""gpt-4-turbo"" # or gpt-3.5-turbo base_url: "" # or forward url / other llm url api_key: ""YOUR_API_KEY"" ``` ### Usage After installation, you can use MetaGPT at CLI ```bash metagpt ""Create a 2048 game"" # this will create a repo in ./workspace ``` or use it as library ```python from metagpt.software_company import generate_repo, ProjectRepo repo: ProjectRepo = generate_repo(""Create a 2048 game"") # or ProjectRepo("""") print(repo) # it will print the repo structure with files ``` You can also use [Data Interpreter]( to write code: ```python import asyncio from metagpt.roles.di.data_interpreter import DataInterpreter async def main(): di = DataInterpreter() await di.run(""Run data analysis on sklearn Iris dataset, include a plot"") asyncio.run(main()) # or await main() in a jupyter notebook setting ``` ### QuickStart & Demo Video - Try it on [MetaGPT Huggingface Space]( - [Matthew Berman: How To Install MetaGPT - Build A Startup With One Prompt!!]( - [Official Demo Video]( ## Tutorial - [Online Document]( - [Usage]( - [What can MetaGPT do?]( - How to build your own agents? - [MetaGPT Usage & Development Guide | Agent 101]( - [MetaGPT Usage & Development Guide | MultiAgent 101]( - Contribution - [Develop Roadmap](docs/ROADMAP.md) - Use Cases - [Data Interpreter]( - [Debate]( - [Researcher]( - [Recepit Assistant]( - [FAQs]( ## Support ### Discord Join US Join Our [Discord Channel]( Looking forward to seeing you there! ### Contributor form [Fill out the form]( to become a contributor. We are looking forward to your participation! ### Contact Information If you have any questions or feedback about this project, please feel free to contact us. We highly appreciate your suggestions! - **Email:** alexanderwu@deepwisdom.ai - **GitHub Issues:** For more technical inquiries, you can also create a new issue in our [GitHub repository]( We will respond to all questions within 2-3 business days. ## Citation To stay updated with the latest research and development, follow [@MetaGPT_]( on Twitter. To cite [MetaGPT]( or [Data Interpreter]( in publications, please use the following BibTeX entries. ```bibtex @misc{hong2023metagpt, title={MetaGPT: Meta Programming for A Multi-Agent Collaborative Framework}, author={Sirui Hong and Mingchen Zhuge and Jonathan Chen and Xiawu Zheng and Yuheng Cheng and Ceyao Zhang and Jinlin Wang and Zili Wang and Steven Ka Shing Yau and Zijuan Lin and Liyang Zhou and Chenyu Ran and Lingfeng Xiao and Chenglin Wu and Jrgen Schmidhuber}, year={2023}, eprint={2308.00352}, archivePrefix={arXiv}, primaryClass={cs.AI} } @misc{hong2024data, title={Data Interpreter: An LLM Agent For Data Science}, author={Sirui Hong and Yizhang Lin and Bang Liu and Bangbang Liu and Binhao Wu and Danyang Li and Jiaqi Chen and Jiayi Zhang and Jinlin Wang and Li Zhang and Lingyao Zhang and Min Yang and Mingchen Zhuge and Taicheng Guo and Tuo Zhou and Wei Tao and Wenyi Wang and Xiangru Tang and Xiangtao Lu and Xiawu Zheng and Xinbing Liang and Yaying Fei and Yuheng Cheng and Zongze Xu and Chenglin Wu}, year={2024}, eprint={2402.18679}, archivePrefix={arXiv}, primaryClass={cs.AI} } ```"
ChatGLM-6B,THUDM/ChatGLM-6B,39616,5134,"['Python', 'Shell']",[],"# ChatGLM-6B Blog HF Repo Twitter [GLM@ACL 22] [GitHub] [GLM-130B@ICLR 23] [GitHub] Slack WeChat chatglm.cn ChatGLM *Read this in [English](README_en.md).* [ChatGLM3-6B]( 10BFunction CallCode InterpreterAgent ## ChatGLM-6B [General Language Model (GLM)]( 62 INT4 6GB ChatGLM-6B ChatGPT 1T 62 ChatGLM-6B []( [chatglm.cn]( ChatGLM [P-Tuning v2]( [()](ptuning/README.md) INT4 7GB ChatGLM-6B ****[]( ----- ChatGLM-6B [](MODEL_LICENSE)** ChatGLM-6B iOS Windows App ** ChatGLM-6B [](README.md#)**** ## **[2023/07/25]** [CodeGeeX2]( ChatGLM2-6B * ****CodeGeeX2-6B 600B CodeGeeX [HumanEval-X]( (Python +57%, C++ +71%, Java +54%, JavaScript +83%, Go +56%, Rust +321\%)Python 35.9\% Pass@1 StarCoder-15B * **** ChatGLM2-6B CodeGeeX2-6B 8192 6GB * **AI**CodeGeeX[VS Code]( [Jetbrains]( Ask CodeGeeX AI **[2023/06/25]** [ChatGLM2-6B]( ChatGLM**2**-6B 1. **** ChatGLM ChatGLM2-6B ChatGLM2-6B [GLM]( 1.4T [](#)ChatGLM2-6B MMLU+23%CEval+33%GSM8K+571% BBH+60% 2. **** [FlashAttention]( Context Length ChatGLM-6B 2K 32K 8K ChatGLM2-6B 3. **** [Multi-Query Attention]( ChatGLM2-6B 42%INT4 6G 1K 8K [ChatGLM2-6B]( **[2023/06/14]** [WebGLM]( 2023 **[2023/05/17]** [VisualGLM-6B]( [cli_demo_vision.py](cli_demo_vision.py) [web_demo_vision.py](web_demo_vision.py) Demo VisualGLM-6B [SwissArmyTransformer]( torchvision [VisualGLM-6B]( **[2023/05/15]** v1.1 checkpoint * Describe a time when you had to make a difficult decision. - v1.0: - v1.1: * Describe the function of a computer motherboard - v1.0: - v1.1: * Develop a plan to reduce electricity usage in a home. - v1.0: - v1.1: * NFT - v1.0: - v1.1: [UPDATE.md](UPDATE.md) ## ChatGLM * [lyraChatGLM]( ChatGLM-6B 9000+ tokens/s * [ChatGLM-MNN]( MNN ChatGLM-6B C++ GPU CPU * [JittorLLMs]( ChatGLM-6B FP16 LinuxwindowsMac * [InferLLM]( C++ x86Arm 4G ChatGLM-6B * [langchain-ChatGLM]( langchain ChatGLM * []( ChatGLM-6B ChatPDF * [glm-bot]( * [Chuanhu Chat]( APIChatGLM-6B ChatGLM-6B * [ChatGLM-6B ]( * [ChatGLM-6B langchain QA Bot]( * [Measuring Massive Multitask Chinese Understanding]( [PROJECT.md](PROJECT.md) ## ### | **** | ** GPU ** | ** GPU ** | | -------------- | ------------------------- | --------------------------------- | | FP16 | 13 GB | 14 GB | | INT8 | 8 GB | 9 GB | | INT4 | 6 GB | 7 GB | ### pip `pip install -r requirements.txt` `transformers` `4.27.1` `4.23.1` cpu `gcc` `openmp` Linux Windows [TDM-GCC]( `openmp` Windows `gcc` `TDM-GCC 10.3.0` Linux `gcc 11.3.0` MacOS [Q1](FAQ.md#q1) ### ChatGLM-6B ```python >>> from transformers import AutoTokenizer, AutoModel >>> tokenizer = AutoTokenizer.from_pretrained(""THUDM/chatglm-6b"", trust_remote_code=True) >>> model = AutoModel.from_pretrained(""THUDM/chatglm-6b"", trust_remote_code=True).half().cuda() >>> model = model.eval() >>> response, history = model.chat(tokenizer, """", history=[]) >>> print(response) ! ChatGLM-6B,, >>> response, history = model.chat(tokenizer, """", history=history) >>> print(response) ,: 1. :,, 2. :,,, 3. :,,,,, 4. :,,, 5. :,,, 6. :,,,, ,, ``` `from_pretrained` `revision=""v1.1.0""` `v1.1.0` [Change Log]( ### `transformers` [Hugging Face Hub]( Hugging Face Hub [Git LFS]( ```Shell git clone ``` Hugging Face Hub checkpoint ```Shell GIT_LFS_SKIP_SMUDGE=1 git clone ``` []( `chatglm-6b` `THUDM/chatglm-6b` `chatglm-6b` **Optional** ```Shell git checkout v1.1.0 ``` ## Demo & API [Gradio]( Demo Demo ```shell git clone cd ChatGLM-6B ``` ### Demo Gradio`pip install gradio` [web_demo.py](web_demo.py) ```shell python web_demo.py ``` Web Server Demo Gradio `demo.queue().launch(share=True, inbrowser=True)` Gradio `share=False` `share=True` [@AdamBear]( Streamlit Demo[#117]( ### Demo [cli_demo.py](cli_demo.py) ```shell python cli_demo.py ``` `clear` `stop` ### API `pip install fastapi uvicorn` [api.py](api.py) ```shell python api.py ``` 8000 POST ```shell curl -X POST "" \ -H 'Content-Type: application/json' \ -d '{""prompt"": """", ""history"": []}' ``` ```shell { ""response"":"" ChatGLM-6B"", ""history"":[["""","" ChatGLM-6B""]], ""status"":200, ""time"":""2023-03-23 21:38:40"" } ``` ## ### FP16 13GB GPU ```python # 4/8 bit model = AutoModel.from_pretrained(""THUDM/chatglm-6b"", trust_remote_code=True).quantize(8).half().cuda() ``` 2 3 8-bit GPU 10GB4-bit 6GB ChatGLM-6B context-length 2048 ChatGLM-6B 4-bit [GPT-Q]( / Pull Request FP16 13GB INT4 5.2GB ```python # INT8 ""THUDM/chatglm-6b-int4""""THUDM/chatglm-6b-int8"" model = AutoModel.from_pretrained(""THUDM/chatglm-6b-int4"", trust_remote_code=True).half().cuda() ``` []( ### CPU GPU CPU 32GB ```python model = AutoModel.from_pretrained(""THUDM/chatglm-6b"", trust_remote_code=True).float() ``` ```python # INT8 ""THUDM/chatglm-6b-int4""""THUDM/chatglm-6b-int8"" model = AutoModel.from_pretrained(""THUDM/chatglm-6b-int4"",trust_remote_code=True).float() ``` `Could not find module 'nvcuda.dll'` `RuntimeError: Unknown platform: darwin` (MacOS) [](README.md#) ### Mac Apple Silicon AMD GPU Mac MPS GPU ChatGLM-6B Apple []( PyTorch-Nightly2.1.0.dev2023xxxx2.0.0 MacOS [](README.md#) mps ```python model = AutoModel.from_pretrained(""your local path"", trust_remote_code=True).half().to('mps') ``` ChatGLM-6B 13GB 16GB MacBook Pro chatglm-6b-int4 GPU kernel CUDA MacOS CPU ```python # INT8 ""THUDM/chatglm-6b-int4""""THUDM/chatglm-6b-int8"" model = AutoModel.from_pretrained(""THUDM/chatglm-6b-int4"",trust_remote_code=True).float() ``` CPU [ OpenMP](FAQ.md#q1) ### GPU GPU GPU accelerate: `pip install accelerate` ```python from utils import load_model_on_gpus model = load_model_on_gpus(""THUDM/chatglm-6b"", num_gpus=2) ``` GPU `num_gpus` GPU `device_map` ## [P-tuning v2]( [ptuning/README.md](ptuning/README.md) ## ChatGLM-6B `web_demo.py` ChatGLM-6B ## ChatGLM-6B - 6B ChatGLM-6B - ChatGLM-6B - ChatGLM-6B / - ChatGLM-6B ## [Apache-2.0](LICENSE) ChatGLM-6B [Model License](MODEL_LICENSE)ChatGLM-6B ****[]( ## ``` @article{zeng2022glm, title={Glm-130b: An open bilingual pre-trained model}, author={Zeng, Aohan and Liu, Xiao and Du, Zhengxiao and Wang, Zihan and Lai, Hanyu and Ding, Ming and Yang, Zhuoyi and Xu, Yifan and Zheng, Wendi and Xia, Xiao and others}, journal={arXiv preprint arXiv:2210.02414}, year={2022} } ``` ``` @inproceedings{du2022glm, title={GLM: General Language Model Pretraining with Autoregressive Blank Infilling}, author={Du, Zhengxiao and Qian, Yujie and Liu, Xiao and Ding, Ming and Qiu, Jiezhong and Yang, Zhilin and Tang, Jie}, booktitle={Proceedings of the 60th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers)}, pages={320--335}, year={2022} } ```"
python-patterns,faif/python-patterns,39574,6863,"['Python', 'Makefile', 'Shell']","['python', 'idioms', 'design-patterns']","python-patterns =============== A collection of design patterns and idioms in Python. Current Patterns ---------------- __Creational Patterns__: | Pattern | Description | |:-------:| ----------- | | [abstract_factory](patterns/creational/abstract_factory.py) | use a generic function with specific factories | | [borg](patterns/creational/borg.py) | a singleton with shared-state among instances | | [builder](patterns/creational/builder.py) | instead of using multiple constructors, builder object receives parameters and returns constructed objects | | [factory](patterns/creational/factory.py) | delegate a specialized function/method to create instances | | [lazy_evaluation](patterns/creational/lazy_evaluation.py) | lazily-evaluated property pattern in Python | | [pool](patterns/creational/pool.py) | preinstantiate and maintain a group of instances of the same type | | [prototype](patterns/creational/prototype.py) | use a factory and clones of a prototype for new instances (if instantiation is expensive) | __Structural Patterns__: | Pattern | Description | |:-------:| ----------- | | [3-tier](patterns/structural/3-tier.py) | data<->business logic<->presentation separation (strict relationships) | | [adapter](patterns/structural/adapter.py) | adapt one interface to another using a white-list | | [bridge](patterns/structural/bridge.py) | a client-provider middleman to soften interface changes | | [composite](patterns/structural/composite.py) | lets clients treat individual objects and compositions uniformly | | [decorator](patterns/structural/decorator.py) | wrap functionality with other functionality in order to affect outputs | | [facade](patterns/structural/facade.py) | use one class as an API to a number of others | | [flyweight](patterns/structural/flyweight.py) | transparently reuse existing instances of objects with similar/identical state | | [front_controller](patterns/structural/front_controller.py) | single handler requests coming to the application | | [mvc](patterns/structural/mvc.py) | model<->view<->controller (non-strict relationships) | | [proxy](patterns/structural/proxy.py) | an object funnels operations to something else | __Behavioral Patterns__: | Pattern | Description | |:-------:| ----------- | | [chain_of_responsibility](patterns/behavioral/chain_of_responsibility.py) | apply a chain of successive handlers to try and process the data | | [catalog](patterns/behavioral/catalog.py) | general methods will call different specialized methods based on construction parameter | | [chaining_method](patterns/behavioral/chaining_method.py) | continue callback next object method | | [command](patterns/behavioral/command.py) | bundle a command and arguments to call later | | [iterator](patterns/behavioral/iterator.py) | traverse a container and access the container's elements | | [iterator](patterns/behavioral/iterator_alt.py) (alt. impl.)| traverse a container and access the container's elements | | [mediator](patterns/behavioral/mediator.py) | an object that knows how to connect other objects and act as a proxy | | [memento](patterns/behavioral/memento.py) | generate an opaque token that can be used to go back to a previous state | | [observer](patterns/behavioral/observer.py) | provide a callback for notification of events/changes to data | | [publish_subscribe](patterns/behavioral/publish_subscribe.py) | a source syndicates events/data to 0+ registered listeners | | [registry](patterns/behavioral/registry.py) | keep track of all subclasses of a given class | | [specification](patterns/behavioral/specification.py) | business rules can be recombined by chaining the business rules together using boolean logic | | [state](patterns/behavioral/state.py) | logic is organized into a discrete number of potential states and the next state that can be transitioned to | | [strategy](patterns/behavioral/strategy.py) | selectable operations over the same data | | [template](patterns/behavioral/template.py) | an object imposes a structure but takes pluggable components | | [visitor](patterns/behavioral/visitor.py) | invoke a callback for all items of a collection | __Design for Testability Patterns__: | Pattern | Description | |:-------:| ----------- | | [dependency_injection](patterns/dependency_injection.py) | 3 variants of dependency injection | __Fundamental Patterns__: | Pattern | Description | |:-------:| ----------- | | [delegation_pattern](patterns/fundamental/delegation_pattern.py) | an object handles a request by delegating to a second object (the delegate) | __Others__: | Pattern | Description | |:-------:| ----------- | | [blackboard](patterns/other/blackboard.py) | architectural model, assemble different sub-system knowledge to build a solution, AI approach - non gang of four pattern | | [graph_search](patterns/other/graph_search.py) | graphing algorithms - non gang of four pattern | | [hsm](patterns/other/hsm/hsm.py) | hierarchical state machine - non gang of four pattern | Videos ------ [Design Patterns in Python by Peter Ullrich]( [Sebastian Buczyski - Why you don't need design patterns in Python?]( [You Don't Need That!]( [Pluggable Libs Through Design Patterns]( Contributing ------------ When an implementation is added or modified, please review the following guidelines: ##### Docstrings Add module level description in form of a docstring with links to corresponding references or other useful information. Add ""Examples in Python ecosystem"" section if you know some. It shows how patterns could be applied to real-world problems. [facade.py](patterns/structural/facade.py) has a good example of detailed description, but sometimes the shorter one as in [template.py](patterns/behavioral/template.py) would suffice. ##### Python 2 compatibility To see Python 2 compatible versions of some patterns please check-out the [legacy]( tag. ##### Update README When everything else is done - update corresponding part of README. ##### Travis CI Please run the following before submitting a patch - `black .` This lints your code. Then either: - `tox` or `tox -e ci37` This runs unit tests. see tox.ini for further details. - If you have a bash compatible shell use `./lint.sh` This script will lint and test your code. This script mirrors the CI pipeline actions. You can also run `flake8` or `pytest` commands manually. Examples can be found in `tox.ini`. ## Contributing via issue triage []( You can triage issues and pull requests which may include reproducing bug reports or asking for vital information, such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to [subscribe to python-patterns on CodeTriage]("
PaddleOCR,PaddlePaddle/PaddleOCR,39196,7336,"['Python', 'C++', 'Shell']","['ocr', 'crnn', 'ocrlite', 'db', 'chineseocr']","[English](README_en.md) | | [](./doc/doc_i18n/README_.md) | [](./doc/doc_i18n/README_.md) | [](./doc/doc_i18n/README_.md) | [P ](./doc/doc_i18n/README__.md) ## PaddleOCR OCR ## Community PaddleOCR is being oversight by a [PMC]( Issues and PRs will be reviewed on a best-effort basis. For a complete overview of PaddlePaddle community, please visit [community]( ## - **OCR**PP-ChatOCRv2/530190063 - **2024.5.10 (OCR )** OCR Badcase - [ OCR]( (PP-OCRv4) - []( (SLANet) - []( (PP-ChatOCRv2-common) - []( (PP-ChatOCRv2-doc) **[]( , - **2023.8.7 PaddleOCR [release/2.7]( - [PP-OCRv4](./doc/doc_ch/PP-OCRv4_introduction.md) mobile server - PP-OCRv4-mobile PP-OCRv3 4.5% 10%80 8% - PP-OCRv4-server OCR 4.9% 2% [](./doc/doc_ch/quickstart.md) AI (PaddleX)[ OCR ]( - **2022.11 [4 ](doc/doc_ch/algorithm_overview.md)** [DRRG](doc/doc_ch/algorithm_det_drrg.md), [RFL](doc/doc_ch/algorithm_rec_rfl.md), [Text Telescope](doc/doc_ch/algorithm_sr_telescope.md)[CAN](doc/doc_ch/algorithm_rec_can.md) - **2022.10 [JS PP-OCRv3 ](./deploy/paddlejs/README_ch.md)** 4.3M 8 web demo - ** PaddleOCR PP-StructureV2 **[](#) 20G OCR PDF Word 10 OCR - **2022.8.24 PaddleOCR [release/2.6]( - [PP-StructureV2](./ppstructure/README_ch.md)[](./ppstructure/recovery/README_ch.md)** PDF Word** - [](./ppstructure/layout/README_ch.md) 95% 11 CPU 41ms - [](./ppstructure/table/README_ch.md) 3 6% - [](./ppstructure/kie/README_ch.md) 2.8% 9.1% - **2022.8 [OCR ](./applications)** SVTR **9 ** OCR > [](./doc/doc_ch/update.md) ## OCR [PP-OCR](./doc/doc_ch/ppocr_introduction.md)[PP-Structure](./ppstructure/README_ch.md)[PP-ChatOCRv2]( > ## - - PP-OCRv4 - SLANet - PP-ChatOCRv2-common - PP-ChatOCRv2-doc - [//](./doc/doc_ch/quickstart.md) - demo [ DEMO ]( EasyEdge Paddle-Lite, iOS Android ) ## - PaddleX ## OCR - [ OCR](./doc/doc_ch/ocr_book.md) ## PP-OCR | | | | | | | | ------------------------------------- | ----------------------- | --------------- | ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ | | PP-OCRv4 15.8M | ch_PP-OCRv4_xx | & | []( / []( | []( / []( | []( / []( | | PP-OCRv3 16.2M | ch_PP-OCRv3_xx | & | []( / []( | []( / []( | []( / []( | | PP-OCRv3 13.4M | en_PP-OCRv3_xx | & | []( / []( | []( / []( | []( / []( | - OCR [PP-OCR ](./doc/doc_ch/models_list.md)[PP-Structure ](./ppstructure/docs/models_list.md) ### PaddleOCR | | | | | | | ---- | ------------ | ---------------------------------- | ------------------------------------------------------------ | --------------------------------------------- | | | | | [](./applications//.md) | [](./applications/README.md#) | | | | | [](./applications/.md) | [](./applications/README.md#) | | | | | [](./applications/.md) | [](./applications/README.md#) | - OCR SVTR [](./applications) ## - [](./doc/doc_ch/environment.md) - [PP-OCR ](./doc/doc_ch/ppocr_introduction.md) - [](./doc/doc_ch/quickstart.md) - [](./doc/doc_ch/models_list.md) - [](./doc/doc_ch/training.md) - [](./doc/doc_ch/detection.md) - [](./doc/doc_ch/recognition.md) - [](./doc/doc_ch/angle_class.md) - - [](./deploy/slim/quantization/README.md) - [](./deploy/slim/prune/README.md) - [](./doc/doc_ch/knowledge_distillation.md) - [](./deploy/README_ch.md) - [ Python ](./doc/doc_ch/inference_ppocr.md) - [ C++](./deploy/cpp_infer/readme_ch.md) - [](./deploy/pdserving/README_CN.md) - [](./deploy/lite/readme.md) - [Paddle2ONNX ](./deploy/paddle2onnx/readme.md) - [](./deploy/paddlecloud/README.md) - [Benchmark](./doc/doc_ch/benchmark.md) - [PP-Structure ](./ppstructure/README_ch.md) - [](./ppstructure/docs/quickstart.md) - [](./ppstructure/docs/models_list.md) - [](./doc/doc_ch/training.md) - [](./ppstructure/layout/README_ch.md) - [](./ppstructure/table/README_ch.md) - [](./ppstructure/kie/README_ch.md) - [](./deploy/README_ch.md) - [ Python ](./ppstructure/docs/inference.md) - [ C++](./deploy/cpp_infer/readme_ch.md) - [](./deploy/hubserving/readme.md) - [](./doc/doc_ch/algorithm_overview.md) - [](./doc/doc_ch/algorithm_overview.md) - [](./doc/doc_ch/algorithm_overview.md) - [ OCR ](./doc/doc_ch/algorithm_overview.md) - [](./doc/doc_ch/algorithm_overview.md) - [](./doc/doc_ch/algorithm_overview.md) - [ PaddleOCR ](./doc/doc_ch/add_new_algorithm.md) - [](./applications) - - [ PPOCRLabel]( - [ Style-Text]( - [](./doc/doc_ch/data_annotation.md) - [](./doc/doc_ch/data_synthesis.md) - - [ OCR ](doc/doc_ch/dataset/datasets.md) - [ OCR ](doc/doc_ch/dataset/handwritten_datasets.md) - [ OCR ](doc/doc_ch/dataset/vertical_and_multilingual_datasets.md) - [](doc/doc_ch/dataset/layout_datasets.md) - [](doc/doc_ch/dataset/table_datasets.md) - [](doc/doc_ch/dataset/kie_datasets.md) - [](./doc/doc_ch/tree.md) - [](#) - [ OCR](./doc/doc_ch/ocr_book.md) - [](#) - FAQ - [](./doc/doc_ch/FAQ.md) - [PaddleOCR ](./doc/doc_ch/FAQ.md) - [](./doc/doc_ch/reference.md) - [](#) ## [more](./doc/doc_ch/visualization.md) PP-OCRv3 PP-OCRv3 PP-OCRv3 PP-Structure - + - SER - RE ## Apache 2.0 license"
ailearning,apachecn/ailearning,38306,11332,"['Python', 'JavaScript', 'CSS']","['fp-growth', 'apriori', 'mahchine-leaning', 'naivebayes', 'svm']","AI learning > [CC BY-NC-SA 4.0]( > > Stewart Brand * []( * [v1]( * [QuantLearning]( * [ApacheCN 713436582]( * [ApacheCN ]( * : () # * : 1 => 2 => 3 * - : > * : * : * : * NLP: * **AI**: ## 1. - > | Version | Supported | | ------- | ------------------ | | 3.6.x | :x: | | 2.7.x | :white_check_mark: | : - : python 2.7.x 3.6.x ### * : Machine Learning in Action(-) * : * : * : * : * : * : * : bilibili / Acfun / * -- []( []( * -- []( ### | | | | (GitHub) | QQ | | --- | --- | --- | --- | --- | | | [ 1 : ](/docs/ml/1.md) | | [@]( | 1306014226 | | | [ 2 : KNN ](/docs/ml/2.md) | | [@]( | 279393323 | | | [ 3 : ](/docs/ml/3.md) | | [@]( | 844300439 | | | [ 4 : ](/docs/ml/4.md) | | [@wnma3mz]( | 1003324213244970749 | | | [ 5 : Logistic](/docs/ml/5.md) | | [@]( | 529925688 | | | [ 6 : SVM ](/docs/ml/6.md) | | [@]( | 934969547 | | | [ 7 : AdaBoost](/docs/ml/7.md) | | [@]( | 529815144 | | | [ 8 : ](/docs/ml/8.md) | | [@]( | 529925688 | | | [ 9 : ](/docs/ml/9.md) | | [@]( | 529925688 | | | [ 10 : K-Means ](/docs/ml/10.md) | | [@]( | 827106588 | | | [ 11 : Apriori ](/docs/ml/11.md) | | [@]( | 1049498972 | | | [ 12 : FP-growth ](/docs/ml/12.md) | | [@]( | 842725815 | | | [ 13 : PCA ](/docs/ml/13.md) | | [@]( | 835670618 | | | [ 14 : SVD ](/docs/ml/14.md) | | [@]( | 714974242 | | | [ 15 : MapReduce](/docs/ml/15.md) | | [@wnma3mz]( | 1003324213 | | Ml | [ 16 : ](/docs/ml/16.md) | | []( | | | | [2017-04-08: ](/docs/report/2017-04-08.md) | | | 529815144 | ### > [--]( X Andrew Ng Andrew Ng 10: 7+ : Python ""+"" ""+"" TM TM : Coding GitHub 300 star200 ++ """" [MachineLearning() ]( > 1. - Andrew Ng Ng 2. - [-]( 3. - [-]( - > - * [@]() : - | | | | | - | - | - | | [()]( | [()]( [()]( > - ApacheCN ||| | - | - | | AcFun | B | | | | | | | | | | > / - | | | | - | - | | []( | []( | ## 2. > | Version | Supported | | ------- | ------------------ | | 3.6.x | :white_check_mark: | | 2.7.x | :x: | ### 1. [](/docs/dl/.md): 2. [CNN](/docs/dl/CNN.md): 3. [RNN](/docs/dl/RNN.md): 4. [LSTM](/docs/dl/LSTM.md): ### Pytorch - -- ### TensorFlow 2.0 - -- > : * [](/docs/TensorFlow2.x/.md) * [Keras ](/docs/TensorFlow2.x/Keras.md) * [ 1 ](/docs/TensorFlow2.x/_1_.md) * [ 2 ](/docs/TensorFlow2.x/_2_.md) * [ 3 ](/docs/TensorFlow2.x/_3__.md) * [ 4 ](/docs/TensorFlow2.x/_4_.md) WordNet stemminglemmatization * TensorFlow 2.0 * ## 3. > | Version | Supported | | ------- | ------------------ | | 3.6.x | :white_check_mark: | | 2.7.x | :x: | - ```python NLP: 1. : 1) : PPT 2: nlp: python 2. : 1) GitHub 2 3. 1: tensorflow/pytorch ++ 2) : MXNetMXNet( & Google: Demo ``` * ****: * **: PyTorch **: * Python : * [liuhuanyong]( * - : * * * * * * * ### 1. > * 1.) [](/docs/nlp/1..md) > * 2.) [](/nlp/2..md) > * 3.1.) [-](/docs/nlp/3.1.-.md) * 3.2.) [-](/docs/nlp/3.2.-.md) * 3.3.) [-](/docs/nlp/3.3.-.md) * 3.4.) [-](/docs/nlp/3.4.-.md) > UNIT- * 4.) [UNIT-](/docs/nlp/4.UNIT-.md) ### #### : * DAG * DAG * SBME HMM + Viterbi #### 1.Text Classification 1. [Newswire]( 2. [IMDB]( 3. []( : []( > : * (0.86): WordCount + Bayes * (0.94): LDA + knn///svm/xgboost/ * a) * b) 200 topic * (0.72): word2vec + CNN * : (: **AUC ** #### 2.Language Modeling 1. []( 2. ; : []( [10]( > * * python3 * > * : * : word2vec + Bi-GRU > * bi-gram + levenshtein #### 3.Image Captioning mage 1. [COCO]( 2. [Flickr 8K]( 3. [Flickr 30K]( : [2016]( #### 4.Machine Translation 1. [36]( 2. [1996-2011]( ; : []( > * Encoder + Decoder(Attention) * : #### 5.Question Answering 1. [SQuAD]( 2. [Deepmind]( 3. []( : [: QuoraYahoo AnswersStack Overflow]( #### 6.Speech Recognition 1. [TIMIT - ]( 2. [VoxForge]( 3. [LibriSpeech ASR]( #### 7.Document Summarization 1. []( 2. [TIPSTER]( 3. [AQUAINT]( : [DUC]( []( > * Bi-LSTM CRF * : * CRF: > * **** * word2vec + textrank * word2vec: * textrank: ## Graph * : [ * : spark graphX.pdf ## * [SimmerChan]( [-AI]( * ### 1. []( 2. [: ]( 3. []( 4. [NLP]( 5. [NLTK]( 6. [DL4J]( 7. [NLP]( 8. : ## * []( * [pbharrin/machinelearninginaction]( * [ML Mastery]( ## : * []( * []( ##"
ColossalAI,hpcaitech/ColossalAI,38080,4267,"['Python', 'Cuda', 'HTML']","['deep-learning', 'hpc', 'large-scale', 'data-parallelism', 'pipeline-parallelism']","# Colossal-AI []( Colossal-AI: Making large AI models cheaper, faster, and more accessible Paper | Documentation | Examples | Forum | Blog []( []( []( []( []( []( []( | [English](README.md) | [](docs/README-zh-Hans.md) | ## Latest News * [2024/05] [Large AI Models Inference Speed Doubled, Colossal-Inference Open Source Release]( * [2024/04] [Open-Sora Unveils Major Upgrade: Embracing Open Source with Single-Shot 16-Second Video Generation and 720p Resolution]( * [2024/04] [Most cost-effective solutions for inference, fine-tuning and pretraining, tailored to LLaMA3 series]( * [2024/03] [314 Billion Parameter Grok-1 Inference Accelerated by 3.8x, Efficient and Easy-to-Use PyTorch+HuggingFace version is Here]( * [2024/03] [Open-Sora: Revealing Complete Model Parameters, Training Details, and Everything for Sora-like Video Generation Models]( * [2024/03] [Open-SoraSora Replication Solution with 46% Cost Reduction, Sequence Expansion to Nearly a Million]( * [2024/01] [Inference Performance Improved by 46%, Open Source Solution Breaks the Length Limit of LLM for Multi-Round Conversations]( * [2024/01] [Construct Refined 13B Private Model With Just $5000 USD, Upgraded Colossal-AI Llama-2 Open Source]( * [2023/11] [Enhanced MoE Parallelism, Open-source MoE Model Training Can Be 9 Times More Efficient]( * [2023/09] [One Half-Day of Training Using a Few Hundred Dollars Yields Similar Results to Mainstream Large Models, Open-Source and Commercial-Free Domain-Specific LLM Solution]( * [2023/09] [70 Billion Parameter LLaMA2 Model Training Accelerated by 195%]( * [2023/07] [HPC-AI Tech Raises 22 Million USD in Series A Funding]( ## Table of Contents Why Colossal-AI Features Colossal-AI for Real World Applications Open-Sora: Revealing Complete Model Parameters, Training Details, and Everything for Sora-like Video Generation Models Colossal-LLaMA-2: One Half-Day of Training Using a Few Hundred Dollars Yields Similar Results to Mainstream Large Models, Open-Source and Commercial-Free Domain-Specific Llm Solution ColossalChat: An Open-Source Solution for Cloning ChatGPT With a Complete RLHF Pipeline AIGC: Acceleration of Stable Diffusion Biomedicine: Acceleration of AlphaFold Protein Structure Parallel Training Demo LLaMA 1/2/3 MoE GPT-3 GPT-2 BERT PaLM OPT ViT Recommendation System Models Single GPU Training Demo GPT-2 PaLM Inference Colossal-Inference: Large AI Models Inference Speed Doubled Grok-1: 314B model of PyTorch + HuggingFace Inference SwiftInfer:Breaks the Length Limit of LLM for Multi-Round Conversations with 46% Acceleration Installation PyPI Install From Source Use Docker Community Contributing Cite Us ## Why Colossal-AI Prof. James Demmel (UC Berkeley): Colossal-AI makes training AI models efficient, easy, and scalable. (back to top) ## Features Colossal-AI provides a collection of parallel components for you. We aim to support you to write your distributed deep learning models just like how you write your model on your laptop. We provide user-friendly tools to kickstart distributed training and inference in a few lines. - Parallelism strategies - Data Parallelism - Pipeline Parallelism - 1D, [2D]( [2.5D]( [3D]( Tensor Parallelism - [Sequence Parallelism]( - [Zero Redundancy Optimizer (ZeRO)]( - [Auto-Parallelism]( - Heterogeneous Memory Management - [PatrickStar]( - Friendly Usage - Parallelism based on the configuration file (back to top) ## Colossal-AI in the Real World ### Open-Sora [Open-Sora]( Complete Model Parameters, Training Details, and Everything for Sora-like Video Generation Models [[code]]( [[blog]]( [[HuggingFace model weights]]( [[Demo]]( (back to top) ### Colossal-LLaMA-2 - 7B: One half-day of training using a few hundred dollars yields similar results to mainstream large models, open-source and commercial-free domain-specific LLM solution. [[code]]( [[blog]]( [[HuggingFace model weights]]( [[Modelscope model weights]]( - 13B: Construct refined 13B private model with just $5000 USD. [[code]]( [[blog]]( [[HuggingFace model weights]]( [[Modelscope model weights]]( | Model | Backbone | Tokens Consumed | MMLU (5-shot) | CMMLU (5-shot)| AGIEval (5-shot) | GAOKAO (0-shot) | CEval (5-shot) | | :-----------------------------: | :--------: | :-------------: | :------------------: | :-----------: | :--------------: | :-------------: | :-------------: | | Baichuan-7B | - | 1.2T | 42.32 (42.30) | 44.53 (44.02) | 38.72 | 36.74 | 42.80 | | Baichuan-13B-Base | - | 1.4T | 50.51 (51.60) | 55.73 (55.30) | 47.20 | 51.41 | 53.60 | | Baichuan2-7B-Base | - | 2.6T | 46.97 (54.16) | 57.67 (57.07) | 45.76 | 52.60 | 54.00 | | Baichuan2-13B-Base | - | 2.6T | 54.84 (59.17) | 62.62 (61.97) | 52.08 | 58.25 | 58.10 | | ChatGLM-6B | - | 1.0T | 39.67 (40.63) | 41.17 (-) | 40.10 | 36.53 | 38.90 | | ChatGLM2-6B | - | 1.4T | 44.74 (45.46) | 49.40 (-) | 46.36 | 45.49 | 51.70 | | InternLM-7B | - | 1.6T | 46.70 (51.00) | 52.00 (-) | 44.77 | 61.64 | 52.80 | | Qwen-7B | - | 2.2T | 54.29 (56.70) | 56.03 (58.80) | 52.47 | 56.42 | 59.60 | | Llama-2-7B | - | 2.0T | 44.47 (45.30) | 32.97 (-) | 32.60 | 25.46 | - | | Linly-AI/Chinese-LLaMA-2-7B-hf | Llama-2-7B | 1.0T | 37.43 | 29.92 | 32.00 | 27.57 | - | | wenge-research/yayi-7b-llama2 | Llama-2-7B | - | 38.56 | 31.52 | 30.99 | 25.95 | - | | ziqingyang/chinese-llama-2-7b | Llama-2-7B | - | 33.86 | 34.69 | 34.52 | 25.18 | 34.2 | | TigerResearch/tigerbot-7b-base | Llama-2-7B | 0.3T | 43.73 | 42.04 | 37.64 | 30.61 | - | | LinkSoul/Chinese-Llama-2-7b | Llama-2-7B | - | 48.41 | 38.31 | 38.45 | 27.72 | - | | FlagAlpha/Atom-7B | Llama-2-7B | 0.1T | 49.96 | 41.10 | 39.83 | 33.00 | - | | IDEA-CCNL/Ziya-LLaMA-13B-v1.1 | Llama-13B | 0.11T | 50.25 | 40.99 | 40.04 | 30.54 | - | | **Colossal-LLaMA-2-7b-base** | Llama-2-7B | **0.0085T** | 53.06 | 49.89 | 51.48 | 58.82 | 50.2 | | **Colossal-LLaMA-2-13b-base** | Llama-2-13B | **0.025T** | 56.42 | 61.80 | 54.69 | 69.53 | 60.3 | ### ColossalChat [ColossalChat]( An open-source solution for cloning [ChatGPT]( with a complete RLHF pipeline. [[code]]( [[blog]]( [[demo]]( [[tutorial]]( - Up to 10 times faster for RLHF PPO Stage3 Training - Up to 7.73 times faster for single server training and 1.42 times faster for single-GPU inference - Up to 10.3x growth in model capacity on one GPU - A mini demo training process requires only 1.62GB of GPU memory (any consumer-grade GPU) - Increase the capacity of the fine-tuning model by up to 3.7 times on a single GPU - Keep at a sufficiently high running speed (back to top) ### AIGC Acceleration of AIGC (AI-Generated Content) models such as [Stable Diffusion v1]( and [Stable Diffusion v2]( - [Training]( Reduce Stable Diffusion memory consumption by up to 5.6x and hardware cost by up to 46x (from A100 to RTX3060). - [DreamBooth Fine-tuning]( Personalize your model using just 3-5 images of the desired subject. - [Inference]( Reduce inference GPU memory consumption by 2.5x. (back to top) ### Biomedicine Acceleration of [AlphaFold Protein Structure]( - [FastFold]( Accelerating training and inference on GPU Clusters, faster data processing, inference sequence containing more than 10000 residues. - [FastFold with Intel]( 3x inference acceleration and 39% cost reduce. - [xTrimoMultimer]( accelerating structure prediction of protein monomers and multimer by 11x. (back to top) ## Parallel Training Demo ### LLaMA3 - 70 billion parameter LLaMA3 model training accelerated by 18% [[code]]( ### LLaMA2 - 70 billion parameter LLaMA2 model training accelerated by 195% [[code]]( [[blog]]( ### LLaMA1 - 65-billion-parameter large model pretraining accelerated by 38% [[code]]( [[blog]]( ### MoE - Enhanced MoE parallelism, Open-source MoE model training can be 9 times more efficient [[code]]( [[blog]]( ### GPT-3 - Save 50% GPU resources and 10.7% acceleration ### GPT-2 - 11x lower GPU memory consumption, and superlinear scaling efficiency with Tensor Parallelism - 24x larger model size on the same hardware - over 3x acceleration ### BERT - 2x faster training, or 50% longer sequence length ### PaLM - [PaLM-colossalai]( Scalable implementation of Google's Pathways Language Model ([PaLM]( ### OPT - [Open Pretrained Transformer (OPT)]( a 175-Billion parameter AI language model released by Meta, which stimulates AI programmers to perform various downstream tasks and application deployments because of public pre-trained model weights. - 45% speedup fine-tuning OPT at low cost in lines. [[Example]]( [[Online Serving]]( Please visit our [documentation]( and [examples]( for more details. ### ViT - 14x larger batch size, and 5x faster training for Tensor Parallelism = 64 ### Recommendation System Models - [Cached Embedding]( utilize software cache to train larger embedding tables with a smaller GPU memory budget. (back to top) ## Single GPU Training Demo ### GPT-2 - 20x larger model size on the same hardware - 120x larger model size on the same hardware (RTX 3080) ### PaLM - 34x larger model size on the same hardware (back to top) ## Inference ### Colossal-Inference - Large AI models inference speed doubled, compared to the offline inference performance of vLLM in some cases. [[code]]( [[blog]]( ### Grok-1 - 314 Billion Parameter Grok-1 Inference Accelerated by 3.8x, an easy-to-use Python + PyTorch + HuggingFace version for Inference. [[code]]( [[blog]]( [[HuggingFace Grok-1 PyTorch model weights]]( [[ModelScope Grok-1 PyTorch model weights]]( ### SwiftInfer - [SwiftInfer]( Inference performance improved by 46%, open source solution breaks the length limit of LLM for multi-round conversations (back to top) ## Installation Requirements: - PyTorch >= 2.1 - Python >= 3.7 - CUDA >= 11.0 - [NVIDIA GPU Compute Capability]( >= 7.0 (V100/RTX20 and higher) - Linux OS If you encounter any problem with installation, you may want to raise an [issue]( in this repository. ### Install from PyPI You can easily install Colossal-AI with the following command. **By default, we do not build PyTorch extensions during installation.** ```bash pip install colossalai ``` **Note: o... [TRUNCATED]"
